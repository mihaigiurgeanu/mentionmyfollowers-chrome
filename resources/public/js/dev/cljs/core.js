// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__258836__delegate = function (args){
return console.log.apply(console,(function (){var G__258835 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__258835) : cljs.core.into_array.call(null,G__258835));
})());
};
var G__258836 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__258837__i = 0, G__258837__a = new Array(arguments.length -  0);
while (G__258837__i < G__258837__a.length) {G__258837__a[G__258837__i] = arguments[G__258837__i + 0]; ++G__258837__i;}
  args = new cljs.core.IndexedSeq(G__258837__a,0);
} 
return G__258836__delegate.call(this,args);};
G__258836.cljs$lang$maxFixedArity = 0;
G__258836.cljs$lang$applyTo = (function (arglist__258838){
var args = cljs.core.seq(arglist__258838);
return G__258836__delegate(args);
});
G__258836.cljs$core$IFn$_invoke$arity$variadic = G__258836__delegate;
return G__258836;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__258840 = x;
return goog.isString(G__258840);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__258842 = x__$1;
return goog.typeOf(G__258842);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3969__auto__ = ty;
if(cljs.core.truth_(and__3969__auto__)){
return ty.cljs$lang$type;
} else {
return and__3969__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__258844 = obj;
return goog.typeOf(G__258844);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__258846 = Symbol;
return goog.typeOf(G__258846);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4868__auto___258848 = len;
var i_258849 = (0);
while(true){
if((i_258849 < n__4868__auto___258848)){
(new_arr[i_258849] = (arr[i_258849]));

var G__258850 = (i_258849 + (1));
i_258849 = G__258850;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__258851 = (i + (1));
i = G__258851;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__258860__delegate = function (array,i,idxs){
var G__258857 = aget;
var G__258858 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__258859 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__258857,G__258858,G__258859) : cljs.core.apply.call(null,G__258857,G__258858,G__258859));
};
var G__258860 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__258861__i = 0, G__258861__a = new Array(arguments.length -  2);
while (G__258861__i < G__258861__a.length) {G__258861__a[G__258861__i] = arguments[G__258861__i + 2]; ++G__258861__i;}
  idxs = new cljs.core.IndexedSeq(G__258861__a,0);
} 
return G__258860__delegate.call(this,array,i,idxs);};
G__258860.cljs$lang$maxFixedArity = 2;
G__258860.cljs$lang$applyTo = (function (arglist__258862){
var array = cljs.core.first(arglist__258862);
arglist__258862 = cljs.core.next(arglist__258862);
var i = cljs.core.first(arglist__258862);
var idxs = cljs.core.rest(arglist__258862);
return G__258860__delegate(array,i,idxs);
});
G__258860.cljs$core$IFn$_invoke$arity$variadic = G__258860__delegate;
return G__258860;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__258863 = null;
if (arguments.length > 2) {
var G__258864__i = 0, G__258864__a = new Array(arguments.length -  2);
while (G__258864__i < G__258864__a.length) {G__258864__a[G__258864__i] = arguments[G__258864__i + 2]; ++G__258864__i;}
G__258863 = new cljs.core.IndexedSeq(G__258864__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__258863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__258873__delegate = function (array,idx,idx2,idxv){
var G__258869 = aset;
var G__258870 = (array[idx]);
var G__258871 = idx2;
var G__258872 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__258869,G__258870,G__258871,G__258872) : cljs.core.apply.call(null,G__258869,G__258870,G__258871,G__258872));
};
var G__258873 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__258874__i = 0, G__258874__a = new Array(arguments.length -  3);
while (G__258874__i < G__258874__a.length) {G__258874__a[G__258874__i] = arguments[G__258874__i + 3]; ++G__258874__i;}
  idxv = new cljs.core.IndexedSeq(G__258874__a,0);
} 
return G__258873__delegate.call(this,array,idx,idx2,idxv);};
G__258873.cljs$lang$maxFixedArity = 3;
G__258873.cljs$lang$applyTo = (function (arglist__258875){
var array = cljs.core.first(arglist__258875);
arglist__258875 = cljs.core.next(arglist__258875);
var idx = cljs.core.first(arglist__258875);
arglist__258875 = cljs.core.next(arglist__258875);
var idx2 = cljs.core.first(arglist__258875);
var idxv = cljs.core.rest(arglist__258875);
return G__258873__delegate(array,idx,idx2,idxv);
});
G__258873.cljs$core$IFn$_invoke$arity$variadic = G__258873__delegate;
return G__258873;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__258876 = null;
if (arguments.length > 3) {
var G__258877__i = 0, G__258877__a = new Array(arguments.length -  3);
while (G__258877__i < G__258877__a.length) {G__258877__a[G__258877__i] = arguments[G__258877__i + 3]; ++G__258877__i;}
G__258876 = new cljs.core.IndexedSeq(G__258877__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__258876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__258883 = (function (a,x){
a.push(x);

return a;
});
var G__258884 = [];
var G__258885 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__258883,G__258884,G__258885) : cljs.core.reduce.call(null,G__258883,G__258884,G__258885));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__258886__i = 0, G__258886__a = new Array(arguments.length -  2);
while (G__258886__i < G__258886__a.length) {G__258886__a[G__258886__i] = arguments[G__258886__i + 2]; ++G__258886__i;}
  args = new cljs.core.IndexedSeq(G__258886__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__258887){
var obj = cljs.core.first(arglist__258887);
arglist__258887 = cljs.core.next(arglist__258887);
var s = cljs.core.first(arglist__258887);
var args = cljs.core.rest(arglist__258887);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj258889 = {};
return obj258889;
})();


cljs.core.IFn = (function (){var obj258891 = {};
return obj258891;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258937 = x__4625__auto__;
return goog.typeOf(G__258937);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258939 = x__4625__auto__;
return goog.typeOf(G__258939);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258941 = x__4625__auto__;
return goog.typeOf(G__258941);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258943 = x__4625__auto__;
return goog.typeOf(G__258943);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258945 = x__4625__auto__;
return goog.typeOf(G__258945);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258947 = x__4625__auto__;
return goog.typeOf(G__258947);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258949 = x__4625__auto__;
return goog.typeOf(G__258949);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258951 = x__4625__auto__;
return goog.typeOf(G__258951);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258953 = x__4625__auto__;
return goog.typeOf(G__258953);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258955 = x__4625__auto__;
return goog.typeOf(G__258955);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258957 = x__4625__auto__;
return goog.typeOf(G__258957);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258959 = x__4625__auto__;
return goog.typeOf(G__258959);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258961 = x__4625__auto__;
return goog.typeOf(G__258961);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258963 = x__4625__auto__;
return goog.typeOf(G__258963);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258965 = x__4625__auto__;
return goog.typeOf(G__258965);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258967 = x__4625__auto__;
return goog.typeOf(G__258967);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258969 = x__4625__auto__;
return goog.typeOf(G__258969);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258971 = x__4625__auto__;
return goog.typeOf(G__258971);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258973 = x__4625__auto__;
return goog.typeOf(G__258973);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258975 = x__4625__auto__;
return goog.typeOf(G__258975);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258977 = x__4625__auto__;
return goog.typeOf(G__258977);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__258979 = x__4625__auto__;
return goog.typeOf(G__258979);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj258981 = {};
return obj258981;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3969__auto__ = value;
if(and__3969__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3969__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4625__auto__ = (((value == null))?null:value);
return (function (){var or__3981__auto__ = (cljs.core._clone[(function (){var G__258985 = x__4625__auto__;
return goog.typeOf(G__258985);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clone["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj258987 = {};
return obj258987;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._count[(function (){var G__258991 = x__4625__auto__;
return goog.typeOf(G__258991);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._count["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj258993 = {};
return obj258993;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._empty[(function (){var G__258997 = x__4625__auto__;
return goog.typeOf(G__258997);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._empty["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj258999 = {};
return obj258999;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._conj[(function (){var G__259003 = x__4625__auto__;
return goog.typeOf(G__259003);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj259005 = {};
return obj259005;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__259011 = x__4625__auto__;
return goog.typeOf(G__259011);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__259013 = x__4625__auto__;
return goog.typeOf(G__259013);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj259015 = {};
return obj259015;
})();


cljs.core.ISeq = (function (){var obj259017 = {};
return obj259017;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._first[(function (){var G__259021 = x__4625__auto__;
return goog.typeOf(G__259021);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rest[(function (){var G__259025 = x__4625__auto__;
return goog.typeOf(G__259025);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj259027 = {};
return obj259027;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._next[(function (){var G__259031 = x__4625__auto__;
return goog.typeOf(G__259031);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj259033 = {};
return obj259033;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__259039 = x__4625__auto__;
return goog.typeOf(G__259039);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__259041 = x__4625__auto__;
return goog.typeOf(G__259041);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj259043 = {};
return obj259043;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__259047 = x__4625__auto__;
return goog.typeOf(G__259047);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc[(function (){var G__259051 = x__4625__auto__;
return goog.typeOf(G__259051);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj259053 = {};
return obj259053;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc[(function (){var G__259057 = x__4625__auto__;
return goog.typeOf(G__259057);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj259059 = {};
return obj259059;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._key[(function (){var G__259063 = x__4625__auto__;
return goog.typeOf(G__259063);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._val[(function (){var G__259067 = x__4625__auto__;
return goog.typeOf(G__259067);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._val["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj259069 = {};
return obj259069;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin[(function (){var G__259073 = x__4625__auto__;
return goog.typeOf(G__259073);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj259075 = {};
return obj259075;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._peek[(function (){var G__259079 = x__4625__auto__;
return goog.typeOf(G__259079);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._peek["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._pop[(function (){var G__259083 = x__4625__auto__;
return goog.typeOf(G__259083);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj259085 = {};
return obj259085;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n[(function (){var G__259089 = x__4625__auto__;
return goog.typeOf(G__259089);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj259091 = {};
return obj259091;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref[(function (){var G__259095 = x__4625__auto__;
return goog.typeOf(G__259095);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj259097 = {};
return obj259097;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref_with_timeout[(function (){var G__259101 = x__4625__auto__;
return goog.typeOf(G__259101);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj259103 = {};
return obj259103;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._meta[(function (){var G__259107 = x__4625__auto__;
return goog.typeOf(G__259107);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj259109 = {};
return obj259109;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._with_meta[(function (){var G__259113 = x__4625__auto__;
return goog.typeOf(G__259113);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj259115 = {};
return obj259115;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__259121 = x__4625__auto__;
return goog.typeOf(G__259121);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__259123 = x__4625__auto__;
return goog.typeOf(G__259123);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj259125 = {};
return obj259125;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._kv_reduce[(function (){var G__259129 = x__4625__auto__;
return goog.typeOf(G__259129);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj259131 = {};
return obj259131;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._equiv[(function (){var G__259135 = x__4625__auto__;
return goog.typeOf(G__259135);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._equiv["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj259137 = {};
return obj259137;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._hash[(function (){var G__259141 = x__4625__auto__;
return goog.typeOf(G__259141);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._hash["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj259143 = {};
return obj259143;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._seq[(function (){var G__259147 = x__4625__auto__;
return goog.typeOf(G__259147);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj259149 = {};
return obj259149;
})();


cljs.core.IList = (function (){var obj259151 = {};
return obj259151;
})();


cljs.core.IRecord = (function (){var obj259153 = {};
return obj259153;
})();


cljs.core.IReversible = (function (){var obj259155 = {};
return obj259155;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rseq[(function (){var G__259159 = x__4625__auto__;
return goog.typeOf(G__259159);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rseq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj259161 = {};
return obj259161;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq[(function (){var G__259165 = x__4625__auto__;
return goog.typeOf(G__259165);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq_from[(function (){var G__259169 = x__4625__auto__;
return goog.typeOf(G__259169);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._entry_key[(function (){var G__259173 = x__4625__auto__;
return goog.typeOf(G__259173);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._comparator[(function (){var G__259177 = x__4625__auto__;
return goog.typeOf(G__259177);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._comparator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj259179 = {};
return obj259179;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._write[(function (){var G__259183 = x__4625__auto__;
return goog.typeOf(G__259183);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._write["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._flush[(function (){var G__259187 = x__4625__auto__;
return goog.typeOf(G__259187);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._flush["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj259189 = {};
return obj259189;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._pr_writer[(function (){var G__259193 = x__4625__auto__;
return goog.typeOf(G__259193);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj259195 = {};
return obj259195;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3969__auto__ = d;
if(and__3969__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4625__auto__ = (((d == null))?null:d);
return (function (){var or__3981__auto__ = (cljs.core._realized_QMARK_[(function (){var G__259199 = x__4625__auto__;
return goog.typeOf(G__259199);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj259201 = {};
return obj259201;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._notify_watches[(function (){var G__259205 = x__4625__auto__;
return goog.typeOf(G__259205);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._add_watch[(function (){var G__259209 = x__4625__auto__;
return goog.typeOf(G__259209);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._remove_watch[(function (){var G__259213 = x__4625__auto__;
return goog.typeOf(G__259213);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj259215 = {};
return obj259215;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._as_transient[(function (){var G__259219 = x__4625__auto__;
return goog.typeOf(G__259219);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj259221 = {};
return obj259221;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._conj_BANG_[(function (){var G__259225 = x__4625__auto__;
return goog.typeOf(G__259225);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._persistent_BANG_[(function (){var G__259229 = x__4625__auto__;
return goog.typeOf(G__259229);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj259231 = {};
return obj259231;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_BANG_[(function (){var G__259235 = x__4625__auto__;
return goog.typeOf(G__259235);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj259237 = {};
return obj259237;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__259241 = x__4625__auto__;
return goog.typeOf(G__259241);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj259243 = {};
return obj259243;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__259247 = x__4625__auto__;
return goog.typeOf(G__259247);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._pop_BANG_[(function (){var G__259251 = x__4625__auto__;
return goog.typeOf(G__259251);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj259253 = {};
return obj259253;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__259257 = x__4625__auto__;
return goog.typeOf(G__259257);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj259259 = {};
return obj259259;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._compare[(function (){var G__259263 = x__4625__auto__;
return goog.typeOf(G__259263);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._compare["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj259265 = {};
return obj259265;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._drop_first[(function (){var G__259269 = x__4625__auto__;
return goog.typeOf(G__259269);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj259271 = {};
return obj259271;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_first[(function (){var G__259275 = x__4625__auto__;
return goog.typeOf(G__259275);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_rest[(function (){var G__259279 = x__4625__auto__;
return goog.typeOf(G__259279);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj259281 = {};
return obj259281;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_next[(function (){var G__259285 = x__4625__auto__;
return goog.typeOf(G__259285);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj259287 = {};
return obj259287;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._name[(function (){var G__259291 = x__4625__auto__;
return goog.typeOf(G__259291);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._name["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._namespace[(function (){var G__259295 = x__4625__auto__;
return goog.typeOf(G__259295);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._namespace["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj259297 = {};
return obj259297;
})();


cljs.core.IReset = (function (){var obj259299 = {};
return obj259299;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._reset_BANG_[(function (){var G__259303 = x__4625__auto__;
return goog.typeOf(G__259303);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj259305 = {};
return obj259305;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__259315 = x__4625__auto__;
return goog.typeOf(G__259315);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__259317 = x__4625__auto__;
return goog.typeOf(G__259317);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__259319 = x__4625__auto__;
return goog.typeOf(G__259319);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__259321 = x__4625__auto__;
return goog.typeOf(G__259321);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj259323 = {};
return obj259323;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._vreset_BANG_[(function (){var G__259327 = x__4625__auto__;
return goog.typeOf(G__259327);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj259329 = {};
return obj259329;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._iterator[(function (){var G__259333 = x__4625__auto__;
return goog.typeOf(G__259333);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._iterator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__259336 = (4294967295);
var G__259337 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__259336,G__259337) : Math.imul.call(null,G__259336,G__259337));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__259340 = a;
var G__259341 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__259340,G__259341) : Math.imul.call(null,G__259340,G__259341));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__259342 = (i + (2));
var G__259343 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__259342;
h1 = G__259343;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj259345 = {};
return obj259345;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__259346 = (i + (1));
var G__259347 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__259346;
hash = G__259347;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj259351 = {};
return obj259351;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__259354 = o;
if(G__259354){
var bit__4655__auto__ = (G__259354.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4655__auto__) || (G__259354.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__259355 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__259355) : Math.floor.call(null,G__259355));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__259362 = a.ns;
var G__259363 = b.ns;
return goog.array.defaultCompare(G__259362,G__259363);
})();
if(((0) === nsc)){
var G__259364 = a.name;
var G__259365 = b.name;
return goog.array.defaultCompare(G__259364,G__259365);
} else {
return nsc;
}
}
} else {
var G__259366 = a.name;
var G__259367 = b.name;
return goog.array.defaultCompare(G__259366,G__259367);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__259369 = null;
var G__259369__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__259369__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__259369 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__259369__2.call(this,self__,coll);
case 3:
return G__259369__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__259369.cljs$core$IFn$_invoke$arity$2 = G__259369__2;
G__259369.cljs$core$IFn$_invoke$arity$3 = G__259369__3;
return G__259369;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args259368){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args259368)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__259417 = null;
var G__259417__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__259417__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__259417__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__259417__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__259417__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__259417__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__259417__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__259417__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__259417__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__259417__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__259417__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__259417__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__259417__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__259417__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__259417__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__259417__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__259417__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__259417__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__259417__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__259417__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__259417__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__259417__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259373 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__259374 = a;
var G__259375 = b;
var G__259376 = c;
var G__259377 = d;
var G__259378 = e;
var G__259379 = f;
var G__259380 = g;
var G__259381 = h;
var G__259382 = i;
var G__259383 = j;
var G__259384 = k;
var G__259385 = l;
var G__259386 = m;
var G__259387 = n;
var G__259388 = o;
var G__259389 = p;
var G__259390 = q;
var G__259391 = r;
var G__259392 = s;
var G__259393 = t;
var G__259394 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__259373,G__259374,G__259375,G__259376,G__259377,G__259378,G__259379,G__259380,G__259381,G__259382,G__259383,G__259384,G__259385,G__259386,G__259387,G__259388,G__259389,G__259390,G__259391,G__259392,G__259393,G__259394) : cljs.core.apply.call(null,G__259373,G__259374,G__259375,G__259376,G__259377,G__259378,G__259379,G__259380,G__259381,G__259382,G__259383,G__259384,G__259385,G__259386,G__259387,G__259388,G__259389,G__259390,G__259391,G__259392,G__259393,G__259394));
});
G__259417 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__259417__1.call(this,self__);
case 2:
return G__259417__2.call(this,self__,a);
case 3:
return G__259417__3.call(this,self__,a,b);
case 4:
return G__259417__4.call(this,self__,a,b,c);
case 5:
return G__259417__5.call(this,self__,a,b,c,d);
case 6:
return G__259417__6.call(this,self__,a,b,c,d,e);
case 7:
return G__259417__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__259417__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__259417__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__259417__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__259417__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__259417__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__259417__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__259417__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__259417__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__259417__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__259417__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__259417__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__259417__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__259417__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__259417__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__259417__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__259417.cljs$core$IFn$_invoke$arity$1 = G__259417__1;
G__259417.cljs$core$IFn$_invoke$arity$2 = G__259417__2;
G__259417.cljs$core$IFn$_invoke$arity$3 = G__259417__3;
G__259417.cljs$core$IFn$_invoke$arity$4 = G__259417__4;
G__259417.cljs$core$IFn$_invoke$arity$5 = G__259417__5;
G__259417.cljs$core$IFn$_invoke$arity$6 = G__259417__6;
G__259417.cljs$core$IFn$_invoke$arity$7 = G__259417__7;
G__259417.cljs$core$IFn$_invoke$arity$8 = G__259417__8;
G__259417.cljs$core$IFn$_invoke$arity$9 = G__259417__9;
G__259417.cljs$core$IFn$_invoke$arity$10 = G__259417__10;
G__259417.cljs$core$IFn$_invoke$arity$11 = G__259417__11;
G__259417.cljs$core$IFn$_invoke$arity$12 = G__259417__12;
G__259417.cljs$core$IFn$_invoke$arity$13 = G__259417__13;
G__259417.cljs$core$IFn$_invoke$arity$14 = G__259417__14;
G__259417.cljs$core$IFn$_invoke$arity$15 = G__259417__15;
G__259417.cljs$core$IFn$_invoke$arity$16 = G__259417__16;
G__259417.cljs$core$IFn$_invoke$arity$17 = G__259417__17;
G__259417.cljs$core$IFn$_invoke$arity$18 = G__259417__18;
G__259417.cljs$core$IFn$_invoke$arity$19 = G__259417__19;
G__259417.cljs$core$IFn$_invoke$arity$20 = G__259417__20;
G__259417.cljs$core$IFn$_invoke$arity$21 = G__259417__21;
G__259417.cljs$core$IFn$_invoke$arity$22 = G__259417__22;
return G__259417;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args259372){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args259372)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__259395 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__259396 = a;
var G__259397 = b;
var G__259398 = c;
var G__259399 = d;
var G__259400 = e;
var G__259401 = f;
var G__259402 = g;
var G__259403 = h;
var G__259404 = i;
var G__259405 = j;
var G__259406 = k;
var G__259407 = l;
var G__259408 = m;
var G__259409 = n;
var G__259410 = o;
var G__259411 = p;
var G__259412 = q;
var G__259413 = r;
var G__259414 = s;
var G__259415 = t;
var G__259416 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__259395,G__259396,G__259397,G__259398,G__259399,G__259400,G__259401,G__259402,G__259403,G__259404,G__259405,G__259406,G__259407,G__259408,G__259409,G__259410,G__259411,G__259412,G__259413,G__259414,G__259415,G__259416) : cljs.core.apply.call(null,G__259395,G__259396,G__259397,G__259398,G__259399,G__259400,G__259401,G__259402,G__259403,G__259404,G__259405,G__259406,G__259407,G__259408,G__259409,G__259410,G__259411,G__259412,G__259413,G__259414,G__259415,G__259416));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__259419 = x;
if(G__259419){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__259419.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__259419.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__259419);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__259419);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__259421 = value;
if(G__259421){
var bit__4662__auto__ = (G__259421.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4662__auto__) || (G__259421.cljs$core$ICloneable$)){
return true;
} else {
if((!G__259421.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__259421);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__259421);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__259423 = coll;
if(G__259423){
var bit__4655__auto__ = (G__259423.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4655__auto__) || (G__259423.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__259425 = coll;
if(G__259425){
var bit__4655__auto__ = (G__259425.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__259425.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__259427 = coll;
if(G__259427){
var bit__4655__auto__ = (G__259427.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__259427.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__259429 = coll;
if(G__259429){
var bit__4655__auto__ = (G__259429.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4655__auto__) || (G__259429.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__259434__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__259435 = y;
var G__259436 = cljs.core.first(more);
var G__259437 = cljs.core.next(more);
x = G__259435;
y = G__259436;
more = G__259437;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__259434 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__259438__i = 0, G__259438__a = new Array(arguments.length -  2);
while (G__259438__i < G__259438__a.length) {G__259438__a[G__259438__i] = arguments[G__259438__i + 2]; ++G__259438__i;}
  more = new cljs.core.IndexedSeq(G__259438__a,0);
} 
return G__259434__delegate.call(this,x,y,more);};
G__259434.cljs$lang$maxFixedArity = 2;
G__259434.cljs$lang$applyTo = (function (arglist__259439){
var x = cljs.core.first(arglist__259439);
arglist__259439 = cljs.core.next(arglist__259439);
var y = cljs.core.first(arglist__259439);
var more = cljs.core.rest(arglist__259439);
return G__259434__delegate(x,y,more);
});
G__259434.cljs$core$IFn$_invoke$arity$variadic = G__259434__delegate;
return G__259434;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__259440 = null;
if (arguments.length > 2) {
var G__259441__i = 0, G__259441__a = new Array(arguments.length -  2);
while (G__259441__i < G__259441__a.length) {G__259441__a[G__259441__i] = arguments[G__259441__i + 2]; ++G__259441__i;}
G__259440 = new cljs.core.IndexedSeq(G__259441__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__259440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__259442 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__259442) : cljs.core.es6_iterator_seq.call(null,G__259442));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__259443 = (n + (1));
var G__259444 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__259445 = cljs.core.next(coll__$1);
n = G__259443;
hash_code = G__259444;
coll__$1 = G__259445;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__259446 = (n + (1));
var G__259447 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__259448 = cljs.core.next(coll__$1);
n = G__259446;
hash_code = G__259447;
coll__$1 = G__259448;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__259449 = o;
return goog.getUid(G__259449);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__259451 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__259451) : cljs.core.deref.call(null,G__259451));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__259458 = val;
var G__259459 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259458,G__259459) : f.call(null,G__259458,G__259459));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259464 = nval;
var G__259465 = (n + (1));
val = G__259464;
n = G__259465;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__259460 = val__$1;
var G__259461 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259460,G__259461) : f.call(null,G__259460,G__259461));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259466 = nval;
var G__259467 = (n + (1));
val__$1 = G__259466;
n = G__259467;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__259462 = val__$1;
var G__259463 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259462,G__259463) : f.call(null,G__259462,G__259463));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259468 = nval;
var G__259469 = (n + (1));
val__$1 = G__259468;
n = G__259469;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__259476 = val;
var G__259477 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259476,G__259477) : f.call(null,G__259476,G__259477));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259482 = nval;
var G__259483 = (n + (1));
val = G__259482;
n = G__259483;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__259478 = val__$1;
var G__259479 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259478,G__259479) : f.call(null,G__259478,G__259479));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259484 = nval;
var G__259485 = (n + (1));
val__$1 = G__259484;
n = G__259485;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__259480 = val__$1;
var G__259481 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__259480,G__259481) : f.call(null,G__259480,G__259481));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__259486 = nval;
var G__259487 = (n + (1));
val__$1 = G__259486;
n = G__259487;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__259489 = x;
if(G__259489){
var bit__4662__auto__ = (G__259489.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4662__auto__) || (G__259489.cljs$core$ICounted$)){
return true;
} else {
if((!G__259489.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__259489);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__259489);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__259491 = x;
if(G__259491){
var bit__4662__auto__ = (G__259491.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4662__auto__) || (G__259491.cljs$core$IIndexed$)){
return true;
} else {
if((!G__259491.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__259491);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__259491);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__259492 = coll__$1;
var G__259493 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__259492,G__259493) : cljs.core.equiv_sequential.call(null,G__259492,G__259493));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__259494 = o;
var G__259495 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__259494,G__259495) : cljs.core.cons.call(null,G__259494,G__259495));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__259498 = coll__$1;
var G__259499 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__259498,G__259499) : cljs.core.equiv_sequential.call(null,G__259498,G__259499));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__259500 = cljs.core.List.EMPTY;
var G__259501 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__259500,G__259501) : cljs.core.with_meta.call(null,G__259500,G__259501));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__259502 = f;
var G__259503 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__259502,G__259503) : cljs.core.seq_reduce.call(null,G__259502,G__259503));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__259504 = f;
var G__259505 = start;
var G__259506 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__259504,G__259505,G__259506) : cljs.core.seq_reduce.call(null,G__259504,G__259505,G__259506));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__259507 = o;
var G__259508 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__259507,G__259508) : cljs.core.cons.call(null,G__259507,G__259508));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__259509 = sn;
s = G__259509;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__259514__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__259515 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__259516 = cljs.core.first(xs);
var G__259517 = cljs.core.next(xs);
coll = G__259515;
x = G__259516;
xs = G__259517;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__259514 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__259518__i = 0, G__259518__a = new Array(arguments.length -  2);
while (G__259518__i < G__259518__a.length) {G__259518__a[G__259518__i] = arguments[G__259518__i + 2]; ++G__259518__i;}
  xs = new cljs.core.IndexedSeq(G__259518__a,0);
} 
return G__259514__delegate.call(this,coll,x,xs);};
G__259514.cljs$lang$maxFixedArity = 2;
G__259514.cljs$lang$applyTo = (function (arglist__259519){
var coll = cljs.core.first(arglist__259519);
arglist__259519 = cljs.core.next(arglist__259519);
var x = cljs.core.first(arglist__259519);
var xs = cljs.core.rest(arglist__259519);
return G__259514__delegate(coll,x,xs);
});
G__259514.cljs$core$IFn$_invoke$arity$variadic = G__259514__delegate;
return G__259514;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__259520 = null;
if (arguments.length > 2) {
var G__259521__i = 0, G__259521__a = new Array(arguments.length -  2);
while (G__259521__i < G__259521__a.length) {G__259521__a[G__259521__i] = arguments[G__259521__i + 2]; ++G__259521__i;}
G__259520 = new cljs.core.IndexedSeq(G__259521__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__259520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__259522 = cljs.core.next(s);
var G__259523 = (acc + (1));
s = G__259522;
acc = G__259523;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__259525 = coll;
if(G__259525){
var bit__4655__auto__ = (G__259525.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4655__auto__) || (G__259525.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__259526 = cljs.core.next(coll);
var G__259527 = (n - (1));
coll = G__259526;
n = G__259527;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__259528 = cljs.core.next(coll);
var G__259529 = (n - (1));
var G__259530 = not_found;
coll = G__259528;
n = G__259529;
not_found = G__259530;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__259535 = coll;
if(G__259535){
var bit__4655__auto__ = (G__259535.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__259535.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__259536 = coll;
if(G__259536){
var bit__4662__auto__ = (G__259536.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__259536.cljs$core$ISeq$)){
return true;
} else {
if((!G__259536.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__259536);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__259536);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__259537 = coll;
if(G__259537){
var bit__4655__auto__ = (G__259537.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__259537.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__259538 = coll;
if(G__259538){
var bit__4662__auto__ = (G__259538.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__259538.cljs$core$ISeq$)){
return true;
} else {
if((!G__259538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__259538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__259538);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__259539 = (n__$1 - (1));
var G__259540 = cljs.core.rest(xs);
n__$1 = G__259539;
xs = G__259540;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__259543 = o;
if(G__259543){
var bit__4655__auto__ = (G__259543.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__259543.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__259544 = o;
if(G__259544){
var bit__4655__auto__ = (G__259544.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__259544.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__259548__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__259549 = ret;
var G__259550 = cljs.core.first(kvs);
var G__259551 = cljs.core.second(kvs);
var G__259552 = cljs.core.nnext(kvs);
coll = G__259549;
k = G__259550;
v = G__259551;
kvs = G__259552;
continue;
} else {
return ret;
}
break;
}
};
var G__259548 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__259553__i = 0, G__259553__a = new Array(arguments.length -  3);
while (G__259553__i < G__259553__a.length) {G__259553__a[G__259553__i] = arguments[G__259553__i + 3]; ++G__259553__i;}
  kvs = new cljs.core.IndexedSeq(G__259553__a,0);
} 
return G__259548__delegate.call(this,coll,k,v,kvs);};
G__259548.cljs$lang$maxFixedArity = 3;
G__259548.cljs$lang$applyTo = (function (arglist__259554){
var coll = cljs.core.first(arglist__259554);
arglist__259554 = cljs.core.next(arglist__259554);
var k = cljs.core.first(arglist__259554);
arglist__259554 = cljs.core.next(arglist__259554);
var v = cljs.core.first(arglist__259554);
var kvs = cljs.core.rest(arglist__259554);
return G__259548__delegate(coll,k,v,kvs);
});
G__259548.cljs$core$IFn$_invoke$arity$variadic = G__259548__delegate;
return G__259548;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__259555 = null;
if (arguments.length > 3) {
var G__259556__i = 0, G__259556__a = new Array(arguments.length -  3);
while (G__259556__i < G__259556__a.length) {G__259556__a[G__259556__i] = arguments[G__259556__i + 3]; ++G__259556__i;}
G__259555 = new cljs.core.IndexedSeq(G__259556__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__259555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__259559__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__259560 = ret;
var G__259561 = cljs.core.first(ks);
var G__259562 = cljs.core.next(ks);
coll = G__259560;
k = G__259561;
ks = G__259562;
continue;
} else {
return ret;
}
}
break;
}
};
var G__259559 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__259563__i = 0, G__259563__a = new Array(arguments.length -  2);
while (G__259563__i < G__259563__a.length) {G__259563__a[G__259563__i] = arguments[G__259563__i + 2]; ++G__259563__i;}
  ks = new cljs.core.IndexedSeq(G__259563__a,0);
} 
return G__259559__delegate.call(this,coll,k,ks);};
G__259559.cljs$lang$maxFixedArity = 2;
G__259559.cljs$lang$applyTo = (function (arglist__259564){
var coll = cljs.core.first(arglist__259564);
arglist__259564 = cljs.core.next(arglist__259564);
var k = cljs.core.first(arglist__259564);
var ks = cljs.core.rest(arglist__259564);
return G__259559__delegate(coll,k,ks);
});
G__259559.cljs$core$IFn$_invoke$arity$variadic = G__259559__delegate;
return G__259559;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__259565 = null;
if (arguments.length > 2) {
var G__259566__i = 0, G__259566__a = new Array(arguments.length -  2);
while (G__259566__i < G__259566__a.length) {G__259566__a[G__259566__i] = arguments[G__259566__i + 2]; ++G__259566__i;}
G__259565 = new cljs.core.IndexedSeq(G__259566__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__259565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3981__auto__ = (function (){var G__259571 = f;
return goog.isFunction(G__259571);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__259572 = f;
if(G__259572){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto____$1 = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
return G__259572.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__259572.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__259572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__259572);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__260038 = null;
var G__260038__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__260038__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259574 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__259574) : self__.afn.call(null,G__259574));
});
var G__260038__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259575 = a;
var G__259576 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__259575,G__259576) : self__.afn.call(null,G__259575,G__259576));
});
var G__260038__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259577 = a;
var G__259578 = b;
var G__259579 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__259577,G__259578,G__259579) : self__.afn.call(null,G__259577,G__259578,G__259579));
});
var G__260038__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259580 = a;
var G__259581 = b;
var G__259582 = c;
var G__259583 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__259580,G__259581,G__259582,G__259583) : self__.afn.call(null,G__259580,G__259581,G__259582,G__259583));
});
var G__260038__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259584 = a;
var G__259585 = b;
var G__259586 = c;
var G__259587 = d;
var G__259588 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__259584,G__259585,G__259586,G__259587,G__259588) : self__.afn.call(null,G__259584,G__259585,G__259586,G__259587,G__259588));
});
var G__260038__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259589 = a;
var G__259590 = b;
var G__259591 = c;
var G__259592 = d;
var G__259593 = e;
var G__259594 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__259589,G__259590,G__259591,G__259592,G__259593,G__259594) : self__.afn.call(null,G__259589,G__259590,G__259591,G__259592,G__259593,G__259594));
});
var G__260038__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259595 = a;
var G__259596 = b;
var G__259597 = c;
var G__259598 = d;
var G__259599 = e;
var G__259600 = f;
var G__259601 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__259595,G__259596,G__259597,G__259598,G__259599,G__259600,G__259601) : self__.afn.call(null,G__259595,G__259596,G__259597,G__259598,G__259599,G__259600,G__259601));
});
var G__260038__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259602 = a;
var G__259603 = b;
var G__259604 = c;
var G__259605 = d;
var G__259606 = e;
var G__259607 = f;
var G__259608 = g;
var G__259609 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__259602,G__259603,G__259604,G__259605,G__259606,G__259607,G__259608,G__259609) : self__.afn.call(null,G__259602,G__259603,G__259604,G__259605,G__259606,G__259607,G__259608,G__259609));
});
var G__260038__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259610 = a;
var G__259611 = b;
var G__259612 = c;
var G__259613 = d;
var G__259614 = e;
var G__259615 = f;
var G__259616 = g;
var G__259617 = h;
var G__259618 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__259610,G__259611,G__259612,G__259613,G__259614,G__259615,G__259616,G__259617,G__259618) : self__.afn.call(null,G__259610,G__259611,G__259612,G__259613,G__259614,G__259615,G__259616,G__259617,G__259618));
});
var G__260038__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259619 = a;
var G__259620 = b;
var G__259621 = c;
var G__259622 = d;
var G__259623 = e;
var G__259624 = f;
var G__259625 = g;
var G__259626 = h;
var G__259627 = i;
var G__259628 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__259619,G__259620,G__259621,G__259622,G__259623,G__259624,G__259625,G__259626,G__259627,G__259628) : self__.afn.call(null,G__259619,G__259620,G__259621,G__259622,G__259623,G__259624,G__259625,G__259626,G__259627,G__259628));
});
var G__260038__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259629 = a;
var G__259630 = b;
var G__259631 = c;
var G__259632 = d;
var G__259633 = e;
var G__259634 = f;
var G__259635 = g;
var G__259636 = h;
var G__259637 = i;
var G__259638 = j;
var G__259639 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__259629,G__259630,G__259631,G__259632,G__259633,G__259634,G__259635,G__259636,G__259637,G__259638,G__259639) : self__.afn.call(null,G__259629,G__259630,G__259631,G__259632,G__259633,G__259634,G__259635,G__259636,G__259637,G__259638,G__259639));
});
var G__260038__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259640 = a;
var G__259641 = b;
var G__259642 = c;
var G__259643 = d;
var G__259644 = e;
var G__259645 = f;
var G__259646 = g;
var G__259647 = h;
var G__259648 = i;
var G__259649 = j;
var G__259650 = k;
var G__259651 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__259640,G__259641,G__259642,G__259643,G__259644,G__259645,G__259646,G__259647,G__259648,G__259649,G__259650,G__259651) : self__.afn.call(null,G__259640,G__259641,G__259642,G__259643,G__259644,G__259645,G__259646,G__259647,G__259648,G__259649,G__259650,G__259651));
});
var G__260038__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259652 = a;
var G__259653 = b;
var G__259654 = c;
var G__259655 = d;
var G__259656 = e;
var G__259657 = f;
var G__259658 = g;
var G__259659 = h;
var G__259660 = i;
var G__259661 = j;
var G__259662 = k;
var G__259663 = l;
var G__259664 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__259652,G__259653,G__259654,G__259655,G__259656,G__259657,G__259658,G__259659,G__259660,G__259661,G__259662,G__259663,G__259664) : self__.afn.call(null,G__259652,G__259653,G__259654,G__259655,G__259656,G__259657,G__259658,G__259659,G__259660,G__259661,G__259662,G__259663,G__259664));
});
var G__260038__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259665 = a;
var G__259666 = b;
var G__259667 = c;
var G__259668 = d;
var G__259669 = e;
var G__259670 = f;
var G__259671 = g;
var G__259672 = h;
var G__259673 = i;
var G__259674 = j;
var G__259675 = k;
var G__259676 = l;
var G__259677 = m;
var G__259678 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__259665,G__259666,G__259667,G__259668,G__259669,G__259670,G__259671,G__259672,G__259673,G__259674,G__259675,G__259676,G__259677,G__259678) : self__.afn.call(null,G__259665,G__259666,G__259667,G__259668,G__259669,G__259670,G__259671,G__259672,G__259673,G__259674,G__259675,G__259676,G__259677,G__259678));
});
var G__260038__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259679 = a;
var G__259680 = b;
var G__259681 = c;
var G__259682 = d;
var G__259683 = e;
var G__259684 = f;
var G__259685 = g;
var G__259686 = h;
var G__259687 = i;
var G__259688 = j;
var G__259689 = k;
var G__259690 = l;
var G__259691 = m;
var G__259692 = n;
var G__259693 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__259679,G__259680,G__259681,G__259682,G__259683,G__259684,G__259685,G__259686,G__259687,G__259688,G__259689,G__259690,G__259691,G__259692,G__259693) : self__.afn.call(null,G__259679,G__259680,G__259681,G__259682,G__259683,G__259684,G__259685,G__259686,G__259687,G__259688,G__259689,G__259690,G__259691,G__259692,G__259693));
});
var G__260038__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259694 = a;
var G__259695 = b;
var G__259696 = c;
var G__259697 = d;
var G__259698 = e;
var G__259699 = f;
var G__259700 = g;
var G__259701 = h;
var G__259702 = i;
var G__259703 = j;
var G__259704 = k;
var G__259705 = l;
var G__259706 = m;
var G__259707 = n;
var G__259708 = o;
var G__259709 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__259694,G__259695,G__259696,G__259697,G__259698,G__259699,G__259700,G__259701,G__259702,G__259703,G__259704,G__259705,G__259706,G__259707,G__259708,G__259709) : self__.afn.call(null,G__259694,G__259695,G__259696,G__259697,G__259698,G__259699,G__259700,G__259701,G__259702,G__259703,G__259704,G__259705,G__259706,G__259707,G__259708,G__259709));
});
var G__260038__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259710 = a;
var G__259711 = b;
var G__259712 = c;
var G__259713 = d;
var G__259714 = e;
var G__259715 = f;
var G__259716 = g;
var G__259717 = h;
var G__259718 = i;
var G__259719 = j;
var G__259720 = k;
var G__259721 = l;
var G__259722 = m;
var G__259723 = n;
var G__259724 = o;
var G__259725 = p;
var G__259726 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__259710,G__259711,G__259712,G__259713,G__259714,G__259715,G__259716,G__259717,G__259718,G__259719,G__259720,G__259721,G__259722,G__259723,G__259724,G__259725,G__259726) : self__.afn.call(null,G__259710,G__259711,G__259712,G__259713,G__259714,G__259715,G__259716,G__259717,G__259718,G__259719,G__259720,G__259721,G__259722,G__259723,G__259724,G__259725,G__259726));
});
var G__260038__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259727 = a;
var G__259728 = b;
var G__259729 = c;
var G__259730 = d;
var G__259731 = e;
var G__259732 = f;
var G__259733 = g;
var G__259734 = h;
var G__259735 = i;
var G__259736 = j;
var G__259737 = k;
var G__259738 = l;
var G__259739 = m;
var G__259740 = n;
var G__259741 = o;
var G__259742 = p;
var G__259743 = q;
var G__259744 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__259727,G__259728,G__259729,G__259730,G__259731,G__259732,G__259733,G__259734,G__259735,G__259736,G__259737,G__259738,G__259739,G__259740,G__259741,G__259742,G__259743,G__259744) : self__.afn.call(null,G__259727,G__259728,G__259729,G__259730,G__259731,G__259732,G__259733,G__259734,G__259735,G__259736,G__259737,G__259738,G__259739,G__259740,G__259741,G__259742,G__259743,G__259744));
});
var G__260038__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259745 = a;
var G__259746 = b;
var G__259747 = c;
var G__259748 = d;
var G__259749 = e;
var G__259750 = f;
var G__259751 = g;
var G__259752 = h;
var G__259753 = i;
var G__259754 = j;
var G__259755 = k;
var G__259756 = l;
var G__259757 = m;
var G__259758 = n;
var G__259759 = o;
var G__259760 = p;
var G__259761 = q;
var G__259762 = r;
var G__259763 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__259745,G__259746,G__259747,G__259748,G__259749,G__259750,G__259751,G__259752,G__259753,G__259754,G__259755,G__259756,G__259757,G__259758,G__259759,G__259760,G__259761,G__259762,G__259763) : self__.afn.call(null,G__259745,G__259746,G__259747,G__259748,G__259749,G__259750,G__259751,G__259752,G__259753,G__259754,G__259755,G__259756,G__259757,G__259758,G__259759,G__259760,G__259761,G__259762,G__259763));
});
var G__260038__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259764 = a;
var G__259765 = b;
var G__259766 = c;
var G__259767 = d;
var G__259768 = e;
var G__259769 = f;
var G__259770 = g;
var G__259771 = h;
var G__259772 = i;
var G__259773 = j;
var G__259774 = k;
var G__259775 = l;
var G__259776 = m;
var G__259777 = n;
var G__259778 = o;
var G__259779 = p;
var G__259780 = q;
var G__259781 = r;
var G__259782 = s;
var G__259783 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__259764,G__259765,G__259766,G__259767,G__259768,G__259769,G__259770,G__259771,G__259772,G__259773,G__259774,G__259775,G__259776,G__259777,G__259778,G__259779,G__259780,G__259781,G__259782,G__259783) : self__.afn.call(null,G__259764,G__259765,G__259766,G__259767,G__259768,G__259769,G__259770,G__259771,G__259772,G__259773,G__259774,G__259775,G__259776,G__259777,G__259778,G__259779,G__259780,G__259781,G__259782,G__259783));
});
var G__260038__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__259784 = self__.afn;
var G__259785 = a;
var G__259786 = b;
var G__259787 = c;
var G__259788 = d;
var G__259789 = e;
var G__259790 = f;
var G__259791 = g;
var G__259792 = h;
var G__259793 = i;
var G__259794 = j;
var G__259795 = k;
var G__259796 = l;
var G__259797 = m;
var G__259798 = n;
var G__259799 = o;
var G__259800 = p;
var G__259801 = q;
var G__259802 = r;
var G__259803 = s;
var G__259804 = t;
var G__259805 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__259784,G__259785,G__259786,G__259787,G__259788,G__259789,G__259790,G__259791,G__259792,G__259793,G__259794,G__259795,G__259796,G__259797,G__259798,G__259799,G__259800,G__259801,G__259802,G__259803,G__259804,G__259805) : cljs.core.apply.call(null,G__259784,G__259785,G__259786,G__259787,G__259788,G__259789,G__259790,G__259791,G__259792,G__259793,G__259794,G__259795,G__259796,G__259797,G__259798,G__259799,G__259800,G__259801,G__259802,G__259803,G__259804,G__259805));
});
G__260038 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__260038__1.call(this,self__);
case 2:
return G__260038__2.call(this,self__,a);
case 3:
return G__260038__3.call(this,self__,a,b);
case 4:
return G__260038__4.call(this,self__,a,b,c);
case 5:
return G__260038__5.call(this,self__,a,b,c,d);
case 6:
return G__260038__6.call(this,self__,a,b,c,d,e);
case 7:
return G__260038__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__260038__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__260038__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__260038__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__260038__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__260038__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__260038__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__260038__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__260038__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__260038__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__260038__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__260038__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__260038__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__260038__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__260038__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__260038__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__260038.cljs$core$IFn$_invoke$arity$1 = G__260038__1;
G__260038.cljs$core$IFn$_invoke$arity$2 = G__260038__2;
G__260038.cljs$core$IFn$_invoke$arity$3 = G__260038__3;
G__260038.cljs$core$IFn$_invoke$arity$4 = G__260038__4;
G__260038.cljs$core$IFn$_invoke$arity$5 = G__260038__5;
G__260038.cljs$core$IFn$_invoke$arity$6 = G__260038__6;
G__260038.cljs$core$IFn$_invoke$arity$7 = G__260038__7;
G__260038.cljs$core$IFn$_invoke$arity$8 = G__260038__8;
G__260038.cljs$core$IFn$_invoke$arity$9 = G__260038__9;
G__260038.cljs$core$IFn$_invoke$arity$10 = G__260038__10;
G__260038.cljs$core$IFn$_invoke$arity$11 = G__260038__11;
G__260038.cljs$core$IFn$_invoke$arity$12 = G__260038__12;
G__260038.cljs$core$IFn$_invoke$arity$13 = G__260038__13;
G__260038.cljs$core$IFn$_invoke$arity$14 = G__260038__14;
G__260038.cljs$core$IFn$_invoke$arity$15 = G__260038__15;
G__260038.cljs$core$IFn$_invoke$arity$16 = G__260038__16;
G__260038.cljs$core$IFn$_invoke$arity$17 = G__260038__17;
G__260038.cljs$core$IFn$_invoke$arity$18 = G__260038__18;
G__260038.cljs$core$IFn$_invoke$arity$19 = G__260038__19;
G__260038.cljs$core$IFn$_invoke$arity$20 = G__260038__20;
G__260038.cljs$core$IFn$_invoke$arity$21 = G__260038__21;
G__260038.cljs$core$IFn$_invoke$arity$22 = G__260038__22;
return G__260038;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args259573){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args259573)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__259806 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__259806) : self__.afn.call(null,G__259806));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__259807 = a;
var G__259808 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__259807,G__259808) : self__.afn.call(null,G__259807,G__259808));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__259809 = a;
var G__259810 = b;
var G__259811 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__259809,G__259810,G__259811) : self__.afn.call(null,G__259809,G__259810,G__259811));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__259812 = a;
var G__259813 = b;
var G__259814 = c;
var G__259815 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__259812,G__259813,G__259814,G__259815) : self__.afn.call(null,G__259812,G__259813,G__259814,G__259815));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__259816 = a;
var G__259817 = b;
var G__259818 = c;
var G__259819 = d;
var G__259820 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__259816,G__259817,G__259818,G__259819,G__259820) : self__.afn.call(null,G__259816,G__259817,G__259818,G__259819,G__259820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__259821 = a;
var G__259822 = b;
var G__259823 = c;
var G__259824 = d;
var G__259825 = e;
var G__259826 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__259821,G__259822,G__259823,G__259824,G__259825,G__259826) : self__.afn.call(null,G__259821,G__259822,G__259823,G__259824,G__259825,G__259826));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__259827 = a;
var G__259828 = b;
var G__259829 = c;
var G__259830 = d;
var G__259831 = e;
var G__259832 = f;
var G__259833 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__259827,G__259828,G__259829,G__259830,G__259831,G__259832,G__259833) : self__.afn.call(null,G__259827,G__259828,G__259829,G__259830,G__259831,G__259832,G__259833));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__259834 = a;
var G__259835 = b;
var G__259836 = c;
var G__259837 = d;
var G__259838 = e;
var G__259839 = f;
var G__259840 = g;
var G__259841 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__259834,G__259835,G__259836,G__259837,G__259838,G__259839,G__259840,G__259841) : self__.afn.call(null,G__259834,G__259835,G__259836,G__259837,G__259838,G__259839,G__259840,G__259841));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__259842 = a;
var G__259843 = b;
var G__259844 = c;
var G__259845 = d;
var G__259846 = e;
var G__259847 = f;
var G__259848 = g;
var G__259849 = h;
var G__259850 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__259842,G__259843,G__259844,G__259845,G__259846,G__259847,G__259848,G__259849,G__259850) : self__.afn.call(null,G__259842,G__259843,G__259844,G__259845,G__259846,G__259847,G__259848,G__259849,G__259850));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__259851 = a;
var G__259852 = b;
var G__259853 = c;
var G__259854 = d;
var G__259855 = e;
var G__259856 = f;
var G__259857 = g;
var G__259858 = h;
var G__259859 = i;
var G__259860 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__259851,G__259852,G__259853,G__259854,G__259855,G__259856,G__259857,G__259858,G__259859,G__259860) : self__.afn.call(null,G__259851,G__259852,G__259853,G__259854,G__259855,G__259856,G__259857,G__259858,G__259859,G__259860));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__259861 = a;
var G__259862 = b;
var G__259863 = c;
var G__259864 = d;
var G__259865 = e;
var G__259866 = f;
var G__259867 = g;
var G__259868 = h;
var G__259869 = i;
var G__259870 = j;
var G__259871 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__259861,G__259862,G__259863,G__259864,G__259865,G__259866,G__259867,G__259868,G__259869,G__259870,G__259871) : self__.afn.call(null,G__259861,G__259862,G__259863,G__259864,G__259865,G__259866,G__259867,G__259868,G__259869,G__259870,G__259871));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__259872 = a;
var G__259873 = b;
var G__259874 = c;
var G__259875 = d;
var G__259876 = e;
var G__259877 = f;
var G__259878 = g;
var G__259879 = h;
var G__259880 = i;
var G__259881 = j;
var G__259882 = k;
var G__259883 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__259872,G__259873,G__259874,G__259875,G__259876,G__259877,G__259878,G__259879,G__259880,G__259881,G__259882,G__259883) : self__.afn.call(null,G__259872,G__259873,G__259874,G__259875,G__259876,G__259877,G__259878,G__259879,G__259880,G__259881,G__259882,G__259883));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__259884 = a;
var G__259885 = b;
var G__259886 = c;
var G__259887 = d;
var G__259888 = e;
var G__259889 = f;
var G__259890 = g;
var G__259891 = h;
var G__259892 = i;
var G__259893 = j;
var G__259894 = k;
var G__259895 = l;
var G__259896 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__259884,G__259885,G__259886,G__259887,G__259888,G__259889,G__259890,G__259891,G__259892,G__259893,G__259894,G__259895,G__259896) : self__.afn.call(null,G__259884,G__259885,G__259886,G__259887,G__259888,G__259889,G__259890,G__259891,G__259892,G__259893,G__259894,G__259895,G__259896));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__259897 = a;
var G__259898 = b;
var G__259899 = c;
var G__259900 = d;
var G__259901 = e;
var G__259902 = f;
var G__259903 = g;
var G__259904 = h;
var G__259905 = i;
var G__259906 = j;
var G__259907 = k;
var G__259908 = l;
var G__259909 = m;
var G__259910 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__259897,G__259898,G__259899,G__259900,G__259901,G__259902,G__259903,G__259904,G__259905,G__259906,G__259907,G__259908,G__259909,G__259910) : self__.afn.call(null,G__259897,G__259898,G__259899,G__259900,G__259901,G__259902,G__259903,G__259904,G__259905,G__259906,G__259907,G__259908,G__259909,G__259910));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__259911 = a;
var G__259912 = b;
var G__259913 = c;
var G__259914 = d;
var G__259915 = e;
var G__259916 = f;
var G__259917 = g;
var G__259918 = h;
var G__259919 = i;
var G__259920 = j;
var G__259921 = k;
var G__259922 = l;
var G__259923 = m;
var G__259924 = n;
var G__259925 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__259911,G__259912,G__259913,G__259914,G__259915,G__259916,G__259917,G__259918,G__259919,G__259920,G__259921,G__259922,G__259923,G__259924,G__259925) : self__.afn.call(null,G__259911,G__259912,G__259913,G__259914,G__259915,G__259916,G__259917,G__259918,G__259919,G__259920,G__259921,G__259922,G__259923,G__259924,G__259925));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__259926 = a;
var G__259927 = b;
var G__259928 = c;
var G__259929 = d;
var G__259930 = e;
var G__259931 = f;
var G__259932 = g;
var G__259933 = h;
var G__259934 = i;
var G__259935 = j;
var G__259936 = k;
var G__259937 = l;
var G__259938 = m;
var G__259939 = n;
var G__259940 = o;
var G__259941 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__259926,G__259927,G__259928,G__259929,G__259930,G__259931,G__259932,G__259933,G__259934,G__259935,G__259936,G__259937,G__259938,G__259939,G__259940,G__259941) : self__.afn.call(null,G__259926,G__259927,G__259928,G__259929,G__259930,G__259931,G__259932,G__259933,G__259934,G__259935,G__259936,G__259937,G__259938,G__259939,G__259940,G__259941));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__259942 = a;
var G__259943 = b;
var G__259944 = c;
var G__259945 = d;
var G__259946 = e;
var G__259947 = f;
var G__259948 = g;
var G__259949 = h;
var G__259950 = i;
var G__259951 = j;
var G__259952 = k;
var G__259953 = l;
var G__259954 = m;
var G__259955 = n;
var G__259956 = o;
var G__259957 = p;
var G__259958 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__259942,G__259943,G__259944,G__259945,G__259946,G__259947,G__259948,G__259949,G__259950,G__259951,G__259952,G__259953,G__259954,G__259955,G__259956,G__259957,G__259958) : self__.afn.call(null,G__259942,G__259943,G__259944,G__259945,G__259946,G__259947,G__259948,G__259949,G__259950,G__259951,G__259952,G__259953,G__259954,G__259955,G__259956,G__259957,G__259958));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__259959 = a;
var G__259960 = b;
var G__259961 = c;
var G__259962 = d;
var G__259963 = e;
var G__259964 = f;
var G__259965 = g;
var G__259966 = h;
var G__259967 = i;
var G__259968 = j;
var G__259969 = k;
var G__259970 = l;
var G__259971 = m;
var G__259972 = n;
var G__259973 = o;
var G__259974 = p;
var G__259975 = q;
var G__259976 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__259959,G__259960,G__259961,G__259962,G__259963,G__259964,G__259965,G__259966,G__259967,G__259968,G__259969,G__259970,G__259971,G__259972,G__259973,G__259974,G__259975,G__259976) : self__.afn.call(null,G__259959,G__259960,G__259961,G__259962,G__259963,G__259964,G__259965,G__259966,G__259967,G__259968,G__259969,G__259970,G__259971,G__259972,G__259973,G__259974,G__259975,G__259976));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__259977 = a;
var G__259978 = b;
var G__259979 = c;
var G__259980 = d;
var G__259981 = e;
var G__259982 = f;
var G__259983 = g;
var G__259984 = h;
var G__259985 = i;
var G__259986 = j;
var G__259987 = k;
var G__259988 = l;
var G__259989 = m;
var G__259990 = n;
var G__259991 = o;
var G__259992 = p;
var G__259993 = q;
var G__259994 = r;
var G__259995 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__259977,G__259978,G__259979,G__259980,G__259981,G__259982,G__259983,G__259984,G__259985,G__259986,G__259987,G__259988,G__259989,G__259990,G__259991,G__259992,G__259993,G__259994,G__259995) : self__.afn.call(null,G__259977,G__259978,G__259979,G__259980,G__259981,G__259982,G__259983,G__259984,G__259985,G__259986,G__259987,G__259988,G__259989,G__259990,G__259991,G__259992,G__259993,G__259994,G__259995));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__259996 = a;
var G__259997 = b;
var G__259998 = c;
var G__259999 = d;
var G__260000 = e;
var G__260001 = f;
var G__260002 = g;
var G__260003 = h;
var G__260004 = i;
var G__260005 = j;
var G__260006 = k;
var G__260007 = l;
var G__260008 = m;
var G__260009 = n;
var G__260010 = o;
var G__260011 = p;
var G__260012 = q;
var G__260013 = r;
var G__260014 = s;
var G__260015 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__259996,G__259997,G__259998,G__259999,G__260000,G__260001,G__260002,G__260003,G__260004,G__260005,G__260006,G__260007,G__260008,G__260009,G__260010,G__260011,G__260012,G__260013,G__260014,G__260015) : self__.afn.call(null,G__259996,G__259997,G__259998,G__259999,G__260000,G__260001,G__260002,G__260003,G__260004,G__260005,G__260006,G__260007,G__260008,G__260009,G__260010,G__260011,G__260012,G__260013,G__260014,G__260015));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__260016 = self__.afn;
var G__260017 = a;
var G__260018 = b;
var G__260019 = c;
var G__260020 = d;
var G__260021 = e;
var G__260022 = f;
var G__260023 = g;
var G__260024 = h;
var G__260025 = i;
var G__260026 = j;
var G__260027 = k;
var G__260028 = l;
var G__260029 = m;
var G__260030 = n;
var G__260031 = o;
var G__260032 = p;
var G__260033 = q;
var G__260034 = r;
var G__260035 = s;
var G__260036 = t;
var G__260037 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__260016,G__260017,G__260018,G__260019,G__260020,G__260021,G__260022,G__260023,G__260024,G__260025,G__260026,G__260027,G__260028,G__260029,G__260030,G__260031,G__260032,G__260033,G__260034,G__260035,G__260036,G__260037) : cljs.core.apply.call(null,G__260016,G__260017,G__260018,G__260019,G__260020,G__260021,G__260022,G__260023,G__260024,G__260025,G__260026,G__260027,G__260028,G__260029,G__260030,G__260031,G__260032,G__260033,G__260034,G__260035,G__260036,G__260037));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__260042 = o;
if(G__260042){
var bit__4662__auto__ = (G__260042.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4662__auto__) || (G__260042.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__260042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__260042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__260042);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3969__auto__ = !((o == null));
if(and__3969__auto__){
var G__260046 = o;
if(G__260046){
var bit__4662__auto__ = (G__260046.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__260046.cljs$core$IMeta$)){
return true;
} else {
if((!G__260046.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__260046);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__260046);
}
} else {
return and__3969__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__260049__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__260050 = ret;
var G__260051 = cljs.core.first(ks);
var G__260052 = cljs.core.next(ks);
coll = G__260050;
k = G__260051;
ks = G__260052;
continue;
} else {
return ret;
}
}
break;
}
};
var G__260049 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__260053__i = 0, G__260053__a = new Array(arguments.length -  2);
while (G__260053__i < G__260053__a.length) {G__260053__a[G__260053__i] = arguments[G__260053__i + 2]; ++G__260053__i;}
  ks = new cljs.core.IndexedSeq(G__260053__a,0);
} 
return G__260049__delegate.call(this,coll,k,ks);};
G__260049.cljs$lang$maxFixedArity = 2;
G__260049.cljs$lang$applyTo = (function (arglist__260054){
var coll = cljs.core.first(arglist__260054);
arglist__260054 = cljs.core.next(arglist__260054);
var k = cljs.core.first(arglist__260054);
var ks = cljs.core.rest(arglist__260054);
return G__260049__delegate(coll,k,ks);
});
G__260049.cljs$core$IFn$_invoke$arity$variadic = G__260049__delegate;
return G__260049;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__260055 = null;
if (arguments.length > 2) {
var G__260056__i = 0, G__260056__a = new Array(arguments.length -  2);
while (G__260056__i < G__260056__a.length) {G__260056__a[G__260056__i] = arguments[G__260056__i + 2]; ++G__260056__i;}
G__260055 = new cljs.core.IndexedSeq(G__260056__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__260055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__260058 = x;
if(G__260058){
var bit__4662__auto__ = (G__260058.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4662__auto__) || (G__260058.cljs$core$ICollection$)){
return true;
} else {
if((!G__260058.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__260058);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__260058);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__260060 = x;
if(G__260060){
var bit__4662__auto__ = (G__260060.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4662__auto__) || (G__260060.cljs$core$ISet$)){
return true;
} else {
if((!G__260060.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__260060);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__260060);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__260062 = x;
if(G__260062){
var bit__4662__auto__ = (G__260062.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4662__auto__) || (G__260062.cljs$core$IAssociative$)){
return true;
} else {
if((!G__260062.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__260062);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__260062);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__260064 = x;
if(G__260064){
var bit__4662__auto__ = (G__260064.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4662__auto__) || (G__260064.cljs$core$ISequential$)){
return true;
} else {
if((!G__260064.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__260064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__260064);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__260066 = x;
if(G__260066){
var bit__4662__auto__ = (G__260066.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4662__auto__) || (G__260066.cljs$core$ISorted$)){
return true;
} else {
if((!G__260066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__260066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__260066);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__260068 = x;
if(G__260068){
var bit__4662__auto__ = (G__260068.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4662__auto__) || (G__260068.cljs$core$IReduce$)){
return true;
} else {
if((!G__260068.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__260068);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__260068);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__260070 = x;
if(G__260070){
var bit__4662__auto__ = (G__260070.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4662__auto__) || (G__260070.cljs$core$IMap$)){
return true;
} else {
if((!G__260070.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__260070);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__260070);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__260072 = x;
if(G__260072){
var bit__4662__auto__ = (G__260072.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4662__auto__) || (G__260072.cljs$core$IVector$)){
return true;
} else {
if((!G__260072.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__260072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__260072);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__260074 = x;
if(G__260074){
var bit__4655__auto__ = (G__260074.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4655__auto__) || (G__260074.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj260080 = {};
return obj260080;
});
var js_obj__1 = (function() { 
var G__260083__delegate = function (keyvals){
var G__260081 = goog.object.create;
var G__260082 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__260081,G__260082) : cljs.core.apply.call(null,G__260081,G__260082));
};
var G__260083 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__260084__i = 0, G__260084__a = new Array(arguments.length -  0);
while (G__260084__i < G__260084__a.length) {G__260084__a[G__260084__i] = arguments[G__260084__i + 0]; ++G__260084__i;}
  keyvals = new cljs.core.IndexedSeq(G__260084__a,0);
} 
return G__260083__delegate.call(this,keyvals);};
G__260083.cljs$lang$maxFixedArity = 0;
G__260083.cljs$lang$applyTo = (function (arglist__260085){
var keyvals = cljs.core.seq(arglist__260085);
return G__260083__delegate(keyvals);
});
G__260083.cljs$core$IFn$_invoke$arity$variadic = G__260083__delegate;
return G__260083;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__260086 = null;
if (arguments.length > 0) {
var G__260087__i = 0, G__260087__a = new Array(arguments.length -  0);
while (G__260087__i < G__260087__a.length) {G__260087__a[G__260087__i] = arguments[G__260087__i + 0]; ++G__260087__i;}
G__260086 = new cljs.core.IndexedSeq(G__260087__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__260086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__260090_260092 = obj;
var G__260091_260093 = ((function (G__260090_260092,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__260090_260092,keys))
;
goog.object.forEach(G__260090_260092,G__260091_260093);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__260094 = (i__$1 + (1));
var G__260095 = (j__$1 + (1));
var G__260096 = (len__$1 - (1));
i__$1 = G__260094;
j__$1 = G__260095;
len__$1 = G__260096;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__260097 = (i__$1 - (1));
var G__260098 = (j__$1 - (1));
var G__260099 = (len__$1 - (1));
i__$1 = G__260097;
j__$1 = G__260098;
len__$1 = G__260099;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj260101 = {};
return obj260101;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__260103 = s;
if(G__260103){
var bit__4662__auto__ = (G__260103.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__260103.cljs$core$ISeq$)){
return true;
} else {
if((!G__260103.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__260103);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__260103);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__260105 = s;
if(G__260105){
var bit__4662__auto__ = (G__260105.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4662__auto__) || (G__260105.cljs$core$ISeqable$)){
return true;
} else {
if((!G__260105.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__260105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__260105);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3981__auto__ = cljs.core.fn_QMARK_(f);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__260109 = f;
if(G__260109){
var bit__4662__auto__ = (G__260109.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4662__auto__) || (G__260109.cljs$core$IFn$)){
return true;
} else {
if((!G__260109.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__260109);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__260109);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__260122 = n;
return isNaN(G__260122);
})())) && (!((n === Infinity))) && (((function (){var G__260123 = n;
return parseFloat(G__260123);
})() === (function (){var G__260124 = n;
var G__260125 = (10);
return parseInt(G__260124,G__260125);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__260126__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__260127 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__260128 = etc;
s = G__260127;
xs = G__260128;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__260126 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260129__i = 0, G__260129__a = new Array(arguments.length -  2);
while (G__260129__i < G__260129__a.length) {G__260129__a[G__260129__i] = arguments[G__260129__i + 2]; ++G__260129__i;}
  more = new cljs.core.IndexedSeq(G__260129__a,0);
} 
return G__260126__delegate.call(this,x,y,more);};
G__260126.cljs$lang$maxFixedArity = 2;
G__260126.cljs$lang$applyTo = (function (arglist__260130){
var x = cljs.core.first(arglist__260130);
arglist__260130 = cljs.core.next(arglist__260130);
var y = cljs.core.first(arglist__260130);
var more = cljs.core.rest(arglist__260130);
return G__260126__delegate(x,y,more);
});
G__260126.cljs$core$IFn$_invoke$arity$variadic = G__260126__delegate;
return G__260126;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__260131 = null;
if (arguments.length > 2) {
var G__260132__i = 0, G__260132__a = new Array(arguments.length -  2);
while (G__260132__i < G__260132__a.length) {G__260132__a[G__260132__i] = arguments[G__260132__i + 2]; ++G__260132__i;}
G__260131 = new cljs.core.IndexedSeq(G__260132__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__260136 = x;
if(G__260136){
var bit__4655__auto__ = (G__260136.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4655__auto__) || (G__260136.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__260137 = x;
var G__260138 = y;
return goog.array.defaultCompare(G__260137,G__260138);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__260143 = xs;
var G__260144 = ys;
var G__260145 = len;
var G__260146 = (n + (1));
xs = G__260143;
ys = G__260144;
len = G__260145;
n = G__260146;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__260151 = x;
var G__260152 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__260151,G__260152) : f.call(null,G__260151,G__260152));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__260153 = y;
var G__260154 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__260153,G__260154) : f.call(null,G__260153,G__260154));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__260160 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__260160) : cljs.core.to_array.call(null,G__260160));
})();
var G__260161_260163 = a;
var G__260162_260164 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__260161_260163,G__260162_260164);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__260170 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__260170) : keyfn.call(null,G__260170));
})(),(function (){var G__260171 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__260171) : keyfn.call(null,G__260171));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__260177 = f;
var G__260178 = cljs.core.first(s);
var G__260179 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__260177,G__260178,G__260179) : cljs.core.reduce.call(null,G__260177,G__260178,G__260179));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__260180 = val__$1;
var G__260181 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__260180,G__260181) : f.call(null,G__260180,G__260181));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__260182 = nval;
var G__260183 = cljs.core.next(coll__$1);
val__$1 = G__260182;
coll__$1 = G__260183;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__260187 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__260187) : cljs.core.to_array.call(null,G__260187));
})();
var G__260188_260190 = a;
goog.array.shuffle(G__260188_260190);

var G__260189 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__260189) : cljs.core.vec.call(null,G__260189));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__260193 = coll;
if(G__260193){
var bit__4655__auto__ = (G__260193.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__260193.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__260194 = coll;
if(G__260194){
var bit__4655__auto__ = (G__260194.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__260194.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__260203 = null;
var G__260203__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__260203__1 = (function (x){
var G__260200 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__260200) : cf.call(null,G__260200));
});
var G__260203__2 = (function (x,y){
var G__260201 = x;
var G__260202 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__260201,G__260202) : f.call(null,G__260201,G__260202));
});
G__260203 = function(x,y){
switch(arguments.length){
case 0:
return G__260203__0.call(this);
case 1:
return G__260203__1.call(this,x);
case 2:
return G__260203__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__260203.cljs$core$IFn$_invoke$arity$0 = G__260203__0;
G__260203.cljs$core$IFn$_invoke$arity$1 = G__260203__1;
G__260203.cljs$core$IFn$_invoke$arity$2 = G__260203__2;
return G__260203;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__260210 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__260210) : xform.call(null,G__260210));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__260211 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__260211) : f__$1.call(null,G__260211));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__260212__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__260212 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260213__i = 0, G__260213__a = new Array(arguments.length -  2);
while (G__260213__i < G__260213__a.length) {G__260213__a[G__260213__i] = arguments[G__260213__i + 2]; ++G__260213__i;}
  more = new cljs.core.IndexedSeq(G__260213__a,0);
} 
return G__260212__delegate.call(this,x,y,more);};
G__260212.cljs$lang$maxFixedArity = 2;
G__260212.cljs$lang$applyTo = (function (arglist__260214){
var x = cljs.core.first(arglist__260214);
arglist__260214 = cljs.core.next(arglist__260214);
var y = cljs.core.first(arglist__260214);
var more = cljs.core.rest(arglist__260214);
return G__260212__delegate(x,y,more);
});
G__260212.cljs$core$IFn$_invoke$arity$variadic = G__260212__delegate;
return G__260212;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__260215 = null;
if (arguments.length > 2) {
var G__260216__i = 0, G__260216__a = new Array(arguments.length -  2);
while (G__260216__i < G__260216__a.length) {G__260216__a[G__260216__i] = arguments[G__260216__i + 2]; ++G__260216__i;}
G__260215 = new cljs.core.IndexedSeq(G__260216__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__260217__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__260217 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260218__i = 0, G__260218__a = new Array(arguments.length -  2);
while (G__260218__i < G__260218__a.length) {G__260218__a[G__260218__i] = arguments[G__260218__i + 2]; ++G__260218__i;}
  more = new cljs.core.IndexedSeq(G__260218__a,0);
} 
return G__260217__delegate.call(this,x,y,more);};
G__260217.cljs$lang$maxFixedArity = 2;
G__260217.cljs$lang$applyTo = (function (arglist__260219){
var x = cljs.core.first(arglist__260219);
arglist__260219 = cljs.core.next(arglist__260219);
var y = cljs.core.first(arglist__260219);
var more = cljs.core.rest(arglist__260219);
return G__260217__delegate(x,y,more);
});
G__260217.cljs$core$IFn$_invoke$arity$variadic = G__260217__delegate;
return G__260217;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__260220 = null;
if (arguments.length > 2) {
var G__260221__i = 0, G__260221__a = new Array(arguments.length -  2);
while (G__260221__i < G__260221__a.length) {G__260221__a[G__260221__i] = arguments[G__260221__i + 2]; ++G__260221__i;}
G__260220 = new cljs.core.IndexedSeq(G__260221__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__260222__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__260222 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260223__i = 0, G__260223__a = new Array(arguments.length -  2);
while (G__260223__i < G__260223__a.length) {G__260223__a[G__260223__i] = arguments[G__260223__i + 2]; ++G__260223__i;}
  more = new cljs.core.IndexedSeq(G__260223__a,0);
} 
return G__260222__delegate.call(this,x,y,more);};
G__260222.cljs$lang$maxFixedArity = 2;
G__260222.cljs$lang$applyTo = (function (arglist__260224){
var x = cljs.core.first(arglist__260224);
arglist__260224 = cljs.core.next(arglist__260224);
var y = cljs.core.first(arglist__260224);
var more = cljs.core.rest(arglist__260224);
return G__260222__delegate(x,y,more);
});
G__260222.cljs$core$IFn$_invoke$arity$variadic = G__260222__delegate;
return G__260222;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__260225 = null;
if (arguments.length > 2) {
var G__260226__i = 0, G__260226__a = new Array(arguments.length -  2);
while (G__260226__i < G__260226__a.length) {G__260226__a[G__260226__i] = arguments[G__260226__i + 2]; ++G__260226__i;}
G__260225 = new cljs.core.IndexedSeq(G__260226__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__260231__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__260231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260232__i = 0, G__260232__a = new Array(arguments.length -  2);
while (G__260232__i < G__260232__a.length) {G__260232__a[G__260232__i] = arguments[G__260232__i + 2]; ++G__260232__i;}
  more = new cljs.core.IndexedSeq(G__260232__a,0);
} 
return G__260231__delegate.call(this,x,y,more);};
G__260231.cljs$lang$maxFixedArity = 2;
G__260231.cljs$lang$applyTo = (function (arglist__260233){
var x = cljs.core.first(arglist__260233);
arglist__260233 = cljs.core.next(arglist__260233);
var y = cljs.core.first(arglist__260233);
var more = cljs.core.rest(arglist__260233);
return G__260231__delegate(x,y,more);
});
G__260231.cljs$core$IFn$_invoke$arity$variadic = G__260231__delegate;
return G__260231;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__260234 = null;
if (arguments.length > 2) {
var G__260235__i = 0, G__260235__a = new Array(arguments.length -  2);
while (G__260235__i < G__260235__a.length) {G__260235__a[G__260235__i] = arguments[G__260235__i + 2]; ++G__260235__i;}
G__260234 = new cljs.core.IndexedSeq(G__260235__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__260236__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__260237 = y;
var G__260238 = cljs.core.first(more);
var G__260239 = cljs.core.next(more);
x = G__260237;
y = G__260238;
more = G__260239;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__260236 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260240__i = 0, G__260240__a = new Array(arguments.length -  2);
while (G__260240__i < G__260240__a.length) {G__260240__a[G__260240__i] = arguments[G__260240__i + 2]; ++G__260240__i;}
  more = new cljs.core.IndexedSeq(G__260240__a,0);
} 
return G__260236__delegate.call(this,x,y,more);};
G__260236.cljs$lang$maxFixedArity = 2;
G__260236.cljs$lang$applyTo = (function (arglist__260241){
var x = cljs.core.first(arglist__260241);
arglist__260241 = cljs.core.next(arglist__260241);
var y = cljs.core.first(arglist__260241);
var more = cljs.core.rest(arglist__260241);
return G__260236__delegate(x,y,more);
});
G__260236.cljs$core$IFn$_invoke$arity$variadic = G__260236__delegate;
return G__260236;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__260242 = null;
if (arguments.length > 2) {
var G__260243__i = 0, G__260243__a = new Array(arguments.length -  2);
while (G__260243__i < G__260243__a.length) {G__260243__a[G__260243__i] = arguments[G__260243__i + 2]; ++G__260243__i;}
G__260242 = new cljs.core.IndexedSeq(G__260243__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__260244__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__260245 = y;
var G__260246 = cljs.core.first(more);
var G__260247 = cljs.core.next(more);
x = G__260245;
y = G__260246;
more = G__260247;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__260244 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260248__i = 0, G__260248__a = new Array(arguments.length -  2);
while (G__260248__i < G__260248__a.length) {G__260248__a[G__260248__i] = arguments[G__260248__i + 2]; ++G__260248__i;}
  more = new cljs.core.IndexedSeq(G__260248__a,0);
} 
return G__260244__delegate.call(this,x,y,more);};
G__260244.cljs$lang$maxFixedArity = 2;
G__260244.cljs$lang$applyTo = (function (arglist__260249){
var x = cljs.core.first(arglist__260249);
arglist__260249 = cljs.core.next(arglist__260249);
var y = cljs.core.first(arglist__260249);
var more = cljs.core.rest(arglist__260249);
return G__260244__delegate(x,y,more);
});
G__260244.cljs$core$IFn$_invoke$arity$variadic = G__260244__delegate;
return G__260244;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__260250 = null;
if (arguments.length > 2) {
var G__260251__i = 0, G__260251__a = new Array(arguments.length -  2);
while (G__260251__i < G__260251__a.length) {G__260251__a[G__260251__i] = arguments[G__260251__i + 2]; ++G__260251__i;}
G__260250 = new cljs.core.IndexedSeq(G__260251__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__260252__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__260253 = y;
var G__260254 = cljs.core.first(more);
var G__260255 = cljs.core.next(more);
x = G__260253;
y = G__260254;
more = G__260255;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__260252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260256__i = 0, G__260256__a = new Array(arguments.length -  2);
while (G__260256__i < G__260256__a.length) {G__260256__a[G__260256__i] = arguments[G__260256__i + 2]; ++G__260256__i;}
  more = new cljs.core.IndexedSeq(G__260256__a,0);
} 
return G__260252__delegate.call(this,x,y,more);};
G__260252.cljs$lang$maxFixedArity = 2;
G__260252.cljs$lang$applyTo = (function (arglist__260257){
var x = cljs.core.first(arglist__260257);
arglist__260257 = cljs.core.next(arglist__260257);
var y = cljs.core.first(arglist__260257);
var more = cljs.core.rest(arglist__260257);
return G__260252__delegate(x,y,more);
});
G__260252.cljs$core$IFn$_invoke$arity$variadic = G__260252__delegate;
return G__260252;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__260258 = null;
if (arguments.length > 2) {
var G__260259__i = 0, G__260259__a = new Array(arguments.length -  2);
while (G__260259__i < G__260259__a.length) {G__260259__a[G__260259__i] = arguments[G__260259__i + 2]; ++G__260259__i;}
G__260258 = new cljs.core.IndexedSeq(G__260259__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__260260__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__260261 = y;
var G__260262 = cljs.core.first(more);
var G__260263 = cljs.core.next(more);
x = G__260261;
y = G__260262;
more = G__260263;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__260260 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260264__i = 0, G__260264__a = new Array(arguments.length -  2);
while (G__260264__i < G__260264__a.length) {G__260264__a[G__260264__i] = arguments[G__260264__i + 2]; ++G__260264__i;}
  more = new cljs.core.IndexedSeq(G__260264__a,0);
} 
return G__260260__delegate.call(this,x,y,more);};
G__260260.cljs$lang$maxFixedArity = 2;
G__260260.cljs$lang$applyTo = (function (arglist__260265){
var x = cljs.core.first(arglist__260265);
arglist__260265 = cljs.core.next(arglist__260265);
var y = cljs.core.first(arglist__260265);
var more = cljs.core.rest(arglist__260265);
return G__260260__delegate(x,y,more);
});
G__260260.cljs$core$IFn$_invoke$arity$variadic = G__260260__delegate;
return G__260260;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__260266 = null;
if (arguments.length > 2) {
var G__260267__i = 0, G__260267__a = new Array(arguments.length -  2);
while (G__260267__i < G__260267__a.length) {G__260267__a[G__260267__i] = arguments[G__260267__i + 2]; ++G__260267__i;}
G__260266 = new cljs.core.IndexedSeq(G__260267__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
});
var max__3 = (function() { 
var G__260268__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})(),more);
};
var G__260268 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260269__i = 0, G__260269__a = new Array(arguments.length -  2);
while (G__260269__i < G__260269__a.length) {G__260269__a[G__260269__i] = arguments[G__260269__i + 2]; ++G__260269__i;}
  more = new cljs.core.IndexedSeq(G__260269__a,0);
} 
return G__260268__delegate.call(this,x,y,more);};
G__260268.cljs$lang$maxFixedArity = 2;
G__260268.cljs$lang$applyTo = (function (arglist__260270){
var x = cljs.core.first(arglist__260270);
arglist__260270 = cljs.core.next(arglist__260270);
var y = cljs.core.first(arglist__260270);
var more = cljs.core.rest(arglist__260270);
return G__260268__delegate(x,y,more);
});
G__260268.cljs$core$IFn$_invoke$arity$variadic = G__260268__delegate;
return G__260268;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__260271 = null;
if (arguments.length > 2) {
var G__260272__i = 0, G__260272__a = new Array(arguments.length -  2);
while (G__260272__i < G__260272__a.length) {G__260272__a[G__260272__i] = arguments[G__260272__i + 2]; ++G__260272__i;}
G__260271 = new cljs.core.IndexedSeq(G__260272__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
});
var min__3 = (function() { 
var G__260273__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
})(),more);
};
var G__260273 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260274__i = 0, G__260274__a = new Array(arguments.length -  2);
while (G__260274__i < G__260274__a.length) {G__260274__a[G__260274__i] = arguments[G__260274__i + 2]; ++G__260274__i;}
  more = new cljs.core.IndexedSeq(G__260274__a,0);
} 
return G__260273__delegate.call(this,x,y,more);};
G__260273.cljs$lang$maxFixedArity = 2;
G__260273.cljs$lang$applyTo = (function (arglist__260275){
var x = cljs.core.first(arglist__260275);
arglist__260275 = cljs.core.next(arglist__260275);
var y = cljs.core.first(arglist__260275);
var more = cljs.core.rest(arglist__260275);
return G__260273__delegate(x,y,more);
});
G__260273.cljs$core$IFn$_invoke$arity$variadic = G__260273__delegate;
return G__260273;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__260276 = null;
if (arguments.length > 2) {
var G__260277__i = 0, G__260277__a = new Array(arguments.length -  2);
while (G__260277__i < G__260277__a.length) {G__260277__a[G__260277__i] = arguments[G__260277__i + 2]; ++G__260277__i;}
G__260276 = new cljs.core.IndexedSeq(G__260277__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__260278__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__260278 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260279__i = 0, G__260279__a = new Array(arguments.length -  2);
while (G__260279__i < G__260279__a.length) {G__260279__a[G__260279__i] = arguments[G__260279__i + 2]; ++G__260279__i;}
  more = new cljs.core.IndexedSeq(G__260279__a,0);
} 
return G__260278__delegate.call(this,x,y,more);};
G__260278.cljs$lang$maxFixedArity = 2;
G__260278.cljs$lang$applyTo = (function (arglist__260280){
var x = cljs.core.first(arglist__260280);
arglist__260280 = cljs.core.next(arglist__260280);
var y = cljs.core.first(arglist__260280);
var more = cljs.core.rest(arglist__260280);
return G__260278__delegate(x,y,more);
});
G__260278.cljs$core$IFn$_invoke$arity$variadic = G__260278__delegate;
return G__260278;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__260281 = null;
if (arguments.length > 2) {
var G__260282__i = 0, G__260282__a = new Array(arguments.length -  2);
while (G__260282__i < G__260282__a.length) {G__260282__a[G__260282__i] = arguments[G__260282__i + 2]; ++G__260282__i;}
G__260281 = new cljs.core.IndexedSeq(G__260282__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__260283__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__260283 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260284__i = 0, G__260284__a = new Array(arguments.length -  2);
while (G__260284__i < G__260284__a.length) {G__260284__a[G__260284__i] = arguments[G__260284__i + 2]; ++G__260284__i;}
  more = new cljs.core.IndexedSeq(G__260284__a,0);
} 
return G__260283__delegate.call(this,x,y,more);};
G__260283.cljs$lang$maxFixedArity = 2;
G__260283.cljs$lang$applyTo = (function (arglist__260285){
var x = cljs.core.first(arglist__260285);
arglist__260285 = cljs.core.next(arglist__260285);
var y = cljs.core.first(arglist__260285);
var more = cljs.core.rest(arglist__260285);
return G__260283__delegate(x,y,more);
});
G__260283.cljs$core$IFn$_invoke$arity$variadic = G__260283__delegate;
return G__260283;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__260286 = null;
if (arguments.length > 2) {
var G__260287__i = 0, G__260287__a = new Array(arguments.length -  2);
while (G__260287__i < G__260287__a.length) {G__260287__a[G__260287__i] = arguments[G__260287__i + 2]; ++G__260287__i;}
G__260286 = new cljs.core.IndexedSeq(G__260287__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__260292__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__260292 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260293__i = 0, G__260293__a = new Array(arguments.length -  2);
while (G__260293__i < G__260293__a.length) {G__260293__a[G__260293__i] = arguments[G__260293__i + 2]; ++G__260293__i;}
  more = new cljs.core.IndexedSeq(G__260293__a,0);
} 
return G__260292__delegate.call(this,x,y,more);};
G__260292.cljs$lang$maxFixedArity = 2;
G__260292.cljs$lang$applyTo = (function (arglist__260294){
var x = cljs.core.first(arglist__260294);
arglist__260294 = cljs.core.next(arglist__260294);
var y = cljs.core.first(arglist__260294);
var more = cljs.core.rest(arglist__260294);
return G__260292__delegate(x,y,more);
});
G__260292.cljs$core$IFn$_invoke$arity$variadic = G__260292__delegate;
return G__260292;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__260295 = null;
if (arguments.length > 2) {
var G__260296__i = 0, G__260296__a = new Array(arguments.length -  2);
while (G__260296__i < G__260296__a.length) {G__260296__a[G__260296__i] = arguments[G__260296__i + 2]; ++G__260296__i;}
G__260295 = new cljs.core.IndexedSeq(G__260296__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__260297__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__260297 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260298__i = 0, G__260298__a = new Array(arguments.length -  2);
while (G__260298__i < G__260298__a.length) {G__260298__a[G__260298__i] = arguments[G__260298__i + 2]; ++G__260298__i;}
  more = new cljs.core.IndexedSeq(G__260298__a,0);
} 
return G__260297__delegate.call(this,x,y,more);};
G__260297.cljs$lang$maxFixedArity = 2;
G__260297.cljs$lang$applyTo = (function (arglist__260299){
var x = cljs.core.first(arglist__260299);
arglist__260299 = cljs.core.next(arglist__260299);
var y = cljs.core.first(arglist__260299);
var more = cljs.core.rest(arglist__260299);
return G__260297__delegate(x,y,more);
});
G__260297.cljs$core$IFn$_invoke$arity$variadic = G__260297__delegate;
return G__260297;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__260300 = null;
if (arguments.length > 2) {
var G__260301__i = 0, G__260301__a = new Array(arguments.length -  2);
while (G__260301__i < G__260301__a.length) {G__260301__a[G__260301__i] = arguments[G__260301__i + 2]; ++G__260301__i;}
G__260300 = new cljs.core.IndexedSeq(G__260301__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260300);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__260302__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__260302 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260303__i = 0, G__260303__a = new Array(arguments.length -  2);
while (G__260303__i < G__260303__a.length) {G__260303__a[G__260303__i] = arguments[G__260303__i + 2]; ++G__260303__i;}
  more = new cljs.core.IndexedSeq(G__260303__a,0);
} 
return G__260302__delegate.call(this,x,y,more);};
G__260302.cljs$lang$maxFixedArity = 2;
G__260302.cljs$lang$applyTo = (function (arglist__260304){
var x = cljs.core.first(arglist__260304);
arglist__260304 = cljs.core.next(arglist__260304);
var y = cljs.core.first(arglist__260304);
var more = cljs.core.rest(arglist__260304);
return G__260302__delegate(x,y,more);
});
G__260302.cljs$core$IFn$_invoke$arity$variadic = G__260302__delegate;
return G__260302;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__260305 = null;
if (arguments.length > 2) {
var G__260306__i = 0, G__260306__a = new Array(arguments.length -  2);
while (G__260306__i < G__260306__a.length) {G__260306__a[G__260306__i] = arguments[G__260306__i + 2]; ++G__260306__i;}
G__260305 = new cljs.core.IndexedSeq(G__260306__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__260309 = x;
var G__260310 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__260309,G__260310) : cljs.core.mod.call(null,G__260309,G__260310));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__260311__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__260311 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260312__i = 0, G__260312__a = new Array(arguments.length -  2);
while (G__260312__i < G__260312__a.length) {G__260312__a[G__260312__i] = arguments[G__260312__i + 2]; ++G__260312__i;}
  more = new cljs.core.IndexedSeq(G__260312__a,0);
} 
return G__260311__delegate.call(this,x,y,more);};
G__260311.cljs$lang$maxFixedArity = 2;
G__260311.cljs$lang$applyTo = (function (arglist__260313){
var x = cljs.core.first(arglist__260313);
arglist__260313 = cljs.core.next(arglist__260313);
var y = cljs.core.first(arglist__260313);
var more = cljs.core.rest(arglist__260313);
return G__260311__delegate(x,y,more);
});
G__260311.cljs$core$IFn$_invoke$arity$variadic = G__260311__delegate;
return G__260311;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__260314 = null;
if (arguments.length > 2) {
var G__260315__i = 0, G__260315__a = new Array(arguments.length -  2);
while (G__260315__i < G__260315__a.length) {G__260315__a[G__260315__i] = arguments[G__260315__i + 2]; ++G__260315__i;}
G__260314 = new cljs.core.IndexedSeq(G__260315__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__260316__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__260316 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260317__i = 0, G__260317__a = new Array(arguments.length -  2);
while (G__260317__i < G__260317__a.length) {G__260317__a[G__260317__i] = arguments[G__260317__i + 2]; ++G__260317__i;}
  more = new cljs.core.IndexedSeq(G__260317__a,0);
} 
return G__260316__delegate.call(this,x,y,more);};
G__260316.cljs$lang$maxFixedArity = 2;
G__260316.cljs$lang$applyTo = (function (arglist__260318){
var x = cljs.core.first(arglist__260318);
arglist__260318 = cljs.core.next(arglist__260318);
var y = cljs.core.first(arglist__260318);
var more = cljs.core.rest(arglist__260318);
return G__260316__delegate(x,y,more);
});
G__260316.cljs$core$IFn$_invoke$arity$variadic = G__260316__delegate;
return G__260316;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__260319 = null;
if (arguments.length > 2) {
var G__260320__i = 0, G__260320__a = new Array(arguments.length -  2);
while (G__260320__i < G__260320__a.length) {G__260320__a[G__260320__i] = arguments[G__260320__i + 2]; ++G__260320__i;}
G__260319 = new cljs.core.IndexedSeq(G__260320__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__260323 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__260323) : Math.floor.call(null,G__260323));
} else {
var G__260324 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__260324) : Math.ceil.call(null,G__260324));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__260325__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__260325 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260326__i = 0, G__260326__a = new Array(arguments.length -  2);
while (G__260326__i < G__260326__a.length) {G__260326__a[G__260326__i] = arguments[G__260326__i + 2]; ++G__260326__i;}
  more = new cljs.core.IndexedSeq(G__260326__a,0);
} 
return G__260325__delegate.call(this,x,y,more);};
G__260325.cljs$lang$maxFixedArity = 2;
G__260325.cljs$lang$applyTo = (function (arglist__260327){
var x = cljs.core.first(arglist__260327);
arglist__260327 = cljs.core.next(arglist__260327);
var y = cljs.core.first(arglist__260327);
var more = cljs.core.rest(arglist__260327);
return G__260325__delegate(x,y,more);
});
G__260325.cljs$core$IFn$_invoke$arity$variadic = G__260325__delegate;
return G__260325;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__260328 = null;
if (arguments.length > 2) {
var G__260329__i = 0, G__260329__a = new Array(arguments.length -  2);
while (G__260329__i < G__260329__a.length) {G__260329__a[G__260329__i] = arguments[G__260329__i + 2]; ++G__260329__i;}
G__260328 = new cljs.core.IndexedSeq(G__260329__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260328);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__260330__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__260330 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260331__i = 0, G__260331__a = new Array(arguments.length -  2);
while (G__260331__i < G__260331__a.length) {G__260331__a[G__260331__i] = arguments[G__260331__i + 2]; ++G__260331__i;}
  more = new cljs.core.IndexedSeq(G__260331__a,0);
} 
return G__260330__delegate.call(this,x,y,more);};
G__260330.cljs$lang$maxFixedArity = 2;
G__260330.cljs$lang$applyTo = (function (arglist__260332){
var x = cljs.core.first(arglist__260332);
arglist__260332 = cljs.core.next(arglist__260332);
var y = cljs.core.first(arglist__260332);
var more = cljs.core.rest(arglist__260332);
return G__260330__delegate(x,y,more);
});
G__260330.cljs$core$IFn$_invoke$arity$variadic = G__260330__delegate;
return G__260330;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__260333 = null;
if (arguments.length > 2) {
var G__260334__i = 0, G__260334__a = new Array(arguments.length -  2);
while (G__260334__i < G__260334__a.length) {G__260334__a[G__260334__i] = arguments[G__260334__i + 2]; ++G__260334__i;}
G__260333 = new cljs.core.IndexedSeq(G__260334__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__260335__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__260335 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260336__i = 0, G__260336__a = new Array(arguments.length -  2);
while (G__260336__i < G__260336__a.length) {G__260336__a[G__260336__i] = arguments[G__260336__i + 2]; ++G__260336__i;}
  more = new cljs.core.IndexedSeq(G__260336__a,0);
} 
return G__260335__delegate.call(this,x,y,more);};
G__260335.cljs$lang$maxFixedArity = 2;
G__260335.cljs$lang$applyTo = (function (arglist__260337){
var x = cljs.core.first(arglist__260337);
arglist__260337 = cljs.core.next(arglist__260337);
var y = cljs.core.first(arglist__260337);
var more = cljs.core.rest(arglist__260337);
return G__260335__delegate(x,y,more);
});
G__260335.cljs$core$IFn$_invoke$arity$variadic = G__260335__delegate;
return G__260335;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__260338 = null;
if (arguments.length > 2) {
var G__260339__i = 0, G__260339__a = new Array(arguments.length -  2);
while (G__260339__i < G__260339__a.length) {G__260339__a[G__260339__i] = arguments[G__260339__i + 2]; ++G__260339__i;}
G__260338 = new cljs.core.IndexedSeq(G__260339__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260338);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__260340__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__260340 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260341__i = 0, G__260341__a = new Array(arguments.length -  2);
while (G__260341__i < G__260341__a.length) {G__260341__a[G__260341__i] = arguments[G__260341__i + 2]; ++G__260341__i;}
  more = new cljs.core.IndexedSeq(G__260341__a,0);
} 
return G__260340__delegate.call(this,x,y,more);};
G__260340.cljs$lang$maxFixedArity = 2;
G__260340.cljs$lang$applyTo = (function (arglist__260342){
var x = cljs.core.first(arglist__260342);
arglist__260342 = cljs.core.next(arglist__260342);
var y = cljs.core.first(arglist__260342);
var more = cljs.core.rest(arglist__260342);
return G__260340__delegate(x,y,more);
});
G__260340.cljs$core$IFn$_invoke$arity$variadic = G__260340__delegate;
return G__260340;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__260343 = null;
if (arguments.length > 2) {
var G__260344__i = 0, G__260344__a = new Array(arguments.length -  2);
while (G__260344__i < G__260344__a.length) {G__260344__a[G__260344__i] = arguments[G__260344__i + 2]; ++G__260344__i;}
G__260343 = new cljs.core.IndexedSeq(G__260344__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260343);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__260349__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__260350 = y;
var G__260351 = cljs.core.first(more);
var G__260352 = cljs.core.next(more);
x = G__260350;
y = G__260351;
more = G__260352;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__260349 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__260353__i = 0, G__260353__a = new Array(arguments.length -  2);
while (G__260353__i < G__260353__a.length) {G__260353__a[G__260353__i] = arguments[G__260353__i + 2]; ++G__260353__i;}
  more = new cljs.core.IndexedSeq(G__260353__a,0);
} 
return G__260349__delegate.call(this,x,y,more);};
G__260349.cljs$lang$maxFixedArity = 2;
G__260349.cljs$lang$applyTo = (function (arglist__260354){
var x = cljs.core.first(arglist__260354);
arglist__260354 = cljs.core.next(arglist__260354);
var y = cljs.core.first(arglist__260354);
var more = cljs.core.rest(arglist__260354);
return G__260349__delegate(x,y,more);
});
G__260349.cljs$core$IFn$_invoke$arity$variadic = G__260349__delegate;
return G__260349;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__260355 = null;
if (arguments.length > 2) {
var G__260356__i = 0, G__260356__a = new Array(arguments.length -  2);
while (G__260356__i < G__260356__a.length) {G__260356__a[G__260356__i] = arguments[G__260356__i + 2]; ++G__260356__i;}
G__260355 = new cljs.core.IndexedSeq(G__260356__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__260357 = (n__$1 - (1));
var G__260358 = cljs.core.next(xs);
n__$1 = G__260357;
xs = G__260358;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__260362 = x;
return goog.string.buildString(G__260362);
}
});
var str__2 = (function() { 
var G__260363__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__260364 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__260365 = cljs.core.next(more);
sb = G__260364;
more = G__260365;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__260363 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__260366__i = 0, G__260366__a = new Array(arguments.length -  1);
while (G__260366__i < G__260366__a.length) {G__260366__a[G__260366__i] = arguments[G__260366__i + 1]; ++G__260366__i;}
  ys = new cljs.core.IndexedSeq(G__260366__a,0);
} 
return G__260363__delegate.call(this,x,ys);};
G__260363.cljs$lang$maxFixedArity = 1;
G__260363.cljs$lang$applyTo = (function (arglist__260367){
var x = cljs.core.first(arglist__260367);
var ys = cljs.core.rest(arglist__260367);
return G__260363__delegate(x,ys);
});
G__260363.cljs$core$IFn$_invoke$arity$variadic = G__260363__delegate;
return G__260363;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__260368 = null;
if (arguments.length > 1) {
var G__260369__i = 0, G__260369__a = new Array(arguments.length -  1);
while (G__260369__i < G__260369__a.length) {G__260369__a[G__260369__i] = arguments[G__260369__i + 1]; ++G__260369__i;}
G__260368 = new cljs.core.IndexedSeq(G__260369__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__260368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__260370 = cljs.core.next(xs);
var G__260371 = cljs.core.next(ys);
xs = G__260370;
ys = G__260371;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__260372 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__260373 = cljs.core.next(s);
res = G__260372;
s = G__260373;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__260378 = ((h + (cljs.core.hash((function (){var G__260376 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__260376) : cljs.core.key.call(null,G__260376));
})()) ^ cljs.core.hash((function (){var G__260377 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__260377) : cljs.core.val.call(null,G__260377));
})()))) % (4503599627370496));
var G__260379 = cljs.core.next(s);
h = G__260378;
s = G__260379;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__260380 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__260381 = cljs.core.next(s__$1);
h = G__260380;
s__$1 = G__260381;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__260392_260402 = cljs.core.seq(fn_map);
var chunk__260393_260403 = null;
var count__260394_260404 = (0);
var i__260395_260405 = (0);
while(true){
if((i__260395_260405 < count__260394_260404)){
var vec__260396_260406 = chunk__260393_260403.cljs$core$IIndexed$_nth$arity$2(null,i__260395_260405);
var key_name_260407 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__260396_260406,(0),null);
var f_260408 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__260396_260406,(1),null);
var str_name_260409 = (function (){var G__260397 = key_name_260407;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__260397) : cljs.core.name.call(null,G__260397));
})();
(obj[str_name_260409] = f_260408);

var G__260410 = seq__260392_260402;
var G__260411 = chunk__260393_260403;
var G__260412 = count__260394_260404;
var G__260413 = (i__260395_260405 + (1));
seq__260392_260402 = G__260410;
chunk__260393_260403 = G__260411;
count__260394_260404 = G__260412;
i__260395_260405 = G__260413;
continue;
} else {
var temp__4126__auto___260414 = cljs.core.seq(seq__260392_260402);
if(temp__4126__auto___260414){
var seq__260392_260415__$1 = temp__4126__auto___260414;
if(cljs.core.chunked_seq_QMARK_(seq__260392_260415__$1)){
var c__4768__auto___260416 = (function (){var G__260398 = seq__260392_260415__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__260398) : cljs.core.chunk_first.call(null,G__260398));
})();
var G__260417 = (function (){var G__260399 = seq__260392_260415__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__260399) : cljs.core.chunk_rest.call(null,G__260399));
})();
var G__260418 = c__4768__auto___260416;
var G__260419 = cljs.core.count(c__4768__auto___260416);
var G__260420 = (0);
seq__260392_260402 = G__260417;
chunk__260393_260403 = G__260418;
count__260394_260404 = G__260419;
i__260395_260405 = G__260420;
continue;
} else {
var vec__260400_260421 = cljs.core.first(seq__260392_260415__$1);
var key_name_260422 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__260400_260421,(0),null);
var f_260423 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__260400_260421,(1),null);
var str_name_260424 = (function (){var G__260401 = key_name_260422;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__260401) : cljs.core.name.call(null,G__260401));
})();
(obj[str_name_260424] = f_260423);

var G__260425 = cljs.core.next(seq__260392_260415__$1);
var G__260426 = null;
var G__260427 = (0);
var G__260428 = (0);
seq__260392_260402 = G__260425;
chunk__260393_260403 = G__260426;
count__260394_260404 = G__260427;
i__260395_260405 = G__260428;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__260430 = coll;
if(G__260430){
var bit__4662__auto__ = (G__260430.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4662__auto__) || (G__260430.cljs$core$IReversible$)){
return true;
} else {
if((!G__260430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__260430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__260430);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__260431 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__260431;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__260432 = (i - (1));
var G__260433 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__260432;
r = G__260433;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__260434__i = 0, G__260434__a = new Array(arguments.length -  0);
while (G__260434__i < G__260434__a.length) {G__260434__a[G__260434__i] = arguments[G__260434__i + 0]; ++G__260434__i;}
  xs = new cljs.core.IndexedSeq(G__260434__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__260435){
var xs = cljs.core.seq(arglist__260435);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3981__auto__ = (coll == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__260439 = coll;
if(G__260439){
var bit__4655__auto__ = (G__260439.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__260439.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__260441 = x;
if(G__260441){
var bit__4662__auto__ = (G__260441.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4662__auto__) || (G__260441.cljs$core$IList$)){
return true;
} else {
if((!G__260441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__260441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__260441);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__260448 = a.ns;
var G__260449 = b.ns;
return goog.array.defaultCompare(G__260448,G__260449);
})();
if(((0) === nsc)){
var G__260450 = a.name;
var G__260451 = b.name;
return goog.array.defaultCompare(G__260450,G__260451);
} else {
return nsc;
}
}
} else {
var G__260452 = a.name;
var G__260453 = b.name;
return goog.array.defaultCompare(G__260452,G__260453);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__260455 = null;
var G__260455__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__260455__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__260455 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__260455__2.call(this,self__,coll);
case 3:
return G__260455__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__260455.cljs$core$IFn$_invoke$arity$2 = G__260455__2;
G__260455.cljs$core$IFn$_invoke$arity$3 = G__260455__3;
return G__260455;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args260454){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args260454)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__260457 = x;
if(G__260457){
var bit__4655__auto__ = (G__260457.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__260457.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__260459 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__260459) : cljs.core.name.call(null,G__260459));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__260460 = ls.sval();
ls = G__260460;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__260462 = s;
if(G__260462){
var bit__4655__auto__ = (G__260462.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4655__auto__) || (G__260462.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__260463 = cljs.core.next(s__$1);
s__$1 = G__260463;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_260464 = (0);
var xs_260465 = cljs.core.seq(coll);
while(true){
if(xs_260465){
(ret[i_260464] = cljs.core.to_array(cljs.core.first(xs_260465)));

var G__260466 = (i_260464 + (1));
var G__260467 = cljs.core.next(xs_260465);
i_260464 = G__260466;
xs_260465 = G__260467;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__260470 = (i + (1));
var G__260471 = cljs.core.next(s__$1);
i = G__260470;
s__$1 = G__260471;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___260472 = size;
var i_260473 = (0);
while(true){
if((i_260473 < n__4868__auto___260472)){
(a[i_260473] = init_val_or_seq);

var G__260474 = (i_260473 + (1));
i_260473 = G__260474;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__260477 = (i + (1));
var G__260478 = cljs.core.next(s__$1);
i = G__260477;
s__$1 = G__260478;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___260479 = size;
var i_260480 = (0);
while(true){
if((i_260480 < n__4868__auto___260479)){
(a[i_260480] = init_val_or_seq);

var G__260481 = (i_260480 + (1));
i_260480 = G__260481;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__260484 = (i + (1));
var G__260485 = cljs.core.next(s__$1);
i = G__260484;
s__$1 = G__260485;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___260486 = size;
var i_260487 = (0);
while(true){
if((i_260487 < n__4868__auto___260486)){
(a[i_260487] = init_val_or_seq);

var G__260488 = (i_260487 + (1));
i_260487 = G__260488;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__260491 = (i + (1));
var G__260492 = cljs.core.next(s__$1);
i = G__260491;
s__$1 = G__260492;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___260493 = size;
var i_260494 = (0);
while(true){
if((i_260494 < n__4868__auto___260493)){
(a[i_260494] = init_val_or_seq);

var G__260495 = (i_260494 + (1));
i_260494 = G__260495;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__260496 = cljs.core.next(s__$1);
var G__260497 = (i - (1));
var G__260498 = (sum + (1));
s__$1 = G__260496;
i = G__260497;
sum = G__260498;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__260518__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__260518 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__260519__i = 0, G__260519__a = new Array(arguments.length -  2);
while (G__260519__i < G__260519__a.length) {G__260519__a[G__260519__i] = arguments[G__260519__i + 2]; ++G__260519__i;}
  zs = new cljs.core.IndexedSeq(G__260519__a,0);
} 
return G__260518__delegate.call(this,x,y,zs);};
G__260518.cljs$lang$maxFixedArity = 2;
G__260518.cljs$lang$applyTo = (function (arglist__260520){
var x = cljs.core.first(arglist__260520);
arglist__260520 = cljs.core.next(arglist__260520);
var y = cljs.core.first(arglist__260520);
var zs = cljs.core.rest(arglist__260520);
return G__260518__delegate(x,y,zs);
});
G__260518.cljs$core$IFn$_invoke$arity$variadic = G__260518__delegate;
return G__260518;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__260521 = null;
if (arguments.length > 2) {
var G__260522__i = 0, G__260522__a = new Array(arguments.length -  2);
while (G__260522__i < G__260522__a.length) {G__260522__a[G__260522__i] = arguments[G__260522__i + 2]; ++G__260522__i;}
G__260521 = new cljs.core.IndexedSeq(G__260522__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__260521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__260523__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__260523 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__260524__i = 0, G__260524__a = new Array(arguments.length -  4);
while (G__260524__i < G__260524__a.length) {G__260524__a[G__260524__i] = arguments[G__260524__i + 4]; ++G__260524__i;}
  more = new cljs.core.IndexedSeq(G__260524__a,0);
} 
return G__260523__delegate.call(this,a,b,c,d,more);};
G__260523.cljs$lang$maxFixedArity = 4;
G__260523.cljs$lang$applyTo = (function (arglist__260525){
var a = cljs.core.first(arglist__260525);
arglist__260525 = cljs.core.next(arglist__260525);
var b = cljs.core.first(arglist__260525);
arglist__260525 = cljs.core.next(arglist__260525);
var c = cljs.core.first(arglist__260525);
arglist__260525 = cljs.core.next(arglist__260525);
var d = cljs.core.first(arglist__260525);
var more = cljs.core.rest(arglist__260525);
return G__260523__delegate(a,b,c,d,more);
});
G__260523.cljs$core$IFn$_invoke$arity$variadic = G__260523__delegate;
return G__260523;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__260526 = null;
if (arguments.length > 4) {
var G__260527__i = 0, G__260527__a = new Array(arguments.length -  4);
while (G__260527__i < G__260527__a.length) {G__260527__a[G__260527__i] = arguments[G__260527__i + 4]; ++G__260527__i;}
G__260526 = new cljs.core.IndexedSeq(G__260527__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__260526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__260528__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__260529 = ntcoll;
var G__260530 = cljs.core.first(vals);
var G__260531 = cljs.core.next(vals);
tcoll = G__260529;
val = G__260530;
vals = G__260531;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__260528 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__260532__i = 0, G__260532__a = new Array(arguments.length -  2);
while (G__260532__i < G__260532__a.length) {G__260532__a[G__260532__i] = arguments[G__260532__i + 2]; ++G__260532__i;}
  vals = new cljs.core.IndexedSeq(G__260532__a,0);
} 
return G__260528__delegate.call(this,tcoll,val,vals);};
G__260528.cljs$lang$maxFixedArity = 2;
G__260528.cljs$lang$applyTo = (function (arglist__260533){
var tcoll = cljs.core.first(arglist__260533);
arglist__260533 = cljs.core.next(arglist__260533);
var val = cljs.core.first(arglist__260533);
var vals = cljs.core.rest(arglist__260533);
return G__260528__delegate(tcoll,val,vals);
});
G__260528.cljs$core$IFn$_invoke$arity$variadic = G__260528__delegate;
return G__260528;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__260534 = null;
if (arguments.length > 2) {
var G__260535__i = 0, G__260535__a = new Array(arguments.length -  2);
while (G__260535__i < G__260535__a.length) {G__260535__a[G__260535__i] = arguments[G__260535__i + 2]; ++G__260535__i;}
G__260534 = new cljs.core.IndexedSeq(G__260535__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__260534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__260536__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__260537 = ntcoll;
var G__260538 = cljs.core.first(kvs);
var G__260539 = cljs.core.second(kvs);
var G__260540 = cljs.core.nnext(kvs);
tcoll = G__260537;
key = G__260538;
val = G__260539;
kvs = G__260540;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__260536 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__260541__i = 0, G__260541__a = new Array(arguments.length -  3);
while (G__260541__i < G__260541__a.length) {G__260541__a[G__260541__i] = arguments[G__260541__i + 3]; ++G__260541__i;}
  kvs = new cljs.core.IndexedSeq(G__260541__a,0);
} 
return G__260536__delegate.call(this,tcoll,key,val,kvs);};
G__260536.cljs$lang$maxFixedArity = 3;
G__260536.cljs$lang$applyTo = (function (arglist__260542){
var tcoll = cljs.core.first(arglist__260542);
arglist__260542 = cljs.core.next(arglist__260542);
var key = cljs.core.first(arglist__260542);
arglist__260542 = cljs.core.next(arglist__260542);
var val = cljs.core.first(arglist__260542);
var kvs = cljs.core.rest(arglist__260542);
return G__260536__delegate(tcoll,key,val,kvs);
});
G__260536.cljs$core$IFn$_invoke$arity$variadic = G__260536__delegate;
return G__260536;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__260543 = null;
if (arguments.length > 3) {
var G__260544__i = 0, G__260544__a = new Array(arguments.length -  3);
while (G__260544__i < G__260544__a.length) {G__260544__a[G__260544__i] = arguments[G__260544__i + 3]; ++G__260544__i;}
G__260543 = new cljs.core.IndexedSeq(G__260544__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__260543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__260545__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__260546 = ntcoll;
var G__260547 = cljs.core.first(ks);
var G__260548 = cljs.core.next(ks);
tcoll = G__260546;
key = G__260547;
ks = G__260548;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__260545 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__260549__i = 0, G__260549__a = new Array(arguments.length -  2);
while (G__260549__i < G__260549__a.length) {G__260549__a[G__260549__i] = arguments[G__260549__i + 2]; ++G__260549__i;}
  ks = new cljs.core.IndexedSeq(G__260549__a,0);
} 
return G__260545__delegate.call(this,tcoll,key,ks);};
G__260545.cljs$lang$maxFixedArity = 2;
G__260545.cljs$lang$applyTo = (function (arglist__260550){
var tcoll = cljs.core.first(arglist__260550);
arglist__260550 = cljs.core.next(arglist__260550);
var key = cljs.core.first(arglist__260550);
var ks = cljs.core.rest(arglist__260550);
return G__260545__delegate(tcoll,key,ks);
});
G__260545.cljs$core$IFn$_invoke$arity$variadic = G__260545__delegate;
return G__260545;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__260551 = null;
if (arguments.length > 2) {
var G__260552__i = 0, G__260552__a = new Array(arguments.length -  2);
while (G__260552__i < G__260552__a.length) {G__260552__a[G__260552__i] = arguments[G__260552__i + 2]; ++G__260552__i;}
G__260551 = new cljs.core.IndexedSeq(G__260552__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__260551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__260553__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__260554 = ntcoll;
var G__260555 = cljs.core.first(vals);
var G__260556 = cljs.core.next(vals);
tcoll = G__260554;
val = G__260555;
vals = G__260556;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__260553 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__260557__i = 0, G__260557__a = new Array(arguments.length -  2);
while (G__260557__i < G__260557__a.length) {G__260557__a[G__260557__i] = arguments[G__260557__i + 2]; ++G__260557__i;}
  vals = new cljs.core.IndexedSeq(G__260557__a,0);
} 
return G__260553__delegate.call(this,tcoll,val,vals);};
G__260553.cljs$lang$maxFixedArity = 2;
G__260553.cljs$lang$applyTo = (function (arglist__260558){
var tcoll = cljs.core.first(arglist__260558);
arglist__260558 = cljs.core.next(arglist__260558);
var val = cljs.core.first(arglist__260558);
var vals = cljs.core.rest(arglist__260558);
return G__260553__delegate(tcoll,val,vals);
});
G__260553.cljs$core$IFn$_invoke$arity$variadic = G__260553__delegate;
return G__260553;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__260559 = null;
if (arguments.length > 2) {
var G__260560__i = 0, G__260560__a = new Array(arguments.length -  2);
while (G__260560__i < G__260560__a.length) {G__260560__a[G__260560__i] = arguments[G__260560__i + 2]; ++G__260560__i;}
G__260559 = new cljs.core.IndexedSeq(G__260560__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__260559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4912 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4912);
} else {
var G__260771 = a4912;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__260771) : f.call(null,G__260771));
}
} else {
var b4913 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4912,b4913);
} else {
var G__260772 = a4912;
var G__260773 = b4913;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__260772,G__260773) : f.call(null,G__260772,G__260773));
}
} else {
var c4914 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4912,b4913,c4914);
} else {
var G__260774 = a4912;
var G__260775 = b4913;
var G__260776 = c4914;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__260774,G__260775,G__260776) : f.call(null,G__260774,G__260775,G__260776));
}
} else {
var d4915 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4912,b4913,c4914,d4915);
} else {
var G__260777 = a4912;
var G__260778 = b4913;
var G__260779 = c4914;
var G__260780 = d4915;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__260777,G__260778,G__260779,G__260780) : f.call(null,G__260777,G__260778,G__260779,G__260780));
}
} else {
var e4916 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4912,b4913,c4914,d4915,e4916);
} else {
var G__260781 = a4912;
var G__260782 = b4913;
var G__260783 = c4914;
var G__260784 = d4915;
var G__260785 = e4916;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__260781,G__260782,G__260783,G__260784,G__260785) : f.call(null,G__260781,G__260782,G__260783,G__260784,G__260785));
}
} else {
var f4917 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4912,b4913,c4914,d4915,e4916,f4917);
} else {
var G__260786 = a4912;
var G__260787 = b4913;
var G__260788 = c4914;
var G__260789 = d4915;
var G__260790 = e4916;
var G__260791 = f4917;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__260786,G__260787,G__260788,G__260789,G__260790,G__260791) : f.call(null,G__260786,G__260787,G__260788,G__260789,G__260790,G__260791));
}
} else {
var g4918 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4912,b4913,c4914,d4915,e4916,f4917,g4918);
} else {
var G__260792 = a4912;
var G__260793 = b4913;
var G__260794 = c4914;
var G__260795 = d4915;
var G__260796 = e4916;
var G__260797 = f4917;
var G__260798 = g4918;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__260792,G__260793,G__260794,G__260795,G__260796,G__260797,G__260798) : f.call(null,G__260792,G__260793,G__260794,G__260795,G__260796,G__260797,G__260798));
}
} else {
var h4919 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919);
} else {
var G__260799 = a4912;
var G__260800 = b4913;
var G__260801 = c4914;
var G__260802 = d4915;
var G__260803 = e4916;
var G__260804 = f4917;
var G__260805 = g4918;
var G__260806 = h4919;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__260799,G__260800,G__260801,G__260802,G__260803,G__260804,G__260805,G__260806) : f.call(null,G__260799,G__260800,G__260801,G__260802,G__260803,G__260804,G__260805,G__260806));
}
} else {
var i4920 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920);
} else {
var G__260807 = a4912;
var G__260808 = b4913;
var G__260809 = c4914;
var G__260810 = d4915;
var G__260811 = e4916;
var G__260812 = f4917;
var G__260813 = g4918;
var G__260814 = h4919;
var G__260815 = i4920;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__260807,G__260808,G__260809,G__260810,G__260811,G__260812,G__260813,G__260814,G__260815) : f.call(null,G__260807,G__260808,G__260809,G__260810,G__260811,G__260812,G__260813,G__260814,G__260815));
}
} else {
var j4921 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921);
} else {
var G__260816 = a4912;
var G__260817 = b4913;
var G__260818 = c4914;
var G__260819 = d4915;
var G__260820 = e4916;
var G__260821 = f4917;
var G__260822 = g4918;
var G__260823 = h4919;
var G__260824 = i4920;
var G__260825 = j4921;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__260816,G__260817,G__260818,G__260819,G__260820,G__260821,G__260822,G__260823,G__260824,G__260825) : f.call(null,G__260816,G__260817,G__260818,G__260819,G__260820,G__260821,G__260822,G__260823,G__260824,G__260825));
}
} else {
var k4922 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922);
} else {
var G__260826 = a4912;
var G__260827 = b4913;
var G__260828 = c4914;
var G__260829 = d4915;
var G__260830 = e4916;
var G__260831 = f4917;
var G__260832 = g4918;
var G__260833 = h4919;
var G__260834 = i4920;
var G__260835 = j4921;
var G__260836 = k4922;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__260826,G__260827,G__260828,G__260829,G__260830,G__260831,G__260832,G__260833,G__260834,G__260835,G__260836) : f.call(null,G__260826,G__260827,G__260828,G__260829,G__260830,G__260831,G__260832,G__260833,G__260834,G__260835,G__260836));
}
} else {
var l4923 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923);
} else {
var G__260837 = a4912;
var G__260838 = b4913;
var G__260839 = c4914;
var G__260840 = d4915;
var G__260841 = e4916;
var G__260842 = f4917;
var G__260843 = g4918;
var G__260844 = h4919;
var G__260845 = i4920;
var G__260846 = j4921;
var G__260847 = k4922;
var G__260848 = l4923;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__260837,G__260838,G__260839,G__260840,G__260841,G__260842,G__260843,G__260844,G__260845,G__260846,G__260847,G__260848) : f.call(null,G__260837,G__260838,G__260839,G__260840,G__260841,G__260842,G__260843,G__260844,G__260845,G__260846,G__260847,G__260848));
}
} else {
var m4924 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924);
} else {
var G__260849 = a4912;
var G__260850 = b4913;
var G__260851 = c4914;
var G__260852 = d4915;
var G__260853 = e4916;
var G__260854 = f4917;
var G__260855 = g4918;
var G__260856 = h4919;
var G__260857 = i4920;
var G__260858 = j4921;
var G__260859 = k4922;
var G__260860 = l4923;
var G__260861 = m4924;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__260849,G__260850,G__260851,G__260852,G__260853,G__260854,G__260855,G__260856,G__260857,G__260858,G__260859,G__260860,G__260861) : f.call(null,G__260849,G__260850,G__260851,G__260852,G__260853,G__260854,G__260855,G__260856,G__260857,G__260858,G__260859,G__260860,G__260861));
}
} else {
var n4925 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925);
} else {
var G__260862 = a4912;
var G__260863 = b4913;
var G__260864 = c4914;
var G__260865 = d4915;
var G__260866 = e4916;
var G__260867 = f4917;
var G__260868 = g4918;
var G__260869 = h4919;
var G__260870 = i4920;
var G__260871 = j4921;
var G__260872 = k4922;
var G__260873 = l4923;
var G__260874 = m4924;
var G__260875 = n4925;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__260862,G__260863,G__260864,G__260865,G__260866,G__260867,G__260868,G__260869,G__260870,G__260871,G__260872,G__260873,G__260874,G__260875) : f.call(null,G__260862,G__260863,G__260864,G__260865,G__260866,G__260867,G__260868,G__260869,G__260870,G__260871,G__260872,G__260873,G__260874,G__260875));
}
} else {
var o4926 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926);
} else {
var G__260876 = a4912;
var G__260877 = b4913;
var G__260878 = c4914;
var G__260879 = d4915;
var G__260880 = e4916;
var G__260881 = f4917;
var G__260882 = g4918;
var G__260883 = h4919;
var G__260884 = i4920;
var G__260885 = j4921;
var G__260886 = k4922;
var G__260887 = l4923;
var G__260888 = m4924;
var G__260889 = n4925;
var G__260890 = o4926;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__260876,G__260877,G__260878,G__260879,G__260880,G__260881,G__260882,G__260883,G__260884,G__260885,G__260886,G__260887,G__260888,G__260889,G__260890) : f.call(null,G__260876,G__260877,G__260878,G__260879,G__260880,G__260881,G__260882,G__260883,G__260884,G__260885,G__260886,G__260887,G__260888,G__260889,G__260890));
}
} else {
var p4927 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927);
} else {
var G__260891 = a4912;
var G__260892 = b4913;
var G__260893 = c4914;
var G__260894 = d4915;
var G__260895 = e4916;
var G__260896 = f4917;
var G__260897 = g4918;
var G__260898 = h4919;
var G__260899 = i4920;
var G__260900 = j4921;
var G__260901 = k4922;
var G__260902 = l4923;
var G__260903 = m4924;
var G__260904 = n4925;
var G__260905 = o4926;
var G__260906 = p4927;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__260891,G__260892,G__260893,G__260894,G__260895,G__260896,G__260897,G__260898,G__260899,G__260900,G__260901,G__260902,G__260903,G__260904,G__260905,G__260906) : f.call(null,G__260891,G__260892,G__260893,G__260894,G__260895,G__260896,G__260897,G__260898,G__260899,G__260900,G__260901,G__260902,G__260903,G__260904,G__260905,G__260906));
}
} else {
var q4928 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928);
} else {
var G__260907 = a4912;
var G__260908 = b4913;
var G__260909 = c4914;
var G__260910 = d4915;
var G__260911 = e4916;
var G__260912 = f4917;
var G__260913 = g4918;
var G__260914 = h4919;
var G__260915 = i4920;
var G__260916 = j4921;
var G__260917 = k4922;
var G__260918 = l4923;
var G__260919 = m4924;
var G__260920 = n4925;
var G__260921 = o4926;
var G__260922 = p4927;
var G__260923 = q4928;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__260907,G__260908,G__260909,G__260910,G__260911,G__260912,G__260913,G__260914,G__260915,G__260916,G__260917,G__260918,G__260919,G__260920,G__260921,G__260922,G__260923) : f.call(null,G__260907,G__260908,G__260909,G__260910,G__260911,G__260912,G__260913,G__260914,G__260915,G__260916,G__260917,G__260918,G__260919,G__260920,G__260921,G__260922,G__260923));
}
} else {
var r4929 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929);
} else {
var G__260924 = a4912;
var G__260925 = b4913;
var G__260926 = c4914;
var G__260927 = d4915;
var G__260928 = e4916;
var G__260929 = f4917;
var G__260930 = g4918;
var G__260931 = h4919;
var G__260932 = i4920;
var G__260933 = j4921;
var G__260934 = k4922;
var G__260935 = l4923;
var G__260936 = m4924;
var G__260937 = n4925;
var G__260938 = o4926;
var G__260939 = p4927;
var G__260940 = q4928;
var G__260941 = r4929;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__260924,G__260925,G__260926,G__260927,G__260928,G__260929,G__260930,G__260931,G__260932,G__260933,G__260934,G__260935,G__260936,G__260937,G__260938,G__260939,G__260940,G__260941) : f.call(null,G__260924,G__260925,G__260926,G__260927,G__260928,G__260929,G__260930,G__260931,G__260932,G__260933,G__260934,G__260935,G__260936,G__260937,G__260938,G__260939,G__260940,G__260941));
}
} else {
var s4930 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930);
} else {
var G__260942 = a4912;
var G__260943 = b4913;
var G__260944 = c4914;
var G__260945 = d4915;
var G__260946 = e4916;
var G__260947 = f4917;
var G__260948 = g4918;
var G__260949 = h4919;
var G__260950 = i4920;
var G__260951 = j4921;
var G__260952 = k4922;
var G__260953 = l4923;
var G__260954 = m4924;
var G__260955 = n4925;
var G__260956 = o4926;
var G__260957 = p4927;
var G__260958 = q4928;
var G__260959 = r4929;
var G__260960 = s4930;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__260942,G__260943,G__260944,G__260945,G__260946,G__260947,G__260948,G__260949,G__260950,G__260951,G__260952,G__260953,G__260954,G__260955,G__260956,G__260957,G__260958,G__260959,G__260960) : f.call(null,G__260942,G__260943,G__260944,G__260945,G__260946,G__260947,G__260948,G__260949,G__260950,G__260951,G__260952,G__260953,G__260954,G__260955,G__260956,G__260957,G__260958,G__260959,G__260960));
}
} else {
var t4931 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930,t4931);
} else {
var G__260961 = a4912;
var G__260962 = b4913;
var G__260963 = c4914;
var G__260964 = d4915;
var G__260965 = e4916;
var G__260966 = f4917;
var G__260967 = g4918;
var G__260968 = h4919;
var G__260969 = i4920;
var G__260970 = j4921;
var G__260971 = k4922;
var G__260972 = l4923;
var G__260973 = m4924;
var G__260974 = n4925;
var G__260975 = o4926;
var G__260976 = p4927;
var G__260977 = q4928;
var G__260978 = r4929;
var G__260979 = s4930;
var G__260980 = t4931;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__260961,G__260962,G__260963,G__260964,G__260965,G__260966,G__260967,G__260968,G__260969,G__260970,G__260971,G__260972,G__260973,G__260974,G__260975,G__260976,G__260977,G__260978,G__260979,G__260980) : f.call(null,G__260961,G__260962,G__260963,G__260964,G__260965,G__260966,G__260967,G__260968,G__260969,G__260970,G__260971,G__260972,G__260973,G__260974,G__260975,G__260976,G__260977,G__260978,G__260979,G__260980));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__260981__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__260981 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__260982__i = 0, G__260982__a = new Array(arguments.length -  5);
while (G__260982__i < G__260982__a.length) {G__260982__a[G__260982__i] = arguments[G__260982__i + 5]; ++G__260982__i;}
  args = new cljs.core.IndexedSeq(G__260982__a,0);
} 
return G__260981__delegate.call(this,f,a,b,c,d,args);};
G__260981.cljs$lang$maxFixedArity = 5;
G__260981.cljs$lang$applyTo = (function (arglist__260983){
var f = cljs.core.first(arglist__260983);
arglist__260983 = cljs.core.next(arglist__260983);
var a = cljs.core.first(arglist__260983);
arglist__260983 = cljs.core.next(arglist__260983);
var b = cljs.core.first(arglist__260983);
arglist__260983 = cljs.core.next(arglist__260983);
var c = cljs.core.first(arglist__260983);
arglist__260983 = cljs.core.next(arglist__260983);
var d = cljs.core.first(arglist__260983);
var args = cljs.core.rest(arglist__260983);
return G__260981__delegate(f,a,b,c,d,args);
});
G__260981.cljs$core$IFn$_invoke$arity$variadic = G__260981__delegate;
return G__260981;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__260984 = null;
if (arguments.length > 5) {
var G__260985__i = 0, G__260985__a = new Array(arguments.length -  5);
while (G__260985__i < G__260985__a.length) {G__260985__a[G__260985__i] = arguments[G__260985__i + 5]; ++G__260985__i;}
G__260984 = new cljs.core.IndexedSeq(G__260985__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__260984);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__261001 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261001) : f.call(null,G__261001));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__261002 = cljs.core.meta(obj);
var G__261003 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261002,G__261003) : f.call(null,G__261002,G__261003));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__261004 = cljs.core.meta(obj);
var G__261005 = a;
var G__261006 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261004,G__261005,G__261006) : f.call(null,G__261004,G__261005,G__261006));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__261007 = cljs.core.meta(obj);
var G__261008 = a;
var G__261009 = b;
var G__261010 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261007,G__261008,G__261009,G__261010) : f.call(null,G__261007,G__261008,G__261009,G__261010));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__261011 = cljs.core.meta(obj);
var G__261012 = a;
var G__261013 = b;
var G__261014 = c;
var G__261015 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__261011,G__261012,G__261013,G__261014,G__261015) : f.call(null,G__261011,G__261012,G__261013,G__261014,G__261015));
})());
});
var vary_meta__7 = (function() { 
var G__261016__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__261016 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__261017__i = 0, G__261017__a = new Array(arguments.length -  6);
while (G__261017__i < G__261017__a.length) {G__261017__a[G__261017__i] = arguments[G__261017__i + 6]; ++G__261017__i;}
  args = new cljs.core.IndexedSeq(G__261017__a,0);
} 
return G__261016__delegate.call(this,obj,f,a,b,c,d,args);};
G__261016.cljs$lang$maxFixedArity = 6;
G__261016.cljs$lang$applyTo = (function (arglist__261018){
var obj = cljs.core.first(arglist__261018);
arglist__261018 = cljs.core.next(arglist__261018);
var f = cljs.core.first(arglist__261018);
arglist__261018 = cljs.core.next(arglist__261018);
var a = cljs.core.first(arglist__261018);
arglist__261018 = cljs.core.next(arglist__261018);
var b = cljs.core.first(arglist__261018);
arglist__261018 = cljs.core.next(arglist__261018);
var c = cljs.core.first(arglist__261018);
arglist__261018 = cljs.core.next(arglist__261018);
var d = cljs.core.first(arglist__261018);
var args = cljs.core.rest(arglist__261018);
return G__261016__delegate(obj,f,a,b,c,d,args);
});
G__261016.cljs$core$IFn$_invoke$arity$variadic = G__261016__delegate;
return G__261016;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__261019 = null;
if (arguments.length > 6) {
var G__261020__i = 0, G__261020__a = new Array(arguments.length -  6);
while (G__261020__i < G__261020__a.length) {G__261020__a[G__261020__i] = arguments[G__261020__i + 6]; ++G__261020__i;}
G__261019 = new cljs.core.IndexedSeq(G__261020__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__261019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__261021__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__261021 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__261022__i = 0, G__261022__a = new Array(arguments.length -  2);
while (G__261022__i < G__261022__a.length) {G__261022__a[G__261022__i] = arguments[G__261022__i + 2]; ++G__261022__i;}
  more = new cljs.core.IndexedSeq(G__261022__a,0);
} 
return G__261021__delegate.call(this,x,y,more);};
G__261021.cljs$lang$maxFixedArity = 2;
G__261021.cljs$lang$applyTo = (function (arglist__261023){
var x = cljs.core.first(arglist__261023);
arglist__261023 = cljs.core.next(arglist__261023);
var y = cljs.core.first(arglist__261023);
var more = cljs.core.rest(arglist__261023);
return G__261021__delegate(x,y,more);
});
G__261021.cljs$core$IFn$_invoke$arity$variadic = G__261021__delegate;
return G__261021;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__261024 = null;
if (arguments.length > 2) {
var G__261025__i = 0, G__261025__a = new Array(arguments.length -  2);
while (G__261025__i < G__261025__a.length) {G__261025__a[G__261025__i] = arguments[G__261025__i + 2]; ++G__261025__i;}
G__261024 = new cljs.core.IndexedSeq(G__261025__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__261024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t261029 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t261029 = (function (nil_iter,meta261030){
this.nil_iter = nil_iter;
this.meta261030 = meta261030;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t261029.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t261029.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t261029.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t261029.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_261031){
var self__ = this;
var _261031__$1 = this;
return self__.meta261030;
});

cljs.core.t261029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_261031,meta261030__$1){
var self__ = this;
var _261031__$1 = this;
return (new cljs.core.t261029(self__.nil_iter,meta261030__$1));
});

cljs.core.t261029.cljs$lang$type = true;

cljs.core.t261029.cljs$lang$ctorStr = "cljs.core/t261029";

cljs.core.t261029.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/t261029");
});

cljs.core.__GT_t261029 = (function __GT_t261029(nil_iter__$1,meta261030){
return (new cljs.core.t261029(nil_iter__$1,meta261030));
});

}

return (new cljs.core.t261029(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return self__.iter.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__261032 = lt;
var G__261033 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__261032,G__261033) : self__.xform.call(null,G__261032,G__261033));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__261034 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__261034) : self__.xform.call(null,G__261034));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__261036 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__261036) : xform.call(null,G__261036));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__261038 = cljs.core.next(iters__$1);
iters__$1 = G__261038;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4868__auto___261039 = self__.iters.length;
var i_261040 = (0);
while(true){
if((i_261040 < n__4868__auto___261039)){
(self__.nexts[i_261040] = (self__.iters[i_261040]).next());

var G__261041 = (i_261040 + (1));
i_261040 = G__261041;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return this$.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__261037 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__261037) : self__.xform.call(null,G__261037));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__261046 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__261046) : xform.call(null,G__261046));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__261047_261051 = cljs.core.seq(colls);
var chunk__261048_261052 = null;
var count__261049_261053 = (0);
var i__261050_261054 = (0);
while(true){
if((i__261050_261054 < count__261049_261053)){
var coll_261055 = chunk__261048_261052.cljs$core$IIndexed$_nth$arity$2(null,i__261050_261054);
iters.push(cljs.core.iter(coll_261055));

var G__261056 = seq__261047_261051;
var G__261057 = chunk__261048_261052;
var G__261058 = count__261049_261053;
var G__261059 = (i__261050_261054 + (1));
seq__261047_261051 = G__261056;
chunk__261048_261052 = G__261057;
count__261049_261053 = G__261058;
i__261050_261054 = G__261059;
continue;
} else {
var temp__4126__auto___261060 = cljs.core.seq(seq__261047_261051);
if(temp__4126__auto___261060){
var seq__261047_261061__$1 = temp__4126__auto___261060;
if(cljs.core.chunked_seq_QMARK_(seq__261047_261061__$1)){
var c__4768__auto___261062 = cljs.core.chunk_first(seq__261047_261061__$1);
var G__261063 = cljs.core.chunk_rest(seq__261047_261061__$1);
var G__261064 = c__4768__auto___261062;
var G__261065 = cljs.core.count(c__4768__auto___261062);
var G__261066 = (0);
seq__261047_261051 = G__261063;
chunk__261048_261052 = G__261064;
count__261049_261053 = G__261065;
i__261050_261054 = G__261066;
continue;
} else {
var coll_261067 = cljs.core.first(seq__261047_261061__$1);
iters.push(cljs.core.iter(coll_261067));

var G__261068 = cljs.core.next(seq__261047_261061__$1);
var G__261069 = null;
var G__261070 = (0);
var G__261071 = (0);
seq__261047_261051 = G__261068;
chunk__261048_261052 = G__261069;
count__261049_261053 = G__261070;
i__261050_261054 = G__261071;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3981__auto__ = cljs.core.seq(coll);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__261072__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__261072 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__261073__i = 0, G__261073__a = new Array(arguments.length -  2);
while (G__261073__i < G__261073__a.length) {G__261073__a[G__261073__i] = arguments[G__261073__i + 2]; ++G__261073__i;}
  colls = new cljs.core.IndexedSeq(G__261073__a,0);
} 
return G__261072__delegate.call(this,xform,coll,colls);};
G__261072.cljs$lang$maxFixedArity = 2;
G__261072.cljs$lang$applyTo = (function (arglist__261074){
var xform = cljs.core.first(arglist__261074);
arglist__261074 = cljs.core.next(arglist__261074);
var coll = cljs.core.first(arglist__261074);
var colls = cljs.core.rest(arglist__261074);
return G__261072__delegate(xform,coll,colls);
});
G__261072.cljs$core$IFn$_invoke$arity$variadic = G__261072__delegate;
return G__261072;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__261075 = null;
if (arguments.length > 2) {
var G__261076__i = 0, G__261076__a = new Array(arguments.length -  2);
while (G__261076__i < G__261076__a.length) {G__261076__a[G__261076__i] = arguments[G__261076__i + 2]; ++G__261076__i;}
G__261075 = new cljs.core.IndexedSeq(G__261076__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__261075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__261078 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__261078) : pred.call(null,G__261078));
})())){
var G__261079 = pred;
var G__261080 = cljs.core.next(coll);
pred = G__261079;
coll = G__261080;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3981__auto__ = (function (){var G__261084 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__261084) : pred.call(null,G__261084));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__261085 = pred;
var G__261086 = cljs.core.next(coll);
pred = G__261085;
coll = G__261086;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__261093 = null;
var G__261093__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__261093__1 = (function (x){
return cljs.core.not((function (){var G__261090 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261090) : f.call(null,G__261090));
})());
});
var G__261093__2 = (function (x,y){
return cljs.core.not((function (){var G__261091 = x;
var G__261092 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261091,G__261092) : f.call(null,G__261091,G__261092));
})());
});
var G__261093__3 = (function() { 
var G__261094__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__261094 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__261095__i = 0, G__261095__a = new Array(arguments.length -  2);
while (G__261095__i < G__261095__a.length) {G__261095__a[G__261095__i] = arguments[G__261095__i + 2]; ++G__261095__i;}
  zs = new cljs.core.IndexedSeq(G__261095__a,0);
} 
return G__261094__delegate.call(this,x,y,zs);};
G__261094.cljs$lang$maxFixedArity = 2;
G__261094.cljs$lang$applyTo = (function (arglist__261096){
var x = cljs.core.first(arglist__261096);
arglist__261096 = cljs.core.next(arglist__261096);
var y = cljs.core.first(arglist__261096);
var zs = cljs.core.rest(arglist__261096);
return G__261094__delegate(x,y,zs);
});
G__261094.cljs$core$IFn$_invoke$arity$variadic = G__261094__delegate;
return G__261094;
})()
;
G__261093 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__261093__0.call(this);
case 1:
return G__261093__1.call(this,x);
case 2:
return G__261093__2.call(this,x,y);
default:
var G__261097 = null;
if (arguments.length > 2) {
var G__261098__i = 0, G__261098__a = new Array(arguments.length -  2);
while (G__261098__i < G__261098__a.length) {G__261098__a[G__261098__i] = arguments[G__261098__i + 2]; ++G__261098__i;}
G__261097 = new cljs.core.IndexedSeq(G__261098__a,0);
}
return G__261093__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__261097);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261093.cljs$lang$maxFixedArity = 2;
G__261093.cljs$lang$applyTo = G__261093__3.cljs$lang$applyTo;
G__261093.cljs$core$IFn$_invoke$arity$0 = G__261093__0;
G__261093.cljs$core$IFn$_invoke$arity$1 = G__261093__1;
G__261093.cljs$core$IFn$_invoke$arity$2 = G__261093__2;
G__261093.cljs$core$IFn$_invoke$arity$variadic = G__261093__3.cljs$core$IFn$_invoke$arity$variadic;
return G__261093;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__261099__delegate = function (args){
return x;
};
var G__261099 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__261100__i = 0, G__261100__a = new Array(arguments.length -  0);
while (G__261100__i < G__261100__a.length) {G__261100__a[G__261100__i] = arguments[G__261100__i + 0]; ++G__261100__i;}
  args = new cljs.core.IndexedSeq(G__261100__a,0);
} 
return G__261099__delegate.call(this,args);};
G__261099.cljs$lang$maxFixedArity = 0;
G__261099.cljs$lang$applyTo = (function (arglist__261101){
var args = cljs.core.seq(arglist__261101);
return G__261099__delegate(args);
});
G__261099.cljs$core$IFn$_invoke$arity$variadic = G__261099__delegate;
return G__261099;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__261156 = null;
var G__261156__0 = (function (){
var G__261129 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261129) : f.call(null,G__261129));
});
var G__261156__1 = (function (x){
var G__261130 = (function (){var G__261131 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261131) : g.call(null,G__261131));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261130) : f.call(null,G__261130));
});
var G__261156__2 = (function (x,y){
var G__261132 = (function (){var G__261133 = x;
var G__261134 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__261133,G__261134) : g.call(null,G__261133,G__261134));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261132) : f.call(null,G__261132));
});
var G__261156__3 = (function (x,y,z){
var G__261135 = (function (){var G__261136 = x;
var G__261137 = y;
var G__261138 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__261136,G__261137,G__261138) : g.call(null,G__261136,G__261137,G__261138));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261135) : f.call(null,G__261135));
});
var G__261156__4 = (function() { 
var G__261157__delegate = function (x,y,z,args){
var G__261139 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261139) : f.call(null,G__261139));
};
var G__261157 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261158__i = 0, G__261158__a = new Array(arguments.length -  3);
while (G__261158__i < G__261158__a.length) {G__261158__a[G__261158__i] = arguments[G__261158__i + 3]; ++G__261158__i;}
  args = new cljs.core.IndexedSeq(G__261158__a,0);
} 
return G__261157__delegate.call(this,x,y,z,args);};
G__261157.cljs$lang$maxFixedArity = 3;
G__261157.cljs$lang$applyTo = (function (arglist__261159){
var x = cljs.core.first(arglist__261159);
arglist__261159 = cljs.core.next(arglist__261159);
var y = cljs.core.first(arglist__261159);
arglist__261159 = cljs.core.next(arglist__261159);
var z = cljs.core.first(arglist__261159);
var args = cljs.core.rest(arglist__261159);
return G__261157__delegate(x,y,z,args);
});
G__261157.cljs$core$IFn$_invoke$arity$variadic = G__261157__delegate;
return G__261157;
})()
;
G__261156 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__261156__0.call(this);
case 1:
return G__261156__1.call(this,x);
case 2:
return G__261156__2.call(this,x,y);
case 3:
return G__261156__3.call(this,x,y,z);
default:
var G__261160 = null;
if (arguments.length > 3) {
var G__261161__i = 0, G__261161__a = new Array(arguments.length -  3);
while (G__261161__i < G__261161__a.length) {G__261161__a[G__261161__i] = arguments[G__261161__i + 3]; ++G__261161__i;}
G__261160 = new cljs.core.IndexedSeq(G__261161__a,0);
}
return G__261156__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261156.cljs$lang$maxFixedArity = 3;
G__261156.cljs$lang$applyTo = G__261156__4.cljs$lang$applyTo;
G__261156.cljs$core$IFn$_invoke$arity$0 = G__261156__0;
G__261156.cljs$core$IFn$_invoke$arity$1 = G__261156__1;
G__261156.cljs$core$IFn$_invoke$arity$2 = G__261156__2;
G__261156.cljs$core$IFn$_invoke$arity$3 = G__261156__3;
G__261156.cljs$core$IFn$_invoke$arity$variadic = G__261156__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261156;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__261162 = null;
var G__261162__0 = (function (){
var G__261140 = (function (){var G__261141 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261141) : g.call(null,G__261141));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261140) : f.call(null,G__261140));
});
var G__261162__1 = (function (x){
var G__261142 = (function (){var G__261143 = (function (){var G__261144 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__261144) : h.call(null,G__261144));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261143) : g.call(null,G__261143));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261142) : f.call(null,G__261142));
});
var G__261162__2 = (function (x,y){
var G__261145 = (function (){var G__261146 = (function (){var G__261147 = x;
var G__261148 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__261147,G__261148) : h.call(null,G__261147,G__261148));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261146) : g.call(null,G__261146));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261145) : f.call(null,G__261145));
});
var G__261162__3 = (function (x,y,z){
var G__261149 = (function (){var G__261150 = (function (){var G__261151 = x;
var G__261152 = y;
var G__261153 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__261151,G__261152,G__261153) : h.call(null,G__261151,G__261152,G__261153));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261150) : g.call(null,G__261150));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261149) : f.call(null,G__261149));
});
var G__261162__4 = (function() { 
var G__261163__delegate = function (x,y,z,args){
var G__261154 = (function (){var G__261155 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__261155) : g.call(null,G__261155));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261154) : f.call(null,G__261154));
};
var G__261163 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261164__i = 0, G__261164__a = new Array(arguments.length -  3);
while (G__261164__i < G__261164__a.length) {G__261164__a[G__261164__i] = arguments[G__261164__i + 3]; ++G__261164__i;}
  args = new cljs.core.IndexedSeq(G__261164__a,0);
} 
return G__261163__delegate.call(this,x,y,z,args);};
G__261163.cljs$lang$maxFixedArity = 3;
G__261163.cljs$lang$applyTo = (function (arglist__261165){
var x = cljs.core.first(arglist__261165);
arglist__261165 = cljs.core.next(arglist__261165);
var y = cljs.core.first(arglist__261165);
arglist__261165 = cljs.core.next(arglist__261165);
var z = cljs.core.first(arglist__261165);
var args = cljs.core.rest(arglist__261165);
return G__261163__delegate(x,y,z,args);
});
G__261163.cljs$core$IFn$_invoke$arity$variadic = G__261163__delegate;
return G__261163;
})()
;
G__261162 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__261162__0.call(this);
case 1:
return G__261162__1.call(this,x);
case 2:
return G__261162__2.call(this,x,y);
case 3:
return G__261162__3.call(this,x,y,z);
default:
var G__261166 = null;
if (arguments.length > 3) {
var G__261167__i = 0, G__261167__a = new Array(arguments.length -  3);
while (G__261167__i < G__261167__a.length) {G__261167__a[G__261167__i] = arguments[G__261167__i + 3]; ++G__261167__i;}
G__261166 = new cljs.core.IndexedSeq(G__261167__a,0);
}
return G__261162__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261162.cljs$lang$maxFixedArity = 3;
G__261162.cljs$lang$applyTo = G__261162__4.cljs$lang$applyTo;
G__261162.cljs$core$IFn$_invoke$arity$0 = G__261162__0;
G__261162.cljs$core$IFn$_invoke$arity$1 = G__261162__1;
G__261162.cljs$core$IFn$_invoke$arity$2 = G__261162__2;
G__261162.cljs$core$IFn$_invoke$arity$3 = G__261162__3;
G__261162.cljs$core$IFn$_invoke$arity$variadic = G__261162__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261162;
})()
});
var comp__4 = (function() { 
var G__261168__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__261169__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__261170 = cljs.core.first(fs__$2).call(null,ret);
var G__261171 = cljs.core.next(fs__$2);
ret = G__261170;
fs__$2 = G__261171;
continue;
} else {
return ret;
}
break;
}
};
var G__261169 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__261172__i = 0, G__261172__a = new Array(arguments.length -  0);
while (G__261172__i < G__261172__a.length) {G__261172__a[G__261172__i] = arguments[G__261172__i + 0]; ++G__261172__i;}
  args = new cljs.core.IndexedSeq(G__261172__a,0);
} 
return G__261169__delegate.call(this,args);};
G__261169.cljs$lang$maxFixedArity = 0;
G__261169.cljs$lang$applyTo = (function (arglist__261173){
var args = cljs.core.seq(arglist__261173);
return G__261169__delegate(args);
});
G__261169.cljs$core$IFn$_invoke$arity$variadic = G__261169__delegate;
return G__261169;
})()
;
;})(fs__$1))
};
var G__261168 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__261174__i = 0, G__261174__a = new Array(arguments.length -  3);
while (G__261174__i < G__261174__a.length) {G__261174__a[G__261174__i] = arguments[G__261174__i + 3]; ++G__261174__i;}
  fs = new cljs.core.IndexedSeq(G__261174__a,0);
} 
return G__261168__delegate.call(this,f1,f2,f3,fs);};
G__261168.cljs$lang$maxFixedArity = 3;
G__261168.cljs$lang$applyTo = (function (arglist__261175){
var f1 = cljs.core.first(arglist__261175);
arglist__261175 = cljs.core.next(arglist__261175);
var f2 = cljs.core.first(arglist__261175);
arglist__261175 = cljs.core.next(arglist__261175);
var f3 = cljs.core.first(arglist__261175);
var fs = cljs.core.rest(arglist__261175);
return G__261168__delegate(f1,f2,f3,fs);
});
G__261168.cljs$core$IFn$_invoke$arity$variadic = G__261168__delegate;
return G__261168;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__261176 = null;
if (arguments.length > 3) {
var G__261177__i = 0, G__261177__a = new Array(arguments.length -  3);
while (G__261177__i < G__261177__a.length) {G__261177__a[G__261177__i] = arguments[G__261177__i + 3]; ++G__261177__i;}
G__261176 = new cljs.core.IndexedSeq(G__261177__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__261176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__261262 = null;
var G__261262__0 = (function (){
var G__261220 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261220) : f.call(null,G__261220));
});
var G__261262__1 = (function (x){
var G__261221 = arg1;
var G__261222 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261221,G__261222) : f.call(null,G__261221,G__261222));
});
var G__261262__2 = (function (x,y){
var G__261223 = arg1;
var G__261224 = x;
var G__261225 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261223,G__261224,G__261225) : f.call(null,G__261223,G__261224,G__261225));
});
var G__261262__3 = (function (x,y,z){
var G__261226 = arg1;
var G__261227 = x;
var G__261228 = y;
var G__261229 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261226,G__261227,G__261228,G__261229) : f.call(null,G__261226,G__261227,G__261228,G__261229));
});
var G__261262__4 = (function() { 
var G__261263__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__261263 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261264__i = 0, G__261264__a = new Array(arguments.length -  3);
while (G__261264__i < G__261264__a.length) {G__261264__a[G__261264__i] = arguments[G__261264__i + 3]; ++G__261264__i;}
  args = new cljs.core.IndexedSeq(G__261264__a,0);
} 
return G__261263__delegate.call(this,x,y,z,args);};
G__261263.cljs$lang$maxFixedArity = 3;
G__261263.cljs$lang$applyTo = (function (arglist__261265){
var x = cljs.core.first(arglist__261265);
arglist__261265 = cljs.core.next(arglist__261265);
var y = cljs.core.first(arglist__261265);
arglist__261265 = cljs.core.next(arglist__261265);
var z = cljs.core.first(arglist__261265);
var args = cljs.core.rest(arglist__261265);
return G__261263__delegate(x,y,z,args);
});
G__261263.cljs$core$IFn$_invoke$arity$variadic = G__261263__delegate;
return G__261263;
})()
;
G__261262 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__261262__0.call(this);
case 1:
return G__261262__1.call(this,x);
case 2:
return G__261262__2.call(this,x,y);
case 3:
return G__261262__3.call(this,x,y,z);
default:
var G__261266 = null;
if (arguments.length > 3) {
var G__261267__i = 0, G__261267__a = new Array(arguments.length -  3);
while (G__261267__i < G__261267__a.length) {G__261267__a[G__261267__i] = arguments[G__261267__i + 3]; ++G__261267__i;}
G__261266 = new cljs.core.IndexedSeq(G__261267__a,0);
}
return G__261262__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261262.cljs$lang$maxFixedArity = 3;
G__261262.cljs$lang$applyTo = G__261262__4.cljs$lang$applyTo;
G__261262.cljs$core$IFn$_invoke$arity$0 = G__261262__0;
G__261262.cljs$core$IFn$_invoke$arity$1 = G__261262__1;
G__261262.cljs$core$IFn$_invoke$arity$2 = G__261262__2;
G__261262.cljs$core$IFn$_invoke$arity$3 = G__261262__3;
G__261262.cljs$core$IFn$_invoke$arity$variadic = G__261262__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261262;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__261268 = null;
var G__261268__0 = (function (){
var G__261230 = arg1;
var G__261231 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261230,G__261231) : f.call(null,G__261230,G__261231));
});
var G__261268__1 = (function (x){
var G__261232 = arg1;
var G__261233 = arg2;
var G__261234 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261232,G__261233,G__261234) : f.call(null,G__261232,G__261233,G__261234));
});
var G__261268__2 = (function (x,y){
var G__261235 = arg1;
var G__261236 = arg2;
var G__261237 = x;
var G__261238 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261235,G__261236,G__261237,G__261238) : f.call(null,G__261235,G__261236,G__261237,G__261238));
});
var G__261268__3 = (function (x,y,z){
var G__261239 = arg1;
var G__261240 = arg2;
var G__261241 = x;
var G__261242 = y;
var G__261243 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__261239,G__261240,G__261241,G__261242,G__261243) : f.call(null,G__261239,G__261240,G__261241,G__261242,G__261243));
});
var G__261268__4 = (function() { 
var G__261269__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__261269 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261270__i = 0, G__261270__a = new Array(arguments.length -  3);
while (G__261270__i < G__261270__a.length) {G__261270__a[G__261270__i] = arguments[G__261270__i + 3]; ++G__261270__i;}
  args = new cljs.core.IndexedSeq(G__261270__a,0);
} 
return G__261269__delegate.call(this,x,y,z,args);};
G__261269.cljs$lang$maxFixedArity = 3;
G__261269.cljs$lang$applyTo = (function (arglist__261271){
var x = cljs.core.first(arglist__261271);
arglist__261271 = cljs.core.next(arglist__261271);
var y = cljs.core.first(arglist__261271);
arglist__261271 = cljs.core.next(arglist__261271);
var z = cljs.core.first(arglist__261271);
var args = cljs.core.rest(arglist__261271);
return G__261269__delegate(x,y,z,args);
});
G__261269.cljs$core$IFn$_invoke$arity$variadic = G__261269__delegate;
return G__261269;
})()
;
G__261268 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__261268__0.call(this);
case 1:
return G__261268__1.call(this,x);
case 2:
return G__261268__2.call(this,x,y);
case 3:
return G__261268__3.call(this,x,y,z);
default:
var G__261272 = null;
if (arguments.length > 3) {
var G__261273__i = 0, G__261273__a = new Array(arguments.length -  3);
while (G__261273__i < G__261273__a.length) {G__261273__a[G__261273__i] = arguments[G__261273__i + 3]; ++G__261273__i;}
G__261272 = new cljs.core.IndexedSeq(G__261273__a,0);
}
return G__261268__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261268.cljs$lang$maxFixedArity = 3;
G__261268.cljs$lang$applyTo = G__261268__4.cljs$lang$applyTo;
G__261268.cljs$core$IFn$_invoke$arity$0 = G__261268__0;
G__261268.cljs$core$IFn$_invoke$arity$1 = G__261268__1;
G__261268.cljs$core$IFn$_invoke$arity$2 = G__261268__2;
G__261268.cljs$core$IFn$_invoke$arity$3 = G__261268__3;
G__261268.cljs$core$IFn$_invoke$arity$variadic = G__261268__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261268;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__261274 = null;
var G__261274__0 = (function (){
var G__261244 = arg1;
var G__261245 = arg2;
var G__261246 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261244,G__261245,G__261246) : f.call(null,G__261244,G__261245,G__261246));
});
var G__261274__1 = (function (x){
var G__261247 = arg1;
var G__261248 = arg2;
var G__261249 = arg3;
var G__261250 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261247,G__261248,G__261249,G__261250) : f.call(null,G__261247,G__261248,G__261249,G__261250));
});
var G__261274__2 = (function (x,y){
var G__261251 = arg1;
var G__261252 = arg2;
var G__261253 = arg3;
var G__261254 = x;
var G__261255 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__261251,G__261252,G__261253,G__261254,G__261255) : f.call(null,G__261251,G__261252,G__261253,G__261254,G__261255));
});
var G__261274__3 = (function (x,y,z){
var G__261256 = arg1;
var G__261257 = arg2;
var G__261258 = arg3;
var G__261259 = x;
var G__261260 = y;
var G__261261 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__261256,G__261257,G__261258,G__261259,G__261260,G__261261) : f.call(null,G__261256,G__261257,G__261258,G__261259,G__261260,G__261261));
});
var G__261274__4 = (function() { 
var G__261275__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__261275 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261276__i = 0, G__261276__a = new Array(arguments.length -  3);
while (G__261276__i < G__261276__a.length) {G__261276__a[G__261276__i] = arguments[G__261276__i + 3]; ++G__261276__i;}
  args = new cljs.core.IndexedSeq(G__261276__a,0);
} 
return G__261275__delegate.call(this,x,y,z,args);};
G__261275.cljs$lang$maxFixedArity = 3;
G__261275.cljs$lang$applyTo = (function (arglist__261277){
var x = cljs.core.first(arglist__261277);
arglist__261277 = cljs.core.next(arglist__261277);
var y = cljs.core.first(arglist__261277);
arglist__261277 = cljs.core.next(arglist__261277);
var z = cljs.core.first(arglist__261277);
var args = cljs.core.rest(arglist__261277);
return G__261275__delegate(x,y,z,args);
});
G__261275.cljs$core$IFn$_invoke$arity$variadic = G__261275__delegate;
return G__261275;
})()
;
G__261274 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__261274__0.call(this);
case 1:
return G__261274__1.call(this,x);
case 2:
return G__261274__2.call(this,x,y);
case 3:
return G__261274__3.call(this,x,y,z);
default:
var G__261278 = null;
if (arguments.length > 3) {
var G__261279__i = 0, G__261279__a = new Array(arguments.length -  3);
while (G__261279__i < G__261279__a.length) {G__261279__a[G__261279__i] = arguments[G__261279__i + 3]; ++G__261279__i;}
G__261278 = new cljs.core.IndexedSeq(G__261279__a,0);
}
return G__261274__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261274.cljs$lang$maxFixedArity = 3;
G__261274.cljs$lang$applyTo = G__261274__4.cljs$lang$applyTo;
G__261274.cljs$core$IFn$_invoke$arity$0 = G__261274__0;
G__261274.cljs$core$IFn$_invoke$arity$1 = G__261274__1;
G__261274.cljs$core$IFn$_invoke$arity$2 = G__261274__2;
G__261274.cljs$core$IFn$_invoke$arity$3 = G__261274__3;
G__261274.cljs$core$IFn$_invoke$arity$variadic = G__261274__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261274;
})()
});
var partial__5 = (function() { 
var G__261280__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__261281__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__261281 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__261282__i = 0, G__261282__a = new Array(arguments.length -  0);
while (G__261282__i < G__261282__a.length) {G__261282__a[G__261282__i] = arguments[G__261282__i + 0]; ++G__261282__i;}
  args = new cljs.core.IndexedSeq(G__261282__a,0);
} 
return G__261281__delegate.call(this,args);};
G__261281.cljs$lang$maxFixedArity = 0;
G__261281.cljs$lang$applyTo = (function (arglist__261283){
var args = cljs.core.seq(arglist__261283);
return G__261281__delegate(args);
});
G__261281.cljs$core$IFn$_invoke$arity$variadic = G__261281__delegate;
return G__261281;
})()
;
};
var G__261280 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__261284__i = 0, G__261284__a = new Array(arguments.length -  4);
while (G__261284__i < G__261284__a.length) {G__261284__a[G__261284__i] = arguments[G__261284__i + 4]; ++G__261284__i;}
  more = new cljs.core.IndexedSeq(G__261284__a,0);
} 
return G__261280__delegate.call(this,f,arg1,arg2,arg3,more);};
G__261280.cljs$lang$maxFixedArity = 4;
G__261280.cljs$lang$applyTo = (function (arglist__261285){
var f = cljs.core.first(arglist__261285);
arglist__261285 = cljs.core.next(arglist__261285);
var arg1 = cljs.core.first(arglist__261285);
arglist__261285 = cljs.core.next(arglist__261285);
var arg2 = cljs.core.first(arglist__261285);
arglist__261285 = cljs.core.next(arglist__261285);
var arg3 = cljs.core.first(arglist__261285);
var more = cljs.core.rest(arglist__261285);
return G__261280__delegate(f,arg1,arg2,arg3,more);
});
G__261280.cljs$core$IFn$_invoke$arity$variadic = G__261280__delegate;
return G__261280;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__261286 = null;
if (arguments.length > 4) {
var G__261287__i = 0, G__261287__a = new Array(arguments.length -  4);
while (G__261287__i < G__261287__a.length) {G__261287__a[G__261287__i] = arguments[G__261287__i + 4]; ++G__261287__i;}
G__261286 = new cljs.core.IndexedSeq(G__261287__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__261286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__261320 = null;
var G__261320__1 = (function (a){
var G__261304 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261304) : f.call(null,G__261304));
});
var G__261320__2 = (function (a,b){
var G__261305 = (((a == null))?x:a);
var G__261306 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261305,G__261306) : f.call(null,G__261305,G__261306));
});
var G__261320__3 = (function (a,b,c){
var G__261307 = (((a == null))?x:a);
var G__261308 = b;
var G__261309 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261307,G__261308,G__261309) : f.call(null,G__261307,G__261308,G__261309));
});
var G__261320__4 = (function() { 
var G__261321__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__261321 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__261322__i = 0, G__261322__a = new Array(arguments.length -  3);
while (G__261322__i < G__261322__a.length) {G__261322__a[G__261322__i] = arguments[G__261322__i + 3]; ++G__261322__i;}
  ds = new cljs.core.IndexedSeq(G__261322__a,0);
} 
return G__261321__delegate.call(this,a,b,c,ds);};
G__261321.cljs$lang$maxFixedArity = 3;
G__261321.cljs$lang$applyTo = (function (arglist__261323){
var a = cljs.core.first(arglist__261323);
arglist__261323 = cljs.core.next(arglist__261323);
var b = cljs.core.first(arglist__261323);
arglist__261323 = cljs.core.next(arglist__261323);
var c = cljs.core.first(arglist__261323);
var ds = cljs.core.rest(arglist__261323);
return G__261321__delegate(a,b,c,ds);
});
G__261321.cljs$core$IFn$_invoke$arity$variadic = G__261321__delegate;
return G__261321;
})()
;
G__261320 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__261320__1.call(this,a);
case 2:
return G__261320__2.call(this,a,b);
case 3:
return G__261320__3.call(this,a,b,c);
default:
var G__261324 = null;
if (arguments.length > 3) {
var G__261325__i = 0, G__261325__a = new Array(arguments.length -  3);
while (G__261325__i < G__261325__a.length) {G__261325__a[G__261325__i] = arguments[G__261325__i + 3]; ++G__261325__i;}
G__261324 = new cljs.core.IndexedSeq(G__261325__a,0);
}
return G__261320__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__261324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261320.cljs$lang$maxFixedArity = 3;
G__261320.cljs$lang$applyTo = G__261320__4.cljs$lang$applyTo;
G__261320.cljs$core$IFn$_invoke$arity$1 = G__261320__1;
G__261320.cljs$core$IFn$_invoke$arity$2 = G__261320__2;
G__261320.cljs$core$IFn$_invoke$arity$3 = G__261320__3;
G__261320.cljs$core$IFn$_invoke$arity$variadic = G__261320__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261320;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__261326 = null;
var G__261326__2 = (function (a,b){
var G__261310 = (((a == null))?x:a);
var G__261311 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261310,G__261311) : f.call(null,G__261310,G__261311));
});
var G__261326__3 = (function (a,b,c){
var G__261312 = (((a == null))?x:a);
var G__261313 = (((b == null))?y:b);
var G__261314 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261312,G__261313,G__261314) : f.call(null,G__261312,G__261313,G__261314));
});
var G__261326__4 = (function() { 
var G__261327__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__261327 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__261328__i = 0, G__261328__a = new Array(arguments.length -  3);
while (G__261328__i < G__261328__a.length) {G__261328__a[G__261328__i] = arguments[G__261328__i + 3]; ++G__261328__i;}
  ds = new cljs.core.IndexedSeq(G__261328__a,0);
} 
return G__261327__delegate.call(this,a,b,c,ds);};
G__261327.cljs$lang$maxFixedArity = 3;
G__261327.cljs$lang$applyTo = (function (arglist__261329){
var a = cljs.core.first(arglist__261329);
arglist__261329 = cljs.core.next(arglist__261329);
var b = cljs.core.first(arglist__261329);
arglist__261329 = cljs.core.next(arglist__261329);
var c = cljs.core.first(arglist__261329);
var ds = cljs.core.rest(arglist__261329);
return G__261327__delegate(a,b,c,ds);
});
G__261327.cljs$core$IFn$_invoke$arity$variadic = G__261327__delegate;
return G__261327;
})()
;
G__261326 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__261326__2.call(this,a,b);
case 3:
return G__261326__3.call(this,a,b,c);
default:
var G__261330 = null;
if (arguments.length > 3) {
var G__261331__i = 0, G__261331__a = new Array(arguments.length -  3);
while (G__261331__i < G__261331__a.length) {G__261331__a[G__261331__i] = arguments[G__261331__i + 3]; ++G__261331__i;}
G__261330 = new cljs.core.IndexedSeq(G__261331__a,0);
}
return G__261326__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__261330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261326.cljs$lang$maxFixedArity = 3;
G__261326.cljs$lang$applyTo = G__261326__4.cljs$lang$applyTo;
G__261326.cljs$core$IFn$_invoke$arity$2 = G__261326__2;
G__261326.cljs$core$IFn$_invoke$arity$3 = G__261326__3;
G__261326.cljs$core$IFn$_invoke$arity$variadic = G__261326__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261326;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__261332 = null;
var G__261332__2 = (function (a,b){
var G__261315 = (((a == null))?x:a);
var G__261316 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261315,G__261316) : f.call(null,G__261315,G__261316));
});
var G__261332__3 = (function (a,b,c){
var G__261317 = (((a == null))?x:a);
var G__261318 = (((b == null))?y:b);
var G__261319 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261317,G__261318,G__261319) : f.call(null,G__261317,G__261318,G__261319));
});
var G__261332__4 = (function() { 
var G__261333__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__261333 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__261334__i = 0, G__261334__a = new Array(arguments.length -  3);
while (G__261334__i < G__261334__a.length) {G__261334__a[G__261334__i] = arguments[G__261334__i + 3]; ++G__261334__i;}
  ds = new cljs.core.IndexedSeq(G__261334__a,0);
} 
return G__261333__delegate.call(this,a,b,c,ds);};
G__261333.cljs$lang$maxFixedArity = 3;
G__261333.cljs$lang$applyTo = (function (arglist__261335){
var a = cljs.core.first(arglist__261335);
arglist__261335 = cljs.core.next(arglist__261335);
var b = cljs.core.first(arglist__261335);
arglist__261335 = cljs.core.next(arglist__261335);
var c = cljs.core.first(arglist__261335);
var ds = cljs.core.rest(arglist__261335);
return G__261333__delegate(a,b,c,ds);
});
G__261333.cljs$core$IFn$_invoke$arity$variadic = G__261333__delegate;
return G__261333;
})()
;
G__261332 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__261332__2.call(this,a,b);
case 3:
return G__261332__3.call(this,a,b,c);
default:
var G__261336 = null;
if (arguments.length > 3) {
var G__261337__i = 0, G__261337__a = new Array(arguments.length -  3);
while (G__261337__i < G__261337__a.length) {G__261337__a[G__261337__i] = arguments[G__261337__i + 3]; ++G__261337__i;}
G__261336 = new cljs.core.IndexedSeq(G__261337__a,0);
}
return G__261332__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__261336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261332.cljs$lang$maxFixedArity = 3;
G__261332.cljs$lang$applyTo = G__261332__4.cljs$lang$applyTo;
G__261332.cljs$core$IFn$_invoke$arity$2 = G__261332__2;
G__261332.cljs$core$IFn$_invoke$arity$3 = G__261332__3;
G__261332.cljs$core$IFn$_invoke$arity$variadic = G__261332__4.cljs$core$IFn$_invoke$arity$variadic;
return G__261332;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__261368 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__261368) : cljs.core.volatile_BANG_.call(null,G__261368));
})();
return ((function (i){
return (function() {
var G__261398 = null;
var G__261398__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__261398__1 = (function (result){
var G__261369 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__261369) : rf.call(null,G__261369));
});
var G__261398__2 = (function (result,input){
var G__261370 = result;
var G__261371 = (function (){var G__261372 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__261373 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261372,G__261373) : f.call(null,G__261372,G__261373));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__261370,G__261371) : rf.call(null,G__261370,G__261371));
});
G__261398 = function(result,input){
switch(arguments.length){
case 0:
return G__261398__0.call(this);
case 1:
return G__261398__1.call(this,result);
case 2:
return G__261398__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261398.cljs$core$IFn$_invoke$arity$0 = G__261398__0;
G__261398.cljs$core$IFn$_invoke$arity$1 = G__261398__1;
G__261398.cljs$core$IFn$_invoke$arity$2 = G__261398__2;
return G__261398;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___261399 = size;
var i_261400 = (0);
while(true){
if((i_261400 < n__4868__auto___261399)){
cljs.core.chunk_append(b,(function (){var G__261394 = (idx + i_261400);
var G__261395 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_261400);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261394,G__261395) : f.call(null,G__261394,G__261395));
})());

var G__261401 = (i_261400 + (1));
i_261400 = G__261401;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__261396 = idx;
var G__261397 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261396,G__261397) : f.call(null,G__261396,G__261397));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__261420 = null;
var G__261420__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__261420__1 = (function (result){
var G__261414 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__261414) : rf.call(null,G__261414));
});
var G__261420__2 = (function (result,input){
var v = (function (){var G__261415 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261415) : f.call(null,G__261415));
})();
if((v == null)){
return result;
} else {
var G__261416 = result;
var G__261417 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__261416,G__261417) : rf.call(null,G__261416,G__261417));
}
});
G__261420 = function(result,input){
switch(arguments.length){
case 0:
return G__261420__0.call(this);
case 1:
return G__261420__1.call(this,result);
case 2:
return G__261420__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261420.cljs$core$IFn$_invoke$arity$0 = G__261420__0;
G__261420.cljs$core$IFn$_invoke$arity$1 = G__261420__1;
G__261420.cljs$core$IFn$_invoke$arity$2 = G__261420__2;
return G__261420;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___261421 = size;
var i_261422 = (0);
while(true){
if((i_261422 < n__4868__auto___261421)){
var x_261423 = (function (){var G__261418 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_261422);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261418) : f.call(null,G__261418));
})();
if((x_261423 == null)){
} else {
cljs.core.chunk_append(b,x_261423);
}

var G__261424 = (i_261422 + (1));
i_261422 = G__261424;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__261419 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261419) : f.call(null,G__261419));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__261425 = this$__$1;
return goog.getUid(G__261425);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__261426 = cljs.core.seq(self__.watches);
var chunk__261427 = null;
var count__261428 = (0);
var i__261429 = (0);
while(true){
if((i__261429 < count__261428)){
var vec__261430 = chunk__261427.cljs$core$IIndexed$_nth$arity$2(null,i__261429);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__261430,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__261430,(1),null);
var G__261431_261440 = key;
var G__261432_261441 = this$__$1;
var G__261433_261442 = oldval;
var G__261434_261443 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261431_261440,G__261432_261441,G__261433_261442,G__261434_261443) : f.call(null,G__261431_261440,G__261432_261441,G__261433_261442,G__261434_261443));

var G__261444 = seq__261426;
var G__261445 = chunk__261427;
var G__261446 = count__261428;
var G__261447 = (i__261429 + (1));
seq__261426 = G__261444;
chunk__261427 = G__261445;
count__261428 = G__261446;
i__261429 = G__261447;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__261426);
if(temp__4126__auto__){
var seq__261426__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__261426__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__261426__$1);
var G__261448 = cljs.core.chunk_rest(seq__261426__$1);
var G__261449 = c__4768__auto__;
var G__261450 = cljs.core.count(c__4768__auto__);
var G__261451 = (0);
seq__261426 = G__261448;
chunk__261427 = G__261449;
count__261428 = G__261450;
i__261429 = G__261451;
continue;
} else {
var vec__261435 = cljs.core.first(seq__261426__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__261435,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__261435,(1),null);
var G__261436_261452 = key;
var G__261437_261453 = this$__$1;
var G__261438_261454 = oldval;
var G__261439_261455 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__261436_261452,G__261437_261453,G__261438_261454,G__261439_261455) : f.call(null,G__261436_261452,G__261437_261453,G__261438_261454,G__261439_261455));

var G__261456 = cljs.core.next(seq__261426__$1);
var G__261457 = null;
var G__261458 = (0);
var G__261459 = (0);
seq__261426 = G__261456;
chunk__261427 = G__261457;
count__261428 = G__261458;
i__261429 = G__261459;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__261463__delegate = function (x,p__261460){
var map__261462 = p__261460;
var map__261462__$1 = ((cljs.core.seq_QMARK_(map__261462))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__261462):map__261462);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__261462__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__261462__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__261463 = function (x,var_args){
var p__261460 = null;
if (arguments.length > 1) {
var G__261464__i = 0, G__261464__a = new Array(arguments.length -  1);
while (G__261464__i < G__261464__a.length) {G__261464__a[G__261464__i] = arguments[G__261464__i + 1]; ++G__261464__i;}
  p__261460 = new cljs.core.IndexedSeq(G__261464__a,0);
} 
return G__261463__delegate.call(this,x,p__261460);};
G__261463.cljs$lang$maxFixedArity = 1;
G__261463.cljs$lang$applyTo = (function (arglist__261465){
var x = cljs.core.first(arglist__261465);
var p__261460 = cljs.core.rest(arglist__261465);
return G__261463__delegate(x,p__261460);
});
G__261463.cljs$core$IFn$_invoke$arity$variadic = G__261463__delegate;
return G__261463;
})()
;
atom = function(x,var_args){
var p__261460 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__261466 = null;
if (arguments.length > 1) {
var G__261467__i = 0, G__261467__a = new Array(arguments.length -  1);
while (G__261467__i < G__261467__a.length) {G__261467__a[G__261467__i] = arguments[G__261467__i + 1]; ++G__261467__i;}
G__261466 = new cljs.core.IndexedSeq(G__261467__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__261466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__261470 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__261470) : validate.call(null,G__261470));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__261471 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__261471) : cljs.core.pr_str.call(null,G__261471));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__261478 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__261478) : f.call(null,G__261478));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__261479 = a.state;
var G__261480 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261479,G__261480) : f.call(null,G__261479,G__261480));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__261481 = a.state;
var G__261482 = x;
var G__261483 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__261481,G__261482,G__261483) : f.call(null,G__261481,G__261482,G__261483));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__261484__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__261484 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__261485__i = 0, G__261485__a = new Array(arguments.length -  4);
while (G__261485__i < G__261485__a.length) {G__261485__a[G__261485__i] = arguments[G__261485__i + 4]; ++G__261485__i;}
  more = new cljs.core.IndexedSeq(G__261485__a,0);
} 
return G__261484__delegate.call(this,a,f,x,y,more);};
G__261484.cljs$lang$maxFixedArity = 4;
G__261484.cljs$lang$applyTo = (function (arglist__261486){
var a = cljs.core.first(arglist__261486);
arglist__261486 = cljs.core.next(arglist__261486);
var f = cljs.core.first(arglist__261486);
arglist__261486 = cljs.core.next(arglist__261486);
var x = cljs.core.first(arglist__261486);
arglist__261486 = cljs.core.next(arglist__261486);
var y = cljs.core.first(arglist__261486);
var more = cljs.core.rest(arglist__261486);
return G__261484__delegate(a,f,x,y,more);
});
G__261484.cljs$core$IFn$_invoke$arity$variadic = G__261484__delegate;
return G__261484;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__261487 = null;
if (arguments.length > 4) {
var G__261488__i = 0, G__261488__a = new Array(arguments.length -  4);
while (G__261488__i < G__261488__a.length) {G__261488__a[G__261488__i] = arguments[G__261488__i + 4]; ++G__261488__i;}
G__261487 = new cljs.core.IndexedSeq(G__261488__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__261487);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__261555 = null;
var G__261555__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__261555__1 = (function (result){
var G__261522 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__261522) : rf.call(null,G__261522));
});
var G__261555__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__261523 = i;
var G__261524 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261523,G__261524) : f.call(null,G__261523,G__261524));
})();
if((v == null)){
return result;
} else {
var G__261525 = result;
var G__261526 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__261525,G__261526) : rf.call(null,G__261525,G__261526));
}
});
G__261555 = function(result,input){
switch(arguments.length){
case 0:
return G__261555__0.call(this);
case 1:
return G__261555__1.call(this,result);
case 2:
return G__261555__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__261555.cljs$core$IFn$_invoke$arity$0 = G__261555__0;
G__261555.cljs$core$IFn$_invoke$arity$1 = G__261555__1;
G__261555.cljs$core$IFn$_invoke$arity$2 = G__261555__2;
return G__261555;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___261556 = size;
var i_261557 = (0);
while(true){
if((i_261557 < n__4868__auto___261556)){
var x_261558 = (function (){var G__261551 = (idx + i_261557);
var G__261552 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_261557);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261551,G__261552) : f.call(null,G__261551,G__261552));
})();
if((x_261558 == null)){
} else {
cljs.core.chunk_append(b,x_261558);
}

var G__261559 = (i_261557 + (1));
i_261557 = G__261559;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__261553 = idx;
var G__261554 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__261553,G__261554) : f.call(null,G__261553,G__261554));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__261773 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261773) : p.call(null,G__261773));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261775 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261775) : p.call(null,G__261775));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__261776 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261776) : p.call(null,G__261776));
} else {
return and__3969__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261778 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261778) : p.call(null,G__261778));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261780 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261780) : p.call(null,G__261780));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__261781 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__261781) : p.call(null,G__261781));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__261950__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__261950 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261951__i = 0, G__261951__a = new Array(arguments.length -  3);
while (G__261951__i < G__261951__a.length) {G__261951__a[G__261951__i] = arguments[G__261951__i + 3]; ++G__261951__i;}
  args = new cljs.core.IndexedSeq(G__261951__a,0);
} 
return G__261950__delegate.call(this,x,y,z,args);};
G__261950.cljs$lang$maxFixedArity = 3;
G__261950.cljs$lang$applyTo = (function (arglist__261952){
var x = cljs.core.first(arglist__261952);
arglist__261952 = cljs.core.next(arglist__261952);
var y = cljs.core.first(arglist__261952);
arglist__261952 = cljs.core.next(arglist__261952);
var z = cljs.core.first(arglist__261952);
var args = cljs.core.rest(arglist__261952);
return G__261950__delegate(x,y,z,args);
});
G__261950.cljs$core$IFn$_invoke$arity$variadic = G__261950__delegate;
return G__261950;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__261953 = null;
if (arguments.length > 3) {
var G__261954__i = 0, G__261954__a = new Array(arguments.length -  3);
while (G__261954__i < G__261954__a.length) {G__261954__a[G__261954__i] = arguments[G__261954__i + 3]; ++G__261954__i;}
G__261953 = new cljs.core.IndexedSeq(G__261954__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261813 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261813) : p1.call(null,G__261813));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__261814 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261814) : p2.call(null,G__261814));
} else {
return and__3969__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261816 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261816) : p1.call(null,G__261816));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261818 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261818) : p1.call(null,G__261818));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__261820 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261820) : p2.call(null,G__261820));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var G__261821 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261821) : p2.call(null,G__261821));
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261823 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261823) : p1.call(null,G__261823));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261825 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261825) : p1.call(null,G__261825));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__261827 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261827) : p1.call(null,G__261827));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__261829 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261829) : p2.call(null,G__261829));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__261831 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261831) : p2.call(null,G__261831));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__261832 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261832) : p2.call(null,G__261832));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__261955__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__261560_SHARP_){
var and__3969__auto__ = (function (){var G__261837 = p1__261560_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261837) : p1.call(null,G__261837));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__261838 = p1__261560_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261838) : p2.call(null,G__261838));
} else {
return and__3969__auto__;
}
}),args)));
};
var G__261955 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261956__i = 0, G__261956__a = new Array(arguments.length -  3);
while (G__261956__i < G__261956__a.length) {G__261956__a[G__261956__i] = arguments[G__261956__i + 3]; ++G__261956__i;}
  args = new cljs.core.IndexedSeq(G__261956__a,0);
} 
return G__261955__delegate.call(this,x,y,z,args);};
G__261955.cljs$lang$maxFixedArity = 3;
G__261955.cljs$lang$applyTo = (function (arglist__261957){
var x = cljs.core.first(arglist__261957);
arglist__261957 = cljs.core.next(arglist__261957);
var y = cljs.core.first(arglist__261957);
arglist__261957 = cljs.core.next(arglist__261957);
var z = cljs.core.first(arglist__261957);
var args = cljs.core.rest(arglist__261957);
return G__261955__delegate(x,y,z,args);
});
G__261955.cljs$core$IFn$_invoke$arity$variadic = G__261955__delegate;
return G__261955;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__261958 = null;
if (arguments.length > 3) {
var G__261959__i = 0, G__261959__a = new Array(arguments.length -  3);
while (G__261959__i < G__261959__a.length) {G__261959__a[G__261959__i] = arguments[G__261959__i + 3]; ++G__261959__i;}
G__261958 = new cljs.core.IndexedSeq(G__261959__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261884 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261884) : p1.call(null,G__261884));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261886 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261886) : p2.call(null,G__261886));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__261887 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261887) : p3.call(null,G__261887));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261889 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261889) : p1.call(null,G__261889));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261891 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261891) : p2.call(null,G__261891));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__261893 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261893) : p3.call(null,G__261893));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__261895 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261895) : p1.call(null,G__261895));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__261897 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261897) : p2.call(null,G__261897));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__261898 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261898) : p3.call(null,G__261898));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__261900 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261900) : p1.call(null,G__261900));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261902 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261902) : p2.call(null,G__261902));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__261904 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261904) : p3.call(null,G__261904));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__261906 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261906) : p1.call(null,G__261906));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__261908 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261908) : p2.call(null,G__261908));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var and__3969__auto____$5 = (function (){var G__261910 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261910) : p3.call(null,G__261910));
})();
if(cljs.core.truth_(and__3969__auto____$5)){
var and__3969__auto____$6 = (function (){var G__261912 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261912) : p1.call(null,G__261912));
})();
if(cljs.core.truth_(and__3969__auto____$6)){
var and__3969__auto____$7 = (function (){var G__261914 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261914) : p2.call(null,G__261914));
})();
if(cljs.core.truth_(and__3969__auto____$7)){
var G__261915 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261915) : p3.call(null,G__261915));
} else {
return and__3969__auto____$7;
}
} else {
return and__3969__auto____$6;
}
} else {
return and__3969__auto____$5;
}
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__261960__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__261561_SHARP_){
var and__3969__auto__ = (function (){var G__261922 = p1__261561_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__261922) : p1.call(null,G__261922));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261924 = p1__261561_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__261924) : p2.call(null,G__261924));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__261925 = p1__261561_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__261925) : p3.call(null,G__261925));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}),args)));
};
var G__261960 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261961__i = 0, G__261961__a = new Array(arguments.length -  3);
while (G__261961__i < G__261961__a.length) {G__261961__a[G__261961__i] = arguments[G__261961__i + 3]; ++G__261961__i;}
  args = new cljs.core.IndexedSeq(G__261961__a,0);
} 
return G__261960__delegate.call(this,x,y,z,args);};
G__261960.cljs$lang$maxFixedArity = 3;
G__261960.cljs$lang$applyTo = (function (arglist__261962){
var x = cljs.core.first(arglist__261962);
arglist__261962 = cljs.core.next(arglist__261962);
var y = cljs.core.first(arglist__261962);
arglist__261962 = cljs.core.next(arglist__261962);
var z = cljs.core.first(arglist__261962);
var args = cljs.core.rest(arglist__261962);
return G__261960__delegate(x,y,z,args);
});
G__261960.cljs$core$IFn$_invoke$arity$variadic = G__261960__delegate;
return G__261960;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__261963 = null;
if (arguments.length > 3) {
var G__261964__i = 0, G__261964__a = new Array(arguments.length -  3);
while (G__261964__i < G__261964__a.length) {G__261964__a[G__261964__i] = arguments[G__261964__i + 3]; ++G__261964__i;}
G__261963 = new cljs.core.IndexedSeq(G__261964__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261963);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__261965__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__261562_SHARP_){
var G__261941 = x;
return (p1__261562_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261562_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261941) : p1__261562_SHARP_.call(null,G__261941));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__261563_SHARP_){
var and__3969__auto__ = (function (){var G__261943 = x;
return (p1__261563_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261563_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261943) : p1__261563_SHARP_.call(null,G__261943));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__261944 = y;
return (p1__261563_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261563_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261944) : p1__261563_SHARP_.call(null,G__261944));
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__261564_SHARP_){
var and__3969__auto__ = (function (){var G__261946 = x;
return (p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261946) : p1__261564_SHARP_.call(null,G__261946));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__261948 = y;
return (p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261948) : p1__261564_SHARP_.call(null,G__261948));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__261949 = z;
return (p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261564_SHARP_.cljs$core$IFn$_invoke$arity$1(G__261949) : p1__261564_SHARP_.call(null,G__261949));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__261966__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__261565_SHARP_){
return cljs.core.every_QMARK_(p1__261565_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__261966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__261967__i = 0, G__261967__a = new Array(arguments.length -  3);
while (G__261967__i < G__261967__a.length) {G__261967__a[G__261967__i] = arguments[G__261967__i + 3]; ++G__261967__i;}
  args = new cljs.core.IndexedSeq(G__261967__a,0);
} 
return G__261966__delegate.call(this,x,y,z,args);};
G__261966.cljs$lang$maxFixedArity = 3;
G__261966.cljs$lang$applyTo = (function (arglist__261968){
var x = cljs.core.first(arglist__261968);
arglist__261968 = cljs.core.next(arglist__261968);
var y = cljs.core.first(arglist__261968);
arglist__261968 = cljs.core.next(arglist__261968);
var z = cljs.core.first(arglist__261968);
var args = cljs.core.rest(arglist__261968);
return G__261966__delegate(x,y,z,args);
});
G__261966.cljs$core$IFn$_invoke$arity$variadic = G__261966__delegate;
return G__261966;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__261969 = null;
if (arguments.length > 3) {
var G__261970__i = 0, G__261970__a = new Array(arguments.length -  3);
while (G__261970__i < G__261970__a.length) {G__261970__a[G__261970__i] = arguments[G__261970__i + 3]; ++G__261970__i;}
G__261969 = new cljs.core.IndexedSeq(G__261970__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__261969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__261965 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__261971__i = 0, G__261971__a = new Array(arguments.length -  3);
while (G__261971__i < G__261971__a.length) {G__261971__a[G__261971__i] = arguments[G__261971__i + 3]; ++G__261971__i;}
  ps = new cljs.core.IndexedSeq(G__261971__a,0);
} 
return G__261965__delegate.call(this,p1,p2,p3,ps);};
G__261965.cljs$lang$maxFixedArity = 3;
G__261965.cljs$lang$applyTo = (function (arglist__261972){
var p1 = cljs.core.first(arglist__261972);
arglist__261972 = cljs.core.next(arglist__261972);
var p2 = cljs.core.first(arglist__261972);
arglist__261972 = cljs.core.next(arglist__261972);
var p3 = cljs.core.first(arglist__261972);
var ps = cljs.core.rest(arglist__261972);
return G__261965__delegate(p1,p2,p3,ps);
});
G__261965.cljs$core$IFn$_invoke$arity$variadic = G__261965__delegate;
return G__261965;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__261973 = null;
if (arguments.length > 3) {
var G__261974__i = 0, G__261974__a = new Array(arguments.length -  3);
while (G__261974__i < G__261974__a.length) {G__261974__a[G__261974__i] = arguments[G__261974__i + 3]; ++G__261974__i;}
G__261973 = new cljs.core.IndexedSeq(G__261974__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__261973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__262180 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262180) : p.call(null,G__262180));
});
var sp1__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__262182 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262182) : p.call(null,G__262182));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__262183 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262183) : p.call(null,G__262183));
}
});
var sp1__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__262185 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262185) : p.call(null,G__262185));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262187 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262187) : p.call(null,G__262187));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__262188 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__262188) : p.call(null,G__262188));
}
}
});
var sp1__4 = (function() { 
var G__262349__delegate = function (x,y,z,args){
var or__3981__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__262349 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__262350__i = 0, G__262350__a = new Array(arguments.length -  3);
while (G__262350__i < G__262350__a.length) {G__262350__a[G__262350__i] = arguments[G__262350__i + 3]; ++G__262350__i;}
  args = new cljs.core.IndexedSeq(G__262350__a,0);
} 
return G__262349__delegate.call(this,x,y,z,args);};
G__262349.cljs$lang$maxFixedArity = 3;
G__262349.cljs$lang$applyTo = (function (arglist__262351){
var x = cljs.core.first(arglist__262351);
arglist__262351 = cljs.core.next(arglist__262351);
var y = cljs.core.first(arglist__262351);
arglist__262351 = cljs.core.next(arglist__262351);
var z = cljs.core.first(arglist__262351);
var args = cljs.core.rest(arglist__262351);
return G__262349__delegate(x,y,z,args);
});
G__262349.cljs$core$IFn$_invoke$arity$variadic = G__262349__delegate;
return G__262349;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__262352 = null;
if (arguments.length > 3) {
var G__262353__i = 0, G__262353__a = new Array(arguments.length -  3);
while (G__262353__i < G__262353__a.length) {G__262353__a[G__262353__i] = arguments[G__262353__i + 3]; ++G__262353__i;}
G__262352 = new cljs.core.IndexedSeq(G__262353__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__262352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3981__auto__ = (function (){var G__262220 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262220) : p1.call(null,G__262220));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__262221 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262221) : p2.call(null,G__262221));
}
});
var sp2__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__262223 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262223) : p1.call(null,G__262223));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262225 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262225) : p1.call(null,G__262225));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__262227 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262227) : p2.call(null,G__262227));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__262228 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262228) : p2.call(null,G__262228));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__262230 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262230) : p1.call(null,G__262230));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262232 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262232) : p1.call(null,G__262232));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__262234 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262234) : p1.call(null,G__262234));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__262236 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262236) : p2.call(null,G__262236));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__262238 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262238) : p2.call(null,G__262238));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__262239 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262239) : p2.call(null,G__262239));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__262354__delegate = function (x,y,z,args){
var or__3981__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__261975_SHARP_){
var or__3981__auto____$1 = (function (){var G__262241 = p1__261975_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262241) : p1.call(null,G__262241));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__262242 = p1__261975_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262242) : p2.call(null,G__262242));
}
});})(or__3981__auto__))
,args);
}
};
var G__262354 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__262355__i = 0, G__262355__a = new Array(arguments.length -  3);
while (G__262355__i < G__262355__a.length) {G__262355__a[G__262355__i] = arguments[G__262355__i + 3]; ++G__262355__i;}
  args = new cljs.core.IndexedSeq(G__262355__a,0);
} 
return G__262354__delegate.call(this,x,y,z,args);};
G__262354.cljs$lang$maxFixedArity = 3;
G__262354.cljs$lang$applyTo = (function (arglist__262356){
var x = cljs.core.first(arglist__262356);
arglist__262356 = cljs.core.next(arglist__262356);
var y = cljs.core.first(arglist__262356);
arglist__262356 = cljs.core.next(arglist__262356);
var z = cljs.core.first(arglist__262356);
var args = cljs.core.rest(arglist__262356);
return G__262354__delegate(x,y,z,args);
});
G__262354.cljs$core$IFn$_invoke$arity$variadic = G__262354__delegate;
return G__262354;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__262357 = null;
if (arguments.length > 3) {
var G__262358__i = 0, G__262358__a = new Array(arguments.length -  3);
while (G__262358__i < G__262358__a.length) {G__262358__a[G__262358__i] = arguments[G__262358__i + 3]; ++G__262358__i;}
G__262357 = new cljs.core.IndexedSeq(G__262358__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__262357);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3981__auto__ = (function (){var G__262288 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262288) : p1.call(null,G__262288));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262290 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262290) : p2.call(null,G__262290));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__262291 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262291) : p3.call(null,G__262291));
}
}
});
var sp3__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__262293 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262293) : p1.call(null,G__262293));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262295 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262295) : p2.call(null,G__262295));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__262297 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262297) : p3.call(null,G__262297));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__262299 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262299) : p1.call(null,G__262299));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__262301 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262301) : p2.call(null,G__262301));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__262302 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262302) : p3.call(null,G__262302));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__262304 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262304) : p1.call(null,G__262304));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262306 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262306) : p2.call(null,G__262306));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__262308 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262308) : p3.call(null,G__262308));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__262310 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262310) : p1.call(null,G__262310));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__262312 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262312) : p2.call(null,G__262312));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var or__3981__auto____$5 = (function (){var G__262314 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262314) : p3.call(null,G__262314));
})();
if(cljs.core.truth_(or__3981__auto____$5)){
return or__3981__auto____$5;
} else {
var or__3981__auto____$6 = (function (){var G__262316 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262316) : p1.call(null,G__262316));
})();
if(cljs.core.truth_(or__3981__auto____$6)){
return or__3981__auto____$6;
} else {
var or__3981__auto____$7 = (function (){var G__262318 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262318) : p2.call(null,G__262318));
})();
if(cljs.core.truth_(or__3981__auto____$7)){
return or__3981__auto____$7;
} else {
var G__262319 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262319) : p3.call(null,G__262319));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__262359__delegate = function (x,y,z,args){
var or__3981__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__261976_SHARP_){
var or__3981__auto____$1 = (function (){var G__262321 = p1__261976_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__262321) : p1.call(null,G__262321));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__262323 = p1__261976_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__262323) : p2.call(null,G__262323));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__262324 = p1__261976_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__262324) : p3.call(null,G__262324));
}
}
});})(or__3981__auto__))
,args);
}
};
var G__262359 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__262360__i = 0, G__262360__a = new Array(arguments.length -  3);
while (G__262360__i < G__262360__a.length) {G__262360__a[G__262360__i] = arguments[G__262360__i + 3]; ++G__262360__i;}
  args = new cljs.core.IndexedSeq(G__262360__a,0);
} 
return G__262359__delegate.call(this,x,y,z,args);};
G__262359.cljs$lang$maxFixedArity = 3;
G__262359.cljs$lang$applyTo = (function (arglist__262361){
var x = cljs.core.first(arglist__262361);
arglist__262361 = cljs.core.next(arglist__262361);
var y = cljs.core.first(arglist__262361);
arglist__262361 = cljs.core.next(arglist__262361);
var z = cljs.core.first(arglist__262361);
var args = cljs.core.rest(arglist__262361);
return G__262359__delegate(x,y,z,args);
});
G__262359.cljs$core$IFn$_invoke$arity$variadic = G__262359__delegate;
return G__262359;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__262362 = null;
if (arguments.length > 3) {
var G__262363__i = 0, G__262363__a = new Array(arguments.length -  3);
while (G__262363__i < G__262363__a.length) {G__262363__a[G__262363__i] = arguments[G__262363__i + 3]; ++G__262363__i;}
G__262362 = new cljs.core.IndexedSeq(G__262363__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__262362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__262364__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__261977_SHARP_){
var G__262340 = x;
return (p1__261977_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261977_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262340) : p1__261977_SHARP_.call(null,G__262340));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__261978_SHARP_){
var or__3981__auto__ = (function (){var G__262342 = x;
return (p1__261978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262342) : p1__261978_SHARP_.call(null,G__262342));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__262343 = y;
return (p1__261978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262343) : p1__261978_SHARP_.call(null,G__262343));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__261979_SHARP_){
var or__3981__auto__ = (function (){var G__262345 = x;
return (p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262345) : p1__261979_SHARP_.call(null,G__262345));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__262347 = y;
return (p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262347) : p1__261979_SHARP_.call(null,G__262347));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__262348 = z;
return (p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__261979_SHARP_.cljs$core$IFn$_invoke$arity$1(G__262348) : p1__261979_SHARP_.call(null,G__262348));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__262365__delegate = function (x,y,z,args){
var or__3981__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__,ps__$1){
return (function (p1__261980_SHARP_){
return cljs.core.some(p1__261980_SHARP_,args);
});})(or__3981__auto__,ps__$1))
,ps__$1);
}
};
var G__262365 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__262366__i = 0, G__262366__a = new Array(arguments.length -  3);
while (G__262366__i < G__262366__a.length) {G__262366__a[G__262366__i] = arguments[G__262366__i + 3]; ++G__262366__i;}
  args = new cljs.core.IndexedSeq(G__262366__a,0);
} 
return G__262365__delegate.call(this,x,y,z,args);};
G__262365.cljs$lang$maxFixedArity = 3;
G__262365.cljs$lang$applyTo = (function (arglist__262367){
var x = cljs.core.first(arglist__262367);
arglist__262367 = cljs.core.next(arglist__262367);
var y = cljs.core.first(arglist__262367);
arglist__262367 = cljs.core.next(arglist__262367);
var z = cljs.core.first(arglist__262367);
var args = cljs.core.rest(arglist__262367);
return G__262365__delegate(x,y,z,args);
});
G__262365.cljs$core$IFn$_invoke$arity$variadic = G__262365__delegate;
return G__262365;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__262368 = null;
if (arguments.length > 3) {
var G__262369__i = 0, G__262369__a = new Array(arguments.length -  3);
while (G__262369__i < G__262369__a.length) {G__262369__a[G__262369__i] = arguments[G__262369__i + 3]; ++G__262369__i;}
G__262368 = new cljs.core.IndexedSeq(G__262369__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__262368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__262364 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__262370__i = 0, G__262370__a = new Array(arguments.length -  3);
while (G__262370__i < G__262370__a.length) {G__262370__a[G__262370__i] = arguments[G__262370__i + 3]; ++G__262370__i;}
  ps = new cljs.core.IndexedSeq(G__262370__a,0);
} 
return G__262364__delegate.call(this,p1,p2,p3,ps);};
G__262364.cljs$lang$maxFixedArity = 3;
G__262364.cljs$lang$applyTo = (function (arglist__262371){
var p1 = cljs.core.first(arglist__262371);
arglist__262371 = cljs.core.next(arglist__262371);
var p2 = cljs.core.first(arglist__262371);
arglist__262371 = cljs.core.next(arglist__262371);
var p3 = cljs.core.first(arglist__262371);
var ps = cljs.core.rest(arglist__262371);
return G__262364__delegate(p1,p2,p3,ps);
});
G__262364.cljs$core$IFn$_invoke$arity$variadic = G__262364__delegate;
return G__262364;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__262372 = null;
if (arguments.length > 3) {
var G__262373__i = 0, G__262373__a = new Array(arguments.length -  3);
while (G__262373__i < G__262373__a.length) {G__262373__a[G__262373__i] = arguments[G__262373__i + 3]; ++G__262373__i;}
G__262372 = new cljs.core.IndexedSeq(G__262373__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__262372);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__262428 = null;
var G__262428__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262428__1 = (function (result){
var G__262414 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262414) : rf.call(null,G__262414));
});
var G__262428__2 = (function (result,input){
var G__262415 = result;
var G__262416 = (function (){var G__262417 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262417) : f.call(null,G__262417));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262415,G__262416) : rf.call(null,G__262415,G__262416));
});
var G__262428__3 = (function() { 
var G__262429__delegate = function (result,input,inputs){
var G__262418 = result;
var G__262419 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262418,G__262419) : rf.call(null,G__262418,G__262419));
};
var G__262429 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__262430__i = 0, G__262430__a = new Array(arguments.length -  2);
while (G__262430__i < G__262430__a.length) {G__262430__a[G__262430__i] = arguments[G__262430__i + 2]; ++G__262430__i;}
  inputs = new cljs.core.IndexedSeq(G__262430__a,0);
} 
return G__262429__delegate.call(this,result,input,inputs);};
G__262429.cljs$lang$maxFixedArity = 2;
G__262429.cljs$lang$applyTo = (function (arglist__262431){
var result = cljs.core.first(arglist__262431);
arglist__262431 = cljs.core.next(arglist__262431);
var input = cljs.core.first(arglist__262431);
var inputs = cljs.core.rest(arglist__262431);
return G__262429__delegate(result,input,inputs);
});
G__262429.cljs$core$IFn$_invoke$arity$variadic = G__262429__delegate;
return G__262429;
})()
;
G__262428 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__262428__0.call(this);
case 1:
return G__262428__1.call(this,result);
case 2:
return G__262428__2.call(this,result,input);
default:
var G__262432 = null;
if (arguments.length > 2) {
var G__262433__i = 0, G__262433__a = new Array(arguments.length -  2);
while (G__262433__i < G__262433__a.length) {G__262433__a[G__262433__i] = arguments[G__262433__i + 2]; ++G__262433__i;}
G__262432 = new cljs.core.IndexedSeq(G__262433__a,0);
}
return G__262428__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__262432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262428.cljs$lang$maxFixedArity = 2;
G__262428.cljs$lang$applyTo = G__262428__3.cljs$lang$applyTo;
G__262428.cljs$core$IFn$_invoke$arity$0 = G__262428__0;
G__262428.cljs$core$IFn$_invoke$arity$1 = G__262428__1;
G__262428.cljs$core$IFn$_invoke$arity$2 = G__262428__2;
G__262428.cljs$core$IFn$_invoke$arity$variadic = G__262428__3.cljs$core$IFn$_invoke$arity$variadic;
return G__262428;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___262434 = size;
var i_262435 = (0);
while(true){
if((i_262435 < n__4868__auto___262434)){
cljs.core.chunk_append(b,(function (){var G__262420 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_262435);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262420) : f.call(null,G__262420));
})());

var G__262436 = (i_262435 + (1));
i_262435 = G__262436;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__262421 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262421) : f.call(null,G__262421));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__262422 = cljs.core.first(s1);
var G__262423 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262422,G__262423) : f.call(null,G__262422,G__262423));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__262424 = cljs.core.first(s1);
var G__262425 = cljs.core.first(s2);
var G__262426 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262424,G__262425,G__262426) : f.call(null,G__262424,G__262425,G__262426));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__262437__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__262374_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__262374_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__262437 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__262438__i = 0, G__262438__a = new Array(arguments.length -  4);
while (G__262438__i < G__262438__a.length) {G__262438__a[G__262438__i] = arguments[G__262438__i + 4]; ++G__262438__i;}
  colls = new cljs.core.IndexedSeq(G__262438__a,0);
} 
return G__262437__delegate.call(this,f,c1,c2,c3,colls);};
G__262437.cljs$lang$maxFixedArity = 4;
G__262437.cljs$lang$applyTo = (function (arglist__262439){
var f = cljs.core.first(arglist__262439);
arglist__262439 = cljs.core.next(arglist__262439);
var c1 = cljs.core.first(arglist__262439);
arglist__262439 = cljs.core.next(arglist__262439);
var c2 = cljs.core.first(arglist__262439);
arglist__262439 = cljs.core.next(arglist__262439);
var c3 = cljs.core.first(arglist__262439);
var colls = cljs.core.rest(arglist__262439);
return G__262437__delegate(f,c1,c2,c3,colls);
});
G__262437.cljs$core$IFn$_invoke$arity$variadic = G__262437__delegate;
return G__262437;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__262440 = null;
if (arguments.length > 4) {
var G__262441__i = 0, G__262441__a = new Array(arguments.length -  4);
while (G__262441__i < G__262441__a.length) {G__262441__a[G__262441__i] = arguments[G__262441__i + 4]; ++G__262441__i;}
G__262440 = new cljs.core.IndexedSeq(G__262441__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__262440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__262450 = null;
var G__262450__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262450__1 = (function (result){
var G__262447 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262447) : rf.call(null,G__262447));
});
var G__262450__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__262448 = result;
var G__262449 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262448,G__262449) : rf.call(null,G__262448,G__262449));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__262450 = function(result,input){
switch(arguments.length){
case 0:
return G__262450__0.call(this);
case 1:
return G__262450__1.call(this,result);
case 2:
return G__262450__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262450.cljs$core$IFn$_invoke$arity$0 = G__262450__0;
G__262450.cljs$core$IFn$_invoke$arity$1 = G__262450__1;
G__262450.cljs$core$IFn$_invoke$arity$2 = G__262450__2;
return G__262450;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__262457 = null;
var G__262457__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262457__1 = (function (result){
var G__262454 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262454) : rf.call(null,G__262454));
});
var G__262457__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__262455 = result;
var G__262456 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262455,G__262456) : rf.call(null,G__262455,G__262456));
}
});
G__262457 = function(result,input){
switch(arguments.length){
case 0:
return G__262457__0.call(this);
case 1:
return G__262457__1.call(this,result);
case 2:
return G__262457__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262457.cljs$core$IFn$_invoke$arity$0 = G__262457__0;
G__262457.cljs$core$IFn$_invoke$arity$1 = G__262457__1;
G__262457.cljs$core$IFn$_invoke$arity$2 = G__262457__2;
return G__262457;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__262458 = (n__$1 - (1));
var G__262459 = cljs.core.rest(s);
n__$1 = G__262458;
coll__$1 = G__262459;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__262462 = cljs.core.next(s);
var G__262463 = cljs.core.next(lead);
s = G__262462;
lead = G__262463;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__262476 = null;
var G__262476__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262476__1 = (function (result){
var G__262470 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262470) : rf.call(null,G__262470));
});
var G__262476__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3969__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3969__auto__)){
var G__262471 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__262471) : pred.call(null,G__262471));
} else {
return and__3969__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__262472 = result;
var G__262473 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262472,G__262473) : rf.call(null,G__262472,G__262473));
}
});
G__262476 = function(result,input){
switch(arguments.length){
case 0:
return G__262476__0.call(this);
case 1:
return G__262476__1.call(this,result);
case 2:
return G__262476__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262476.cljs$core$IFn$_invoke$arity$0 = G__262476__0;
G__262476.cljs$core$IFn$_invoke$arity$1 = G__262476__1;
G__262476.cljs$core$IFn$_invoke$arity$2 = G__262476__2;
return G__262476;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3969__auto__ = s;
if(and__3969__auto__){
var G__262475 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__262475) : pred__$1.call(null,G__262475));
} else {
return and__3969__auto__;
}
})())){
var G__262477 = pred__$1;
var G__262478 = cljs.core.rest(s);
pred__$1 = G__262477;
coll__$1 = G__262478;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__262487 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262487) : f.call(null,G__262487));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__262490__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__262490 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__262491__i = 0, G__262491__a = new Array(arguments.length -  2);
while (G__262491__i < G__262491__a.length) {G__262491__a[G__262491__i] = arguments[G__262491__i + 2]; ++G__262491__i;}
  colls = new cljs.core.IndexedSeq(G__262491__a,0);
} 
return G__262490__delegate.call(this,c1,c2,colls);};
G__262490.cljs$lang$maxFixedArity = 2;
G__262490.cljs$lang$applyTo = (function (arglist__262492){
var c1 = cljs.core.first(arglist__262492);
arglist__262492 = cljs.core.next(arglist__262492);
var c2 = cljs.core.first(arglist__262492);
var colls = cljs.core.rest(arglist__262492);
return G__262490__delegate(c1,c2,colls);
});
G__262490.cljs$core$IFn$_invoke$arity$variadic = G__262490__delegate;
return G__262490;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__262493 = null;
if (arguments.length > 2) {
var G__262494__i = 0, G__262494__a = new Array(arguments.length -  2);
while (G__262494__i < G__262494__a.length) {G__262494__a[G__262494__i] = arguments[G__262494__i + 2]; ++G__262494__i;}
G__262493 = new cljs.core.IndexedSeq(G__262494__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__262493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__262509 = null;
var G__262509__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262509__1 = (function (result){
var G__262502 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262502) : rf.call(null,G__262502));
});
var G__262509__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__262503 = result;
var G__262504 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262503,G__262504) : rf.call(null,G__262503,G__262504));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__262505 = sepr;
var G__262506 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262505,G__262506) : rf.call(null,G__262505,G__262506));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__262507 = result;
var G__262508 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262507,G__262508) : rf.call(null,G__262507,G__262508));
}
});
G__262509 = function(result,input){
switch(arguments.length){
case 0:
return G__262509__0.call(this);
case 1:
return G__262509__1.call(this,result);
case 2:
return G__262509__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262509.cljs$core$IFn$_invoke$arity$0 = G__262509__0;
G__262509.cljs$core$IFn$_invoke$arity$1 = G__262509__1;
G__262509.cljs$core$IFn$_invoke$arity$2 = G__262509__2;
return G__262509;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__262518__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__262518 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__262519__i = 0, G__262519__a = new Array(arguments.length -  1);
while (G__262519__i < G__262519__a.length) {G__262519__a[G__262519__i] = arguments[G__262519__i + 1]; ++G__262519__i;}
  colls = new cljs.core.IndexedSeq(G__262519__a,0);
} 
return G__262518__delegate.call(this,f,colls);};
G__262518.cljs$lang$maxFixedArity = 1;
G__262518.cljs$lang$applyTo = (function (arglist__262520){
var f = cljs.core.first(arglist__262520);
var colls = cljs.core.rest(arglist__262520);
return G__262518__delegate(f,colls);
});
G__262518.cljs$core$IFn$_invoke$arity$variadic = G__262518__delegate;
return G__262518;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__262521 = null;
if (arguments.length > 1) {
var G__262522__i = 0, G__262522__a = new Array(arguments.length -  1);
while (G__262522__i < G__262522__a.length) {G__262522__a[G__262522__i] = arguments[G__262522__i + 1]; ++G__262522__i;}
G__262521 = new cljs.core.IndexedSeq(G__262522__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__262521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__262541 = null;
var G__262541__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__262541__1 = (function (result){
var G__262535 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__262535) : rf.call(null,G__262535));
});
var G__262541__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__262536 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__262536) : pred.call(null,G__262536));
})())){
var G__262537 = result;
var G__262538 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__262537,G__262538) : rf.call(null,G__262537,G__262538));
} else {
return result;
}
});
G__262541 = function(result,input){
switch(arguments.length){
case 0:
return G__262541__0.call(this);
case 1:
return G__262541__1.call(this,result);
case 2:
return G__262541__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262541.cljs$core$IFn$_invoke$arity$0 = G__262541__0;
G__262541.cljs$core$IFn$_invoke$arity$1 = G__262541__1;
G__262541.cljs$core$IFn$_invoke$arity$2 = G__262541__2;
return G__262541;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___262542 = size;
var i_262543 = (0);
while(true){
if((i_262543 < n__4868__auto___262542)){
if(cljs.core.truth_((function (){var G__262539 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_262543);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__262539) : pred.call(null,G__262539));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_262543));
} else {
}

var G__262544 = (i_262543 + (1));
i_262543 = G__262544;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__262540 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__262540) : pred.call(null,G__262540));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__262551 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__262551) : branch_QMARK_.call(null,G__262551));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__262552 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__262552) : children.call(null,G__262552));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__262553_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__262553_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__262556 = to;
if(G__262556){
var bit__4655__auto__ = (G__262556.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__262556.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__262557 = to;
if(G__262557){
var bit__4655__auto__ = (G__262557.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__262557.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__262559 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262559) : f.call(null,G__262559));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__262560__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__262560 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__262561__i = 0, G__262561__a = new Array(arguments.length -  4);
while (G__262561__i < G__262561__a.length) {G__262561__a[G__262561__i] = arguments[G__262561__i + 4]; ++G__262561__i;}
  colls = new cljs.core.IndexedSeq(G__262561__a,0);
} 
return G__262560__delegate.call(this,f,c1,c2,c3,colls);};
G__262560.cljs$lang$maxFixedArity = 4;
G__262560.cljs$lang$applyTo = (function (arglist__262562){
var f = cljs.core.first(arglist__262562);
arglist__262562 = cljs.core.next(arglist__262562);
var c1 = cljs.core.first(arglist__262562);
arglist__262562 = cljs.core.next(arglist__262562);
var c2 = cljs.core.first(arglist__262562);
arglist__262562 = cljs.core.next(arglist__262562);
var c3 = cljs.core.first(arglist__262562);
var colls = cljs.core.rest(arglist__262562);
return G__262560__delegate(f,c1,c2,c3,colls);
});
G__262560.cljs$core$IFn$_invoke$arity$variadic = G__262560__delegate;
return G__262560;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__262563 = null;
if (arguments.length > 4) {
var G__262564__i = 0, G__262564__a = new Array(arguments.length -  4);
while (G__262564__i < G__262564__a.length) {G__262564__a[G__262564__i] = arguments[G__262564__i + 4]; ++G__262564__i;}
G__262563 = new cljs.core.IndexedSeq(G__262564__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__262563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__262566 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__262566) : pred.call(null,G__262566));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__262581 = m__$1;
if(G__262581){
var bit__4662__auto__ = (G__262581.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4662__auto__) || (G__262581.cljs$core$ILookup$)){
return true;
} else {
if((!G__262581.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__262581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__262581);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__262582 = sentinel;
var G__262583 = m__$2;
var G__262584 = cljs.core.next(ks__$1);
sentinel = G__262582;
m__$1 = G__262583;
ks__$1 = G__262584;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__262585,v){
var vec__262590 = p__262585;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262590,(0),null);
var ks = cljs.core.nthnext(vec__262590,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__262591,f){
var vec__262629 = p__262591;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262629,(0),null);
var ks = cljs.core.nthnext(vec__262629,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262630 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262630) : f.call(null,G__262630));
})());
}
});
var update_in__4 = (function (m,p__262592,f,a){
var vec__262631 = p__262592;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262631,(0),null);
var ks = cljs.core.nthnext(vec__262631,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262632 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262633 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262632,G__262633) : f.call(null,G__262632,G__262633));
})());
}
});
var update_in__5 = (function (m,p__262593,f,a,b){
var vec__262634 = p__262593;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262634,(0),null);
var ks = cljs.core.nthnext(vec__262634,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262635 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262636 = a;
var G__262637 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262635,G__262636,G__262637) : f.call(null,G__262635,G__262636,G__262637));
})());
}
});
var update_in__6 = (function (m,p__262594,f,a,b,c){
var vec__262638 = p__262594;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262638,(0),null);
var ks = cljs.core.nthnext(vec__262638,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262639 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262640 = a;
var G__262641 = b;
var G__262642 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__262639,G__262640,G__262641,G__262642) : f.call(null,G__262639,G__262640,G__262641,G__262642));
})());
}
});
var update_in__7 = (function() { 
var G__262644__delegate = function (m,p__262595,f,a,b,c,args){
var vec__262643 = p__262595;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262643,(0),null);
var ks = cljs.core.nthnext(vec__262643,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__262644 = function (m,p__262595,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__262645__i = 0, G__262645__a = new Array(arguments.length -  6);
while (G__262645__i < G__262645__a.length) {G__262645__a[G__262645__i] = arguments[G__262645__i + 6]; ++G__262645__i;}
  args = new cljs.core.IndexedSeq(G__262645__a,0);
} 
return G__262644__delegate.call(this,m,p__262595,f,a,b,c,args);};
G__262644.cljs$lang$maxFixedArity = 6;
G__262644.cljs$lang$applyTo = (function (arglist__262646){
var m = cljs.core.first(arglist__262646);
arglist__262646 = cljs.core.next(arglist__262646);
var p__262595 = cljs.core.first(arglist__262646);
arglist__262646 = cljs.core.next(arglist__262646);
var f = cljs.core.first(arglist__262646);
arglist__262646 = cljs.core.next(arglist__262646);
var a = cljs.core.first(arglist__262646);
arglist__262646 = cljs.core.next(arglist__262646);
var b = cljs.core.first(arglist__262646);
arglist__262646 = cljs.core.next(arglist__262646);
var c = cljs.core.first(arglist__262646);
var args = cljs.core.rest(arglist__262646);
return G__262644__delegate(m,p__262595,f,a,b,c,args);
});
G__262644.cljs$core$IFn$_invoke$arity$variadic = G__262644__delegate;
return G__262644;
})()
;
update_in = function(m,p__262595,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__262595,f);
case 4:
return update_in__4.call(this,m,p__262595,f,a);
case 5:
return update_in__5.call(this,m,p__262595,f,a,b);
case 6:
return update_in__6.call(this,m,p__262595,f,a,b,c);
default:
var G__262647 = null;
if (arguments.length > 6) {
var G__262648__i = 0, G__262648__a = new Array(arguments.length -  6);
while (G__262648__i < G__262648__a.length) {G__262648__a[G__262648__i] = arguments[G__262648__i + 6]; ++G__262648__i;}
G__262647 = new cljs.core.IndexedSeq(G__262648__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__262595,f,a,b,c, G__262647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262659 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__262659) : f.call(null,G__262659));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262660 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262661 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262660,G__262661) : f.call(null,G__262660,G__262661));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262662 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262663 = x;
var G__262664 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262662,G__262663,G__262664) : f.call(null,G__262662,G__262663,G__262664));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__262665 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__262666 = x;
var G__262667 = y;
var G__262668 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__262665,G__262666,G__262667,G__262668) : f.call(null,G__262665,G__262666,G__262667,G__262668));
})());
});
var update__7 = (function() { 
var G__262669__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__262669 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__262670__i = 0, G__262670__a = new Array(arguments.length -  6);
while (G__262670__i < G__262670__a.length) {G__262670__a[G__262670__i] = arguments[G__262670__i + 6]; ++G__262670__i;}
  more = new cljs.core.IndexedSeq(G__262670__a,0);
} 
return G__262669__delegate.call(this,m,k,f,x,y,z,more);};
G__262669.cljs$lang$maxFixedArity = 6;
G__262669.cljs$lang$applyTo = (function (arglist__262671){
var m = cljs.core.first(arglist__262671);
arglist__262671 = cljs.core.next(arglist__262671);
var k = cljs.core.first(arglist__262671);
arglist__262671 = cljs.core.next(arglist__262671);
var f = cljs.core.first(arglist__262671);
arglist__262671 = cljs.core.next(arglist__262671);
var x = cljs.core.first(arglist__262671);
arglist__262671 = cljs.core.next(arglist__262671);
var y = cljs.core.first(arglist__262671);
arglist__262671 = cljs.core.next(arglist__262671);
var z = cljs.core.first(arglist__262671);
var more = cljs.core.rest(arglist__262671);
return G__262669__delegate(m,k,f,x,y,z,more);
});
G__262669.cljs$core$IFn$_invoke$arity$variadic = G__262669__delegate;
return G__262669;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__262672 = null;
if (arguments.length > 6) {
var G__262673__i = 0, G__262673__a = new Array(arguments.length -  6);
while (G__262673__i < G__262673__a.length) {G__262673__a[G__262673__i] = arguments[G__262673__i + 6]; ++G__262673__i;}
G__262672 = new cljs.core.IndexedSeq(G__262673__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__262672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__262674 = (ll - (5));
var G__262675 = r;
ll = G__262674;
ret = G__262675;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__262680 = cljs.core.pv_aget(node,(0));
var G__262681 = (level - (5));
node = G__262680;
level = G__262681;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__262682 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__262683 = (level - (5));
node = G__262682;
level = G__262683;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__262693 = init__$2;
var G__262694 = (j + i);
var G__262695 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262693,G__262694,G__262695) : f.call(null,G__262693,G__262694,G__262695));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__262706 = (j + (1));
var G__262707 = init__$3;
j = G__262706;
init__$2 = G__262707;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262696 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262696) : cljs.core.deref.call(null,G__262696));
} else {
var G__262708 = (i + len);
var G__262709 = init__$2;
i = G__262708;
init__$1 = G__262709;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__262697 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__262697) : cljs.core.tv_editable_root.call(null,G__262697));
})(),(function (){var G__262698 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__262698) : cljs.core.tv_editable_tail.call(null,G__262698));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__262699 = init__$2;
var G__262700 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262699,G__262700) : f.call(null,G__262699,G__262700));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__262710 = (j + (1));
var G__262711 = init__$3;
j = G__262710;
init__$2 = G__262711;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262701 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262701) : cljs.core.deref.call(null,G__262701));
} else {
var G__262712 = (i + len);
var G__262713 = init__$2;
i = G__262712;
init__$1 = G__262713;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__262702 = coll__$1;
var G__262703 = cljs.core.first_array_for_longvec(coll__$1);
var G__262704 = (0);
var G__262705 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__262702,G__262703,G__262704,G__262705) : cljs.core.chunked_seq.call(null,G__262702,G__262703,G__262704,G__262705));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4868__auto___262714 = len;
var i_262715 = (0);
while(true){
if((i_262715 < n__4868__auto___262714)){
(new_tail[i_262715] = (self__.tail[i_262715]));

var G__262716 = (i_262715 + (1));
i_262715 = G__262716;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__262717 = null;
var G__262717__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__262717__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__262717 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__262717__2.call(this,self__,k);
case 3:
return G__262717__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262717.cljs$core$IFn$_invoke$arity$2 = G__262717__2;
G__262717.cljs$core$IFn$_invoke$arity$3 = G__262717__3;
return G__262717;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args262692){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262692)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__262718 = (i + (1));
var G__262719 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__262718;
out = G__262719;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__262720__i = 0, G__262720__a = new Array(arguments.length -  0);
while (G__262720__i < G__262720__a.length) {G__262720__a[G__262720__i] = arguments[G__262720__i + 0]; ++G__262720__i;}
  args = new cljs.core.IndexedSeq(G__262720__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__262721){
var args = cljs.core.seq(arglist__262721);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__262722 = self__.vec;
var G__262723 = self__.node;
var G__262724 = self__.i;
var G__262725 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__262722,G__262723,G__262724,G__262725) : cljs.core.chunked_seq.call(null,G__262722,G__262723,G__262724,G__262725));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__262726 = self__.vec;
var G__262727 = (self__.i + self__.off);
var G__262728 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__262726,G__262727,G__262728) : cljs.core.subvec.call(null,G__262726,G__262727,G__262728));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__262729 = self__.vec;
var G__262730 = (self__.i + self__.off);
var G__262731 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__262729,G__262730,G__262731) : cljs.core.subvec.call(null,G__262729,G__262730,G__262731));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__262732 = self__.vec;
var G__262733 = self__.node;
var G__262734 = self__.i;
var G__262735 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__262732,G__262733,G__262734,G__262735) : cljs.core.chunked_seq.call(null,G__262732,G__262733,G__262734,G__262735));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__262736 = self__.vec;
var G__262737 = cljs.core.unchecked_array_for(self__.vec,end);
var G__262738 = end;
var G__262739 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__262736,G__262737,G__262738,G__262739) : cljs.core.chunked_seq.call(null,G__262736,G__262737,G__262738,G__262739));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__262740 = self__.vec;
var G__262741 = self__.node;
var G__262742 = self__.i;
var G__262743 = self__.off;
var G__262744 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__262740,G__262741,G__262742,G__262743,G__262744) : cljs.core.chunked_seq.call(null,G__262740,G__262741,G__262742,G__262743,G__262744));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__262745 = self__.vec;
var G__262746 = cljs.core.unchecked_array_for(self__.vec,end);
var G__262747 = end;
var G__262748 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__262745,G__262746,G__262747,G__262748) : cljs.core.chunked_seq.call(null,G__262745,G__262746,G__262747,G__262748));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__262750 = self__.meta;
var G__262751 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__262752 = self__.start;
var G__262753 = (function (){var x__4298__auto__ = self__.end;
var y__4299__auto__ = (v_pos + (1));
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})();
var G__262754 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__262750,G__262751,G__262752,G__262753,G__262754) : cljs.core.build_subvec.call(null,G__262750,G__262751,G__262752,G__262753,G__262754));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__262755 = self__.meta;
var G__262756 = self__.v;
var G__262757 = self__.start;
var G__262758 = (self__.end - (1));
var G__262759 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__262755,G__262756,G__262757,G__262758,G__262759) : cljs.core.build_subvec.call(null,G__262755,G__262756,G__262757,G__262758,G__262759));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__262761 = meta__$1;
var G__262762 = self__.v;
var G__262763 = self__.start;
var G__262764 = self__.end;
var G__262765 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__262761,G__262762,G__262763,G__262764,G__262765) : cljs.core.build_subvec.call(null,G__262761,G__262762,G__262763,G__262764,G__262765));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__262766 = self__.meta;
var G__262767 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__262768 = self__.start;
var G__262769 = (self__.end + (1));
var G__262770 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__262766,G__262767,G__262768,G__262769,G__262770) : cljs.core.build_subvec.call(null,G__262766,G__262767,G__262768,G__262769,G__262770));
});

cljs.core.Subvec.prototype.call = (function() {
var G__262771 = null;
var G__262771__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__262771__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__262771 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__262771__2.call(this,self__,k);
case 3:
return G__262771__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262771.cljs$core$IFn$_invoke$arity$2 = G__262771__2;
G__262771.cljs$core$IFn$_invoke$arity$3 = G__262771__3;
return G__262771;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args262749){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262749)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__262772 = meta;
var G__262773 = v.v;
var G__262774 = (v.start + start);
var G__262775 = (v.start + end);
var G__262776 = __hash;
meta = G__262772;
v = G__262773;
start = G__262774;
end = G__262775;
__hash = G__262776;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj262783 = {};
return obj262783;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__262791 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__262792 = (level - (5));
node = G__262791;
level = G__262792;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__262796 = null;
var G__262796__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__262796__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__262796 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__262796__2.call(this,self__,k);
case 3:
return G__262796__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262796.cljs$core$IFn$_invoke$arity$2 = G__262796__2;
G__262796.cljs$core$IFn$_invoke$arity$3 = G__262796__3;
return G__262796;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args262793){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262793)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3981__auto__ = self__.front;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = self__.rear;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__262797 = (i + incr);
i = G__262797;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__262798 = (i + (1));
var G__262799 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__262798;
out = G__262799;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj262803 = {};
return obj262803;
})();
var l = ks.length;
var i_262804 = (0);
while(true){
if((i_262804 < l)){
var k_262805 = (ks[i_262804]);
(new_obj[k_262805] = (obj[k_262805]));

var G__262806 = (i_262804 + (1));
i_262804 = G__262806;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__262810 = k;
return goog.isString(G__262810);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__262811 = init__$1;
var G__262812 = k;
var G__262813 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262811,G__262812,G__262813) : f.call(null,G__262811,G__262812,G__262813));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262814 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262814) : cljs.core.deref.call(null,G__262814));
} else {
var G__262820 = cljs.core.rest(keys__$1);
var G__262821 = init__$2;
keys__$1 = G__262820;
init__$1 = G__262821;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__262816 = k;
return goog.isString(G__262816);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__262817 = k;
return goog.isString(G__262817);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__262819 = k;
return goog.isString(G__262819);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__262807_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__262807_SHARP_,(self__.strobj[p1__262807_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__262822 = null;
var G__262822__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__262822__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__262822 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__262822__2.call(this,self__,k);
case 3:
return G__262822__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262822.cljs$core$IFn$_invoke$arity$2 = G__262822__2;
G__262822.cljs$core$IFn$_invoke$arity$3 = G__262822__3;
return G__262822;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args262808){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262808)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj262824 = {};
return obj262824;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__262825 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262825,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262825,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__262826 = (i + (2));
i = G__262826;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__262827 = (i + (2));
i = G__262827;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__262828 = (i + (2));
i = G__262828;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__262829 = (i + (2));
i = G__262829;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__262830 = (i + (2));
i = G__262830;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3981__auto__ = (function (){var G__262834 = k;
return goog.isString(G__262834);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_262835 = (0);
while(true){
if((i_262835 < l)){
(narr[i_262835] = (arr[i_262835]));

var G__262836 = (i_262835 + (1));
i_262835 = G__262836;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__262838 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__262838) : cljs.core.keys.call(null,G__262838));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__262839 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__262839) : cljs.core.vals.call(null,G__262839));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__262840 = cljs.core.seq(coll);
var chunk__262841 = null;
var count__262842 = (0);
var i__262843 = (0);
while(true){
if((i__262843 < count__262842)){
var vec__262844 = chunk__262841.cljs$core$IIndexed$_nth$arity$2(null,i__262843);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262844,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262844,(1),null);
var G__262845_262858 = v;
var G__262846_262859 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262845_262858,G__262846_262859) : f.call(null,G__262845_262858,G__262846_262859));

var G__262860 = seq__262840;
var G__262861 = chunk__262841;
var G__262862 = count__262842;
var G__262863 = (i__262843 + (1));
seq__262840 = G__262860;
chunk__262841 = G__262861;
count__262842 = G__262862;
i__262843 = G__262863;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__262840);
if(temp__4126__auto__){
var seq__262840__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__262840__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__262840__$1);
var G__262864 = cljs.core.chunk_rest(seq__262840__$1);
var G__262865 = c__4768__auto__;
var G__262866 = cljs.core.count(c__4768__auto__);
var G__262867 = (0);
seq__262840 = G__262864;
chunk__262841 = G__262865;
count__262842 = G__262866;
i__262843 = G__262867;
continue;
} else {
var vec__262847 = cljs.core.first(seq__262840__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262847,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262847,(1),null);
var G__262848_262868 = v;
var G__262849_262869 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262848_262868,G__262849_262869) : f.call(null,G__262848_262868,G__262849_262869));

var G__262870 = cljs.core.next(seq__262840__$1);
var G__262871 = null;
var G__262872 = (0);
var G__262873 = (0);
seq__262840 = G__262870;
chunk__262841 = G__262871;
count__262842 = G__262872;
i__262843 = G__262873;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__262850 = init__$1;
var G__262851 = (self__.arr[i]);
var G__262852 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262850,G__262851,G__262852) : f.call(null,G__262850,G__262851,G__262852));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262853 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262853) : cljs.core.deref.call(null,G__262853));
} else {
var G__262874 = (i + (2));
var G__262875 = init__$2;
i = G__262874;
init__$1 = G__262875;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__262854 = other;
if(G__262854){
var bit__4655__auto__ = (G__262854.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4655__auto__) || (G__262854.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__262876 = (i + (2));
i = G__262876;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj262856 = {};
return obj262856;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__262877 = (s + (2));
var G__262878 = d;
s = G__262877;
d = G__262878;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__262879 = (s + (2));
var G__262880 = (d + (2));
s = G__262879;
d = G__262880;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__262857 = cljs.core.aclone(self__.arr);
(G__262857[(idx + (1))] = v);

return G__262857;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__262881 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__262882 = cljs.core.next(es);
ret = G__262881;
es = G__262882;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__262883 = null;
var G__262883__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__262883__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__262883 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__262883__2.call(this,self__,k);
case 3:
return G__262883__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__262883.cljs$core$IFn$_invoke$arity$2 = G__262883__2;
G__262883.cljs$core$IFn$_invoke$arity$3 = G__262883__3;
return G__262883;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args262837){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262837)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__262884 = (i + (2));
var G__262885 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__262884;
ret = G__262885;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__262886_262894 = self__.arr;
G__262886_262894.pop();

G__262886_262894.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__262887 = self__.len;
var G__262888 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__262887,G__262888) : cljs.core.array__GT_transient_hash_map.call(null,G__262887,G__262888));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__262889 = o;
if(G__262889){
var bit__4662__auto__ = (G__262889.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__262889.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__262889.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__262889);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__262889);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__262890 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__262890) : cljs.core.key.call(null,G__262890));
})(),(function (){var G__262891 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__262891) : cljs.core.val.call(null,G__262891));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__262895 = cljs.core.next(es);
var G__262896 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__262892 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__262892) : cljs.core.key.call(null,G__262892));
})(),(function (){var G__262893 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__262893) : cljs.core.val.call(null,G__262893));
})());
es = G__262895;
tcoll__$2 = G__262896;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__262897 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__262898 = (i + (2));
out = G__262897;
i = G__262898;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__262901 = cljs.core.aclone(arr);
(G__262901[i] = a);

return G__262901;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__262902 = cljs.core.aclone(arr);
(G__262902[i] = a);

(G__262902[j] = b);

return G__262902;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__262907 = init__$1;
var G__262908 = k;
var G__262909 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262907,G__262908,G__262909) : f.call(null,G__262907,G__262908,G__262909));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262910 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262910) : cljs.core.deref.call(null,G__262910));
} else {
var G__262911 = (i + (2));
var G__262912 = init__$2;
i = G__262911;
init__$1 = G__262912;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__262913 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__262913) : cljs.core.create_inode_seq.call(null,G__262913));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_262927 = (0);
var j_262928 = (0);
while(true){
if((i_262927 < (32))){
if((((self__.bitmap >>> i_262927) & (1)) === (0))){
var G__262929 = (i_262927 + (1));
var G__262930 = j_262928;
i_262927 = G__262929;
j_262928 = G__262930;
continue;
} else {
(nodes[i_262927] = ((!(((self__.arr[j_262928]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_262928])),(self__.arr[j_262928]),(self__.arr[(j_262928 + (1))]),added_leaf_QMARK_):(self__.arr[(j_262928 + (1))])));

var G__262931 = (i_262927 + (1));
var G__262932 = (j_262928 + (2));
i_262927 = G__262931;
j_262928 = G__262932;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__262914 = edit__$1;
var G__262915 = (shift + (5));
var G__262916 = key_or_nil;
var G__262917 = val_or_node;
var G__262918 = hash;
var G__262919 = key;
var G__262920 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__262914,G__262915,G__262916,G__262917,G__262918,G__262919,G__262920) : cljs.core.create_node.call(null,G__262914,G__262915,G__262916,G__262917,G__262918,G__262919,G__262920));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_262933 = (0);
var j_262934 = (0);
while(true){
if((i_262933 < (32))){
if((((self__.bitmap >>> i_262933) & (1)) === (0))){
var G__262935 = (i_262933 + (1));
var G__262936 = j_262934;
i_262933 = G__262935;
j_262934 = G__262936;
continue;
} else {
(nodes[i_262933] = ((!(((self__.arr[j_262934]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_262934])),(self__.arr[j_262934]),(self__.arr[(j_262934 + (1))]),added_leaf_QMARK_):(self__.arr[(j_262934 + (1))])));

var G__262937 = (i_262933 + (1));
var G__262938 = (j_262934 + (2));
i_262933 = G__262937;
j_262934 = G__262938;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__262921 = (shift + (5));
var G__262922 = key_or_nil;
var G__262923 = val_or_node;
var G__262924 = hash;
var G__262925 = key;
var G__262926 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__262921,G__262922,G__262923,G__262924,G__262925,G__262926) : cljs.core.create_node.call(null,G__262921,G__262922,G__262923,G__262924,G__262925,G__262926));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__262939 = (i + (1));
var G__262940 = (j + (2));
var G__262941 = (bitmap | ((1) << i));
i = G__262939;
j = G__262940;
bitmap = G__262941;
continue;
} else {
var G__262942 = (i + (1));
var G__262943 = j;
var G__262944 = bitmap;
i = G__262942;
j = G__262943;
bitmap = G__262944;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__262945 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__262945) : cljs.core.create_array_node_seq.call(null,G__262945));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__262946 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262946) : cljs.core.deref.call(null,G__262946));
} else {
var G__262947 = (i + (1));
var G__262948 = init__$2;
i = G__262947;
init__$1 = G__262948;
continue;
}
} else {
var G__262949 = (i + (1));
var G__262950 = init__$1;
i = G__262949;
init__$1 = G__262950;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__262951 = (i + (2));
i = G__262951;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__262952 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__262952) : cljs.core.create_inode_seq.call(null,G__262952));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__262953 = self__.nodes;
var G__262954 = (self__.i + (2));
var G__262955 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__262953,G__262954,G__262955) : cljs.core.create_inode_seq.call(null,G__262953,G__262954,G__262955));
} else {
var G__262956 = self__.nodes;
var G__262957 = self__.i;
var G__262958 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__262956,G__262957,G__262958) : cljs.core.create_inode_seq.call(null,G__262956,G__262957,G__262958));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__262962 = (j + (2));
j = G__262962;
continue;
}
} else {
var G__262963 = (j + (2));
j = G__262963;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__262964 = null;
var G__262965 = self__.nodes;
var G__262966 = self__.i;
var G__262967 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__262964,G__262965,G__262966,G__262967) : cljs.core.create_array_node_seq.call(null,G__262964,G__262965,G__262966,G__262967));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__262972 = (j + (1));
j = G__262972;
continue;
}
} else {
var G__262973 = (j + (1));
j = G__262973;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__262975 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__262975) : cljs.core.keys.call(null,G__262975));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__262976 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__262976) : cljs.core.vals.call(null,G__262976));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__262977 = cljs.core.seq(coll);
var chunk__262978 = null;
var count__262979 = (0);
var i__262980 = (0);
while(true){
if((i__262980 < count__262979)){
var vec__262981 = chunk__262978.cljs$core$IIndexed$_nth$arity$2(null,i__262980);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262981,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262981,(1),null);
var G__262982_262993 = v;
var G__262983_262994 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262982_262993,G__262983_262994) : f.call(null,G__262982_262993,G__262983_262994));

var G__262995 = seq__262977;
var G__262996 = chunk__262978;
var G__262997 = count__262979;
var G__262998 = (i__262980 + (1));
seq__262977 = G__262995;
chunk__262978 = G__262996;
count__262979 = G__262997;
i__262980 = G__262998;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__262977);
if(temp__4126__auto__){
var seq__262977__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__262977__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__262977__$1);
var G__262999 = cljs.core.chunk_rest(seq__262977__$1);
var G__263000 = c__4768__auto__;
var G__263001 = cljs.core.count(c__4768__auto__);
var G__263002 = (0);
seq__262977 = G__262999;
chunk__262978 = G__263000;
count__262979 = G__263001;
i__262980 = G__263002;
continue;
} else {
var vec__262984 = cljs.core.first(seq__262977__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262984,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__262984,(1),null);
var G__262985_263003 = v;
var G__262986_263004 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__262985_263003,G__262986_263004) : f.call(null,G__262985_263003,G__262986_263004));

var G__263005 = cljs.core.next(seq__262977__$1);
var G__263006 = null;
var G__263007 = (0);
var G__263008 = (0);
seq__262977 = G__263005;
chunk__262978 = G__263006;
count__262979 = G__263007;
i__262980 = G__263008;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__262987 = init;
var G__262988 = null;
var G__262989 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__262987,G__262988,G__262989) : f.call(null,G__262987,G__262988,G__262989));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__262990 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__262990) : cljs.core.deref.call(null,G__262990));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj262992 = {};
return obj262992;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__263009 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__263010 = cljs.core.next(es);
ret = G__263009;
es = G__263010;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__263011 = null;
var G__263011__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263011__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263011 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263011__2.call(this,self__,k);
case 3:
return G__263011__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263011.cljs$core$IFn$_invoke$arity$2 = G__263011__2;
G__263011.cljs$core$IFn$_invoke$arity$3 = G__263011__3;
return G__263011;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args262974){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args262974)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__263012 = (i + (2));
var G__263013 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__263012;
ret = G__263013;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__263014 = (i + (1));
var G__263015 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__263014;
out = G__263015;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__263016 = o;
if(G__263016){
var bit__4662__auto__ = (G__263016.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__263016.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__263016.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__263016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__263016);
}
})()){
return tcoll.assoc_BANG_((function (){var G__263017 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__263017) : cljs.core.key.call(null,G__263017));
})(),(function (){var G__263018 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__263018) : cljs.core.val.call(null,G__263018));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__263021 = cljs.core.next(es);
var G__263022 = tcoll__$1.assoc_BANG_((function (){var G__263019 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__263019) : cljs.core.key.call(null,G__263019));
})(),(function (){var G__263020 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__263020) : cljs.core.val.call(null,G__263020));
})());
es = G__263021;
tcoll__$1 = G__263022;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__263023 = ((ascending_QMARK_)?t.left:t.right);
var G__263024 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__263023;
stack__$1 = G__263024;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__263037 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263037) : cljs.core.deref.call(null,G__263037));
} else {
var init__$2 = (function (){var G__263038 = init__$1;
var G__263039 = node.key;
var G__263040 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__263038,G__263039,G__263040) : f.call(null,G__263038,G__263039,G__263040));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__263041 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263041) : cljs.core.deref.call(null,G__263041));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__263042 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263042) : cljs.core.deref.call(null,G__263042));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__263044 = null;
var G__263044__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263044__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263044 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263044__2.call(this,self__,k);
case 3:
return G__263044__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263044.cljs$core$IFn$_invoke$arity$2 = G__263044__2;
G__263044.cljs$core$IFn$_invoke$arity$3 = G__263044__3;
return G__263044;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args263043){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263043)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__263046 = null;
var G__263046__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263046__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263046 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263046__2.call(this,self__,k);
case 3:
return G__263046__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263046.cljs$core$IFn$_invoke$arity$2 = G__263046__2;
G__263046.cljs$core$IFn$_invoke$arity$3 = G__263046__3;
return G__263046;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args263045){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263045)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__263059 = k;
var G__263060 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__263059,G__263060) : comp.call(null,G__263059,G__263060));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__263079 = k;
var G__263080 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__263079,G__263080) : comp.call(null,G__263079,G__263080));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__263091 = k;
var G__263092 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__263091,G__263092) : comp.call(null,G__263091,G__263092));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__263094 = cljs.core.seq(coll);
var chunk__263095 = null;
var count__263096 = (0);
var i__263097 = (0);
while(true){
if((i__263097 < count__263096)){
var vec__263098 = chunk__263095.cljs$core$IIndexed$_nth$arity$2(null,i__263097);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263098,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263098,(1),null);
var G__263099_263111 = v;
var G__263100_263112 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263099_263111,G__263100_263112) : f.call(null,G__263099_263111,G__263100_263112));

var G__263113 = seq__263094;
var G__263114 = chunk__263095;
var G__263115 = count__263096;
var G__263116 = (i__263097 + (1));
seq__263094 = G__263113;
chunk__263095 = G__263114;
count__263096 = G__263115;
i__263097 = G__263116;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__263094);
if(temp__4126__auto__){
var seq__263094__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__263094__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__263094__$1);
var G__263117 = cljs.core.chunk_rest(seq__263094__$1);
var G__263118 = c__4768__auto__;
var G__263119 = cljs.core.count(c__4768__auto__);
var G__263120 = (0);
seq__263094 = G__263117;
chunk__263095 = G__263118;
count__263096 = G__263119;
i__263097 = G__263120;
continue;
} else {
var vec__263101 = cljs.core.first(seq__263094__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263101,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263101,(1),null);
var G__263102_263121 = v;
var G__263103_263122 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263102_263121,G__263103_263122) : f.call(null,G__263102_263121,G__263103_263122));

var G__263123 = cljs.core.next(seq__263094__$1);
var G__263124 = null;
var G__263125 = (0);
var G__263126 = (0);
seq__263094 = G__263123;
chunk__263095 = G__263124;
count__263096 = G__263125;
i__263097 = G__263126;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__263104 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__263104) : cljs.core.keys.call(null,G__263104));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__263105 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__263105) : cljs.core.vals.call(null,G__263105));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__263106 = k;
var G__263107 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__263106,G__263107) : self__.comp.call(null,G__263106,G__263107));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__263127 = t.left;
t = G__263127;
continue;
} else {
var G__263128 = t.right;
t = G__263128;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__263129 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__263130 = cljs.core.next(es);
ret = G__263129;
es = G__263130;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__263131 = null;
var G__263131__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263131__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263131 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263131__2.call(this,self__,k);
case 3:
return G__263131__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263131.cljs$core$IFn$_invoke$arity$2 = G__263131__2;
G__263131.cljs$core$IFn$_invoke$arity$3 = G__263131__3;
return G__263131;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args263093){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263093)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__263108 = k;
var G__263109 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__263108,G__263109) : self__.comp.call(null,G__263108,G__263109));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__263132 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__263133 = t.left;
stack = G__263132;
t = G__263133;
continue;
} else {
var G__263134 = stack;
var G__263135 = t.right;
stack = G__263134;
t = G__263135;
continue;
}
} else {
if((c > (0))){
var G__263136 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__263137 = t.right;
stack = G__263136;
t = G__263137;
continue;
} else {
var G__263138 = stack;
var G__263139 = t.left;
stack = G__263138;
t = G__263139;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__263110 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__263110) : cljs.core.key.call(null,G__263110));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__263140 = cljs.core.nnext(in$);
var G__263141 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__263140;
out = G__263141;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__263142__i = 0, G__263142__a = new Array(arguments.length -  0);
while (G__263142__i < G__263142__a.length) {G__263142__a[G__263142__i] = arguments[G__263142__i + 0]; ++G__263142__i;}
  keyvals = new cljs.core.IndexedSeq(G__263142__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__263143){
var keyvals = cljs.core.seq(arglist__263143);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__263144__i = 0, G__263144__a = new Array(arguments.length -  0);
while (G__263144__i < G__263144__a.length) {G__263144__a[G__263144__i] = arguments[G__263144__i + 0]; ++G__263144__i;}
  keyvals = new cljs.core.IndexedSeq(G__263144__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__263145){
var keyvals = cljs.core.seq(arglist__263145);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj263149 = {};
return obj263149;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__263150 = cljs.core.nnext(kvs);
kvs = G__263150;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__263151__i = 0, G__263151__a = new Array(arguments.length -  0);
while (G__263151__i < G__263151__a.length) {G__263151__a[G__263151__i] = arguments[G__263151__i + 0]; ++G__263151__i;}
  keyvals = new cljs.core.IndexedSeq(G__263151__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__263152){
var keyvals = cljs.core.seq(arglist__263152);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__263153 = cljs.core.nnext(in$);
var G__263154 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__263153;
out = G__263154;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__263155__i = 0, G__263155__a = new Array(arguments.length -  0);
while (G__263155__i < G__263155__a.length) {G__263155__a[G__263155__i] = arguments[G__263155__i + 0]; ++G__263155__i;}
  keyvals = new cljs.core.IndexedSeq(G__263155__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__263156){
var keyvals = cljs.core.seq(arglist__263156);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__263157 = cljs.core.nnext(in$);
var G__263158 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__263157;
out = G__263158;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__263159__i = 0, G__263159__a = new Array(arguments.length -  1);
while (G__263159__i < G__263159__a.length) {G__263159__a[G__263159__i] = arguments[G__263159__i + 1]; ++G__263159__i;}
  keyvals = new cljs.core.IndexedSeq(G__263159__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__263160){
var comparator = cljs.core.first(arglist__263160);
var keyvals = cljs.core.rest(arglist__263160);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__263161 = self__.mseq;
if(G__263161){
var bit__4662__auto__ = (G__263161.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__263161.cljs$core$INext$)){
return true;
} else {
if((!G__263161.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263161);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263161);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__263162 = self__.mseq;
if(G__263162){
var bit__4662__auto__ = (G__263162.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__263162.cljs$core$INext$)){
return true;
} else {
if((!G__263162.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263162);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263162);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__263163 = self__.mseq;
if(G__263163){
var bit__4662__auto__ = (G__263163.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__263163.cljs$core$INext$)){
return true;
} else {
if((!G__263163.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263163);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263163);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__263164 = self__.mseq;
if(G__263164){
var bit__4662__auto__ = (G__263164.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__263164.cljs$core$INext$)){
return true;
} else {
if((!G__263164.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263164);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__263164);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__263165_SHARP_,p2__263166_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = p1__263165_SHARP_;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__263166_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__263167__i = 0, G__263167__a = new Array(arguments.length -  0);
while (G__263167__i < G__263167__a.length) {G__263167__a[G__263167__i] = arguments[G__263167__i + 0]; ++G__263167__i;}
  maps = new cljs.core.IndexedSeq(G__263167__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__263168){
var maps = cljs.core.seq(arglist__263168);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__263171 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__263172 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263171,G__263172) : f.call(null,G__263171,G__263172));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3981__auto__ = m1;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__263173__i = 0, G__263173__a = new Array(arguments.length -  1);
while (G__263173__i < G__263173__a.length) {G__263173__a[G__263173__i] = arguments[G__263173__i + 1]; ++G__263173__i;}
  maps = new cljs.core.IndexedSeq(G__263173__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__263174){
var f = cljs.core.first(arglist__263174);
var maps = cljs.core.rest(arglist__263174);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__263175 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__263176 = cljs.core.next(keys);
ret = G__263175;
keys = G__263176;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__263179 = cljs.core.seq(coll);
var chunk__263180 = null;
var count__263181 = (0);
var i__263182 = (0);
while(true){
if((i__263182 < count__263181)){
var vec__263183 = chunk__263180.cljs$core$IIndexed$_nth$arity$2(null,i__263182);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263183,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263183,(1),null);
var G__263184_263189 = v;
var G__263185_263190 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263184_263189,G__263185_263190) : f.call(null,G__263184_263189,G__263185_263190));

var G__263191 = seq__263179;
var G__263192 = chunk__263180;
var G__263193 = count__263181;
var G__263194 = (i__263182 + (1));
seq__263179 = G__263191;
chunk__263180 = G__263192;
count__263181 = G__263193;
i__263182 = G__263194;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__263179);
if(temp__4126__auto__){
var seq__263179__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__263179__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__263179__$1);
var G__263195 = cljs.core.chunk_rest(seq__263179__$1);
var G__263196 = c__4768__auto__;
var G__263197 = cljs.core.count(c__4768__auto__);
var G__263198 = (0);
seq__263179 = G__263195;
chunk__263180 = G__263196;
count__263181 = G__263197;
i__263182 = G__263198;
continue;
} else {
var vec__263186 = cljs.core.first(seq__263179__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263186,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263186,(1),null);
var G__263187_263199 = v;
var G__263188_263200 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263187_263199,G__263188_263200) : f.call(null,G__263187_263199,G__263188_263200));

var G__263201 = cljs.core.next(seq__263179__$1);
var G__263202 = null;
var G__263203 = (0);
var G__263204 = (0);
seq__263179 = G__263201;
chunk__263180 = G__263202;
count__263181 = G__263203;
i__263182 = G__263204;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__263177_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__263177_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__263205 = null;
var G__263205__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263205__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263205 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263205__2.call(this,self__,k);
case 3:
return G__263205__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263205.cljs$core$IFn$_invoke$arity$2 = G__263205__2;
G__263205.cljs$core$IFn$_invoke$arity$3 = G__263205__3;
return G__263205;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args263178){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263178)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__263206 = (i + (1));
var G__263207 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__263206;
out = G__263207;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__263208 = (i + (1));
var G__263209 = cljs.core._conj_BANG_(out,(items[i]));
i = G__263208;
out = G__263209;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__263211 = null;
var G__263211__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__263211__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__263211 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263211__2.call(this,self__,k);
case 3:
return G__263211__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263211.cljs$core$IFn$_invoke$arity$2 = G__263211__2;
G__263211.cljs$core$IFn$_invoke$arity$3 = G__263211__3;
return G__263211;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args263210){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263210)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__263214 = cljs.core.seq(coll);
var chunk__263215 = null;
var count__263216 = (0);
var i__263217 = (0);
while(true){
if((i__263217 < count__263216)){
var vec__263218 = chunk__263215.cljs$core$IIndexed$_nth$arity$2(null,i__263217);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263218,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263218,(1),null);
var G__263219_263224 = v;
var G__263220_263225 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263219_263224,G__263220_263225) : f.call(null,G__263219_263224,G__263220_263225));

var G__263226 = seq__263214;
var G__263227 = chunk__263215;
var G__263228 = count__263216;
var G__263229 = (i__263217 + (1));
seq__263214 = G__263226;
chunk__263215 = G__263227;
count__263216 = G__263228;
i__263217 = G__263229;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__263214);
if(temp__4126__auto__){
var seq__263214__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__263214__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__263214__$1);
var G__263230 = cljs.core.chunk_rest(seq__263214__$1);
var G__263231 = c__4768__auto__;
var G__263232 = cljs.core.count(c__4768__auto__);
var G__263233 = (0);
seq__263214 = G__263230;
chunk__263215 = G__263231;
count__263216 = G__263232;
i__263217 = G__263233;
continue;
} else {
var vec__263221 = cljs.core.first(seq__263214__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263221,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263221,(1),null);
var G__263222_263234 = v;
var G__263223_263235 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263222_263234,G__263223_263235) : f.call(null,G__263222_263234,G__263223_263235));

var G__263236 = cljs.core.next(seq__263214__$1);
var G__263237 = null;
var G__263238 = (0);
var G__263239 = (0);
seq__263214 = G__263236;
chunk__263215 = G__263237;
count__263216 = G__263238;
i__263217 = G__263239;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__263212_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__263212_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__263240 = null;
var G__263240__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__263240__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__263240 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__263240__2.call(this,self__,k);
case 3:
return G__263240__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263240.cljs$core$IFn$_invoke$arity$2 = G__263240__2;
G__263240.cljs$core$IFn$_invoke$arity$3 = G__263240__3;
return G__263240;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args263213){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args263213)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4862__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4862__auto__.length)){
var G__263241 = (i + (1));
var G__263242 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__263241;
res = G__263242;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__263243 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__263244 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__263243;
out = G__263244;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__263245__delegate = function (keys){
return cljs.core.set(keys);
};
var G__263245 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__263246__i = 0, G__263246__a = new Array(arguments.length -  0);
while (G__263246__i < G__263246__a.length) {G__263246__a[G__263246__i] = arguments[G__263246__i + 0]; ++G__263246__i;}
  keys = new cljs.core.IndexedSeq(G__263246__a,0);
} 
return G__263245__delegate.call(this,keys);};
G__263245.cljs$lang$maxFixedArity = 0;
G__263245.cljs$lang$applyTo = (function (arglist__263247){
var keys = cljs.core.seq(arglist__263247);
return G__263245__delegate(keys);
});
G__263245.cljs$core$IFn$_invoke$arity$variadic = G__263245__delegate;
return G__263245;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__263248 = null;
if (arguments.length > 0) {
var G__263249__i = 0, G__263249__a = new Array(arguments.length -  0);
while (G__263249__i < G__263249__a.length) {G__263249__a[G__263249__i] = arguments[G__263249__i + 0]; ++G__263249__i;}
G__263248 = new cljs.core.IndexedSeq(G__263249__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__263248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__263250__i = 0, G__263250__a = new Array(arguments.length -  0);
while (G__263250__i < G__263250__a.length) {G__263250__a[G__263250__i] = arguments[G__263250__i + 0]; ++G__263250__i;}
  keys = new cljs.core.IndexedSeq(G__263250__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__263251){
var keys = cljs.core.seq(arglist__263251);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__263252__i = 0, G__263252__a = new Array(arguments.length -  1);
while (G__263252__i < G__263252__a.length) {G__263252__a[G__263252__i] = arguments[G__263252__i + 1]; ++G__263252__i;}
  keys = new cljs.core.IndexedSeq(G__263252__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__263253){
var comparator = cljs.core.first(arglist__263253);
var keys = cljs.core.rest(arglist__263253);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__263254_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__263254_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__263254_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__263255_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__263255_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__263255_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__263276 = null;
var G__263276__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263276__1 = (function (result){
var G__263266 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263266) : rf.call(null,G__263266));
});
var G__263276__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__263267 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263267) : cljs.core.deref.call(null,G__263267));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__263268 = result;
var G__263269 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263268,G__263269) : rf.call(null,G__263268,G__263269));
}
});
G__263276 = function(result,input){
switch(arguments.length){
case 0:
return G__263276__0.call(this);
case 1:
return G__263276__1.call(this,result);
case 2:
return G__263276__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263276.cljs$core$IFn$_invoke$arity$0 = G__263276__0;
G__263276.cljs$core$IFn$_invoke$arity$1 = G__263276__1;
G__263276.cljs$core$IFn$_invoke$arity$2 = G__263276__2;
return G__263276;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__263274,seen__$1){
while(true){
var vec__263275 = p__263274;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263275,(0),null);
var xs__$1 = vec__263275;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__263277 = cljs.core.rest(s);
var G__263278 = seen__$1;
p__263274 = G__263277;
seen__$1 = G__263278;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__263279 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__263280 = cljs.core.next(s__$1);
ret = G__263279;
s__$1 = G__263280;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__263282 = x;
if(G__263282){
var bit__4655__auto__ = (G__263282.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__263282.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__263283 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__263284 = cljs.core.next(ks);
var G__263285 = cljs.core.next(vs);
map = G__263283;
ks = G__263284;
vs = G__263285;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__263296 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__263296) : k.call(null,G__263296));
})() > (function (){var G__263297 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__263297) : k.call(null,G__263297));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__263298__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__263286_SHARP_,p2__263287_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__263286_SHARP_,p2__263287_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__263298 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__263299__i = 0, G__263299__a = new Array(arguments.length -  3);
while (G__263299__i < G__263299__a.length) {G__263299__a[G__263299__i] = arguments[G__263299__i + 3]; ++G__263299__i;}
  more = new cljs.core.IndexedSeq(G__263299__a,0);
} 
return G__263298__delegate.call(this,k,x,y,more);};
G__263298.cljs$lang$maxFixedArity = 3;
G__263298.cljs$lang$applyTo = (function (arglist__263300){
var k = cljs.core.first(arglist__263300);
arglist__263300 = cljs.core.next(arglist__263300);
var x = cljs.core.first(arglist__263300);
arglist__263300 = cljs.core.next(arglist__263300);
var y = cljs.core.first(arglist__263300);
var more = cljs.core.rest(arglist__263300);
return G__263298__delegate(k,x,y,more);
});
G__263298.cljs$core$IFn$_invoke$arity$variadic = G__263298__delegate;
return G__263298;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__263301 = null;
if (arguments.length > 3) {
var G__263302__i = 0, G__263302__a = new Array(arguments.length -  3);
while (G__263302__i < G__263302__a.length) {G__263302__a[G__263302__i] = arguments[G__263302__i + 3]; ++G__263302__i;}
G__263301 = new cljs.core.IndexedSeq(G__263302__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__263301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__263313 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__263313) : k.call(null,G__263313));
})() < (function (){var G__263314 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__263314) : k.call(null,G__263314));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__263315__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__263303_SHARP_,p2__263304_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__263303_SHARP_,p2__263304_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__263315 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__263316__i = 0, G__263316__a = new Array(arguments.length -  3);
while (G__263316__i < G__263316__a.length) {G__263316__a[G__263316__i] = arguments[G__263316__i + 3]; ++G__263316__i;}
  more = new cljs.core.IndexedSeq(G__263316__a,0);
} 
return G__263315__delegate.call(this,k,x,y,more);};
G__263315.cljs$lang$maxFixedArity = 3;
G__263315.cljs$lang$applyTo = (function (arglist__263317){
var k = cljs.core.first(arglist__263317);
arglist__263317 = cljs.core.next(arglist__263317);
var x = cljs.core.first(arglist__263317);
arglist__263317 = cljs.core.next(arglist__263317);
var y = cljs.core.first(arglist__263317);
var more = cljs.core.rest(arglist__263317);
return G__263315__delegate(k,x,y,more);
});
G__263315.cljs$core$IFn$_invoke$arity$variadic = G__263315__delegate;
return G__263315;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__263318 = null;
if (arguments.length > 3) {
var G__263319__i = 0, G__263319__a = new Array(arguments.length -  3);
while (G__263319__i < G__263319__a.length) {G__263319__a[G__263319__i] = arguments[G__263319__i + 3]; ++G__263319__i;}
G__263318 = new cljs.core.IndexedSeq(G__263319__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__263318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__263336 = null;
var G__263336__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263336__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__263331 = result;
var G__263332 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263331,G__263332) : rf.call(null,G__263331,G__263332));
})());
})());
var G__263333 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263333) : rf.call(null,G__263333));
});
var G__263336__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__263334 = result;
var G__263335 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263334,G__263335) : rf.call(null,G__263334,G__263335));
} else {
return result;
}
});
G__263336 = function(result,input){
switch(arguments.length){
case 0:
return G__263336__0.call(this);
case 1:
return G__263336__1.call(this,result);
case 2:
return G__263336__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263336.cljs$core$IFn$_invoke$arity$0 = G__263336__0;
G__263336.cljs$core$IFn$_invoke$arity$1 = G__263336__1;
G__263336.cljs$core$IFn$_invoke$arity$2 = G__263336__2;
return G__263336;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__263349 = null;
var G__263349__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263349__1 = (function (result){
var G__263344 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263344) : rf.call(null,G__263344));
});
var G__263349__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__263345 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__263345) : pred.call(null,G__263345));
})())){
var G__263346 = result;
var G__263347 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263346,G__263347) : rf.call(null,G__263346,G__263347));
} else {
return cljs.core.reduced(result);
}
});
G__263349 = function(result,input){
switch(arguments.length){
case 0:
return G__263349__0.call(this);
case 1:
return G__263349__1.call(this,result);
case 2:
return G__263349__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263349.cljs$core$IFn$_invoke$arity$0 = G__263349__0;
G__263349.cljs$core$IFn$_invoke$arity$1 = G__263349__1;
G__263349.cljs$core$IFn$_invoke$arity$2 = G__263349__2;
return G__263349;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__263348 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__263348) : pred.call(null,G__263348));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__263354 = (function (){var G__263356 = cljs.core._entry_key(sc,e);
var G__263357 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__263356,G__263357) : comp.call(null,G__263356,G__263357));
})();
var G__263355 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__263354,G__263355) : test.call(null,G__263354,G__263355));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__263361 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263361,(0),null);
var s = vec__263361;
if(cljs.core.truth_((function (){var G__263362 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__263362) : include.call(null,G__263362));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__263363 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263363,(0),null);
var s = vec__263363;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__263367 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263367,(0),null);
var s = vec__263367;
if(cljs.core.truth_((function (){var G__263368 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__263368) : include.call(null,G__263368));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__263369 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263369,(0),null);
var s = vec__263369;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__263370 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__263370) : Math.ceil.call(null,G__263370));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__263371 = ret;
var G__263372 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263371,G__263372) : f.call(null,G__263371,G__263372));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__263373 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263373) : cljs.core.deref.call(null,G__263373));
} else {
var G__263374 = (i + self__.step);
var G__263375 = ret__$1;
i = G__263374;
ret = G__263375;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__263393 = null;
var G__263393__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263393__1 = (function (result){
var G__263390 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263390) : rf.call(null,G__263390));
});
var G__263393__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__263391 = result;
var G__263392 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263391,G__263392) : rf.call(null,G__263391,G__263392));
} else {
return result;
}
});
G__263393 = function(result,input){
switch(arguments.length){
case 0:
return G__263393__0.call(this);
case 1:
return G__263393__1.call(this,result);
case 2:
return G__263393__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263393.cljs$core$IFn$_invoke$arity$0 = G__263393__0;
G__263393.cljs$core$IFn$_invoke$arity$1 = G__263393__1;
G__263393.cljs$core$IFn$_invoke$arity$2 = G__263393__2;
return G__263393;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__263415 = null;
var G__263415__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263415__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__263406 = result;
var G__263407 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263406,G__263407) : rf.call(null,G__263406,G__263407));
})());
})());
var G__263408 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263408) : rf.call(null,G__263408));
});
var G__263415__2 = (function (result,input){
var pval = (function (){var G__263409 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263409) : cljs.core.deref.call(null,G__263409));
})();
var val = (function (){var G__263410 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263410) : f.call(null,G__263410));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__263411 = result;
var G__263412 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263411,G__263412) : rf.call(null,G__263411,G__263412));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__263415 = function(result,input){
switch(arguments.length){
case 0:
return G__263415__0.call(this);
case 1:
return G__263415__1.call(this,result);
case 2:
return G__263415__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263415.cljs$core$IFn$_invoke$arity$0 = G__263415__0;
G__263415.cljs$core$IFn$_invoke$arity$1 = G__263415__1;
G__263415.cljs$core$IFn$_invoke$arity$2 = G__263415__2;
return G__263415;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__263413 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263413) : f.call(null,G__263413));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__263394_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__263414 = p1__263394_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263414) : f.call(null,G__263414));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__263424 = init;
var G__263425 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263424,G__263425) : f.call(null,G__263424,G__263425));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__263520 = null;
var G__263520__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__263520__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263478 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263478) : f.call(null,G__263478));
})()],null));
});
var G__263520__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263479 = x;
var G__263480 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263479,G__263480) : f.call(null,G__263479,G__263480));
})()],null));
});
var G__263520__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263481 = x;
var G__263482 = y;
var G__263483 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__263481,G__263482,G__263483) : f.call(null,G__263481,G__263482,G__263483));
})()],null));
});
var G__263520__4 = (function() { 
var G__263521__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__263521 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__263522__i = 0, G__263522__a = new Array(arguments.length -  3);
while (G__263522__i < G__263522__a.length) {G__263522__a[G__263522__i] = arguments[G__263522__i + 3]; ++G__263522__i;}
  args = new cljs.core.IndexedSeq(G__263522__a,0);
} 
return G__263521__delegate.call(this,x,y,z,args);};
G__263521.cljs$lang$maxFixedArity = 3;
G__263521.cljs$lang$applyTo = (function (arglist__263523){
var x = cljs.core.first(arglist__263523);
arglist__263523 = cljs.core.next(arglist__263523);
var y = cljs.core.first(arglist__263523);
arglist__263523 = cljs.core.next(arglist__263523);
var z = cljs.core.first(arglist__263523);
var args = cljs.core.rest(arglist__263523);
return G__263521__delegate(x,y,z,args);
});
G__263521.cljs$core$IFn$_invoke$arity$variadic = G__263521__delegate;
return G__263521;
})()
;
G__263520 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__263520__0.call(this);
case 1:
return G__263520__1.call(this,x);
case 2:
return G__263520__2.call(this,x,y);
case 3:
return G__263520__3.call(this,x,y,z);
default:
var G__263524 = null;
if (arguments.length > 3) {
var G__263525__i = 0, G__263525__a = new Array(arguments.length -  3);
while (G__263525__i < G__263525__a.length) {G__263525__a[G__263525__i] = arguments[G__263525__i + 3]; ++G__263525__i;}
G__263524 = new cljs.core.IndexedSeq(G__263525__a,0);
}
return G__263520__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__263524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263520.cljs$lang$maxFixedArity = 3;
G__263520.cljs$lang$applyTo = G__263520__4.cljs$lang$applyTo;
G__263520.cljs$core$IFn$_invoke$arity$0 = G__263520__0;
G__263520.cljs$core$IFn$_invoke$arity$1 = G__263520__1;
G__263520.cljs$core$IFn$_invoke$arity$2 = G__263520__2;
G__263520.cljs$core$IFn$_invoke$arity$3 = G__263520__3;
G__263520.cljs$core$IFn$_invoke$arity$variadic = G__263520__4.cljs$core$IFn$_invoke$arity$variadic;
return G__263520;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__263526 = null;
var G__263526__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__263526__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263484 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263484) : f.call(null,G__263484));
})(),(function (){var G__263485 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__263485) : g.call(null,G__263485));
})()],null));
});
var G__263526__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263486 = x;
var G__263487 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263486,G__263487) : f.call(null,G__263486,G__263487));
})(),(function (){var G__263488 = x;
var G__263489 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__263488,G__263489) : g.call(null,G__263488,G__263489));
})()],null));
});
var G__263526__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263490 = x;
var G__263491 = y;
var G__263492 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__263490,G__263491,G__263492) : f.call(null,G__263490,G__263491,G__263492));
})(),(function (){var G__263493 = x;
var G__263494 = y;
var G__263495 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__263493,G__263494,G__263495) : g.call(null,G__263493,G__263494,G__263495));
})()],null));
});
var G__263526__4 = (function() { 
var G__263527__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__263527 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__263528__i = 0, G__263528__a = new Array(arguments.length -  3);
while (G__263528__i < G__263528__a.length) {G__263528__a[G__263528__i] = arguments[G__263528__i + 3]; ++G__263528__i;}
  args = new cljs.core.IndexedSeq(G__263528__a,0);
} 
return G__263527__delegate.call(this,x,y,z,args);};
G__263527.cljs$lang$maxFixedArity = 3;
G__263527.cljs$lang$applyTo = (function (arglist__263529){
var x = cljs.core.first(arglist__263529);
arglist__263529 = cljs.core.next(arglist__263529);
var y = cljs.core.first(arglist__263529);
arglist__263529 = cljs.core.next(arglist__263529);
var z = cljs.core.first(arglist__263529);
var args = cljs.core.rest(arglist__263529);
return G__263527__delegate(x,y,z,args);
});
G__263527.cljs$core$IFn$_invoke$arity$variadic = G__263527__delegate;
return G__263527;
})()
;
G__263526 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__263526__0.call(this);
case 1:
return G__263526__1.call(this,x);
case 2:
return G__263526__2.call(this,x,y);
case 3:
return G__263526__3.call(this,x,y,z);
default:
var G__263530 = null;
if (arguments.length > 3) {
var G__263531__i = 0, G__263531__a = new Array(arguments.length -  3);
while (G__263531__i < G__263531__a.length) {G__263531__a[G__263531__i] = arguments[G__263531__i + 3]; ++G__263531__i;}
G__263530 = new cljs.core.IndexedSeq(G__263531__a,0);
}
return G__263526__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__263530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263526.cljs$lang$maxFixedArity = 3;
G__263526.cljs$lang$applyTo = G__263526__4.cljs$lang$applyTo;
G__263526.cljs$core$IFn$_invoke$arity$0 = G__263526__0;
G__263526.cljs$core$IFn$_invoke$arity$1 = G__263526__1;
G__263526.cljs$core$IFn$_invoke$arity$2 = G__263526__2;
G__263526.cljs$core$IFn$_invoke$arity$3 = G__263526__3;
G__263526.cljs$core$IFn$_invoke$arity$variadic = G__263526__4.cljs$core$IFn$_invoke$arity$variadic;
return G__263526;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__263532 = null;
var G__263532__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__263532__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263496 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263496) : f.call(null,G__263496));
})(),(function (){var G__263497 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__263497) : g.call(null,G__263497));
})(),(function (){var G__263498 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__263498) : h.call(null,G__263498));
})()],null));
});
var G__263532__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263499 = x;
var G__263500 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__263499,G__263500) : f.call(null,G__263499,G__263500));
})(),(function (){var G__263501 = x;
var G__263502 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__263501,G__263502) : g.call(null,G__263501,G__263502));
})(),(function (){var G__263503 = x;
var G__263504 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__263503,G__263504) : h.call(null,G__263503,G__263504));
})()],null));
});
var G__263532__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__263505 = x;
var G__263506 = y;
var G__263507 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__263505,G__263506,G__263507) : f.call(null,G__263505,G__263506,G__263507));
})(),(function (){var G__263508 = x;
var G__263509 = y;
var G__263510 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__263508,G__263509,G__263510) : g.call(null,G__263508,G__263509,G__263510));
})(),(function (){var G__263511 = x;
var G__263512 = y;
var G__263513 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__263511,G__263512,G__263513) : h.call(null,G__263511,G__263512,G__263513));
})()],null));
});
var G__263532__4 = (function() { 
var G__263533__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__263533 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__263534__i = 0, G__263534__a = new Array(arguments.length -  3);
while (G__263534__i < G__263534__a.length) {G__263534__a[G__263534__i] = arguments[G__263534__i + 3]; ++G__263534__i;}
  args = new cljs.core.IndexedSeq(G__263534__a,0);
} 
return G__263533__delegate.call(this,x,y,z,args);};
G__263533.cljs$lang$maxFixedArity = 3;
G__263533.cljs$lang$applyTo = (function (arglist__263535){
var x = cljs.core.first(arglist__263535);
arglist__263535 = cljs.core.next(arglist__263535);
var y = cljs.core.first(arglist__263535);
arglist__263535 = cljs.core.next(arglist__263535);
var z = cljs.core.first(arglist__263535);
var args = cljs.core.rest(arglist__263535);
return G__263533__delegate(x,y,z,args);
});
G__263533.cljs$core$IFn$_invoke$arity$variadic = G__263533__delegate;
return G__263533;
})()
;
G__263532 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__263532__0.call(this);
case 1:
return G__263532__1.call(this,x);
case 2:
return G__263532__2.call(this,x,y);
case 3:
return G__263532__3.call(this,x,y,z);
default:
var G__263536 = null;
if (arguments.length > 3) {
var G__263537__i = 0, G__263537__a = new Array(arguments.length -  3);
while (G__263537__i < G__263537__a.length) {G__263537__a[G__263537__i] = arguments[G__263537__i + 3]; ++G__263537__i;}
G__263536 = new cljs.core.IndexedSeq(G__263537__a,0);
}
return G__263532__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__263536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263532.cljs$lang$maxFixedArity = 3;
G__263532.cljs$lang$applyTo = G__263532__4.cljs$lang$applyTo;
G__263532.cljs$core$IFn$_invoke$arity$0 = G__263532__0;
G__263532.cljs$core$IFn$_invoke$arity$1 = G__263532__1;
G__263532.cljs$core$IFn$_invoke$arity$2 = G__263532__2;
G__263532.cljs$core$IFn$_invoke$arity$3 = G__263532__3;
G__263532.cljs$core$IFn$_invoke$arity$variadic = G__263532__4.cljs$core$IFn$_invoke$arity$variadic;
return G__263532;
})()
});
var juxt__4 = (function() { 
var G__263538__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__263539 = null;
var G__263539__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__263426_SHARP_,p2__263427_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__263426_SHARP_,(function (){return (p2__263427_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__263427_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__263427_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__263539__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__263428_SHARP_,p2__263429_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__263428_SHARP_,(function (){var G__263514 = x;
return (p2__263429_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__263429_SHARP_.cljs$core$IFn$_invoke$arity$1(G__263514) : p2__263429_SHARP_.call(null,G__263514));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__263539__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__263430_SHARP_,p2__263431_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__263430_SHARP_,(function (){var G__263515 = x;
var G__263516 = y;
return (p2__263431_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__263431_SHARP_.cljs$core$IFn$_invoke$arity$2(G__263515,G__263516) : p2__263431_SHARP_.call(null,G__263515,G__263516));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__263539__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__263432_SHARP_,p2__263433_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__263432_SHARP_,(function (){var G__263517 = x;
var G__263518 = y;
var G__263519 = z;
return (p2__263433_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__263433_SHARP_.cljs$core$IFn$_invoke$arity$3(G__263517,G__263518,G__263519) : p2__263433_SHARP_.call(null,G__263517,G__263518,G__263519));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__263539__4 = (function() { 
var G__263540__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__263434_SHARP_,p2__263435_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__263434_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__263435_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__263540 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__263541__i = 0, G__263541__a = new Array(arguments.length -  3);
while (G__263541__i < G__263541__a.length) {G__263541__a[G__263541__i] = arguments[G__263541__i + 3]; ++G__263541__i;}
  args = new cljs.core.IndexedSeq(G__263541__a,0);
} 
return G__263540__delegate.call(this,x,y,z,args);};
G__263540.cljs$lang$maxFixedArity = 3;
G__263540.cljs$lang$applyTo = (function (arglist__263542){
var x = cljs.core.first(arglist__263542);
arglist__263542 = cljs.core.next(arglist__263542);
var y = cljs.core.first(arglist__263542);
arglist__263542 = cljs.core.next(arglist__263542);
var z = cljs.core.first(arglist__263542);
var args = cljs.core.rest(arglist__263542);
return G__263540__delegate(x,y,z,args);
});
G__263540.cljs$core$IFn$_invoke$arity$variadic = G__263540__delegate;
return G__263540;
})()
;
G__263539 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__263539__0.call(this);
case 1:
return G__263539__1.call(this,x);
case 2:
return G__263539__2.call(this,x,y);
case 3:
return G__263539__3.call(this,x,y,z);
default:
var G__263543 = null;
if (arguments.length > 3) {
var G__263544__i = 0, G__263544__a = new Array(arguments.length -  3);
while (G__263544__i < G__263544__a.length) {G__263544__a[G__263544__i] = arguments[G__263544__i + 3]; ++G__263544__i;}
G__263543 = new cljs.core.IndexedSeq(G__263544__a,0);
}
return G__263539__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__263543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263539.cljs$lang$maxFixedArity = 3;
G__263539.cljs$lang$applyTo = G__263539__4.cljs$lang$applyTo;
G__263539.cljs$core$IFn$_invoke$arity$0 = G__263539__0;
G__263539.cljs$core$IFn$_invoke$arity$1 = G__263539__1;
G__263539.cljs$core$IFn$_invoke$arity$2 = G__263539__2;
G__263539.cljs$core$IFn$_invoke$arity$3 = G__263539__3;
G__263539.cljs$core$IFn$_invoke$arity$variadic = G__263539__4.cljs$core$IFn$_invoke$arity$variadic;
return G__263539;
})()
;})(fs__$1))
};
var G__263538 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__263545__i = 0, G__263545__a = new Array(arguments.length -  3);
while (G__263545__i < G__263545__a.length) {G__263545__a[G__263545__i] = arguments[G__263545__i + 3]; ++G__263545__i;}
  fs = new cljs.core.IndexedSeq(G__263545__a,0);
} 
return G__263538__delegate.call(this,f,g,h,fs);};
G__263538.cljs$lang$maxFixedArity = 3;
G__263538.cljs$lang$applyTo = (function (arglist__263546){
var f = cljs.core.first(arglist__263546);
arglist__263546 = cljs.core.next(arglist__263546);
var g = cljs.core.first(arglist__263546);
arglist__263546 = cljs.core.next(arglist__263546);
var h = cljs.core.first(arglist__263546);
var fs = cljs.core.rest(arglist__263546);
return G__263538__delegate(f,g,h,fs);
});
G__263538.cljs$core$IFn$_invoke$arity$variadic = G__263538__delegate;
return G__263538;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__263547 = null;
if (arguments.length > 3) {
var G__263548__i = 0, G__263548__a = new Array(arguments.length -  3);
while (G__263548__i < G__263548__a.length) {G__263548__a[G__263548__i] = arguments[G__263548__i + 3]; ++G__263548__i;}
G__263547 = new cljs.core.IndexedSeq(G__263548__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__263547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__263549 = cljs.core.next(coll);
coll = G__263549;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__263550 = (n - (1));
var G__263551 = cljs.core.next(coll);
n = G__263550;
coll = G__263551;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__263555 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263555,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263555,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263555,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_263563 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__263564_263570 = cljs.core.first(coll);
var G__263565_263571 = writer;
var G__263566_263572 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__263564_263570,G__263565_263571,G__263566_263572) : print_one.call(null,G__263564_263570,G__263565_263571,G__263566_263572));
} else {
}

var coll_263573__$1 = cljs.core.next(coll);
var n_263574 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_263573__$1) && (((n_263574 == null)) || (!((n_263574 === (0)))))){
cljs.core._write(writer,sep);

var G__263567_263575 = cljs.core.first(coll_263573__$1);
var G__263568_263576 = writer;
var G__263569_263577 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__263567_263575,G__263568_263576,G__263569_263577) : print_one.call(null,G__263567_263575,G__263568_263576,G__263569_263577));

var G__263578 = cljs.core.next(coll_263573__$1);
var G__263579 = (n_263574 - (1));
coll_263573__$1 = G__263578;
n_263574 = G__263579;
continue;
} else {
if((cljs.core.seq(coll_263573__$1)) && ((n_263574 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_263563;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__263584 = cljs.core.seq(ss);
var chunk__263585 = null;
var count__263586 = (0);
var i__263587 = (0);
while(true){
if((i__263587 < count__263586)){
var s = chunk__263585.cljs$core$IIndexed$_nth$arity$2(null,i__263587);
cljs.core._write(writer,s);

var G__263588 = seq__263584;
var G__263589 = chunk__263585;
var G__263590 = count__263586;
var G__263591 = (i__263587 + (1));
seq__263584 = G__263588;
chunk__263585 = G__263589;
count__263586 = G__263590;
i__263587 = G__263591;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__263584);
if(temp__4126__auto__){
var seq__263584__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__263584__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__263584__$1);
var G__263592 = cljs.core.chunk_rest(seq__263584__$1);
var G__263593 = c__4768__auto__;
var G__263594 = cljs.core.count(c__4768__auto__);
var G__263595 = (0);
seq__263584 = G__263592;
chunk__263585 = G__263593;
count__263586 = G__263594;
i__263587 = G__263595;
continue;
} else {
var s = cljs.core.first(seq__263584__$1);
cljs.core._write(writer,s);

var G__263596 = cljs.core.next(seq__263584__$1);
var G__263597 = null;
var G__263598 = (0);
var G__263599 = (0);
seq__263584 = G__263596;
chunk__263585 = G__263597;
count__263586 = G__263598;
i__263587 = G__263599;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__263600__i = 0, G__263600__a = new Array(arguments.length -  1);
while (G__263600__i < G__263600__a.length) {G__263600__a[G__263600__i] = arguments[G__263600__i + 1]; ++G__263600__i;}
  ss = new cljs.core.IndexedSeq(G__263600__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__263601){
var writer = cljs.core.first(arglist__263601);
var ss = cljs.core.rest(arglist__263601);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj263603 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj263603;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__263606 = "[\\\\\"\b\f\n\r\t]";
var G__263607 = "g";
return RegExp(G__263606,G__263607);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__263621 = obj;
if(G__263621){
var bit__4662__auto__ = (G__263621.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__263621.cljs$core$IMeta$)){
return true;
} else {
if((!G__263621.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__263621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__263621);
}
})();
if(and__3969__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__263622_263632 = cljs.core.meta(obj);
var G__263623_263633 = writer;
var G__263624_263634 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__263622_263632,G__263623_263633,G__263624_263634) : cljs.core.pr_writer.call(null,G__263622_263632,G__263623_263633,G__263624_263634));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__263625 = obj;
if(G__263625){
var bit__4655__auto__ = (G__263625.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4655__auto__) || (G__263625.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__263626 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__263627 = cljs.core.pr_writer;
var G__263628 = writer;
var G__263629 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__263626,G__263627,G__263628,G__263629) : cljs.core.print_map.call(null,G__263626,G__263627,G__263628,G__263629));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__263630 = obj;
return goog.isString(G__263630);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__263635 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__263635;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__263631 = obj;
if(G__263631){
var bit__4662__auto__ = (G__263631.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4662__auto__) || (G__263631.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__263631.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__263631);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__263631);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__263639 = obj;
var G__263640 = writer;
var G__263641 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__263639,G__263640,G__263641) : alt_impl.call(null,G__263639,G__263640,G__263641));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__263646 = cljs.core.seq(cljs.core.next(objs));
var chunk__263647 = null;
var count__263648 = (0);
var i__263649 = (0);
while(true){
if((i__263649 < count__263648)){
var obj = chunk__263647.cljs$core$IIndexed$_nth$arity$2(null,i__263649);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__263650 = seq__263646;
var G__263651 = chunk__263647;
var G__263652 = count__263648;
var G__263653 = (i__263649 + (1));
seq__263646 = G__263650;
chunk__263647 = G__263651;
count__263648 = G__263652;
i__263649 = G__263653;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__263646);
if(temp__4126__auto__){
var seq__263646__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__263646__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__263646__$1);
var G__263654 = cljs.core.chunk_rest(seq__263646__$1);
var G__263655 = c__4768__auto__;
var G__263656 = cljs.core.count(c__4768__auto__);
var G__263657 = (0);
seq__263646 = G__263654;
chunk__263647 = G__263655;
count__263648 = G__263656;
i__263649 = G__263657;
continue;
} else {
var obj = cljs.core.first(seq__263646__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__263658 = cljs.core.next(seq__263646__$1);
var G__263659 = null;
var G__263660 = (0);
var G__263661 = (0);
seq__263646 = G__263658;
chunk__263647 = G__263659;
count__263648 = G__263660;
i__263649 = G__263661;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263662__i = 0, G__263662__a = new Array(arguments.length -  0);
while (G__263662__i < G__263662__a.length) {G__263662__a[G__263662__i] = arguments[G__263662__i + 0]; ++G__263662__i;}
  objs = new cljs.core.IndexedSeq(G__263662__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__263663){
var objs = cljs.core.seq(arglist__263663);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263664__i = 0, G__263664__a = new Array(arguments.length -  0);
while (G__263664__i < G__263664__a.length) {G__263664__a[G__263664__i] = arguments[G__263664__i + 0]; ++G__263664__i;}
  objs = new cljs.core.IndexedSeq(G__263664__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__263665){
var objs = cljs.core.seq(arglist__263665);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263666__i = 0, G__263666__a = new Array(arguments.length -  0);
while (G__263666__i < G__263666__a.length) {G__263666__a[G__263666__i] = arguments[G__263666__i + 0]; ++G__263666__i;}
  objs = new cljs.core.IndexedSeq(G__263666__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__263667){
var objs = cljs.core.seq(arglist__263667);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263668__i = 0, G__263668__a = new Array(arguments.length -  0);
while (G__263668__i < G__263668__a.length) {G__263668__a[G__263668__i] = arguments[G__263668__i + 0]; ++G__263668__i;}
  objs = new cljs.core.IndexedSeq(G__263668__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__263669){
var objs = cljs.core.seq(arglist__263669);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263670__i = 0, G__263670__a = new Array(arguments.length -  0);
while (G__263670__i < G__263670__a.length) {G__263670__a[G__263670__i] = arguments[G__263670__i + 0]; ++G__263670__i;}
  objs = new cljs.core.IndexedSeq(G__263670__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__263671){
var objs = cljs.core.seq(arglist__263671);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263672__i = 0, G__263672__a = new Array(arguments.length -  0);
while (G__263672__i < G__263672__a.length) {G__263672__a[G__263672__i] = arguments[G__263672__i + 0]; ++G__263672__i;}
  objs = new cljs.core.IndexedSeq(G__263672__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__263673){
var objs = cljs.core.seq(arglist__263673);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263674__i = 0, G__263674__a = new Array(arguments.length -  0);
while (G__263674__i < G__263674__a.length) {G__263674__a[G__263674__i] = arguments[G__263674__i + 0]; ++G__263674__i;}
  objs = new cljs.core.IndexedSeq(G__263674__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__263675){
var objs = cljs.core.seq(arglist__263675);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__263676__i = 0, G__263676__a = new Array(arguments.length -  0);
while (G__263676__i < G__263676__a.length) {G__263676__a[G__263676__i] = arguments[G__263676__i + 0]; ++G__263676__i;}
  objs = new cljs.core.IndexedSeq(G__263676__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__263677){
var objs = cljs.core.seq(arglist__263677);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__263684_263690 = cljs.core.key(e);
var G__263685_263691 = w;
var G__263686_263692 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__263684_263690,G__263685_263691,G__263686_263692) : print_one.call(null,G__263684_263690,G__263685_263691,G__263686_263692));

cljs.core._write(w," ");

var G__263687 = cljs.core.val(e);
var G__263688 = w;
var G__263689 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__263687,G__263688,G__263689) : print_one.call(null,G__263687,G__263688,G__263689));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__263693__i = 0, G__263693__a = new Array(arguments.length -  2);
while (G__263693__i < G__263693__a.length) {G__263693__a[G__263693__i] = arguments[G__263693__i + 2]; ++G__263693__i;}
  args = new cljs.core.IndexedSeq(G__263693__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__263694){
var iref = cljs.core.first(arglist__263694);
arglist__263694 = cljs.core.next(arglist__263694);
var f = cljs.core.first(arglist__263694);
var args = cljs.core.rest(arglist__263694);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__263697 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__263697) : cljs.core.atom.call(null,G__263697));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__263699 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263699) : cljs.core.deref.call(null,G__263699));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__263700_SHARP_,p2__263701_SHARP_){
var ret = (function (){var G__263704 = p1__263700_SHARP_;
var G__263705 = p2__263701_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263704,G__263705) : rf.call(null,G__263704,G__263705));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__263708 = null;
var G__263708__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263708__1 = (function (result){
var G__263707 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263707) : rf.call(null,G__263707));
});
var G__263708__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__263708 = function(result,input){
switch(arguments.length){
case 0:
return G__263708__0.call(this);
case 1:
return G__263708__1.call(this,result);
case 2:
return G__263708__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263708.cljs$core$IFn$_invoke$arity$0 = G__263708__0;
G__263708.cljs$core$IFn$_invoke$arity$1 = G__263708__1;
G__263708.cljs$core$IFn$_invoke$arity$2 = G__263708__2;
return G__263708;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__263717 = null;
var G__263717__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__263717__1 = (function (result){
var G__263713 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__263713) : rf.call(null,G__263713));
});
var G__263717__2 = (function (result,input){
var prior = (function (){var G__263714 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263714) : cljs.core.deref.call(null,G__263714));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__263715 = result;
var G__263716 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__263715,G__263716) : rf.call(null,G__263715,G__263716));
}
});
G__263717 = function(result,input){
switch(arguments.length){
case 0:
return G__263717__0.call(this);
case 1:
return G__263717__1.call(this,result);
case 2:
return G__263717__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__263717.cljs$core$IFn$_invoke$arity$0 = G__263717__0;
G__263717.cljs$core$IFn$_invoke$arity$1 = G__263717__1;
G__263717.cljs$core$IFn$_invoke$arity$2 = G__263717__2;
return G__263717;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__263719_SHARP_,p2__263718_SHARP_){
var G__263721 = p2__263718_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__263721) : proc.call(null,G__263721));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj263723 = {};
return obj263723;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._clj__GT_js[(function (){var G__263727 = x__4625__auto__;
return goog.typeOf(G__263727);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._key__GT_js[(function (){var G__263731 = x__4625__auto__;
return goog.typeOf(G__263731);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__263734 = k;
if(G__263734){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__263734.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__263734.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__263734);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__263734);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__263735 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__263735) : cljs.core.clj__GT_js.call(null,G__263735));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__263751 = x;
if(G__263751){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__263751.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__263751.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__263751);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__263751);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj263753 = {};
return obj263753;
})();
var seq__263754_263764 = cljs.core.seq(x);
var chunk__263755_263765 = null;
var count__263756_263766 = (0);
var i__263757_263767 = (0);
while(true){
if((i__263757_263767 < count__263756_263766)){
var vec__263758_263768 = chunk__263755_263765.cljs$core$IIndexed$_nth$arity$2(null,i__263757_263767);
var k_263769 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263758_263768,(0),null);
var v_263770 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263758_263768,(1),null);
(m[cljs.core.key__GT_js(k_263769)] = clj__GT_js(v_263770));

var G__263771 = seq__263754_263764;
var G__263772 = chunk__263755_263765;
var G__263773 = count__263756_263766;
var G__263774 = (i__263757_263767 + (1));
seq__263754_263764 = G__263771;
chunk__263755_263765 = G__263772;
count__263756_263766 = G__263773;
i__263757_263767 = G__263774;
continue;
} else {
var temp__4126__auto___263775 = cljs.core.seq(seq__263754_263764);
if(temp__4126__auto___263775){
var seq__263754_263776__$1 = temp__4126__auto___263775;
if(cljs.core.chunked_seq_QMARK_(seq__263754_263776__$1)){
var c__4768__auto___263777 = cljs.core.chunk_first(seq__263754_263776__$1);
var G__263778 = cljs.core.chunk_rest(seq__263754_263776__$1);
var G__263779 = c__4768__auto___263777;
var G__263780 = cljs.core.count(c__4768__auto___263777);
var G__263781 = (0);
seq__263754_263764 = G__263778;
chunk__263755_263765 = G__263779;
count__263756_263766 = G__263780;
i__263757_263767 = G__263781;
continue;
} else {
var vec__263759_263782 = cljs.core.first(seq__263754_263776__$1);
var k_263783 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263759_263782,(0),null);
var v_263784 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__263759_263782,(1),null);
(m[cljs.core.key__GT_js(k_263783)] = clj__GT_js(v_263784));

var G__263785 = cljs.core.next(seq__263754_263776__$1);
var G__263786 = null;
var G__263787 = (0);
var G__263788 = (0);
seq__263754_263764 = G__263785;
chunk__263755_263765 = G__263786;
count__263756_263766 = G__263787;
i__263757_263767 = G__263788;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__263760_263789 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__263761_263790 = null;
var count__263762_263791 = (0);
var i__263763_263792 = (0);
while(true){
if((i__263763_263792 < count__263762_263791)){
var x_263793__$1 = chunk__263761_263790.cljs$core$IIndexed$_nth$arity$2(null,i__263763_263792);
arr.push(x_263793__$1);

var G__263794 = seq__263760_263789;
var G__263795 = chunk__263761_263790;
var G__263796 = count__263762_263791;
var G__263797 = (i__263763_263792 + (1));
seq__263760_263789 = G__263794;
chunk__263761_263790 = G__263795;
count__263762_263791 = G__263796;
i__263763_263792 = G__263797;
continue;
} else {
var temp__4126__auto___263798 = cljs.core.seq(seq__263760_263789);
if(temp__4126__auto___263798){
var seq__263760_263799__$1 = temp__4126__auto___263798;
if(cljs.core.chunked_seq_QMARK_(seq__263760_263799__$1)){
var c__4768__auto___263800 = cljs.core.chunk_first(seq__263760_263799__$1);
var G__263801 = cljs.core.chunk_rest(seq__263760_263799__$1);
var G__263802 = c__4768__auto___263800;
var G__263803 = cljs.core.count(c__4768__auto___263800);
var G__263804 = (0);
seq__263760_263789 = G__263801;
chunk__263761_263790 = G__263802;
count__263762_263791 = G__263803;
i__263763_263792 = G__263804;
continue;
} else {
var x_263805__$1 = cljs.core.first(seq__263760_263799__$1);
arr.push(x_263805__$1);

var G__263806 = cljs.core.next(seq__263760_263799__$1);
var G__263807 = null;
var G__263808 = (0);
var G__263809 = (0);
seq__263760_263789 = G__263806;
chunk__263761_263790 = G__263807;
count__263762_263791 = G__263808;
i__263763_263792 = G__263809;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj263811 = {};
return obj263811;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._js__GT_clj[(function (){var G__263815 = x__4625__auto__;
return goog.typeOf(G__263815);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__263872__delegate = function (x,opts){
var map__263845 = opts;
var map__263845__$1 = ((cljs.core.seq_QMARK_(map__263845))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__263845):map__263845);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__263845__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__263845,map__263845__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__263861 = x__$1;
if(G__263861){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__263861.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__263861.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__263861);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__263861);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4737__auto__ = ((function (map__263845,map__263845__$1,keywordize_keys,keyfn){
return (function iter__263862(s__263863){
return (new cljs.core.LazySeq(null,((function (map__263845,map__263845__$1,keywordize_keys,keyfn){
return (function (){
var s__263863__$1 = s__263863;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__263863__$1);
if(temp__4126__auto__){
var s__263863__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__263863__$2)){
var c__4735__auto__ = cljs.core.chunk_first(s__263863__$2);
var size__4736__auto__ = cljs.core.count(c__4735__auto__);
var b__263865 = cljs.core.chunk_buffer(size__4736__auto__);
if((function (){var i__263864 = (0);
while(true){
if((i__263864 < size__4736__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4735__auto__,i__263864);
cljs.core.chunk_append(b__263865,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__263870 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__263870) : keyfn.call(null,G__263870));
})(),thisfn((x__$1[k]))], null));

var G__263873 = (i__263864 + (1));
i__263864 = G__263873;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__263865),iter__263862(cljs.core.chunk_rest(s__263863__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__263865),null);
}
} else {
var k = cljs.core.first(s__263863__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__263871 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__263871) : keyfn.call(null,G__263871));
})(),thisfn((x__$1[k]))], null),iter__263862(cljs.core.rest(s__263863__$2)));
}
} else {
return null;
}
break;
}
});})(map__263845,map__263845__$1,keywordize_keys,keyfn))
,null,null));
});})(map__263845,map__263845__$1,keywordize_keys,keyfn))
;
return iter__4737__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__263845,map__263845__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__263872 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__263874__i = 0, G__263874__a = new Array(arguments.length -  1);
while (G__263874__i < G__263874__a.length) {G__263874__a[G__263874__i] = arguments[G__263874__i + 1]; ++G__263874__i;}
  opts = new cljs.core.IndexedSeq(G__263874__a,0);
} 
return G__263872__delegate.call(this,x,opts);};
G__263872.cljs$lang$maxFixedArity = 1;
G__263872.cljs$lang$applyTo = (function (arglist__263875){
var x = cljs.core.first(arglist__263875);
var opts = cljs.core.rest(arglist__263875);
return G__263872__delegate(x,opts);
});
G__263872.cljs$core$IFn$_invoke$arity$variadic = G__263872__delegate;
return G__263872;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__263876 = null;
if (arguments.length > 1) {
var G__263877__i = 0, G__263877__a = new Array(arguments.length -  1);
while (G__263877__i < G__263877__a.length) {G__263877__a[G__263877__i] = arguments[G__263877__i + 1]; ++G__263877__i;}
G__263876 = new cljs.core.IndexedSeq(G__263877__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__263876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__263880 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__263880) : cljs.core.atom.call(null,G__263880));
})();
return ((function (mem){
return (function() { 
var G__263882__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__263881 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263881) : cljs.core.deref.call(null,G__263881));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__263882 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__263883__i = 0, G__263883__a = new Array(arguments.length -  0);
while (G__263883__i < G__263883__a.length) {G__263883__a[G__263883__i] = arguments[G__263883__i + 0]; ++G__263883__i;}
  args = new cljs.core.IndexedSeq(G__263883__a,0);
} 
return G__263882__delegate.call(this,args);};
G__263882.cljs$lang$maxFixedArity = 0;
G__263882.cljs$lang$applyTo = (function (arglist__263884){
var args = cljs.core.seq(arglist__263884);
return G__263882__delegate(args);
});
G__263882.cljs$core$IFn$_invoke$arity$variadic = G__263882__delegate;
return G__263882;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__263886 = ret;
f = G__263886;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__263887__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__263887 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__263888__i = 0, G__263888__a = new Array(arguments.length -  1);
while (G__263888__i < G__263888__a.length) {G__263888__a[G__263888__i] = arguments[G__263888__i + 1]; ++G__263888__i;}
  args = new cljs.core.IndexedSeq(G__263888__a,0);
} 
return G__263887__delegate.call(this,f,args);};
G__263887.cljs$lang$maxFixedArity = 1;
G__263887.cljs$lang$applyTo = (function (arglist__263889){
var f = cljs.core.first(arglist__263889);
var args = cljs.core.rest(arglist__263889);
return G__263887__delegate(f,args);
});
G__263887.cljs$core$IFn$_invoke$arity$variadic = G__263887__delegate;
return G__263887;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__263890 = null;
if (arguments.length > 1) {
var G__263891__i = 0, G__263891__a = new Array(arguments.length -  1);
while (G__263891__i < G__263891__a.length) {G__263891__a[G__263891__i] = arguments[G__263891__i + 1]; ++G__263891__i;}
G__263890 = new cljs.core.IndexedSeq(G__263891__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__263890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__263894 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__263894) : Math.floor.call(null,G__263894));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__263896 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__263896) : f.call(null,G__263896));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__263898 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__263898) : cljs.core.atom.call(null,G__263898));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__263899__i = 0, G__263899__a = new Array(arguments.length -  1);
while (G__263899__i < G__263899__a.length) {G__263899__a[G__263899__i] = arguments[G__263899__i + 1]; ++G__263899__i;}
  args = new cljs.core.IndexedSeq(G__263899__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__263900){
var f = cljs.core.first(arglist__263900);
var args = cljs.core.rest(arglist__263900);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__263965 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263965) : cljs.core.deref.call(null,G__263965));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3981__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
var and__3969__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3969__auto__){
var and__3969__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3969__auto____$1){
var and__3969__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3969__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__263990 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__263988 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__263988) : child.call(null,G__263988));
})(),(function (){var G__263989 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__263989) : parent.call(null,G__263989));
})());
var G__263991 = (i + (1));
ret = G__263990;
i = G__263991;
continue;
}
break;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__263995 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263995) : cljs.core.deref.call(null,G__263995));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__263999 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__263999) : cljs.core.deref.call(null,G__263999));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__264003 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264003) : cljs.core.deref.call(null,G__264003));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__264012 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__264012) : targets.call(null,G__264012));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__264013 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__264013) : sources.call(null,G__264013));
})()));
});})(tp,td,ta))
;
var or__3981__auto__ = ((cljs.core.contains_QMARK_((function (){var G__264017 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__264017) : tp.call(null,G__264017));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__264018 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__264018) : ta.call(null,G__264018));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__264019 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__264019) : ta.call(null,G__264019));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__264026 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__264026) : parentMap.call(null,G__264026));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__264027 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__264027) : parentMap.call(null,G__264027));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__264020_SHARP_){
return cljs.core.cons(cljs.core.first(p1__264020_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__264020_SHARP_),cljs.core.second(p1__264020_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__264028 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__264028) : parentMap.call(null,G__264028));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__264021_SHARP_,p2__264022_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__264021_SHARP_,p2__264022_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__264031 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264031) : cljs.core.deref.call(null,G__264031));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__264032 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264032) : cljs.core.deref.call(null,G__264032));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__264048 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264048) : cljs.core.deref.call(null,G__264048));
})().call(null,x);
var or__3981__auto__ = (cljs.core.truth_((function (){var and__3969__auto__ = xprefs;
if(cljs.core.truth_(and__3969__auto__)){
var G__264050 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__264050) : xprefs.call(null,G__264050));
} else {
return and__3969__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__264051 = cljs.core.rest(ps);
ps = G__264051;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__264052 = cljs.core.rest(ps);
ps = G__264052;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3981__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__264066){
var vec__264067 = p__264066;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__264067,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__264067,(1),null);
var e = vec__264067;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__264068 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264068) : cljs.core.deref.call(null,G__264068));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3981__auto__ = (be == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__264069 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264069) : cljs.core.deref.call(null,G__264069));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__264070 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264070) : cljs.core.deref.call(null,G__264070));
})(),(function (){var G__264071 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264071) : cljs.core.deref.call(null,G__264071));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj264073 = {};
return obj264073;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._reset[(function (){var G__264077 = x__4625__auto__;
return goog.typeOf(G__264077);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._add_method[(function (){var G__264081 = x__4625__auto__;
return goog.typeOf(G__264081);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._remove_method[(function (){var G__264085 = x__4625__auto__;
return goog.typeOf(G__264085);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefer_method[(function (){var G__264089 = x__4625__auto__;
return goog.typeOf(G__264089);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._get_method[(function (){var G__264093 = x__4625__auto__;
return goog.typeOf(G__264093);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._get_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._methods[(function (){var G__264097 = x__4625__auto__;
return goog.typeOf(G__264097);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._methods["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefers[(function (){var G__264101 = x__4625__auto__;
return goog.typeOf(G__264101);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefers["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__264103 = this$__$1;
return goog.getUid(G__264103);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__264104 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264104) : cljs.core.deref.call(null,G__264104));
})(),(function (){var G__264105 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264105) : cljs.core.deref.call(null,G__264105));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__264106 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264106) : cljs.core.deref.call(null,G__264106));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__264107 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264107) : cljs.core.deref.call(null,G__264107));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__264108 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264108) : cljs.core.deref.call(null,G__264108));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__264109 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__264109) : cljs.core.deref.call(null,G__264109));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__264950 = null;
var G__264950__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__264950__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264110 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__264110) : self__.dispatch_fn.call(null,G__264110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264111 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__264111) : target_fn.call(null,G__264111));
});
var G__264950__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264112 = a;
var G__264113 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__264112,G__264113) : self__.dispatch_fn.call(null,G__264112,G__264113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264114 = a;
var G__264115 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__264114,G__264115) : target_fn.call(null,G__264114,G__264115));
});
var G__264950__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264116 = a;
var G__264117 = b;
var G__264118 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__264116,G__264117,G__264118) : self__.dispatch_fn.call(null,G__264116,G__264117,G__264118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264119 = a;
var G__264120 = b;
var G__264121 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__264119,G__264120,G__264121) : target_fn.call(null,G__264119,G__264120,G__264121));
});
var G__264950__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264122 = a;
var G__264123 = b;
var G__264124 = c;
var G__264125 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__264122,G__264123,G__264124,G__264125) : self__.dispatch_fn.call(null,G__264122,G__264123,G__264124,G__264125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264126 = a;
var G__264127 = b;
var G__264128 = c;
var G__264129 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__264126,G__264127,G__264128,G__264129) : target_fn.call(null,G__264126,G__264127,G__264128,G__264129));
});
var G__264950__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264130 = a;
var G__264131 = b;
var G__264132 = c;
var G__264133 = d;
var G__264134 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__264130,G__264131,G__264132,G__264133,G__264134) : self__.dispatch_fn.call(null,G__264130,G__264131,G__264132,G__264133,G__264134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264135 = a;
var G__264136 = b;
var G__264137 = c;
var G__264138 = d;
var G__264139 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__264135,G__264136,G__264137,G__264138,G__264139) : target_fn.call(null,G__264135,G__264136,G__264137,G__264138,G__264139));
});
var G__264950__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264140 = a;
var G__264141 = b;
var G__264142 = c;
var G__264143 = d;
var G__264144 = e;
var G__264145 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__264140,G__264141,G__264142,G__264143,G__264144,G__264145) : self__.dispatch_fn.call(null,G__264140,G__264141,G__264142,G__264143,G__264144,G__264145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264146 = a;
var G__264147 = b;
var G__264148 = c;
var G__264149 = d;
var G__264150 = e;
var G__264151 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__264146,G__264147,G__264148,G__264149,G__264150,G__264151) : target_fn.call(null,G__264146,G__264147,G__264148,G__264149,G__264150,G__264151));
});
var G__264950__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264152 = a;
var G__264153 = b;
var G__264154 = c;
var G__264155 = d;
var G__264156 = e;
var G__264157 = f;
var G__264158 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__264152,G__264153,G__264154,G__264155,G__264156,G__264157,G__264158) : self__.dispatch_fn.call(null,G__264152,G__264153,G__264154,G__264155,G__264156,G__264157,G__264158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264159 = a;
var G__264160 = b;
var G__264161 = c;
var G__264162 = d;
var G__264163 = e;
var G__264164 = f;
var G__264165 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__264159,G__264160,G__264161,G__264162,G__264163,G__264164,G__264165) : target_fn.call(null,G__264159,G__264160,G__264161,G__264162,G__264163,G__264164,G__264165));
});
var G__264950__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264166 = a;
var G__264167 = b;
var G__264168 = c;
var G__264169 = d;
var G__264170 = e;
var G__264171 = f;
var G__264172 = g;
var G__264173 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__264166,G__264167,G__264168,G__264169,G__264170,G__264171,G__264172,G__264173) : self__.dispatch_fn.call(null,G__264166,G__264167,G__264168,G__264169,G__264170,G__264171,G__264172,G__264173));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264174 = a;
var G__264175 = b;
var G__264176 = c;
var G__264177 = d;
var G__264178 = e;
var G__264179 = f;
var G__264180 = g;
var G__264181 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__264174,G__264175,G__264176,G__264177,G__264178,G__264179,G__264180,G__264181) : target_fn.call(null,G__264174,G__264175,G__264176,G__264177,G__264178,G__264179,G__264180,G__264181));
});
var G__264950__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264182 = a;
var G__264183 = b;
var G__264184 = c;
var G__264185 = d;
var G__264186 = e;
var G__264187 = f;
var G__264188 = g;
var G__264189 = h;
var G__264190 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__264182,G__264183,G__264184,G__264185,G__264186,G__264187,G__264188,G__264189,G__264190) : self__.dispatch_fn.call(null,G__264182,G__264183,G__264184,G__264185,G__264186,G__264187,G__264188,G__264189,G__264190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264191 = a;
var G__264192 = b;
var G__264193 = c;
var G__264194 = d;
var G__264195 = e;
var G__264196 = f;
var G__264197 = g;
var G__264198 = h;
var G__264199 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__264191,G__264192,G__264193,G__264194,G__264195,G__264196,G__264197,G__264198,G__264199) : target_fn.call(null,G__264191,G__264192,G__264193,G__264194,G__264195,G__264196,G__264197,G__264198,G__264199));
});
var G__264950__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264200 = a;
var G__264201 = b;
var G__264202 = c;
var G__264203 = d;
var G__264204 = e;
var G__264205 = f;
var G__264206 = g;
var G__264207 = h;
var G__264208 = i;
var G__264209 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__264200,G__264201,G__264202,G__264203,G__264204,G__264205,G__264206,G__264207,G__264208,G__264209) : self__.dispatch_fn.call(null,G__264200,G__264201,G__264202,G__264203,G__264204,G__264205,G__264206,G__264207,G__264208,G__264209));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264210 = a;
var G__264211 = b;
var G__264212 = c;
var G__264213 = d;
var G__264214 = e;
var G__264215 = f;
var G__264216 = g;
var G__264217 = h;
var G__264218 = i;
var G__264219 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__264210,G__264211,G__264212,G__264213,G__264214,G__264215,G__264216,G__264217,G__264218,G__264219) : target_fn.call(null,G__264210,G__264211,G__264212,G__264213,G__264214,G__264215,G__264216,G__264217,G__264218,G__264219));
});
var G__264950__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264220 = a;
var G__264221 = b;
var G__264222 = c;
var G__264223 = d;
var G__264224 = e;
var G__264225 = f;
var G__264226 = g;
var G__264227 = h;
var G__264228 = i;
var G__264229 = j;
var G__264230 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__264220,G__264221,G__264222,G__264223,G__264224,G__264225,G__264226,G__264227,G__264228,G__264229,G__264230) : self__.dispatch_fn.call(null,G__264220,G__264221,G__264222,G__264223,G__264224,G__264225,G__264226,G__264227,G__264228,G__264229,G__264230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264231 = a;
var G__264232 = b;
var G__264233 = c;
var G__264234 = d;
var G__264235 = e;
var G__264236 = f;
var G__264237 = g;
var G__264238 = h;
var G__264239 = i;
var G__264240 = j;
var G__264241 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__264231,G__264232,G__264233,G__264234,G__264235,G__264236,G__264237,G__264238,G__264239,G__264240,G__264241) : target_fn.call(null,G__264231,G__264232,G__264233,G__264234,G__264235,G__264236,G__264237,G__264238,G__264239,G__264240,G__264241));
});
var G__264950__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264242 = a;
var G__264243 = b;
var G__264244 = c;
var G__264245 = d;
var G__264246 = e;
var G__264247 = f;
var G__264248 = g;
var G__264249 = h;
var G__264250 = i;
var G__264251 = j;
var G__264252 = k;
var G__264253 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__264242,G__264243,G__264244,G__264245,G__264246,G__264247,G__264248,G__264249,G__264250,G__264251,G__264252,G__264253) : self__.dispatch_fn.call(null,G__264242,G__264243,G__264244,G__264245,G__264246,G__264247,G__264248,G__264249,G__264250,G__264251,G__264252,G__264253));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264254 = a;
var G__264255 = b;
var G__264256 = c;
var G__264257 = d;
var G__264258 = e;
var G__264259 = f;
var G__264260 = g;
var G__264261 = h;
var G__264262 = i;
var G__264263 = j;
var G__264264 = k;
var G__264265 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__264254,G__264255,G__264256,G__264257,G__264258,G__264259,G__264260,G__264261,G__264262,G__264263,G__264264,G__264265) : target_fn.call(null,G__264254,G__264255,G__264256,G__264257,G__264258,G__264259,G__264260,G__264261,G__264262,G__264263,G__264264,G__264265));
});
var G__264950__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264266 = a;
var G__264267 = b;
var G__264268 = c;
var G__264269 = d;
var G__264270 = e;
var G__264271 = f;
var G__264272 = g;
var G__264273 = h;
var G__264274 = i;
var G__264275 = j;
var G__264276 = k;
var G__264277 = l;
var G__264278 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__264266,G__264267,G__264268,G__264269,G__264270,G__264271,G__264272,G__264273,G__264274,G__264275,G__264276,G__264277,G__264278) : self__.dispatch_fn.call(null,G__264266,G__264267,G__264268,G__264269,G__264270,G__264271,G__264272,G__264273,G__264274,G__264275,G__264276,G__264277,G__264278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264279 = a;
var G__264280 = b;
var G__264281 = c;
var G__264282 = d;
var G__264283 = e;
var G__264284 = f;
var G__264285 = g;
var G__264286 = h;
var G__264287 = i;
var G__264288 = j;
var G__264289 = k;
var G__264290 = l;
var G__264291 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__264279,G__264280,G__264281,G__264282,G__264283,G__264284,G__264285,G__264286,G__264287,G__264288,G__264289,G__264290,G__264291) : target_fn.call(null,G__264279,G__264280,G__264281,G__264282,G__264283,G__264284,G__264285,G__264286,G__264287,G__264288,G__264289,G__264290,G__264291));
});
var G__264950__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264292 = a;
var G__264293 = b;
var G__264294 = c;
var G__264295 = d;
var G__264296 = e;
var G__264297 = f;
var G__264298 = g;
var G__264299 = h;
var G__264300 = i;
var G__264301 = j;
var G__264302 = k;
var G__264303 = l;
var G__264304 = m;
var G__264305 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__264292,G__264293,G__264294,G__264295,G__264296,G__264297,G__264298,G__264299,G__264300,G__264301,G__264302,G__264303,G__264304,G__264305) : self__.dispatch_fn.call(null,G__264292,G__264293,G__264294,G__264295,G__264296,G__264297,G__264298,G__264299,G__264300,G__264301,G__264302,G__264303,G__264304,G__264305));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264306 = a;
var G__264307 = b;
var G__264308 = c;
var G__264309 = d;
var G__264310 = e;
var G__264311 = f;
var G__264312 = g;
var G__264313 = h;
var G__264314 = i;
var G__264315 = j;
var G__264316 = k;
var G__264317 = l;
var G__264318 = m;
var G__264319 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__264306,G__264307,G__264308,G__264309,G__264310,G__264311,G__264312,G__264313,G__264314,G__264315,G__264316,G__264317,G__264318,G__264319) : target_fn.call(null,G__264306,G__264307,G__264308,G__264309,G__264310,G__264311,G__264312,G__264313,G__264314,G__264315,G__264316,G__264317,G__264318,G__264319));
});
var G__264950__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264320 = a;
var G__264321 = b;
var G__264322 = c;
var G__264323 = d;
var G__264324 = e;
var G__264325 = f;
var G__264326 = g;
var G__264327 = h;
var G__264328 = i;
var G__264329 = j;
var G__264330 = k;
var G__264331 = l;
var G__264332 = m;
var G__264333 = n;
var G__264334 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__264320,G__264321,G__264322,G__264323,G__264324,G__264325,G__264326,G__264327,G__264328,G__264329,G__264330,G__264331,G__264332,G__264333,G__264334) : self__.dispatch_fn.call(null,G__264320,G__264321,G__264322,G__264323,G__264324,G__264325,G__264326,G__264327,G__264328,G__264329,G__264330,G__264331,G__264332,G__264333,G__264334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264335 = a;
var G__264336 = b;
var G__264337 = c;
var G__264338 = d;
var G__264339 = e;
var G__264340 = f;
var G__264341 = g;
var G__264342 = h;
var G__264343 = i;
var G__264344 = j;
var G__264345 = k;
var G__264346 = l;
var G__264347 = m;
var G__264348 = n;
var G__264349 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__264335,G__264336,G__264337,G__264338,G__264339,G__264340,G__264341,G__264342,G__264343,G__264344,G__264345,G__264346,G__264347,G__264348,G__264349) : target_fn.call(null,G__264335,G__264336,G__264337,G__264338,G__264339,G__264340,G__264341,G__264342,G__264343,G__264344,G__264345,G__264346,G__264347,G__264348,G__264349));
});
var G__264950__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264350 = a;
var G__264351 = b;
var G__264352 = c;
var G__264353 = d;
var G__264354 = e;
var G__264355 = f;
var G__264356 = g;
var G__264357 = h;
var G__264358 = i;
var G__264359 = j;
var G__264360 = k;
var G__264361 = l;
var G__264362 = m;
var G__264363 = n;
var G__264364 = o;
var G__264365 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__264350,G__264351,G__264352,G__264353,G__264354,G__264355,G__264356,G__264357,G__264358,G__264359,G__264360,G__264361,G__264362,G__264363,G__264364,G__264365) : self__.dispatch_fn.call(null,G__264350,G__264351,G__264352,G__264353,G__264354,G__264355,G__264356,G__264357,G__264358,G__264359,G__264360,G__264361,G__264362,G__264363,G__264364,G__264365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264366 = a;
var G__264367 = b;
var G__264368 = c;
var G__264369 = d;
var G__264370 = e;
var G__264371 = f;
var G__264372 = g;
var G__264373 = h;
var G__264374 = i;
var G__264375 = j;
var G__264376 = k;
var G__264377 = l;
var G__264378 = m;
var G__264379 = n;
var G__264380 = o;
var G__264381 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__264366,G__264367,G__264368,G__264369,G__264370,G__264371,G__264372,G__264373,G__264374,G__264375,G__264376,G__264377,G__264378,G__264379,G__264380,G__264381) : target_fn.call(null,G__264366,G__264367,G__264368,G__264369,G__264370,G__264371,G__264372,G__264373,G__264374,G__264375,G__264376,G__264377,G__264378,G__264379,G__264380,G__264381));
});
var G__264950__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264382 = a;
var G__264383 = b;
var G__264384 = c;
var G__264385 = d;
var G__264386 = e;
var G__264387 = f;
var G__264388 = g;
var G__264389 = h;
var G__264390 = i;
var G__264391 = j;
var G__264392 = k;
var G__264393 = l;
var G__264394 = m;
var G__264395 = n;
var G__264396 = o;
var G__264397 = p;
var G__264398 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__264382,G__264383,G__264384,G__264385,G__264386,G__264387,G__264388,G__264389,G__264390,G__264391,G__264392,G__264393,G__264394,G__264395,G__264396,G__264397,G__264398) : self__.dispatch_fn.call(null,G__264382,G__264383,G__264384,G__264385,G__264386,G__264387,G__264388,G__264389,G__264390,G__264391,G__264392,G__264393,G__264394,G__264395,G__264396,G__264397,G__264398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264399 = a;
var G__264400 = b;
var G__264401 = c;
var G__264402 = d;
var G__264403 = e;
var G__264404 = f;
var G__264405 = g;
var G__264406 = h;
var G__264407 = i;
var G__264408 = j;
var G__264409 = k;
var G__264410 = l;
var G__264411 = m;
var G__264412 = n;
var G__264413 = o;
var G__264414 = p;
var G__264415 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__264399,G__264400,G__264401,G__264402,G__264403,G__264404,G__264405,G__264406,G__264407,G__264408,G__264409,G__264410,G__264411,G__264412,G__264413,G__264414,G__264415) : target_fn.call(null,G__264399,G__264400,G__264401,G__264402,G__264403,G__264404,G__264405,G__264406,G__264407,G__264408,G__264409,G__264410,G__264411,G__264412,G__264413,G__264414,G__264415));
});
var G__264950__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264416 = a;
var G__264417 = b;
var G__264418 = c;
var G__264419 = d;
var G__264420 = e;
var G__264421 = f;
var G__264422 = g;
var G__264423 = h;
var G__264424 = i;
var G__264425 = j;
var G__264426 = k;
var G__264427 = l;
var G__264428 = m;
var G__264429 = n;
var G__264430 = o;
var G__264431 = p;
var G__264432 = q;
var G__264433 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__264416,G__264417,G__264418,G__264419,G__264420,G__264421,G__264422,G__264423,G__264424,G__264425,G__264426,G__264427,G__264428,G__264429,G__264430,G__264431,G__264432,G__264433) : self__.dispatch_fn.call(null,G__264416,G__264417,G__264418,G__264419,G__264420,G__264421,G__264422,G__264423,G__264424,G__264425,G__264426,G__264427,G__264428,G__264429,G__264430,G__264431,G__264432,G__264433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264434 = a;
var G__264435 = b;
var G__264436 = c;
var G__264437 = d;
var G__264438 = e;
var G__264439 = f;
var G__264440 = g;
var G__264441 = h;
var G__264442 = i;
var G__264443 = j;
var G__264444 = k;
var G__264445 = l;
var G__264446 = m;
var G__264447 = n;
var G__264448 = o;
var G__264449 = p;
var G__264450 = q;
var G__264451 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__264434,G__264435,G__264436,G__264437,G__264438,G__264439,G__264440,G__264441,G__264442,G__264443,G__264444,G__264445,G__264446,G__264447,G__264448,G__264449,G__264450,G__264451) : target_fn.call(null,G__264434,G__264435,G__264436,G__264437,G__264438,G__264439,G__264440,G__264441,G__264442,G__264443,G__264444,G__264445,G__264446,G__264447,G__264448,G__264449,G__264450,G__264451));
});
var G__264950__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264452 = a;
var G__264453 = b;
var G__264454 = c;
var G__264455 = d;
var G__264456 = e;
var G__264457 = f;
var G__264458 = g;
var G__264459 = h;
var G__264460 = i;
var G__264461 = j;
var G__264462 = k;
var G__264463 = l;
var G__264464 = m;
var G__264465 = n;
var G__264466 = o;
var G__264467 = p;
var G__264468 = q;
var G__264469 = r;
var G__264470 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__264452,G__264453,G__264454,G__264455,G__264456,G__264457,G__264458,G__264459,G__264460,G__264461,G__264462,G__264463,G__264464,G__264465,G__264466,G__264467,G__264468,G__264469,G__264470) : self__.dispatch_fn.call(null,G__264452,G__264453,G__264454,G__264455,G__264456,G__264457,G__264458,G__264459,G__264460,G__264461,G__264462,G__264463,G__264464,G__264465,G__264466,G__264467,G__264468,G__264469,G__264470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264471 = a;
var G__264472 = b;
var G__264473 = c;
var G__264474 = d;
var G__264475 = e;
var G__264476 = f;
var G__264477 = g;
var G__264478 = h;
var G__264479 = i;
var G__264480 = j;
var G__264481 = k;
var G__264482 = l;
var G__264483 = m;
var G__264484 = n;
var G__264485 = o;
var G__264486 = p;
var G__264487 = q;
var G__264488 = r;
var G__264489 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__264471,G__264472,G__264473,G__264474,G__264475,G__264476,G__264477,G__264478,G__264479,G__264480,G__264481,G__264482,G__264483,G__264484,G__264485,G__264486,G__264487,G__264488,G__264489) : target_fn.call(null,G__264471,G__264472,G__264473,G__264474,G__264475,G__264476,G__264477,G__264478,G__264479,G__264480,G__264481,G__264482,G__264483,G__264484,G__264485,G__264486,G__264487,G__264488,G__264489));
});
var G__264950__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__264490 = a;
var G__264491 = b;
var G__264492 = c;
var G__264493 = d;
var G__264494 = e;
var G__264495 = f;
var G__264496 = g;
var G__264497 = h;
var G__264498 = i;
var G__264499 = j;
var G__264500 = k;
var G__264501 = l;
var G__264502 = m;
var G__264503 = n;
var G__264504 = o;
var G__264505 = p;
var G__264506 = q;
var G__264507 = r;
var G__264508 = s;
var G__264509 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__264490,G__264491,G__264492,G__264493,G__264494,G__264495,G__264496,G__264497,G__264498,G__264499,G__264500,G__264501,G__264502,G__264503,G__264504,G__264505,G__264506,G__264507,G__264508,G__264509) : self__.dispatch_fn.call(null,G__264490,G__264491,G__264492,G__264493,G__264494,G__264495,G__264496,G__264497,G__264498,G__264499,G__264500,G__264501,G__264502,G__264503,G__264504,G__264505,G__264506,G__264507,G__264508,G__264509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264510 = a;
var G__264511 = b;
var G__264512 = c;
var G__264513 = d;
var G__264514 = e;
var G__264515 = f;
var G__264516 = g;
var G__264517 = h;
var G__264518 = i;
var G__264519 = j;
var G__264520 = k;
var G__264521 = l;
var G__264522 = m;
var G__264523 = n;
var G__264524 = o;
var G__264525 = p;
var G__264526 = q;
var G__264527 = r;
var G__264528 = s;
var G__264529 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__264510,G__264511,G__264512,G__264513,G__264514,G__264515,G__264516,G__264517,G__264518,G__264519,G__264520,G__264521,G__264522,G__264523,G__264524,G__264525,G__264526,G__264527,G__264528,G__264529) : target_fn.call(null,G__264510,G__264511,G__264512,G__264513,G__264514,G__264515,G__264516,G__264517,G__264518,G__264519,G__264520,G__264521,G__264522,G__264523,G__264524,G__264525,G__264526,G__264527,G__264528,G__264529));
});
var G__264950__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__264950 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__264950__1.call(this,self__);
case 2:
return G__264950__2.call(this,self__,a);
case 3:
return G__264950__3.call(this,self__,a,b);
case 4:
return G__264950__4.call(this,self__,a,b,c);
case 5:
return G__264950__5.call(this,self__,a,b,c,d);
case 6:
return G__264950__6.call(this,self__,a,b,c,d,e);
case 7:
return G__264950__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__264950__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__264950__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__264950__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__264950__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__264950__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__264950__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__264950__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__264950__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__264950__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__264950__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__264950__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__264950__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__264950__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__264950__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__264950__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__264950.cljs$core$IFn$_invoke$arity$1 = G__264950__1;
G__264950.cljs$core$IFn$_invoke$arity$2 = G__264950__2;
G__264950.cljs$core$IFn$_invoke$arity$3 = G__264950__3;
G__264950.cljs$core$IFn$_invoke$arity$4 = G__264950__4;
G__264950.cljs$core$IFn$_invoke$arity$5 = G__264950__5;
G__264950.cljs$core$IFn$_invoke$arity$6 = G__264950__6;
G__264950.cljs$core$IFn$_invoke$arity$7 = G__264950__7;
G__264950.cljs$core$IFn$_invoke$arity$8 = G__264950__8;
G__264950.cljs$core$IFn$_invoke$arity$9 = G__264950__9;
G__264950.cljs$core$IFn$_invoke$arity$10 = G__264950__10;
G__264950.cljs$core$IFn$_invoke$arity$11 = G__264950__11;
G__264950.cljs$core$IFn$_invoke$arity$12 = G__264950__12;
G__264950.cljs$core$IFn$_invoke$arity$13 = G__264950__13;
G__264950.cljs$core$IFn$_invoke$arity$14 = G__264950__14;
G__264950.cljs$core$IFn$_invoke$arity$15 = G__264950__15;
G__264950.cljs$core$IFn$_invoke$arity$16 = G__264950__16;
G__264950.cljs$core$IFn$_invoke$arity$17 = G__264950__17;
G__264950.cljs$core$IFn$_invoke$arity$18 = G__264950__18;
G__264950.cljs$core$IFn$_invoke$arity$19 = G__264950__19;
G__264950.cljs$core$IFn$_invoke$arity$20 = G__264950__20;
G__264950.cljs$core$IFn$_invoke$arity$21 = G__264950__21;
G__264950.cljs$core$IFn$_invoke$arity$22 = G__264950__22;
return G__264950;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args264102){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args264102)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264530 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__264530) : self__.dispatch_fn.call(null,G__264530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264531 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__264531) : target_fn.call(null,G__264531));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264532 = a;
var G__264533 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__264532,G__264533) : self__.dispatch_fn.call(null,G__264532,G__264533));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264534 = a;
var G__264535 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__264534,G__264535) : target_fn.call(null,G__264534,G__264535));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264536 = a;
var G__264537 = b;
var G__264538 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__264536,G__264537,G__264538) : self__.dispatch_fn.call(null,G__264536,G__264537,G__264538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264539 = a;
var G__264540 = b;
var G__264541 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__264539,G__264540,G__264541) : target_fn.call(null,G__264539,G__264540,G__264541));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264542 = a;
var G__264543 = b;
var G__264544 = c;
var G__264545 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__264542,G__264543,G__264544,G__264545) : self__.dispatch_fn.call(null,G__264542,G__264543,G__264544,G__264545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264546 = a;
var G__264547 = b;
var G__264548 = c;
var G__264549 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__264546,G__264547,G__264548,G__264549) : target_fn.call(null,G__264546,G__264547,G__264548,G__264549));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264550 = a;
var G__264551 = b;
var G__264552 = c;
var G__264553 = d;
var G__264554 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__264550,G__264551,G__264552,G__264553,G__264554) : self__.dispatch_fn.call(null,G__264550,G__264551,G__264552,G__264553,G__264554));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264555 = a;
var G__264556 = b;
var G__264557 = c;
var G__264558 = d;
var G__264559 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__264555,G__264556,G__264557,G__264558,G__264559) : target_fn.call(null,G__264555,G__264556,G__264557,G__264558,G__264559));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264560 = a;
var G__264561 = b;
var G__264562 = c;
var G__264563 = d;
var G__264564 = e;
var G__264565 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__264560,G__264561,G__264562,G__264563,G__264564,G__264565) : self__.dispatch_fn.call(null,G__264560,G__264561,G__264562,G__264563,G__264564,G__264565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264566 = a;
var G__264567 = b;
var G__264568 = c;
var G__264569 = d;
var G__264570 = e;
var G__264571 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__264566,G__264567,G__264568,G__264569,G__264570,G__264571) : target_fn.call(null,G__264566,G__264567,G__264568,G__264569,G__264570,G__264571));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264572 = a;
var G__264573 = b;
var G__264574 = c;
var G__264575 = d;
var G__264576 = e;
var G__264577 = f;
var G__264578 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__264572,G__264573,G__264574,G__264575,G__264576,G__264577,G__264578) : self__.dispatch_fn.call(null,G__264572,G__264573,G__264574,G__264575,G__264576,G__264577,G__264578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264579 = a;
var G__264580 = b;
var G__264581 = c;
var G__264582 = d;
var G__264583 = e;
var G__264584 = f;
var G__264585 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__264579,G__264580,G__264581,G__264582,G__264583,G__264584,G__264585) : target_fn.call(null,G__264579,G__264580,G__264581,G__264582,G__264583,G__264584,G__264585));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264586 = a;
var G__264587 = b;
var G__264588 = c;
var G__264589 = d;
var G__264590 = e;
var G__264591 = f;
var G__264592 = g;
var G__264593 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__264586,G__264587,G__264588,G__264589,G__264590,G__264591,G__264592,G__264593) : self__.dispatch_fn.call(null,G__264586,G__264587,G__264588,G__264589,G__264590,G__264591,G__264592,G__264593));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264594 = a;
var G__264595 = b;
var G__264596 = c;
var G__264597 = d;
var G__264598 = e;
var G__264599 = f;
var G__264600 = g;
var G__264601 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__264594,G__264595,G__264596,G__264597,G__264598,G__264599,G__264600,G__264601) : target_fn.call(null,G__264594,G__264595,G__264596,G__264597,G__264598,G__264599,G__264600,G__264601));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264602 = a;
var G__264603 = b;
var G__264604 = c;
var G__264605 = d;
var G__264606 = e;
var G__264607 = f;
var G__264608 = g;
var G__264609 = h;
var G__264610 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__264602,G__264603,G__264604,G__264605,G__264606,G__264607,G__264608,G__264609,G__264610) : self__.dispatch_fn.call(null,G__264602,G__264603,G__264604,G__264605,G__264606,G__264607,G__264608,G__264609,G__264610));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264611 = a;
var G__264612 = b;
var G__264613 = c;
var G__264614 = d;
var G__264615 = e;
var G__264616 = f;
var G__264617 = g;
var G__264618 = h;
var G__264619 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__264611,G__264612,G__264613,G__264614,G__264615,G__264616,G__264617,G__264618,G__264619) : target_fn.call(null,G__264611,G__264612,G__264613,G__264614,G__264615,G__264616,G__264617,G__264618,G__264619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264620 = a;
var G__264621 = b;
var G__264622 = c;
var G__264623 = d;
var G__264624 = e;
var G__264625 = f;
var G__264626 = g;
var G__264627 = h;
var G__264628 = i;
var G__264629 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__264620,G__264621,G__264622,G__264623,G__264624,G__264625,G__264626,G__264627,G__264628,G__264629) : self__.dispatch_fn.call(null,G__264620,G__264621,G__264622,G__264623,G__264624,G__264625,G__264626,G__264627,G__264628,G__264629));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264630 = a;
var G__264631 = b;
var G__264632 = c;
var G__264633 = d;
var G__264634 = e;
var G__264635 = f;
var G__264636 = g;
var G__264637 = h;
var G__264638 = i;
var G__264639 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__264630,G__264631,G__264632,G__264633,G__264634,G__264635,G__264636,G__264637,G__264638,G__264639) : target_fn.call(null,G__264630,G__264631,G__264632,G__264633,G__264634,G__264635,G__264636,G__264637,G__264638,G__264639));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264640 = a;
var G__264641 = b;
var G__264642 = c;
var G__264643 = d;
var G__264644 = e;
var G__264645 = f;
var G__264646 = g;
var G__264647 = h;
var G__264648 = i;
var G__264649 = j;
var G__264650 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__264640,G__264641,G__264642,G__264643,G__264644,G__264645,G__264646,G__264647,G__264648,G__264649,G__264650) : self__.dispatch_fn.call(null,G__264640,G__264641,G__264642,G__264643,G__264644,G__264645,G__264646,G__264647,G__264648,G__264649,G__264650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264651 = a;
var G__264652 = b;
var G__264653 = c;
var G__264654 = d;
var G__264655 = e;
var G__264656 = f;
var G__264657 = g;
var G__264658 = h;
var G__264659 = i;
var G__264660 = j;
var G__264661 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__264651,G__264652,G__264653,G__264654,G__264655,G__264656,G__264657,G__264658,G__264659,G__264660,G__264661) : target_fn.call(null,G__264651,G__264652,G__264653,G__264654,G__264655,G__264656,G__264657,G__264658,G__264659,G__264660,G__264661));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264662 = a;
var G__264663 = b;
var G__264664 = c;
var G__264665 = d;
var G__264666 = e;
var G__264667 = f;
var G__264668 = g;
var G__264669 = h;
var G__264670 = i;
var G__264671 = j;
var G__264672 = k;
var G__264673 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__264662,G__264663,G__264664,G__264665,G__264666,G__264667,G__264668,G__264669,G__264670,G__264671,G__264672,G__264673) : self__.dispatch_fn.call(null,G__264662,G__264663,G__264664,G__264665,G__264666,G__264667,G__264668,G__264669,G__264670,G__264671,G__264672,G__264673));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264674 = a;
var G__264675 = b;
var G__264676 = c;
var G__264677 = d;
var G__264678 = e;
var G__264679 = f;
var G__264680 = g;
var G__264681 = h;
var G__264682 = i;
var G__264683 = j;
var G__264684 = k;
var G__264685 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__264674,G__264675,G__264676,G__264677,G__264678,G__264679,G__264680,G__264681,G__264682,G__264683,G__264684,G__264685) : target_fn.call(null,G__264674,G__264675,G__264676,G__264677,G__264678,G__264679,G__264680,G__264681,G__264682,G__264683,G__264684,G__264685));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264686 = a;
var G__264687 = b;
var G__264688 = c;
var G__264689 = d;
var G__264690 = e;
var G__264691 = f;
var G__264692 = g;
var G__264693 = h;
var G__264694 = i;
var G__264695 = j;
var G__264696 = k;
var G__264697 = l;
var G__264698 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__264686,G__264687,G__264688,G__264689,G__264690,G__264691,G__264692,G__264693,G__264694,G__264695,G__264696,G__264697,G__264698) : self__.dispatch_fn.call(null,G__264686,G__264687,G__264688,G__264689,G__264690,G__264691,G__264692,G__264693,G__264694,G__264695,G__264696,G__264697,G__264698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264699 = a;
var G__264700 = b;
var G__264701 = c;
var G__264702 = d;
var G__264703 = e;
var G__264704 = f;
var G__264705 = g;
var G__264706 = h;
var G__264707 = i;
var G__264708 = j;
var G__264709 = k;
var G__264710 = l;
var G__264711 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__264699,G__264700,G__264701,G__264702,G__264703,G__264704,G__264705,G__264706,G__264707,G__264708,G__264709,G__264710,G__264711) : target_fn.call(null,G__264699,G__264700,G__264701,G__264702,G__264703,G__264704,G__264705,G__264706,G__264707,G__264708,G__264709,G__264710,G__264711));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264712 = a;
var G__264713 = b;
var G__264714 = c;
var G__264715 = d;
var G__264716 = e;
var G__264717 = f;
var G__264718 = g;
var G__264719 = h;
var G__264720 = i;
var G__264721 = j;
var G__264722 = k;
var G__264723 = l;
var G__264724 = m;
var G__264725 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__264712,G__264713,G__264714,G__264715,G__264716,G__264717,G__264718,G__264719,G__264720,G__264721,G__264722,G__264723,G__264724,G__264725) : self__.dispatch_fn.call(null,G__264712,G__264713,G__264714,G__264715,G__264716,G__264717,G__264718,G__264719,G__264720,G__264721,G__264722,G__264723,G__264724,G__264725));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264726 = a;
var G__264727 = b;
var G__264728 = c;
var G__264729 = d;
var G__264730 = e;
var G__264731 = f;
var G__264732 = g;
var G__264733 = h;
var G__264734 = i;
var G__264735 = j;
var G__264736 = k;
var G__264737 = l;
var G__264738 = m;
var G__264739 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__264726,G__264727,G__264728,G__264729,G__264730,G__264731,G__264732,G__264733,G__264734,G__264735,G__264736,G__264737,G__264738,G__264739) : target_fn.call(null,G__264726,G__264727,G__264728,G__264729,G__264730,G__264731,G__264732,G__264733,G__264734,G__264735,G__264736,G__264737,G__264738,G__264739));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264740 = a;
var G__264741 = b;
var G__264742 = c;
var G__264743 = d;
var G__264744 = e;
var G__264745 = f;
var G__264746 = g;
var G__264747 = h;
var G__264748 = i;
var G__264749 = j;
var G__264750 = k;
var G__264751 = l;
var G__264752 = m;
var G__264753 = n;
var G__264754 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__264740,G__264741,G__264742,G__264743,G__264744,G__264745,G__264746,G__264747,G__264748,G__264749,G__264750,G__264751,G__264752,G__264753,G__264754) : self__.dispatch_fn.call(null,G__264740,G__264741,G__264742,G__264743,G__264744,G__264745,G__264746,G__264747,G__264748,G__264749,G__264750,G__264751,G__264752,G__264753,G__264754));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264755 = a;
var G__264756 = b;
var G__264757 = c;
var G__264758 = d;
var G__264759 = e;
var G__264760 = f;
var G__264761 = g;
var G__264762 = h;
var G__264763 = i;
var G__264764 = j;
var G__264765 = k;
var G__264766 = l;
var G__264767 = m;
var G__264768 = n;
var G__264769 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__264755,G__264756,G__264757,G__264758,G__264759,G__264760,G__264761,G__264762,G__264763,G__264764,G__264765,G__264766,G__264767,G__264768,G__264769) : target_fn.call(null,G__264755,G__264756,G__264757,G__264758,G__264759,G__264760,G__264761,G__264762,G__264763,G__264764,G__264765,G__264766,G__264767,G__264768,G__264769));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264770 = a;
var G__264771 = b;
var G__264772 = c;
var G__264773 = d;
var G__264774 = e;
var G__264775 = f;
var G__264776 = g;
var G__264777 = h;
var G__264778 = i;
var G__264779 = j;
var G__264780 = k;
var G__264781 = l;
var G__264782 = m;
var G__264783 = n;
var G__264784 = o;
var G__264785 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__264770,G__264771,G__264772,G__264773,G__264774,G__264775,G__264776,G__264777,G__264778,G__264779,G__264780,G__264781,G__264782,G__264783,G__264784,G__264785) : self__.dispatch_fn.call(null,G__264770,G__264771,G__264772,G__264773,G__264774,G__264775,G__264776,G__264777,G__264778,G__264779,G__264780,G__264781,G__264782,G__264783,G__264784,G__264785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264786 = a;
var G__264787 = b;
var G__264788 = c;
var G__264789 = d;
var G__264790 = e;
var G__264791 = f;
var G__264792 = g;
var G__264793 = h;
var G__264794 = i;
var G__264795 = j;
var G__264796 = k;
var G__264797 = l;
var G__264798 = m;
var G__264799 = n;
var G__264800 = o;
var G__264801 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__264786,G__264787,G__264788,G__264789,G__264790,G__264791,G__264792,G__264793,G__264794,G__264795,G__264796,G__264797,G__264798,G__264799,G__264800,G__264801) : target_fn.call(null,G__264786,G__264787,G__264788,G__264789,G__264790,G__264791,G__264792,G__264793,G__264794,G__264795,G__264796,G__264797,G__264798,G__264799,G__264800,G__264801));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264802 = a;
var G__264803 = b;
var G__264804 = c;
var G__264805 = d;
var G__264806 = e;
var G__264807 = f;
var G__264808 = g;
var G__264809 = h;
var G__264810 = i;
var G__264811 = j;
var G__264812 = k;
var G__264813 = l;
var G__264814 = m;
var G__264815 = n;
var G__264816 = o;
var G__264817 = p;
var G__264818 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__264802,G__264803,G__264804,G__264805,G__264806,G__264807,G__264808,G__264809,G__264810,G__264811,G__264812,G__264813,G__264814,G__264815,G__264816,G__264817,G__264818) : self__.dispatch_fn.call(null,G__264802,G__264803,G__264804,G__264805,G__264806,G__264807,G__264808,G__264809,G__264810,G__264811,G__264812,G__264813,G__264814,G__264815,G__264816,G__264817,G__264818));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264819 = a;
var G__264820 = b;
var G__264821 = c;
var G__264822 = d;
var G__264823 = e;
var G__264824 = f;
var G__264825 = g;
var G__264826 = h;
var G__264827 = i;
var G__264828 = j;
var G__264829 = k;
var G__264830 = l;
var G__264831 = m;
var G__264832 = n;
var G__264833 = o;
var G__264834 = p;
var G__264835 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__264819,G__264820,G__264821,G__264822,G__264823,G__264824,G__264825,G__264826,G__264827,G__264828,G__264829,G__264830,G__264831,G__264832,G__264833,G__264834,G__264835) : target_fn.call(null,G__264819,G__264820,G__264821,G__264822,G__264823,G__264824,G__264825,G__264826,G__264827,G__264828,G__264829,G__264830,G__264831,G__264832,G__264833,G__264834,G__264835));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264836 = a;
var G__264837 = b;
var G__264838 = c;
var G__264839 = d;
var G__264840 = e;
var G__264841 = f;
var G__264842 = g;
var G__264843 = h;
var G__264844 = i;
var G__264845 = j;
var G__264846 = k;
var G__264847 = l;
var G__264848 = m;
var G__264849 = n;
var G__264850 = o;
var G__264851 = p;
var G__264852 = q;
var G__264853 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__264836,G__264837,G__264838,G__264839,G__264840,G__264841,G__264842,G__264843,G__264844,G__264845,G__264846,G__264847,G__264848,G__264849,G__264850,G__264851,G__264852,G__264853) : self__.dispatch_fn.call(null,G__264836,G__264837,G__264838,G__264839,G__264840,G__264841,G__264842,G__264843,G__264844,G__264845,G__264846,G__264847,G__264848,G__264849,G__264850,G__264851,G__264852,G__264853));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264854 = a;
var G__264855 = b;
var G__264856 = c;
var G__264857 = d;
var G__264858 = e;
var G__264859 = f;
var G__264860 = g;
var G__264861 = h;
var G__264862 = i;
var G__264863 = j;
var G__264864 = k;
var G__264865 = l;
var G__264866 = m;
var G__264867 = n;
var G__264868 = o;
var G__264869 = p;
var G__264870 = q;
var G__264871 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__264854,G__264855,G__264856,G__264857,G__264858,G__264859,G__264860,G__264861,G__264862,G__264863,G__264864,G__264865,G__264866,G__264867,G__264868,G__264869,G__264870,G__264871) : target_fn.call(null,G__264854,G__264855,G__264856,G__264857,G__264858,G__264859,G__264860,G__264861,G__264862,G__264863,G__264864,G__264865,G__264866,G__264867,G__264868,G__264869,G__264870,G__264871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264872 = a;
var G__264873 = b;
var G__264874 = c;
var G__264875 = d;
var G__264876 = e;
var G__264877 = f;
var G__264878 = g;
var G__264879 = h;
var G__264880 = i;
var G__264881 = j;
var G__264882 = k;
var G__264883 = l;
var G__264884 = m;
var G__264885 = n;
var G__264886 = o;
var G__264887 = p;
var G__264888 = q;
var G__264889 = r;
var G__264890 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__264872,G__264873,G__264874,G__264875,G__264876,G__264877,G__264878,G__264879,G__264880,G__264881,G__264882,G__264883,G__264884,G__264885,G__264886,G__264887,G__264888,G__264889,G__264890) : self__.dispatch_fn.call(null,G__264872,G__264873,G__264874,G__264875,G__264876,G__264877,G__264878,G__264879,G__264880,G__264881,G__264882,G__264883,G__264884,G__264885,G__264886,G__264887,G__264888,G__264889,G__264890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264891 = a;
var G__264892 = b;
var G__264893 = c;
var G__264894 = d;
var G__264895 = e;
var G__264896 = f;
var G__264897 = g;
var G__264898 = h;
var G__264899 = i;
var G__264900 = j;
var G__264901 = k;
var G__264902 = l;
var G__264903 = m;
var G__264904 = n;
var G__264905 = o;
var G__264906 = p;
var G__264907 = q;
var G__264908 = r;
var G__264909 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__264891,G__264892,G__264893,G__264894,G__264895,G__264896,G__264897,G__264898,G__264899,G__264900,G__264901,G__264902,G__264903,G__264904,G__264905,G__264906,G__264907,G__264908,G__264909) : target_fn.call(null,G__264891,G__264892,G__264893,G__264894,G__264895,G__264896,G__264897,G__264898,G__264899,G__264900,G__264901,G__264902,G__264903,G__264904,G__264905,G__264906,G__264907,G__264908,G__264909));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__264910 = a;
var G__264911 = b;
var G__264912 = c;
var G__264913 = d;
var G__264914 = e;
var G__264915 = f;
var G__264916 = g;
var G__264917 = h;
var G__264918 = i;
var G__264919 = j;
var G__264920 = k;
var G__264921 = l;
var G__264922 = m;
var G__264923 = n;
var G__264924 = o;
var G__264925 = p;
var G__264926 = q;
var G__264927 = r;
var G__264928 = s;
var G__264929 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__264910,G__264911,G__264912,G__264913,G__264914,G__264915,G__264916,G__264917,G__264918,G__264919,G__264920,G__264921,G__264922,G__264923,G__264924,G__264925,G__264926,G__264927,G__264928,G__264929) : self__.dispatch_fn.call(null,G__264910,G__264911,G__264912,G__264913,G__264914,G__264915,G__264916,G__264917,G__264918,G__264919,G__264920,G__264921,G__264922,G__264923,G__264924,G__264925,G__264926,G__264927,G__264928,G__264929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__264930 = a;
var G__264931 = b;
var G__264932 = c;
var G__264933 = d;
var G__264934 = e;
var G__264935 = f;
var G__264936 = g;
var G__264937 = h;
var G__264938 = i;
var G__264939 = j;
var G__264940 = k;
var G__264941 = l;
var G__264942 = m;
var G__264943 = n;
var G__264944 = o;
var G__264945 = p;
var G__264946 = q;
var G__264947 = r;
var G__264948 = s;
var G__264949 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__264930,G__264931,G__264932,G__264933,G__264934,G__264935,G__264936,G__264937,G__264938,G__264939,G__264940,G__264941,G__264942,G__264943,G__264944,G__264945,G__264946,G__264947,G__264948,G__264949) : target_fn.call(null,G__264930,G__264931,G__264932,G__264933,G__264934,G__264935,G__264936,G__264937,G__264938,G__264939,G__264940,G__264941,G__264942,G__264943,G__264944,G__264945,G__264946,G__264947,G__264948,G__264949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__264951 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__264951);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__264956 = msg;
return Error(G__264956);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__264961 = x;
var G__264962 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__264961,G__264962) : pred.call(null,G__264961,G__264962));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__264963 = y;
var G__264964 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__264963,G__264964) : pred.call(null,G__264963,G__264964));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
