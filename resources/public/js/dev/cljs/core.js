// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__80577__delegate = function (args){
return console.log.apply(console,(function (){var G__80576 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__80576) : cljs.core.into_array.call(null,G__80576));
})());
};
var G__80577 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__80578__i = 0, G__80578__a = new Array(arguments.length -  0);
while (G__80578__i < G__80578__a.length) {G__80578__a[G__80578__i] = arguments[G__80578__i + 0]; ++G__80578__i;}
  args = new cljs.core.IndexedSeq(G__80578__a,0);
} 
return G__80577__delegate.call(this,args);};
G__80577.cljs$lang$maxFixedArity = 0;
G__80577.cljs$lang$applyTo = (function (arglist__80579){
var args = cljs.core.seq(arglist__80579);
return G__80577__delegate(args);
});
G__80577.cljs$core$IFn$_invoke$arity$variadic = G__80577__delegate;
return G__80577;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__80581 = x;
return goog.isString(G__80581);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__80583 = x__$1;
return goog.typeOf(G__80583);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3969__auto__ = ty;
if(cljs.core.truth_(and__3969__auto__)){
return ty.cljs$lang$type;
} else {
return and__3969__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__80585 = obj;
return goog.typeOf(G__80585);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__80587 = Symbol;
return goog.typeOf(G__80587);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4868__auto___80589 = len;
var i_80590 = (0);
while(true){
if((i_80590 < n__4868__auto___80589)){
(new_arr[i_80590] = (arr[i_80590]));

var G__80591 = (i_80590 + (1));
i_80590 = G__80591;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__80592 = (i + (1));
i = G__80592;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__80601__delegate = function (array,i,idxs){
var G__80598 = aget;
var G__80599 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__80600 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__80598,G__80599,G__80600) : cljs.core.apply.call(null,G__80598,G__80599,G__80600));
};
var G__80601 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__80602__i = 0, G__80602__a = new Array(arguments.length -  2);
while (G__80602__i < G__80602__a.length) {G__80602__a[G__80602__i] = arguments[G__80602__i + 2]; ++G__80602__i;}
  idxs = new cljs.core.IndexedSeq(G__80602__a,0);
} 
return G__80601__delegate.call(this,array,i,idxs);};
G__80601.cljs$lang$maxFixedArity = 2;
G__80601.cljs$lang$applyTo = (function (arglist__80603){
var array = cljs.core.first(arglist__80603);
arglist__80603 = cljs.core.next(arglist__80603);
var i = cljs.core.first(arglist__80603);
var idxs = cljs.core.rest(arglist__80603);
return G__80601__delegate(array,i,idxs);
});
G__80601.cljs$core$IFn$_invoke$arity$variadic = G__80601__delegate;
return G__80601;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__80604 = null;
if (arguments.length > 2) {
var G__80605__i = 0, G__80605__a = new Array(arguments.length -  2);
while (G__80605__i < G__80605__a.length) {G__80605__a[G__80605__i] = arguments[G__80605__i + 2]; ++G__80605__i;}
G__80604 = new cljs.core.IndexedSeq(G__80605__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__80604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__80614__delegate = function (array,idx,idx2,idxv){
var G__80610 = aset;
var G__80611 = (array[idx]);
var G__80612 = idx2;
var G__80613 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__80610,G__80611,G__80612,G__80613) : cljs.core.apply.call(null,G__80610,G__80611,G__80612,G__80613));
};
var G__80614 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__80615__i = 0, G__80615__a = new Array(arguments.length -  3);
while (G__80615__i < G__80615__a.length) {G__80615__a[G__80615__i] = arguments[G__80615__i + 3]; ++G__80615__i;}
  idxv = new cljs.core.IndexedSeq(G__80615__a,0);
} 
return G__80614__delegate.call(this,array,idx,idx2,idxv);};
G__80614.cljs$lang$maxFixedArity = 3;
G__80614.cljs$lang$applyTo = (function (arglist__80616){
var array = cljs.core.first(arglist__80616);
arglist__80616 = cljs.core.next(arglist__80616);
var idx = cljs.core.first(arglist__80616);
arglist__80616 = cljs.core.next(arglist__80616);
var idx2 = cljs.core.first(arglist__80616);
var idxv = cljs.core.rest(arglist__80616);
return G__80614__delegate(array,idx,idx2,idxv);
});
G__80614.cljs$core$IFn$_invoke$arity$variadic = G__80614__delegate;
return G__80614;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__80617 = null;
if (arguments.length > 3) {
var G__80618__i = 0, G__80618__a = new Array(arguments.length -  3);
while (G__80618__i < G__80618__a.length) {G__80618__a[G__80618__i] = arguments[G__80618__i + 3]; ++G__80618__i;}
G__80617 = new cljs.core.IndexedSeq(G__80618__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__80617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__80624 = (function (a,x){
a.push(x);

return a;
});
var G__80625 = [];
var G__80626 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__80624,G__80625,G__80626) : cljs.core.reduce.call(null,G__80624,G__80625,G__80626));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__80627__i = 0, G__80627__a = new Array(arguments.length -  2);
while (G__80627__i < G__80627__a.length) {G__80627__a[G__80627__i] = arguments[G__80627__i + 2]; ++G__80627__i;}
  args = new cljs.core.IndexedSeq(G__80627__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__80628){
var obj = cljs.core.first(arglist__80628);
arglist__80628 = cljs.core.next(arglist__80628);
var s = cljs.core.first(arglist__80628);
var args = cljs.core.rest(arglist__80628);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj80630 = {};
return obj80630;
})();


cljs.core.IFn = (function (){var obj80632 = {};
return obj80632;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80678 = x__4625__auto__;
return goog.typeOf(G__80678);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80680 = x__4625__auto__;
return goog.typeOf(G__80680);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80682 = x__4625__auto__;
return goog.typeOf(G__80682);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80684 = x__4625__auto__;
return goog.typeOf(G__80684);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80686 = x__4625__auto__;
return goog.typeOf(G__80686);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80688 = x__4625__auto__;
return goog.typeOf(G__80688);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80690 = x__4625__auto__;
return goog.typeOf(G__80690);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80692 = x__4625__auto__;
return goog.typeOf(G__80692);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80694 = x__4625__auto__;
return goog.typeOf(G__80694);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80696 = x__4625__auto__;
return goog.typeOf(G__80696);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80698 = x__4625__auto__;
return goog.typeOf(G__80698);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80700 = x__4625__auto__;
return goog.typeOf(G__80700);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80702 = x__4625__auto__;
return goog.typeOf(G__80702);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80704 = x__4625__auto__;
return goog.typeOf(G__80704);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80706 = x__4625__auto__;
return goog.typeOf(G__80706);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80708 = x__4625__auto__;
return goog.typeOf(G__80708);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80710 = x__4625__auto__;
return goog.typeOf(G__80710);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80712 = x__4625__auto__;
return goog.typeOf(G__80712);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80714 = x__4625__auto__;
return goog.typeOf(G__80714);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80716 = x__4625__auto__;
return goog.typeOf(G__80716);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80718 = x__4625__auto__;
return goog.typeOf(G__80718);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__80720 = x__4625__auto__;
return goog.typeOf(G__80720);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj80722 = {};
return obj80722;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3969__auto__ = value;
if(and__3969__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3969__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4625__auto__ = (((value == null))?null:value);
return (function (){var or__3981__auto__ = (cljs.core._clone[(function (){var G__80726 = x__4625__auto__;
return goog.typeOf(G__80726);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clone["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj80728 = {};
return obj80728;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._count[(function (){var G__80732 = x__4625__auto__;
return goog.typeOf(G__80732);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._count["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj80734 = {};
return obj80734;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._empty[(function (){var G__80738 = x__4625__auto__;
return goog.typeOf(G__80738);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._empty["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj80740 = {};
return obj80740;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._conj[(function (){var G__80744 = x__4625__auto__;
return goog.typeOf(G__80744);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj80746 = {};
return obj80746;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__80752 = x__4625__auto__;
return goog.typeOf(G__80752);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__80754 = x__4625__auto__;
return goog.typeOf(G__80754);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj80756 = {};
return obj80756;
})();


cljs.core.ISeq = (function (){var obj80758 = {};
return obj80758;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._first[(function (){var G__80762 = x__4625__auto__;
return goog.typeOf(G__80762);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rest[(function (){var G__80766 = x__4625__auto__;
return goog.typeOf(G__80766);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj80768 = {};
return obj80768;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._next[(function (){var G__80772 = x__4625__auto__;
return goog.typeOf(G__80772);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj80774 = {};
return obj80774;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__80780 = x__4625__auto__;
return goog.typeOf(G__80780);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__80782 = x__4625__auto__;
return goog.typeOf(G__80782);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj80784 = {};
return obj80784;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__80788 = x__4625__auto__;
return goog.typeOf(G__80788);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc[(function (){var G__80792 = x__4625__auto__;
return goog.typeOf(G__80792);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj80794 = {};
return obj80794;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc[(function (){var G__80798 = x__4625__auto__;
return goog.typeOf(G__80798);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj80800 = {};
return obj80800;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._key[(function (){var G__80804 = x__4625__auto__;
return goog.typeOf(G__80804);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._val[(function (){var G__80808 = x__4625__auto__;
return goog.typeOf(G__80808);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._val["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj80810 = {};
return obj80810;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin[(function (){var G__80814 = x__4625__auto__;
return goog.typeOf(G__80814);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj80816 = {};
return obj80816;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._peek[(function (){var G__80820 = x__4625__auto__;
return goog.typeOf(G__80820);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._peek["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._pop[(function (){var G__80824 = x__4625__auto__;
return goog.typeOf(G__80824);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj80826 = {};
return obj80826;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n[(function (){var G__80830 = x__4625__auto__;
return goog.typeOf(G__80830);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj80832 = {};
return obj80832;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref[(function (){var G__80836 = x__4625__auto__;
return goog.typeOf(G__80836);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj80838 = {};
return obj80838;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref_with_timeout[(function (){var G__80842 = x__4625__auto__;
return goog.typeOf(G__80842);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj80844 = {};
return obj80844;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._meta[(function (){var G__80848 = x__4625__auto__;
return goog.typeOf(G__80848);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj80850 = {};
return obj80850;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._with_meta[(function (){var G__80854 = x__4625__auto__;
return goog.typeOf(G__80854);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj80856 = {};
return obj80856;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__80862 = x__4625__auto__;
return goog.typeOf(G__80862);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__80864 = x__4625__auto__;
return goog.typeOf(G__80864);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj80866 = {};
return obj80866;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._kv_reduce[(function (){var G__80870 = x__4625__auto__;
return goog.typeOf(G__80870);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj80872 = {};
return obj80872;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._equiv[(function (){var G__80876 = x__4625__auto__;
return goog.typeOf(G__80876);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._equiv["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj80878 = {};
return obj80878;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._hash[(function (){var G__80882 = x__4625__auto__;
return goog.typeOf(G__80882);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._hash["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj80884 = {};
return obj80884;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._seq[(function (){var G__80888 = x__4625__auto__;
return goog.typeOf(G__80888);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj80890 = {};
return obj80890;
})();


cljs.core.IList = (function (){var obj80892 = {};
return obj80892;
})();


cljs.core.IRecord = (function (){var obj80894 = {};
return obj80894;
})();


cljs.core.IReversible = (function (){var obj80896 = {};
return obj80896;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rseq[(function (){var G__80900 = x__4625__auto__;
return goog.typeOf(G__80900);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rseq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj80902 = {};
return obj80902;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq[(function (){var G__80906 = x__4625__auto__;
return goog.typeOf(G__80906);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq_from[(function (){var G__80910 = x__4625__auto__;
return goog.typeOf(G__80910);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._entry_key[(function (){var G__80914 = x__4625__auto__;
return goog.typeOf(G__80914);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._comparator[(function (){var G__80918 = x__4625__auto__;
return goog.typeOf(G__80918);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._comparator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj80920 = {};
return obj80920;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._write[(function (){var G__80924 = x__4625__auto__;
return goog.typeOf(G__80924);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._write["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._flush[(function (){var G__80928 = x__4625__auto__;
return goog.typeOf(G__80928);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._flush["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj80930 = {};
return obj80930;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._pr_writer[(function (){var G__80934 = x__4625__auto__;
return goog.typeOf(G__80934);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj80936 = {};
return obj80936;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3969__auto__ = d;
if(and__3969__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4625__auto__ = (((d == null))?null:d);
return (function (){var or__3981__auto__ = (cljs.core._realized_QMARK_[(function (){var G__80940 = x__4625__auto__;
return goog.typeOf(G__80940);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj80942 = {};
return obj80942;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._notify_watches[(function (){var G__80946 = x__4625__auto__;
return goog.typeOf(G__80946);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._add_watch[(function (){var G__80950 = x__4625__auto__;
return goog.typeOf(G__80950);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._remove_watch[(function (){var G__80954 = x__4625__auto__;
return goog.typeOf(G__80954);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj80956 = {};
return obj80956;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._as_transient[(function (){var G__80960 = x__4625__auto__;
return goog.typeOf(G__80960);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj80962 = {};
return obj80962;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._conj_BANG_[(function (){var G__80966 = x__4625__auto__;
return goog.typeOf(G__80966);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._persistent_BANG_[(function (){var G__80970 = x__4625__auto__;
return goog.typeOf(G__80970);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj80972 = {};
return obj80972;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_BANG_[(function (){var G__80976 = x__4625__auto__;
return goog.typeOf(G__80976);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj80978 = {};
return obj80978;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__80982 = x__4625__auto__;
return goog.typeOf(G__80982);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj80984 = {};
return obj80984;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__80988 = x__4625__auto__;
return goog.typeOf(G__80988);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._pop_BANG_[(function (){var G__80992 = x__4625__auto__;
return goog.typeOf(G__80992);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj80994 = {};
return obj80994;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__80998 = x__4625__auto__;
return goog.typeOf(G__80998);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj81000 = {};
return obj81000;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._compare[(function (){var G__81004 = x__4625__auto__;
return goog.typeOf(G__81004);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._compare["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj81006 = {};
return obj81006;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._drop_first[(function (){var G__81010 = x__4625__auto__;
return goog.typeOf(G__81010);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj81012 = {};
return obj81012;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_first[(function (){var G__81016 = x__4625__auto__;
return goog.typeOf(G__81016);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_rest[(function (){var G__81020 = x__4625__auto__;
return goog.typeOf(G__81020);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj81022 = {};
return obj81022;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_next[(function (){var G__81026 = x__4625__auto__;
return goog.typeOf(G__81026);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj81028 = {};
return obj81028;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._name[(function (){var G__81032 = x__4625__auto__;
return goog.typeOf(G__81032);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._name["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._namespace[(function (){var G__81036 = x__4625__auto__;
return goog.typeOf(G__81036);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._namespace["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj81038 = {};
return obj81038;
})();


cljs.core.IReset = (function (){var obj81040 = {};
return obj81040;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._reset_BANG_[(function (){var G__81044 = x__4625__auto__;
return goog.typeOf(G__81044);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj81046 = {};
return obj81046;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__81056 = x__4625__auto__;
return goog.typeOf(G__81056);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__81058 = x__4625__auto__;
return goog.typeOf(G__81058);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__81060 = x__4625__auto__;
return goog.typeOf(G__81060);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__81062 = x__4625__auto__;
return goog.typeOf(G__81062);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj81064 = {};
return obj81064;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._vreset_BANG_[(function (){var G__81068 = x__4625__auto__;
return goog.typeOf(G__81068);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj81070 = {};
return obj81070;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._iterator[(function (){var G__81074 = x__4625__auto__;
return goog.typeOf(G__81074);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._iterator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__81077 = (4294967295);
var G__81078 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__81077,G__81078) : Math.imul.call(null,G__81077,G__81078));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__81081 = a;
var G__81082 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__81081,G__81082) : Math.imul.call(null,G__81081,G__81082));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__81083 = (i + (2));
var G__81084 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__81083;
h1 = G__81084;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj81086 = {};
return obj81086;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__81087 = (i + (1));
var G__81088 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__81087;
hash = G__81088;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj81092 = {};
return obj81092;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__81095 = o;
if(G__81095){
var bit__4655__auto__ = (G__81095.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4655__auto__) || (G__81095.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__81096 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__81096) : Math.floor.call(null,G__81096));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__81103 = a.ns;
var G__81104 = b.ns;
return goog.array.defaultCompare(G__81103,G__81104);
})();
if(((0) === nsc)){
var G__81105 = a.name;
var G__81106 = b.name;
return goog.array.defaultCompare(G__81105,G__81106);
} else {
return nsc;
}
}
} else {
var G__81107 = a.name;
var G__81108 = b.name;
return goog.array.defaultCompare(G__81107,G__81108);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__81110 = null;
var G__81110__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__81110__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__81110 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__81110__2.call(this,self__,coll);
case 3:
return G__81110__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__81110.cljs$core$IFn$_invoke$arity$2 = G__81110__2;
G__81110.cljs$core$IFn$_invoke$arity$3 = G__81110__3;
return G__81110;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args81109){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args81109)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__81158 = null;
var G__81158__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__81158__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__81158__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__81158__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__81158__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__81158__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__81158__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__81158__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__81158__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__81158__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__81158__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__81158__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__81158__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__81158__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__81158__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__81158__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__81158__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__81158__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__81158__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__81158__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__81158__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__81158__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81114 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__81115 = a;
var G__81116 = b;
var G__81117 = c;
var G__81118 = d;
var G__81119 = e;
var G__81120 = f;
var G__81121 = g;
var G__81122 = h;
var G__81123 = i;
var G__81124 = j;
var G__81125 = k;
var G__81126 = l;
var G__81127 = m;
var G__81128 = n;
var G__81129 = o;
var G__81130 = p;
var G__81131 = q;
var G__81132 = r;
var G__81133 = s;
var G__81134 = t;
var G__81135 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__81114,G__81115,G__81116,G__81117,G__81118,G__81119,G__81120,G__81121,G__81122,G__81123,G__81124,G__81125,G__81126,G__81127,G__81128,G__81129,G__81130,G__81131,G__81132,G__81133,G__81134,G__81135) : cljs.core.apply.call(null,G__81114,G__81115,G__81116,G__81117,G__81118,G__81119,G__81120,G__81121,G__81122,G__81123,G__81124,G__81125,G__81126,G__81127,G__81128,G__81129,G__81130,G__81131,G__81132,G__81133,G__81134,G__81135));
});
G__81158 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__81158__1.call(this,self__);
case 2:
return G__81158__2.call(this,self__,a);
case 3:
return G__81158__3.call(this,self__,a,b);
case 4:
return G__81158__4.call(this,self__,a,b,c);
case 5:
return G__81158__5.call(this,self__,a,b,c,d);
case 6:
return G__81158__6.call(this,self__,a,b,c,d,e);
case 7:
return G__81158__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__81158__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__81158__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__81158__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__81158__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__81158__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__81158__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__81158__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__81158__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__81158__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__81158__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__81158__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__81158__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__81158__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__81158__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__81158__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__81158.cljs$core$IFn$_invoke$arity$1 = G__81158__1;
G__81158.cljs$core$IFn$_invoke$arity$2 = G__81158__2;
G__81158.cljs$core$IFn$_invoke$arity$3 = G__81158__3;
G__81158.cljs$core$IFn$_invoke$arity$4 = G__81158__4;
G__81158.cljs$core$IFn$_invoke$arity$5 = G__81158__5;
G__81158.cljs$core$IFn$_invoke$arity$6 = G__81158__6;
G__81158.cljs$core$IFn$_invoke$arity$7 = G__81158__7;
G__81158.cljs$core$IFn$_invoke$arity$8 = G__81158__8;
G__81158.cljs$core$IFn$_invoke$arity$9 = G__81158__9;
G__81158.cljs$core$IFn$_invoke$arity$10 = G__81158__10;
G__81158.cljs$core$IFn$_invoke$arity$11 = G__81158__11;
G__81158.cljs$core$IFn$_invoke$arity$12 = G__81158__12;
G__81158.cljs$core$IFn$_invoke$arity$13 = G__81158__13;
G__81158.cljs$core$IFn$_invoke$arity$14 = G__81158__14;
G__81158.cljs$core$IFn$_invoke$arity$15 = G__81158__15;
G__81158.cljs$core$IFn$_invoke$arity$16 = G__81158__16;
G__81158.cljs$core$IFn$_invoke$arity$17 = G__81158__17;
G__81158.cljs$core$IFn$_invoke$arity$18 = G__81158__18;
G__81158.cljs$core$IFn$_invoke$arity$19 = G__81158__19;
G__81158.cljs$core$IFn$_invoke$arity$20 = G__81158__20;
G__81158.cljs$core$IFn$_invoke$arity$21 = G__81158__21;
G__81158.cljs$core$IFn$_invoke$arity$22 = G__81158__22;
return G__81158;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args81113){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args81113)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__81136 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__81137 = a;
var G__81138 = b;
var G__81139 = c;
var G__81140 = d;
var G__81141 = e;
var G__81142 = f;
var G__81143 = g;
var G__81144 = h;
var G__81145 = i;
var G__81146 = j;
var G__81147 = k;
var G__81148 = l;
var G__81149 = m;
var G__81150 = n;
var G__81151 = o;
var G__81152 = p;
var G__81153 = q;
var G__81154 = r;
var G__81155 = s;
var G__81156 = t;
var G__81157 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__81136,G__81137,G__81138,G__81139,G__81140,G__81141,G__81142,G__81143,G__81144,G__81145,G__81146,G__81147,G__81148,G__81149,G__81150,G__81151,G__81152,G__81153,G__81154,G__81155,G__81156,G__81157) : cljs.core.apply.call(null,G__81136,G__81137,G__81138,G__81139,G__81140,G__81141,G__81142,G__81143,G__81144,G__81145,G__81146,G__81147,G__81148,G__81149,G__81150,G__81151,G__81152,G__81153,G__81154,G__81155,G__81156,G__81157));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__81160 = x;
if(G__81160){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__81160.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__81160.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__81160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__81160);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__81162 = value;
if(G__81162){
var bit__4662__auto__ = (G__81162.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4662__auto__) || (G__81162.cljs$core$ICloneable$)){
return true;
} else {
if((!G__81162.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__81162);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__81162);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__81164 = coll;
if(G__81164){
var bit__4655__auto__ = (G__81164.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4655__auto__) || (G__81164.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__81166 = coll;
if(G__81166){
var bit__4655__auto__ = (G__81166.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__81166.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__81168 = coll;
if(G__81168){
var bit__4655__auto__ = (G__81168.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__81168.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__81170 = coll;
if(G__81170){
var bit__4655__auto__ = (G__81170.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4655__auto__) || (G__81170.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__81175__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__81176 = y;
var G__81177 = cljs.core.first(more);
var G__81178 = cljs.core.next(more);
x = G__81176;
y = G__81177;
more = G__81178;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__81175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81179__i = 0, G__81179__a = new Array(arguments.length -  2);
while (G__81179__i < G__81179__a.length) {G__81179__a[G__81179__i] = arguments[G__81179__i + 2]; ++G__81179__i;}
  more = new cljs.core.IndexedSeq(G__81179__a,0);
} 
return G__81175__delegate.call(this,x,y,more);};
G__81175.cljs$lang$maxFixedArity = 2;
G__81175.cljs$lang$applyTo = (function (arglist__81180){
var x = cljs.core.first(arglist__81180);
arglist__81180 = cljs.core.next(arglist__81180);
var y = cljs.core.first(arglist__81180);
var more = cljs.core.rest(arglist__81180);
return G__81175__delegate(x,y,more);
});
G__81175.cljs$core$IFn$_invoke$arity$variadic = G__81175__delegate;
return G__81175;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__81181 = null;
if (arguments.length > 2) {
var G__81182__i = 0, G__81182__a = new Array(arguments.length -  2);
while (G__81182__i < G__81182__a.length) {G__81182__a[G__81182__i] = arguments[G__81182__i + 2]; ++G__81182__i;}
G__81181 = new cljs.core.IndexedSeq(G__81182__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__81183 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__81183) : cljs.core.es6_iterator_seq.call(null,G__81183));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__81184 = (n + (1));
var G__81185 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__81186 = cljs.core.next(coll__$1);
n = G__81184;
hash_code = G__81185;
coll__$1 = G__81186;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__81187 = (n + (1));
var G__81188 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__81189 = cljs.core.next(coll__$1);
n = G__81187;
hash_code = G__81188;
coll__$1 = G__81189;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__81190 = o;
return goog.getUid(G__81190);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__81192 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__81192) : cljs.core.deref.call(null,G__81192));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__81199 = val;
var G__81200 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81199,G__81200) : f.call(null,G__81199,G__81200));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81205 = nval;
var G__81206 = (n + (1));
val = G__81205;
n = G__81206;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__81201 = val__$1;
var G__81202 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81201,G__81202) : f.call(null,G__81201,G__81202));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81207 = nval;
var G__81208 = (n + (1));
val__$1 = G__81207;
n = G__81208;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__81203 = val__$1;
var G__81204 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81203,G__81204) : f.call(null,G__81203,G__81204));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81209 = nval;
var G__81210 = (n + (1));
val__$1 = G__81209;
n = G__81210;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__81217 = val;
var G__81218 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81217,G__81218) : f.call(null,G__81217,G__81218));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81223 = nval;
var G__81224 = (n + (1));
val = G__81223;
n = G__81224;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__81219 = val__$1;
var G__81220 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81219,G__81220) : f.call(null,G__81219,G__81220));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81225 = nval;
var G__81226 = (n + (1));
val__$1 = G__81225;
n = G__81226;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__81221 = val__$1;
var G__81222 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81221,G__81222) : f.call(null,G__81221,G__81222));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81227 = nval;
var G__81228 = (n + (1));
val__$1 = G__81227;
n = G__81228;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__81230 = x;
if(G__81230){
var bit__4662__auto__ = (G__81230.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4662__auto__) || (G__81230.cljs$core$ICounted$)){
return true;
} else {
if((!G__81230.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__81230);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__81230);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__81232 = x;
if(G__81232){
var bit__4662__auto__ = (G__81232.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4662__auto__) || (G__81232.cljs$core$IIndexed$)){
return true;
} else {
if((!G__81232.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__81232);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__81232);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__81233 = coll__$1;
var G__81234 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__81233,G__81234) : cljs.core.equiv_sequential.call(null,G__81233,G__81234));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__81235 = o;
var G__81236 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__81235,G__81236) : cljs.core.cons.call(null,G__81235,G__81236));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__81239 = coll__$1;
var G__81240 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__81239,G__81240) : cljs.core.equiv_sequential.call(null,G__81239,G__81240));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__81241 = cljs.core.List.EMPTY;
var G__81242 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__81241,G__81242) : cljs.core.with_meta.call(null,G__81241,G__81242));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__81243 = f;
var G__81244 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__81243,G__81244) : cljs.core.seq_reduce.call(null,G__81243,G__81244));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__81245 = f;
var G__81246 = start;
var G__81247 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__81245,G__81246,G__81247) : cljs.core.seq_reduce.call(null,G__81245,G__81246,G__81247));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__81248 = o;
var G__81249 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__81248,G__81249) : cljs.core.cons.call(null,G__81248,G__81249));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__81250 = sn;
s = G__81250;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__81255__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__81256 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__81257 = cljs.core.first(xs);
var G__81258 = cljs.core.next(xs);
coll = G__81256;
x = G__81257;
xs = G__81258;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__81255 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__81259__i = 0, G__81259__a = new Array(arguments.length -  2);
while (G__81259__i < G__81259__a.length) {G__81259__a[G__81259__i] = arguments[G__81259__i + 2]; ++G__81259__i;}
  xs = new cljs.core.IndexedSeq(G__81259__a,0);
} 
return G__81255__delegate.call(this,coll,x,xs);};
G__81255.cljs$lang$maxFixedArity = 2;
G__81255.cljs$lang$applyTo = (function (arglist__81260){
var coll = cljs.core.first(arglist__81260);
arglist__81260 = cljs.core.next(arglist__81260);
var x = cljs.core.first(arglist__81260);
var xs = cljs.core.rest(arglist__81260);
return G__81255__delegate(coll,x,xs);
});
G__81255.cljs$core$IFn$_invoke$arity$variadic = G__81255__delegate;
return G__81255;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__81261 = null;
if (arguments.length > 2) {
var G__81262__i = 0, G__81262__a = new Array(arguments.length -  2);
while (G__81262__i < G__81262__a.length) {G__81262__a[G__81262__i] = arguments[G__81262__i + 2]; ++G__81262__i;}
G__81261 = new cljs.core.IndexedSeq(G__81262__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__81261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__81263 = cljs.core.next(s);
var G__81264 = (acc + (1));
s = G__81263;
acc = G__81264;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__81266 = coll;
if(G__81266){
var bit__4655__auto__ = (G__81266.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4655__auto__) || (G__81266.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__81267 = cljs.core.next(coll);
var G__81268 = (n - (1));
coll = G__81267;
n = G__81268;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__81269 = cljs.core.next(coll);
var G__81270 = (n - (1));
var G__81271 = not_found;
coll = G__81269;
n = G__81270;
not_found = G__81271;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__81276 = coll;
if(G__81276){
var bit__4655__auto__ = (G__81276.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__81276.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__81277 = coll;
if(G__81277){
var bit__4662__auto__ = (G__81277.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__81277.cljs$core$ISeq$)){
return true;
} else {
if((!G__81277.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81277);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81277);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__81278 = coll;
if(G__81278){
var bit__4655__auto__ = (G__81278.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__81278.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__81279 = coll;
if(G__81279){
var bit__4662__auto__ = (G__81279.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__81279.cljs$core$ISeq$)){
return true;
} else {
if((!G__81279.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81279);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81279);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__81280 = (n__$1 - (1));
var G__81281 = cljs.core.rest(xs);
n__$1 = G__81280;
xs = G__81281;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__81284 = o;
if(G__81284){
var bit__4655__auto__ = (G__81284.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__81284.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__81285 = o;
if(G__81285){
var bit__4655__auto__ = (G__81285.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__81285.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__81289__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__81290 = ret;
var G__81291 = cljs.core.first(kvs);
var G__81292 = cljs.core.second(kvs);
var G__81293 = cljs.core.nnext(kvs);
coll = G__81290;
k = G__81291;
v = G__81292;
kvs = G__81293;
continue;
} else {
return ret;
}
break;
}
};
var G__81289 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__81294__i = 0, G__81294__a = new Array(arguments.length -  3);
while (G__81294__i < G__81294__a.length) {G__81294__a[G__81294__i] = arguments[G__81294__i + 3]; ++G__81294__i;}
  kvs = new cljs.core.IndexedSeq(G__81294__a,0);
} 
return G__81289__delegate.call(this,coll,k,v,kvs);};
G__81289.cljs$lang$maxFixedArity = 3;
G__81289.cljs$lang$applyTo = (function (arglist__81295){
var coll = cljs.core.first(arglist__81295);
arglist__81295 = cljs.core.next(arglist__81295);
var k = cljs.core.first(arglist__81295);
arglist__81295 = cljs.core.next(arglist__81295);
var v = cljs.core.first(arglist__81295);
var kvs = cljs.core.rest(arglist__81295);
return G__81289__delegate(coll,k,v,kvs);
});
G__81289.cljs$core$IFn$_invoke$arity$variadic = G__81289__delegate;
return G__81289;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__81296 = null;
if (arguments.length > 3) {
var G__81297__i = 0, G__81297__a = new Array(arguments.length -  3);
while (G__81297__i < G__81297__a.length) {G__81297__a[G__81297__i] = arguments[G__81297__i + 3]; ++G__81297__i;}
G__81296 = new cljs.core.IndexedSeq(G__81297__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__81296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__81300__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__81301 = ret;
var G__81302 = cljs.core.first(ks);
var G__81303 = cljs.core.next(ks);
coll = G__81301;
k = G__81302;
ks = G__81303;
continue;
} else {
return ret;
}
}
break;
}
};
var G__81300 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__81304__i = 0, G__81304__a = new Array(arguments.length -  2);
while (G__81304__i < G__81304__a.length) {G__81304__a[G__81304__i] = arguments[G__81304__i + 2]; ++G__81304__i;}
  ks = new cljs.core.IndexedSeq(G__81304__a,0);
} 
return G__81300__delegate.call(this,coll,k,ks);};
G__81300.cljs$lang$maxFixedArity = 2;
G__81300.cljs$lang$applyTo = (function (arglist__81305){
var coll = cljs.core.first(arglist__81305);
arglist__81305 = cljs.core.next(arglist__81305);
var k = cljs.core.first(arglist__81305);
var ks = cljs.core.rest(arglist__81305);
return G__81300__delegate(coll,k,ks);
});
G__81300.cljs$core$IFn$_invoke$arity$variadic = G__81300__delegate;
return G__81300;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__81306 = null;
if (arguments.length > 2) {
var G__81307__i = 0, G__81307__a = new Array(arguments.length -  2);
while (G__81307__i < G__81307__a.length) {G__81307__a[G__81307__i] = arguments[G__81307__i + 2]; ++G__81307__i;}
G__81306 = new cljs.core.IndexedSeq(G__81307__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__81306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3981__auto__ = (function (){var G__81312 = f;
return goog.isFunction(G__81312);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__81313 = f;
if(G__81313){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto____$1 = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
return G__81313.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__81313.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__81313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__81313);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__81779 = null;
var G__81779__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__81779__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81315 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__81315) : self__.afn.call(null,G__81315));
});
var G__81779__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81316 = a;
var G__81317 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__81316,G__81317) : self__.afn.call(null,G__81316,G__81317));
});
var G__81779__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81318 = a;
var G__81319 = b;
var G__81320 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__81318,G__81319,G__81320) : self__.afn.call(null,G__81318,G__81319,G__81320));
});
var G__81779__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81321 = a;
var G__81322 = b;
var G__81323 = c;
var G__81324 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__81321,G__81322,G__81323,G__81324) : self__.afn.call(null,G__81321,G__81322,G__81323,G__81324));
});
var G__81779__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81325 = a;
var G__81326 = b;
var G__81327 = c;
var G__81328 = d;
var G__81329 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__81325,G__81326,G__81327,G__81328,G__81329) : self__.afn.call(null,G__81325,G__81326,G__81327,G__81328,G__81329));
});
var G__81779__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81330 = a;
var G__81331 = b;
var G__81332 = c;
var G__81333 = d;
var G__81334 = e;
var G__81335 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__81330,G__81331,G__81332,G__81333,G__81334,G__81335) : self__.afn.call(null,G__81330,G__81331,G__81332,G__81333,G__81334,G__81335));
});
var G__81779__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81336 = a;
var G__81337 = b;
var G__81338 = c;
var G__81339 = d;
var G__81340 = e;
var G__81341 = f;
var G__81342 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__81336,G__81337,G__81338,G__81339,G__81340,G__81341,G__81342) : self__.afn.call(null,G__81336,G__81337,G__81338,G__81339,G__81340,G__81341,G__81342));
});
var G__81779__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81343 = a;
var G__81344 = b;
var G__81345 = c;
var G__81346 = d;
var G__81347 = e;
var G__81348 = f;
var G__81349 = g;
var G__81350 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__81343,G__81344,G__81345,G__81346,G__81347,G__81348,G__81349,G__81350) : self__.afn.call(null,G__81343,G__81344,G__81345,G__81346,G__81347,G__81348,G__81349,G__81350));
});
var G__81779__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81351 = a;
var G__81352 = b;
var G__81353 = c;
var G__81354 = d;
var G__81355 = e;
var G__81356 = f;
var G__81357 = g;
var G__81358 = h;
var G__81359 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__81351,G__81352,G__81353,G__81354,G__81355,G__81356,G__81357,G__81358,G__81359) : self__.afn.call(null,G__81351,G__81352,G__81353,G__81354,G__81355,G__81356,G__81357,G__81358,G__81359));
});
var G__81779__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81360 = a;
var G__81361 = b;
var G__81362 = c;
var G__81363 = d;
var G__81364 = e;
var G__81365 = f;
var G__81366 = g;
var G__81367 = h;
var G__81368 = i;
var G__81369 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__81360,G__81361,G__81362,G__81363,G__81364,G__81365,G__81366,G__81367,G__81368,G__81369) : self__.afn.call(null,G__81360,G__81361,G__81362,G__81363,G__81364,G__81365,G__81366,G__81367,G__81368,G__81369));
});
var G__81779__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81370 = a;
var G__81371 = b;
var G__81372 = c;
var G__81373 = d;
var G__81374 = e;
var G__81375 = f;
var G__81376 = g;
var G__81377 = h;
var G__81378 = i;
var G__81379 = j;
var G__81380 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__81370,G__81371,G__81372,G__81373,G__81374,G__81375,G__81376,G__81377,G__81378,G__81379,G__81380) : self__.afn.call(null,G__81370,G__81371,G__81372,G__81373,G__81374,G__81375,G__81376,G__81377,G__81378,G__81379,G__81380));
});
var G__81779__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81381 = a;
var G__81382 = b;
var G__81383 = c;
var G__81384 = d;
var G__81385 = e;
var G__81386 = f;
var G__81387 = g;
var G__81388 = h;
var G__81389 = i;
var G__81390 = j;
var G__81391 = k;
var G__81392 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__81381,G__81382,G__81383,G__81384,G__81385,G__81386,G__81387,G__81388,G__81389,G__81390,G__81391,G__81392) : self__.afn.call(null,G__81381,G__81382,G__81383,G__81384,G__81385,G__81386,G__81387,G__81388,G__81389,G__81390,G__81391,G__81392));
});
var G__81779__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81393 = a;
var G__81394 = b;
var G__81395 = c;
var G__81396 = d;
var G__81397 = e;
var G__81398 = f;
var G__81399 = g;
var G__81400 = h;
var G__81401 = i;
var G__81402 = j;
var G__81403 = k;
var G__81404 = l;
var G__81405 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__81393,G__81394,G__81395,G__81396,G__81397,G__81398,G__81399,G__81400,G__81401,G__81402,G__81403,G__81404,G__81405) : self__.afn.call(null,G__81393,G__81394,G__81395,G__81396,G__81397,G__81398,G__81399,G__81400,G__81401,G__81402,G__81403,G__81404,G__81405));
});
var G__81779__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81406 = a;
var G__81407 = b;
var G__81408 = c;
var G__81409 = d;
var G__81410 = e;
var G__81411 = f;
var G__81412 = g;
var G__81413 = h;
var G__81414 = i;
var G__81415 = j;
var G__81416 = k;
var G__81417 = l;
var G__81418 = m;
var G__81419 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__81406,G__81407,G__81408,G__81409,G__81410,G__81411,G__81412,G__81413,G__81414,G__81415,G__81416,G__81417,G__81418,G__81419) : self__.afn.call(null,G__81406,G__81407,G__81408,G__81409,G__81410,G__81411,G__81412,G__81413,G__81414,G__81415,G__81416,G__81417,G__81418,G__81419));
});
var G__81779__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81420 = a;
var G__81421 = b;
var G__81422 = c;
var G__81423 = d;
var G__81424 = e;
var G__81425 = f;
var G__81426 = g;
var G__81427 = h;
var G__81428 = i;
var G__81429 = j;
var G__81430 = k;
var G__81431 = l;
var G__81432 = m;
var G__81433 = n;
var G__81434 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__81420,G__81421,G__81422,G__81423,G__81424,G__81425,G__81426,G__81427,G__81428,G__81429,G__81430,G__81431,G__81432,G__81433,G__81434) : self__.afn.call(null,G__81420,G__81421,G__81422,G__81423,G__81424,G__81425,G__81426,G__81427,G__81428,G__81429,G__81430,G__81431,G__81432,G__81433,G__81434));
});
var G__81779__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81435 = a;
var G__81436 = b;
var G__81437 = c;
var G__81438 = d;
var G__81439 = e;
var G__81440 = f;
var G__81441 = g;
var G__81442 = h;
var G__81443 = i;
var G__81444 = j;
var G__81445 = k;
var G__81446 = l;
var G__81447 = m;
var G__81448 = n;
var G__81449 = o;
var G__81450 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__81435,G__81436,G__81437,G__81438,G__81439,G__81440,G__81441,G__81442,G__81443,G__81444,G__81445,G__81446,G__81447,G__81448,G__81449,G__81450) : self__.afn.call(null,G__81435,G__81436,G__81437,G__81438,G__81439,G__81440,G__81441,G__81442,G__81443,G__81444,G__81445,G__81446,G__81447,G__81448,G__81449,G__81450));
});
var G__81779__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81451 = a;
var G__81452 = b;
var G__81453 = c;
var G__81454 = d;
var G__81455 = e;
var G__81456 = f;
var G__81457 = g;
var G__81458 = h;
var G__81459 = i;
var G__81460 = j;
var G__81461 = k;
var G__81462 = l;
var G__81463 = m;
var G__81464 = n;
var G__81465 = o;
var G__81466 = p;
var G__81467 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__81451,G__81452,G__81453,G__81454,G__81455,G__81456,G__81457,G__81458,G__81459,G__81460,G__81461,G__81462,G__81463,G__81464,G__81465,G__81466,G__81467) : self__.afn.call(null,G__81451,G__81452,G__81453,G__81454,G__81455,G__81456,G__81457,G__81458,G__81459,G__81460,G__81461,G__81462,G__81463,G__81464,G__81465,G__81466,G__81467));
});
var G__81779__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81468 = a;
var G__81469 = b;
var G__81470 = c;
var G__81471 = d;
var G__81472 = e;
var G__81473 = f;
var G__81474 = g;
var G__81475 = h;
var G__81476 = i;
var G__81477 = j;
var G__81478 = k;
var G__81479 = l;
var G__81480 = m;
var G__81481 = n;
var G__81482 = o;
var G__81483 = p;
var G__81484 = q;
var G__81485 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__81468,G__81469,G__81470,G__81471,G__81472,G__81473,G__81474,G__81475,G__81476,G__81477,G__81478,G__81479,G__81480,G__81481,G__81482,G__81483,G__81484,G__81485) : self__.afn.call(null,G__81468,G__81469,G__81470,G__81471,G__81472,G__81473,G__81474,G__81475,G__81476,G__81477,G__81478,G__81479,G__81480,G__81481,G__81482,G__81483,G__81484,G__81485));
});
var G__81779__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81486 = a;
var G__81487 = b;
var G__81488 = c;
var G__81489 = d;
var G__81490 = e;
var G__81491 = f;
var G__81492 = g;
var G__81493 = h;
var G__81494 = i;
var G__81495 = j;
var G__81496 = k;
var G__81497 = l;
var G__81498 = m;
var G__81499 = n;
var G__81500 = o;
var G__81501 = p;
var G__81502 = q;
var G__81503 = r;
var G__81504 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__81486,G__81487,G__81488,G__81489,G__81490,G__81491,G__81492,G__81493,G__81494,G__81495,G__81496,G__81497,G__81498,G__81499,G__81500,G__81501,G__81502,G__81503,G__81504) : self__.afn.call(null,G__81486,G__81487,G__81488,G__81489,G__81490,G__81491,G__81492,G__81493,G__81494,G__81495,G__81496,G__81497,G__81498,G__81499,G__81500,G__81501,G__81502,G__81503,G__81504));
});
var G__81779__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81505 = a;
var G__81506 = b;
var G__81507 = c;
var G__81508 = d;
var G__81509 = e;
var G__81510 = f;
var G__81511 = g;
var G__81512 = h;
var G__81513 = i;
var G__81514 = j;
var G__81515 = k;
var G__81516 = l;
var G__81517 = m;
var G__81518 = n;
var G__81519 = o;
var G__81520 = p;
var G__81521 = q;
var G__81522 = r;
var G__81523 = s;
var G__81524 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__81505,G__81506,G__81507,G__81508,G__81509,G__81510,G__81511,G__81512,G__81513,G__81514,G__81515,G__81516,G__81517,G__81518,G__81519,G__81520,G__81521,G__81522,G__81523,G__81524) : self__.afn.call(null,G__81505,G__81506,G__81507,G__81508,G__81509,G__81510,G__81511,G__81512,G__81513,G__81514,G__81515,G__81516,G__81517,G__81518,G__81519,G__81520,G__81521,G__81522,G__81523,G__81524));
});
var G__81779__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__81525 = self__.afn;
var G__81526 = a;
var G__81527 = b;
var G__81528 = c;
var G__81529 = d;
var G__81530 = e;
var G__81531 = f;
var G__81532 = g;
var G__81533 = h;
var G__81534 = i;
var G__81535 = j;
var G__81536 = k;
var G__81537 = l;
var G__81538 = m;
var G__81539 = n;
var G__81540 = o;
var G__81541 = p;
var G__81542 = q;
var G__81543 = r;
var G__81544 = s;
var G__81545 = t;
var G__81546 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__81525,G__81526,G__81527,G__81528,G__81529,G__81530,G__81531,G__81532,G__81533,G__81534,G__81535,G__81536,G__81537,G__81538,G__81539,G__81540,G__81541,G__81542,G__81543,G__81544,G__81545,G__81546) : cljs.core.apply.call(null,G__81525,G__81526,G__81527,G__81528,G__81529,G__81530,G__81531,G__81532,G__81533,G__81534,G__81535,G__81536,G__81537,G__81538,G__81539,G__81540,G__81541,G__81542,G__81543,G__81544,G__81545,G__81546));
});
G__81779 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__81779__1.call(this,self__);
case 2:
return G__81779__2.call(this,self__,a);
case 3:
return G__81779__3.call(this,self__,a,b);
case 4:
return G__81779__4.call(this,self__,a,b,c);
case 5:
return G__81779__5.call(this,self__,a,b,c,d);
case 6:
return G__81779__6.call(this,self__,a,b,c,d,e);
case 7:
return G__81779__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__81779__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__81779__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__81779__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__81779__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__81779__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__81779__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__81779__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__81779__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__81779__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__81779__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__81779__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__81779__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__81779__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__81779__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__81779__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__81779.cljs$core$IFn$_invoke$arity$1 = G__81779__1;
G__81779.cljs$core$IFn$_invoke$arity$2 = G__81779__2;
G__81779.cljs$core$IFn$_invoke$arity$3 = G__81779__3;
G__81779.cljs$core$IFn$_invoke$arity$4 = G__81779__4;
G__81779.cljs$core$IFn$_invoke$arity$5 = G__81779__5;
G__81779.cljs$core$IFn$_invoke$arity$6 = G__81779__6;
G__81779.cljs$core$IFn$_invoke$arity$7 = G__81779__7;
G__81779.cljs$core$IFn$_invoke$arity$8 = G__81779__8;
G__81779.cljs$core$IFn$_invoke$arity$9 = G__81779__9;
G__81779.cljs$core$IFn$_invoke$arity$10 = G__81779__10;
G__81779.cljs$core$IFn$_invoke$arity$11 = G__81779__11;
G__81779.cljs$core$IFn$_invoke$arity$12 = G__81779__12;
G__81779.cljs$core$IFn$_invoke$arity$13 = G__81779__13;
G__81779.cljs$core$IFn$_invoke$arity$14 = G__81779__14;
G__81779.cljs$core$IFn$_invoke$arity$15 = G__81779__15;
G__81779.cljs$core$IFn$_invoke$arity$16 = G__81779__16;
G__81779.cljs$core$IFn$_invoke$arity$17 = G__81779__17;
G__81779.cljs$core$IFn$_invoke$arity$18 = G__81779__18;
G__81779.cljs$core$IFn$_invoke$arity$19 = G__81779__19;
G__81779.cljs$core$IFn$_invoke$arity$20 = G__81779__20;
G__81779.cljs$core$IFn$_invoke$arity$21 = G__81779__21;
G__81779.cljs$core$IFn$_invoke$arity$22 = G__81779__22;
return G__81779;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args81314){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args81314)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__81547 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__81547) : self__.afn.call(null,G__81547));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__81548 = a;
var G__81549 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__81548,G__81549) : self__.afn.call(null,G__81548,G__81549));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__81550 = a;
var G__81551 = b;
var G__81552 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__81550,G__81551,G__81552) : self__.afn.call(null,G__81550,G__81551,G__81552));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__81553 = a;
var G__81554 = b;
var G__81555 = c;
var G__81556 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__81553,G__81554,G__81555,G__81556) : self__.afn.call(null,G__81553,G__81554,G__81555,G__81556));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__81557 = a;
var G__81558 = b;
var G__81559 = c;
var G__81560 = d;
var G__81561 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__81557,G__81558,G__81559,G__81560,G__81561) : self__.afn.call(null,G__81557,G__81558,G__81559,G__81560,G__81561));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__81562 = a;
var G__81563 = b;
var G__81564 = c;
var G__81565 = d;
var G__81566 = e;
var G__81567 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__81562,G__81563,G__81564,G__81565,G__81566,G__81567) : self__.afn.call(null,G__81562,G__81563,G__81564,G__81565,G__81566,G__81567));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__81568 = a;
var G__81569 = b;
var G__81570 = c;
var G__81571 = d;
var G__81572 = e;
var G__81573 = f;
var G__81574 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__81568,G__81569,G__81570,G__81571,G__81572,G__81573,G__81574) : self__.afn.call(null,G__81568,G__81569,G__81570,G__81571,G__81572,G__81573,G__81574));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__81575 = a;
var G__81576 = b;
var G__81577 = c;
var G__81578 = d;
var G__81579 = e;
var G__81580 = f;
var G__81581 = g;
var G__81582 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__81575,G__81576,G__81577,G__81578,G__81579,G__81580,G__81581,G__81582) : self__.afn.call(null,G__81575,G__81576,G__81577,G__81578,G__81579,G__81580,G__81581,G__81582));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__81583 = a;
var G__81584 = b;
var G__81585 = c;
var G__81586 = d;
var G__81587 = e;
var G__81588 = f;
var G__81589 = g;
var G__81590 = h;
var G__81591 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__81583,G__81584,G__81585,G__81586,G__81587,G__81588,G__81589,G__81590,G__81591) : self__.afn.call(null,G__81583,G__81584,G__81585,G__81586,G__81587,G__81588,G__81589,G__81590,G__81591));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__81592 = a;
var G__81593 = b;
var G__81594 = c;
var G__81595 = d;
var G__81596 = e;
var G__81597 = f;
var G__81598 = g;
var G__81599 = h;
var G__81600 = i;
var G__81601 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__81592,G__81593,G__81594,G__81595,G__81596,G__81597,G__81598,G__81599,G__81600,G__81601) : self__.afn.call(null,G__81592,G__81593,G__81594,G__81595,G__81596,G__81597,G__81598,G__81599,G__81600,G__81601));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__81602 = a;
var G__81603 = b;
var G__81604 = c;
var G__81605 = d;
var G__81606 = e;
var G__81607 = f;
var G__81608 = g;
var G__81609 = h;
var G__81610 = i;
var G__81611 = j;
var G__81612 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__81602,G__81603,G__81604,G__81605,G__81606,G__81607,G__81608,G__81609,G__81610,G__81611,G__81612) : self__.afn.call(null,G__81602,G__81603,G__81604,G__81605,G__81606,G__81607,G__81608,G__81609,G__81610,G__81611,G__81612));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__81613 = a;
var G__81614 = b;
var G__81615 = c;
var G__81616 = d;
var G__81617 = e;
var G__81618 = f;
var G__81619 = g;
var G__81620 = h;
var G__81621 = i;
var G__81622 = j;
var G__81623 = k;
var G__81624 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__81613,G__81614,G__81615,G__81616,G__81617,G__81618,G__81619,G__81620,G__81621,G__81622,G__81623,G__81624) : self__.afn.call(null,G__81613,G__81614,G__81615,G__81616,G__81617,G__81618,G__81619,G__81620,G__81621,G__81622,G__81623,G__81624));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__81625 = a;
var G__81626 = b;
var G__81627 = c;
var G__81628 = d;
var G__81629 = e;
var G__81630 = f;
var G__81631 = g;
var G__81632 = h;
var G__81633 = i;
var G__81634 = j;
var G__81635 = k;
var G__81636 = l;
var G__81637 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__81625,G__81626,G__81627,G__81628,G__81629,G__81630,G__81631,G__81632,G__81633,G__81634,G__81635,G__81636,G__81637) : self__.afn.call(null,G__81625,G__81626,G__81627,G__81628,G__81629,G__81630,G__81631,G__81632,G__81633,G__81634,G__81635,G__81636,G__81637));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__81638 = a;
var G__81639 = b;
var G__81640 = c;
var G__81641 = d;
var G__81642 = e;
var G__81643 = f;
var G__81644 = g;
var G__81645 = h;
var G__81646 = i;
var G__81647 = j;
var G__81648 = k;
var G__81649 = l;
var G__81650 = m;
var G__81651 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__81638,G__81639,G__81640,G__81641,G__81642,G__81643,G__81644,G__81645,G__81646,G__81647,G__81648,G__81649,G__81650,G__81651) : self__.afn.call(null,G__81638,G__81639,G__81640,G__81641,G__81642,G__81643,G__81644,G__81645,G__81646,G__81647,G__81648,G__81649,G__81650,G__81651));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__81652 = a;
var G__81653 = b;
var G__81654 = c;
var G__81655 = d;
var G__81656 = e;
var G__81657 = f;
var G__81658 = g;
var G__81659 = h;
var G__81660 = i;
var G__81661 = j;
var G__81662 = k;
var G__81663 = l;
var G__81664 = m;
var G__81665 = n;
var G__81666 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__81652,G__81653,G__81654,G__81655,G__81656,G__81657,G__81658,G__81659,G__81660,G__81661,G__81662,G__81663,G__81664,G__81665,G__81666) : self__.afn.call(null,G__81652,G__81653,G__81654,G__81655,G__81656,G__81657,G__81658,G__81659,G__81660,G__81661,G__81662,G__81663,G__81664,G__81665,G__81666));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__81667 = a;
var G__81668 = b;
var G__81669 = c;
var G__81670 = d;
var G__81671 = e;
var G__81672 = f;
var G__81673 = g;
var G__81674 = h;
var G__81675 = i;
var G__81676 = j;
var G__81677 = k;
var G__81678 = l;
var G__81679 = m;
var G__81680 = n;
var G__81681 = o;
var G__81682 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__81667,G__81668,G__81669,G__81670,G__81671,G__81672,G__81673,G__81674,G__81675,G__81676,G__81677,G__81678,G__81679,G__81680,G__81681,G__81682) : self__.afn.call(null,G__81667,G__81668,G__81669,G__81670,G__81671,G__81672,G__81673,G__81674,G__81675,G__81676,G__81677,G__81678,G__81679,G__81680,G__81681,G__81682));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__81683 = a;
var G__81684 = b;
var G__81685 = c;
var G__81686 = d;
var G__81687 = e;
var G__81688 = f;
var G__81689 = g;
var G__81690 = h;
var G__81691 = i;
var G__81692 = j;
var G__81693 = k;
var G__81694 = l;
var G__81695 = m;
var G__81696 = n;
var G__81697 = o;
var G__81698 = p;
var G__81699 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__81683,G__81684,G__81685,G__81686,G__81687,G__81688,G__81689,G__81690,G__81691,G__81692,G__81693,G__81694,G__81695,G__81696,G__81697,G__81698,G__81699) : self__.afn.call(null,G__81683,G__81684,G__81685,G__81686,G__81687,G__81688,G__81689,G__81690,G__81691,G__81692,G__81693,G__81694,G__81695,G__81696,G__81697,G__81698,G__81699));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__81700 = a;
var G__81701 = b;
var G__81702 = c;
var G__81703 = d;
var G__81704 = e;
var G__81705 = f;
var G__81706 = g;
var G__81707 = h;
var G__81708 = i;
var G__81709 = j;
var G__81710 = k;
var G__81711 = l;
var G__81712 = m;
var G__81713 = n;
var G__81714 = o;
var G__81715 = p;
var G__81716 = q;
var G__81717 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__81700,G__81701,G__81702,G__81703,G__81704,G__81705,G__81706,G__81707,G__81708,G__81709,G__81710,G__81711,G__81712,G__81713,G__81714,G__81715,G__81716,G__81717) : self__.afn.call(null,G__81700,G__81701,G__81702,G__81703,G__81704,G__81705,G__81706,G__81707,G__81708,G__81709,G__81710,G__81711,G__81712,G__81713,G__81714,G__81715,G__81716,G__81717));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__81718 = a;
var G__81719 = b;
var G__81720 = c;
var G__81721 = d;
var G__81722 = e;
var G__81723 = f;
var G__81724 = g;
var G__81725 = h;
var G__81726 = i;
var G__81727 = j;
var G__81728 = k;
var G__81729 = l;
var G__81730 = m;
var G__81731 = n;
var G__81732 = o;
var G__81733 = p;
var G__81734 = q;
var G__81735 = r;
var G__81736 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__81718,G__81719,G__81720,G__81721,G__81722,G__81723,G__81724,G__81725,G__81726,G__81727,G__81728,G__81729,G__81730,G__81731,G__81732,G__81733,G__81734,G__81735,G__81736) : self__.afn.call(null,G__81718,G__81719,G__81720,G__81721,G__81722,G__81723,G__81724,G__81725,G__81726,G__81727,G__81728,G__81729,G__81730,G__81731,G__81732,G__81733,G__81734,G__81735,G__81736));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__81737 = a;
var G__81738 = b;
var G__81739 = c;
var G__81740 = d;
var G__81741 = e;
var G__81742 = f;
var G__81743 = g;
var G__81744 = h;
var G__81745 = i;
var G__81746 = j;
var G__81747 = k;
var G__81748 = l;
var G__81749 = m;
var G__81750 = n;
var G__81751 = o;
var G__81752 = p;
var G__81753 = q;
var G__81754 = r;
var G__81755 = s;
var G__81756 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__81737,G__81738,G__81739,G__81740,G__81741,G__81742,G__81743,G__81744,G__81745,G__81746,G__81747,G__81748,G__81749,G__81750,G__81751,G__81752,G__81753,G__81754,G__81755,G__81756) : self__.afn.call(null,G__81737,G__81738,G__81739,G__81740,G__81741,G__81742,G__81743,G__81744,G__81745,G__81746,G__81747,G__81748,G__81749,G__81750,G__81751,G__81752,G__81753,G__81754,G__81755,G__81756));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__81757 = self__.afn;
var G__81758 = a;
var G__81759 = b;
var G__81760 = c;
var G__81761 = d;
var G__81762 = e;
var G__81763 = f;
var G__81764 = g;
var G__81765 = h;
var G__81766 = i;
var G__81767 = j;
var G__81768 = k;
var G__81769 = l;
var G__81770 = m;
var G__81771 = n;
var G__81772 = o;
var G__81773 = p;
var G__81774 = q;
var G__81775 = r;
var G__81776 = s;
var G__81777 = t;
var G__81778 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__81757,G__81758,G__81759,G__81760,G__81761,G__81762,G__81763,G__81764,G__81765,G__81766,G__81767,G__81768,G__81769,G__81770,G__81771,G__81772,G__81773,G__81774,G__81775,G__81776,G__81777,G__81778) : cljs.core.apply.call(null,G__81757,G__81758,G__81759,G__81760,G__81761,G__81762,G__81763,G__81764,G__81765,G__81766,G__81767,G__81768,G__81769,G__81770,G__81771,G__81772,G__81773,G__81774,G__81775,G__81776,G__81777,G__81778));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__81783 = o;
if(G__81783){
var bit__4662__auto__ = (G__81783.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4662__auto__) || (G__81783.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__81783.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__81783);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__81783);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3969__auto__ = !((o == null));
if(and__3969__auto__){
var G__81787 = o;
if(G__81787){
var bit__4662__auto__ = (G__81787.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__81787.cljs$core$IMeta$)){
return true;
} else {
if((!G__81787.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__81787);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__81787);
}
} else {
return and__3969__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__81790__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__81791 = ret;
var G__81792 = cljs.core.first(ks);
var G__81793 = cljs.core.next(ks);
coll = G__81791;
k = G__81792;
ks = G__81793;
continue;
} else {
return ret;
}
}
break;
}
};
var G__81790 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__81794__i = 0, G__81794__a = new Array(arguments.length -  2);
while (G__81794__i < G__81794__a.length) {G__81794__a[G__81794__i] = arguments[G__81794__i + 2]; ++G__81794__i;}
  ks = new cljs.core.IndexedSeq(G__81794__a,0);
} 
return G__81790__delegate.call(this,coll,k,ks);};
G__81790.cljs$lang$maxFixedArity = 2;
G__81790.cljs$lang$applyTo = (function (arglist__81795){
var coll = cljs.core.first(arglist__81795);
arglist__81795 = cljs.core.next(arglist__81795);
var k = cljs.core.first(arglist__81795);
var ks = cljs.core.rest(arglist__81795);
return G__81790__delegate(coll,k,ks);
});
G__81790.cljs$core$IFn$_invoke$arity$variadic = G__81790__delegate;
return G__81790;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__81796 = null;
if (arguments.length > 2) {
var G__81797__i = 0, G__81797__a = new Array(arguments.length -  2);
while (G__81797__i < G__81797__a.length) {G__81797__a[G__81797__i] = arguments[G__81797__i + 2]; ++G__81797__i;}
G__81796 = new cljs.core.IndexedSeq(G__81797__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__81796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__81799 = x;
if(G__81799){
var bit__4662__auto__ = (G__81799.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4662__auto__) || (G__81799.cljs$core$ICollection$)){
return true;
} else {
if((!G__81799.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__81799);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__81799);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__81801 = x;
if(G__81801){
var bit__4662__auto__ = (G__81801.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4662__auto__) || (G__81801.cljs$core$ISet$)){
return true;
} else {
if((!G__81801.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__81801);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__81801);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__81803 = x;
if(G__81803){
var bit__4662__auto__ = (G__81803.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4662__auto__) || (G__81803.cljs$core$IAssociative$)){
return true;
} else {
if((!G__81803.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__81803);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__81803);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__81805 = x;
if(G__81805){
var bit__4662__auto__ = (G__81805.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4662__auto__) || (G__81805.cljs$core$ISequential$)){
return true;
} else {
if((!G__81805.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__81805);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__81805);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__81807 = x;
if(G__81807){
var bit__4662__auto__ = (G__81807.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4662__auto__) || (G__81807.cljs$core$ISorted$)){
return true;
} else {
if((!G__81807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__81807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__81807);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__81809 = x;
if(G__81809){
var bit__4662__auto__ = (G__81809.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4662__auto__) || (G__81809.cljs$core$IReduce$)){
return true;
} else {
if((!G__81809.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__81809);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__81809);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__81811 = x;
if(G__81811){
var bit__4662__auto__ = (G__81811.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4662__auto__) || (G__81811.cljs$core$IMap$)){
return true;
} else {
if((!G__81811.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__81811);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__81811);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__81813 = x;
if(G__81813){
var bit__4662__auto__ = (G__81813.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4662__auto__) || (G__81813.cljs$core$IVector$)){
return true;
} else {
if((!G__81813.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__81813);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__81813);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__81815 = x;
if(G__81815){
var bit__4655__auto__ = (G__81815.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4655__auto__) || (G__81815.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj81821 = {};
return obj81821;
});
var js_obj__1 = (function() { 
var G__81824__delegate = function (keyvals){
var G__81822 = goog.object.create;
var G__81823 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__81822,G__81823) : cljs.core.apply.call(null,G__81822,G__81823));
};
var G__81824 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__81825__i = 0, G__81825__a = new Array(arguments.length -  0);
while (G__81825__i < G__81825__a.length) {G__81825__a[G__81825__i] = arguments[G__81825__i + 0]; ++G__81825__i;}
  keyvals = new cljs.core.IndexedSeq(G__81825__a,0);
} 
return G__81824__delegate.call(this,keyvals);};
G__81824.cljs$lang$maxFixedArity = 0;
G__81824.cljs$lang$applyTo = (function (arglist__81826){
var keyvals = cljs.core.seq(arglist__81826);
return G__81824__delegate(keyvals);
});
G__81824.cljs$core$IFn$_invoke$arity$variadic = G__81824__delegate;
return G__81824;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__81827 = null;
if (arguments.length > 0) {
var G__81828__i = 0, G__81828__a = new Array(arguments.length -  0);
while (G__81828__i < G__81828__a.length) {G__81828__a[G__81828__i] = arguments[G__81828__i + 0]; ++G__81828__i;}
G__81827 = new cljs.core.IndexedSeq(G__81828__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__81827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__81831_81833 = obj;
var G__81832_81834 = ((function (G__81831_81833,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__81831_81833,keys))
;
goog.object.forEach(G__81831_81833,G__81832_81834);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__81835 = (i__$1 + (1));
var G__81836 = (j__$1 + (1));
var G__81837 = (len__$1 - (1));
i__$1 = G__81835;
j__$1 = G__81836;
len__$1 = G__81837;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__81838 = (i__$1 - (1));
var G__81839 = (j__$1 - (1));
var G__81840 = (len__$1 - (1));
i__$1 = G__81838;
j__$1 = G__81839;
len__$1 = G__81840;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj81842 = {};
return obj81842;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__81844 = s;
if(G__81844){
var bit__4662__auto__ = (G__81844.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__81844.cljs$core$ISeq$)){
return true;
} else {
if((!G__81844.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81844);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__81844);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__81846 = s;
if(G__81846){
var bit__4662__auto__ = (G__81846.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4662__auto__) || (G__81846.cljs$core$ISeqable$)){
return true;
} else {
if((!G__81846.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__81846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__81846);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3981__auto__ = cljs.core.fn_QMARK_(f);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__81850 = f;
if(G__81850){
var bit__4662__auto__ = (G__81850.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4662__auto__) || (G__81850.cljs$core$IFn$)){
return true;
} else {
if((!G__81850.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__81850);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__81850);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__81863 = n;
return isNaN(G__81863);
})())) && (!((n === Infinity))) && (((function (){var G__81864 = n;
return parseFloat(G__81864);
})() === (function (){var G__81865 = n;
var G__81866 = (10);
return parseInt(G__81865,G__81866);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__81867__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__81868 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__81869 = etc;
s = G__81868;
xs = G__81869;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__81867 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81870__i = 0, G__81870__a = new Array(arguments.length -  2);
while (G__81870__i < G__81870__a.length) {G__81870__a[G__81870__i] = arguments[G__81870__i + 2]; ++G__81870__i;}
  more = new cljs.core.IndexedSeq(G__81870__a,0);
} 
return G__81867__delegate.call(this,x,y,more);};
G__81867.cljs$lang$maxFixedArity = 2;
G__81867.cljs$lang$applyTo = (function (arglist__81871){
var x = cljs.core.first(arglist__81871);
arglist__81871 = cljs.core.next(arglist__81871);
var y = cljs.core.first(arglist__81871);
var more = cljs.core.rest(arglist__81871);
return G__81867__delegate(x,y,more);
});
G__81867.cljs$core$IFn$_invoke$arity$variadic = G__81867__delegate;
return G__81867;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__81872 = null;
if (arguments.length > 2) {
var G__81873__i = 0, G__81873__a = new Array(arguments.length -  2);
while (G__81873__i < G__81873__a.length) {G__81873__a[G__81873__i] = arguments[G__81873__i + 2]; ++G__81873__i;}
G__81872 = new cljs.core.IndexedSeq(G__81873__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__81877 = x;
if(G__81877){
var bit__4655__auto__ = (G__81877.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4655__auto__) || (G__81877.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__81878 = x;
var G__81879 = y;
return goog.array.defaultCompare(G__81878,G__81879);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__81884 = xs;
var G__81885 = ys;
var G__81886 = len;
var G__81887 = (n + (1));
xs = G__81884;
ys = G__81885;
len = G__81886;
n = G__81887;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__81892 = x;
var G__81893 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81892,G__81893) : f.call(null,G__81892,G__81893));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__81894 = y;
var G__81895 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81894,G__81895) : f.call(null,G__81894,G__81895));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__81901 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__81901) : cljs.core.to_array.call(null,G__81901));
})();
var G__81902_81904 = a;
var G__81903_81905 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__81902_81904,G__81903_81905);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__81911 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__81911) : keyfn.call(null,G__81911));
})(),(function (){var G__81912 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__81912) : keyfn.call(null,G__81912));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__81918 = f;
var G__81919 = cljs.core.first(s);
var G__81920 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__81918,G__81919,G__81920) : cljs.core.reduce.call(null,G__81918,G__81919,G__81920));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__81921 = val__$1;
var G__81922 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81921,G__81922) : f.call(null,G__81921,G__81922));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__81923 = nval;
var G__81924 = cljs.core.next(coll__$1);
val__$1 = G__81923;
coll__$1 = G__81924;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__81928 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__81928) : cljs.core.to_array.call(null,G__81928));
})();
var G__81929_81931 = a;
goog.array.shuffle(G__81929_81931);

var G__81930 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__81930) : cljs.core.vec.call(null,G__81930));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__81934 = coll;
if(G__81934){
var bit__4655__auto__ = (G__81934.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__81934.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__81935 = coll;
if(G__81935){
var bit__4655__auto__ = (G__81935.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__81935.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__81944 = null;
var G__81944__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__81944__1 = (function (x){
var G__81941 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__81941) : cf.call(null,G__81941));
});
var G__81944__2 = (function (x,y){
var G__81942 = x;
var G__81943 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__81942,G__81943) : f.call(null,G__81942,G__81943));
});
G__81944 = function(x,y){
switch(arguments.length){
case 0:
return G__81944__0.call(this);
case 1:
return G__81944__1.call(this,x);
case 2:
return G__81944__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__81944.cljs$core$IFn$_invoke$arity$0 = G__81944__0;
G__81944.cljs$core$IFn$_invoke$arity$1 = G__81944__1;
G__81944.cljs$core$IFn$_invoke$arity$2 = G__81944__2;
return G__81944;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__81951 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__81951) : xform.call(null,G__81951));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__81952 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__81952) : f__$1.call(null,G__81952));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__81953__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__81953 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81954__i = 0, G__81954__a = new Array(arguments.length -  2);
while (G__81954__i < G__81954__a.length) {G__81954__a[G__81954__i] = arguments[G__81954__i + 2]; ++G__81954__i;}
  more = new cljs.core.IndexedSeq(G__81954__a,0);
} 
return G__81953__delegate.call(this,x,y,more);};
G__81953.cljs$lang$maxFixedArity = 2;
G__81953.cljs$lang$applyTo = (function (arglist__81955){
var x = cljs.core.first(arglist__81955);
arglist__81955 = cljs.core.next(arglist__81955);
var y = cljs.core.first(arglist__81955);
var more = cljs.core.rest(arglist__81955);
return G__81953__delegate(x,y,more);
});
G__81953.cljs$core$IFn$_invoke$arity$variadic = G__81953__delegate;
return G__81953;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__81956 = null;
if (arguments.length > 2) {
var G__81957__i = 0, G__81957__a = new Array(arguments.length -  2);
while (G__81957__i < G__81957__a.length) {G__81957__a[G__81957__i] = arguments[G__81957__i + 2]; ++G__81957__i;}
G__81956 = new cljs.core.IndexedSeq(G__81957__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__81958__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__81958 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81959__i = 0, G__81959__a = new Array(arguments.length -  2);
while (G__81959__i < G__81959__a.length) {G__81959__a[G__81959__i] = arguments[G__81959__i + 2]; ++G__81959__i;}
  more = new cljs.core.IndexedSeq(G__81959__a,0);
} 
return G__81958__delegate.call(this,x,y,more);};
G__81958.cljs$lang$maxFixedArity = 2;
G__81958.cljs$lang$applyTo = (function (arglist__81960){
var x = cljs.core.first(arglist__81960);
arglist__81960 = cljs.core.next(arglist__81960);
var y = cljs.core.first(arglist__81960);
var more = cljs.core.rest(arglist__81960);
return G__81958__delegate(x,y,more);
});
G__81958.cljs$core$IFn$_invoke$arity$variadic = G__81958__delegate;
return G__81958;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__81961 = null;
if (arguments.length > 2) {
var G__81962__i = 0, G__81962__a = new Array(arguments.length -  2);
while (G__81962__i < G__81962__a.length) {G__81962__a[G__81962__i] = arguments[G__81962__i + 2]; ++G__81962__i;}
G__81961 = new cljs.core.IndexedSeq(G__81962__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__81963__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__81963 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81964__i = 0, G__81964__a = new Array(arguments.length -  2);
while (G__81964__i < G__81964__a.length) {G__81964__a[G__81964__i] = arguments[G__81964__i + 2]; ++G__81964__i;}
  more = new cljs.core.IndexedSeq(G__81964__a,0);
} 
return G__81963__delegate.call(this,x,y,more);};
G__81963.cljs$lang$maxFixedArity = 2;
G__81963.cljs$lang$applyTo = (function (arglist__81965){
var x = cljs.core.first(arglist__81965);
arglist__81965 = cljs.core.next(arglist__81965);
var y = cljs.core.first(arglist__81965);
var more = cljs.core.rest(arglist__81965);
return G__81963__delegate(x,y,more);
});
G__81963.cljs$core$IFn$_invoke$arity$variadic = G__81963__delegate;
return G__81963;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__81966 = null;
if (arguments.length > 2) {
var G__81967__i = 0, G__81967__a = new Array(arguments.length -  2);
while (G__81967__i < G__81967__a.length) {G__81967__a[G__81967__i] = arguments[G__81967__i + 2]; ++G__81967__i;}
G__81966 = new cljs.core.IndexedSeq(G__81967__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__81972__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__81972 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81973__i = 0, G__81973__a = new Array(arguments.length -  2);
while (G__81973__i < G__81973__a.length) {G__81973__a[G__81973__i] = arguments[G__81973__i + 2]; ++G__81973__i;}
  more = new cljs.core.IndexedSeq(G__81973__a,0);
} 
return G__81972__delegate.call(this,x,y,more);};
G__81972.cljs$lang$maxFixedArity = 2;
G__81972.cljs$lang$applyTo = (function (arglist__81974){
var x = cljs.core.first(arglist__81974);
arglist__81974 = cljs.core.next(arglist__81974);
var y = cljs.core.first(arglist__81974);
var more = cljs.core.rest(arglist__81974);
return G__81972__delegate(x,y,more);
});
G__81972.cljs$core$IFn$_invoke$arity$variadic = G__81972__delegate;
return G__81972;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__81975 = null;
if (arguments.length > 2) {
var G__81976__i = 0, G__81976__a = new Array(arguments.length -  2);
while (G__81976__i < G__81976__a.length) {G__81976__a[G__81976__i] = arguments[G__81976__i + 2]; ++G__81976__i;}
G__81975 = new cljs.core.IndexedSeq(G__81976__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__81977__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__81978 = y;
var G__81979 = cljs.core.first(more);
var G__81980 = cljs.core.next(more);
x = G__81978;
y = G__81979;
more = G__81980;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__81977 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81981__i = 0, G__81981__a = new Array(arguments.length -  2);
while (G__81981__i < G__81981__a.length) {G__81981__a[G__81981__i] = arguments[G__81981__i + 2]; ++G__81981__i;}
  more = new cljs.core.IndexedSeq(G__81981__a,0);
} 
return G__81977__delegate.call(this,x,y,more);};
G__81977.cljs$lang$maxFixedArity = 2;
G__81977.cljs$lang$applyTo = (function (arglist__81982){
var x = cljs.core.first(arglist__81982);
arglist__81982 = cljs.core.next(arglist__81982);
var y = cljs.core.first(arglist__81982);
var more = cljs.core.rest(arglist__81982);
return G__81977__delegate(x,y,more);
});
G__81977.cljs$core$IFn$_invoke$arity$variadic = G__81977__delegate;
return G__81977;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__81983 = null;
if (arguments.length > 2) {
var G__81984__i = 0, G__81984__a = new Array(arguments.length -  2);
while (G__81984__i < G__81984__a.length) {G__81984__a[G__81984__i] = arguments[G__81984__i + 2]; ++G__81984__i;}
G__81983 = new cljs.core.IndexedSeq(G__81984__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__81985__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__81986 = y;
var G__81987 = cljs.core.first(more);
var G__81988 = cljs.core.next(more);
x = G__81986;
y = G__81987;
more = G__81988;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__81985 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81989__i = 0, G__81989__a = new Array(arguments.length -  2);
while (G__81989__i < G__81989__a.length) {G__81989__a[G__81989__i] = arguments[G__81989__i + 2]; ++G__81989__i;}
  more = new cljs.core.IndexedSeq(G__81989__a,0);
} 
return G__81985__delegate.call(this,x,y,more);};
G__81985.cljs$lang$maxFixedArity = 2;
G__81985.cljs$lang$applyTo = (function (arglist__81990){
var x = cljs.core.first(arglist__81990);
arglist__81990 = cljs.core.next(arglist__81990);
var y = cljs.core.first(arglist__81990);
var more = cljs.core.rest(arglist__81990);
return G__81985__delegate(x,y,more);
});
G__81985.cljs$core$IFn$_invoke$arity$variadic = G__81985__delegate;
return G__81985;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__81991 = null;
if (arguments.length > 2) {
var G__81992__i = 0, G__81992__a = new Array(arguments.length -  2);
while (G__81992__i < G__81992__a.length) {G__81992__a[G__81992__i] = arguments[G__81992__i + 2]; ++G__81992__i;}
G__81991 = new cljs.core.IndexedSeq(G__81992__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__81993__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__81994 = y;
var G__81995 = cljs.core.first(more);
var G__81996 = cljs.core.next(more);
x = G__81994;
y = G__81995;
more = G__81996;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__81993 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__81997__i = 0, G__81997__a = new Array(arguments.length -  2);
while (G__81997__i < G__81997__a.length) {G__81997__a[G__81997__i] = arguments[G__81997__i + 2]; ++G__81997__i;}
  more = new cljs.core.IndexedSeq(G__81997__a,0);
} 
return G__81993__delegate.call(this,x,y,more);};
G__81993.cljs$lang$maxFixedArity = 2;
G__81993.cljs$lang$applyTo = (function (arglist__81998){
var x = cljs.core.first(arglist__81998);
arglist__81998 = cljs.core.next(arglist__81998);
var y = cljs.core.first(arglist__81998);
var more = cljs.core.rest(arglist__81998);
return G__81993__delegate(x,y,more);
});
G__81993.cljs$core$IFn$_invoke$arity$variadic = G__81993__delegate;
return G__81993;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__81999 = null;
if (arguments.length > 2) {
var G__82000__i = 0, G__82000__a = new Array(arguments.length -  2);
while (G__82000__i < G__82000__a.length) {G__82000__a[G__82000__i] = arguments[G__82000__i + 2]; ++G__82000__i;}
G__81999 = new cljs.core.IndexedSeq(G__82000__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__81999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__82001__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__82002 = y;
var G__82003 = cljs.core.first(more);
var G__82004 = cljs.core.next(more);
x = G__82002;
y = G__82003;
more = G__82004;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__82001 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82005__i = 0, G__82005__a = new Array(arguments.length -  2);
while (G__82005__i < G__82005__a.length) {G__82005__a[G__82005__i] = arguments[G__82005__i + 2]; ++G__82005__i;}
  more = new cljs.core.IndexedSeq(G__82005__a,0);
} 
return G__82001__delegate.call(this,x,y,more);};
G__82001.cljs$lang$maxFixedArity = 2;
G__82001.cljs$lang$applyTo = (function (arglist__82006){
var x = cljs.core.first(arglist__82006);
arglist__82006 = cljs.core.next(arglist__82006);
var y = cljs.core.first(arglist__82006);
var more = cljs.core.rest(arglist__82006);
return G__82001__delegate(x,y,more);
});
G__82001.cljs$core$IFn$_invoke$arity$variadic = G__82001__delegate;
return G__82001;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__82007 = null;
if (arguments.length > 2) {
var G__82008__i = 0, G__82008__a = new Array(arguments.length -  2);
while (G__82008__i < G__82008__a.length) {G__82008__a[G__82008__i] = arguments[G__82008__i + 2]; ++G__82008__i;}
G__82007 = new cljs.core.IndexedSeq(G__82008__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
});
var max__3 = (function() { 
var G__82009__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})(),more);
};
var G__82009 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82010__i = 0, G__82010__a = new Array(arguments.length -  2);
while (G__82010__i < G__82010__a.length) {G__82010__a[G__82010__i] = arguments[G__82010__i + 2]; ++G__82010__i;}
  more = new cljs.core.IndexedSeq(G__82010__a,0);
} 
return G__82009__delegate.call(this,x,y,more);};
G__82009.cljs$lang$maxFixedArity = 2;
G__82009.cljs$lang$applyTo = (function (arglist__82011){
var x = cljs.core.first(arglist__82011);
arglist__82011 = cljs.core.next(arglist__82011);
var y = cljs.core.first(arglist__82011);
var more = cljs.core.rest(arglist__82011);
return G__82009__delegate(x,y,more);
});
G__82009.cljs$core$IFn$_invoke$arity$variadic = G__82009__delegate;
return G__82009;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__82012 = null;
if (arguments.length > 2) {
var G__82013__i = 0, G__82013__a = new Array(arguments.length -  2);
while (G__82013__i < G__82013__a.length) {G__82013__a[G__82013__i] = arguments[G__82013__i + 2]; ++G__82013__i;}
G__82012 = new cljs.core.IndexedSeq(G__82013__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
});
var min__3 = (function() { 
var G__82014__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
})(),more);
};
var G__82014 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82015__i = 0, G__82015__a = new Array(arguments.length -  2);
while (G__82015__i < G__82015__a.length) {G__82015__a[G__82015__i] = arguments[G__82015__i + 2]; ++G__82015__i;}
  more = new cljs.core.IndexedSeq(G__82015__a,0);
} 
return G__82014__delegate.call(this,x,y,more);};
G__82014.cljs$lang$maxFixedArity = 2;
G__82014.cljs$lang$applyTo = (function (arglist__82016){
var x = cljs.core.first(arglist__82016);
arglist__82016 = cljs.core.next(arglist__82016);
var y = cljs.core.first(arglist__82016);
var more = cljs.core.rest(arglist__82016);
return G__82014__delegate(x,y,more);
});
G__82014.cljs$core$IFn$_invoke$arity$variadic = G__82014__delegate;
return G__82014;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__82017 = null;
if (arguments.length > 2) {
var G__82018__i = 0, G__82018__a = new Array(arguments.length -  2);
while (G__82018__i < G__82018__a.length) {G__82018__a[G__82018__i] = arguments[G__82018__i + 2]; ++G__82018__i;}
G__82017 = new cljs.core.IndexedSeq(G__82018__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82017);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__82019__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__82019 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82020__i = 0, G__82020__a = new Array(arguments.length -  2);
while (G__82020__i < G__82020__a.length) {G__82020__a[G__82020__i] = arguments[G__82020__i + 2]; ++G__82020__i;}
  more = new cljs.core.IndexedSeq(G__82020__a,0);
} 
return G__82019__delegate.call(this,x,y,more);};
G__82019.cljs$lang$maxFixedArity = 2;
G__82019.cljs$lang$applyTo = (function (arglist__82021){
var x = cljs.core.first(arglist__82021);
arglist__82021 = cljs.core.next(arglist__82021);
var y = cljs.core.first(arglist__82021);
var more = cljs.core.rest(arglist__82021);
return G__82019__delegate(x,y,more);
});
G__82019.cljs$core$IFn$_invoke$arity$variadic = G__82019__delegate;
return G__82019;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__82022 = null;
if (arguments.length > 2) {
var G__82023__i = 0, G__82023__a = new Array(arguments.length -  2);
while (G__82023__i < G__82023__a.length) {G__82023__a[G__82023__i] = arguments[G__82023__i + 2]; ++G__82023__i;}
G__82022 = new cljs.core.IndexedSeq(G__82023__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__82024__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__82024 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82025__i = 0, G__82025__a = new Array(arguments.length -  2);
while (G__82025__i < G__82025__a.length) {G__82025__a[G__82025__i] = arguments[G__82025__i + 2]; ++G__82025__i;}
  more = new cljs.core.IndexedSeq(G__82025__a,0);
} 
return G__82024__delegate.call(this,x,y,more);};
G__82024.cljs$lang$maxFixedArity = 2;
G__82024.cljs$lang$applyTo = (function (arglist__82026){
var x = cljs.core.first(arglist__82026);
arglist__82026 = cljs.core.next(arglist__82026);
var y = cljs.core.first(arglist__82026);
var more = cljs.core.rest(arglist__82026);
return G__82024__delegate(x,y,more);
});
G__82024.cljs$core$IFn$_invoke$arity$variadic = G__82024__delegate;
return G__82024;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__82027 = null;
if (arguments.length > 2) {
var G__82028__i = 0, G__82028__a = new Array(arguments.length -  2);
while (G__82028__i < G__82028__a.length) {G__82028__a[G__82028__i] = arguments[G__82028__i + 2]; ++G__82028__i;}
G__82027 = new cljs.core.IndexedSeq(G__82028__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__82033__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__82033 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82034__i = 0, G__82034__a = new Array(arguments.length -  2);
while (G__82034__i < G__82034__a.length) {G__82034__a[G__82034__i] = arguments[G__82034__i + 2]; ++G__82034__i;}
  more = new cljs.core.IndexedSeq(G__82034__a,0);
} 
return G__82033__delegate.call(this,x,y,more);};
G__82033.cljs$lang$maxFixedArity = 2;
G__82033.cljs$lang$applyTo = (function (arglist__82035){
var x = cljs.core.first(arglist__82035);
arglist__82035 = cljs.core.next(arglist__82035);
var y = cljs.core.first(arglist__82035);
var more = cljs.core.rest(arglist__82035);
return G__82033__delegate(x,y,more);
});
G__82033.cljs$core$IFn$_invoke$arity$variadic = G__82033__delegate;
return G__82033;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__82036 = null;
if (arguments.length > 2) {
var G__82037__i = 0, G__82037__a = new Array(arguments.length -  2);
while (G__82037__i < G__82037__a.length) {G__82037__a[G__82037__i] = arguments[G__82037__i + 2]; ++G__82037__i;}
G__82036 = new cljs.core.IndexedSeq(G__82037__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__82038__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__82038 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82039__i = 0, G__82039__a = new Array(arguments.length -  2);
while (G__82039__i < G__82039__a.length) {G__82039__a[G__82039__i] = arguments[G__82039__i + 2]; ++G__82039__i;}
  more = new cljs.core.IndexedSeq(G__82039__a,0);
} 
return G__82038__delegate.call(this,x,y,more);};
G__82038.cljs$lang$maxFixedArity = 2;
G__82038.cljs$lang$applyTo = (function (arglist__82040){
var x = cljs.core.first(arglist__82040);
arglist__82040 = cljs.core.next(arglist__82040);
var y = cljs.core.first(arglist__82040);
var more = cljs.core.rest(arglist__82040);
return G__82038__delegate(x,y,more);
});
G__82038.cljs$core$IFn$_invoke$arity$variadic = G__82038__delegate;
return G__82038;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__82041 = null;
if (arguments.length > 2) {
var G__82042__i = 0, G__82042__a = new Array(arguments.length -  2);
while (G__82042__i < G__82042__a.length) {G__82042__a[G__82042__i] = arguments[G__82042__i + 2]; ++G__82042__i;}
G__82041 = new cljs.core.IndexedSeq(G__82042__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__82043__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__82043 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82044__i = 0, G__82044__a = new Array(arguments.length -  2);
while (G__82044__i < G__82044__a.length) {G__82044__a[G__82044__i] = arguments[G__82044__i + 2]; ++G__82044__i;}
  more = new cljs.core.IndexedSeq(G__82044__a,0);
} 
return G__82043__delegate.call(this,x,y,more);};
G__82043.cljs$lang$maxFixedArity = 2;
G__82043.cljs$lang$applyTo = (function (arglist__82045){
var x = cljs.core.first(arglist__82045);
arglist__82045 = cljs.core.next(arglist__82045);
var y = cljs.core.first(arglist__82045);
var more = cljs.core.rest(arglist__82045);
return G__82043__delegate(x,y,more);
});
G__82043.cljs$core$IFn$_invoke$arity$variadic = G__82043__delegate;
return G__82043;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__82046 = null;
if (arguments.length > 2) {
var G__82047__i = 0, G__82047__a = new Array(arguments.length -  2);
while (G__82047__i < G__82047__a.length) {G__82047__a[G__82047__i] = arguments[G__82047__i + 2]; ++G__82047__i;}
G__82046 = new cljs.core.IndexedSeq(G__82047__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__82050 = x;
var G__82051 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__82050,G__82051) : cljs.core.mod.call(null,G__82050,G__82051));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__82052__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__82052 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82053__i = 0, G__82053__a = new Array(arguments.length -  2);
while (G__82053__i < G__82053__a.length) {G__82053__a[G__82053__i] = arguments[G__82053__i + 2]; ++G__82053__i;}
  more = new cljs.core.IndexedSeq(G__82053__a,0);
} 
return G__82052__delegate.call(this,x,y,more);};
G__82052.cljs$lang$maxFixedArity = 2;
G__82052.cljs$lang$applyTo = (function (arglist__82054){
var x = cljs.core.first(arglist__82054);
arglist__82054 = cljs.core.next(arglist__82054);
var y = cljs.core.first(arglist__82054);
var more = cljs.core.rest(arglist__82054);
return G__82052__delegate(x,y,more);
});
G__82052.cljs$core$IFn$_invoke$arity$variadic = G__82052__delegate;
return G__82052;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__82055 = null;
if (arguments.length > 2) {
var G__82056__i = 0, G__82056__a = new Array(arguments.length -  2);
while (G__82056__i < G__82056__a.length) {G__82056__a[G__82056__i] = arguments[G__82056__i + 2]; ++G__82056__i;}
G__82055 = new cljs.core.IndexedSeq(G__82056__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__82057__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__82057 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82058__i = 0, G__82058__a = new Array(arguments.length -  2);
while (G__82058__i < G__82058__a.length) {G__82058__a[G__82058__i] = arguments[G__82058__i + 2]; ++G__82058__i;}
  more = new cljs.core.IndexedSeq(G__82058__a,0);
} 
return G__82057__delegate.call(this,x,y,more);};
G__82057.cljs$lang$maxFixedArity = 2;
G__82057.cljs$lang$applyTo = (function (arglist__82059){
var x = cljs.core.first(arglist__82059);
arglist__82059 = cljs.core.next(arglist__82059);
var y = cljs.core.first(arglist__82059);
var more = cljs.core.rest(arglist__82059);
return G__82057__delegate(x,y,more);
});
G__82057.cljs$core$IFn$_invoke$arity$variadic = G__82057__delegate;
return G__82057;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__82060 = null;
if (arguments.length > 2) {
var G__82061__i = 0, G__82061__a = new Array(arguments.length -  2);
while (G__82061__i < G__82061__a.length) {G__82061__a[G__82061__i] = arguments[G__82061__i + 2]; ++G__82061__i;}
G__82060 = new cljs.core.IndexedSeq(G__82061__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__82064 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__82064) : Math.floor.call(null,G__82064));
} else {
var G__82065 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__82065) : Math.ceil.call(null,G__82065));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__82066__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__82066 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82067__i = 0, G__82067__a = new Array(arguments.length -  2);
while (G__82067__i < G__82067__a.length) {G__82067__a[G__82067__i] = arguments[G__82067__i + 2]; ++G__82067__i;}
  more = new cljs.core.IndexedSeq(G__82067__a,0);
} 
return G__82066__delegate.call(this,x,y,more);};
G__82066.cljs$lang$maxFixedArity = 2;
G__82066.cljs$lang$applyTo = (function (arglist__82068){
var x = cljs.core.first(arglist__82068);
arglist__82068 = cljs.core.next(arglist__82068);
var y = cljs.core.first(arglist__82068);
var more = cljs.core.rest(arglist__82068);
return G__82066__delegate(x,y,more);
});
G__82066.cljs$core$IFn$_invoke$arity$variadic = G__82066__delegate;
return G__82066;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__82069 = null;
if (arguments.length > 2) {
var G__82070__i = 0, G__82070__a = new Array(arguments.length -  2);
while (G__82070__i < G__82070__a.length) {G__82070__a[G__82070__i] = arguments[G__82070__i + 2]; ++G__82070__i;}
G__82069 = new cljs.core.IndexedSeq(G__82070__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82069);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__82071__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__82071 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82072__i = 0, G__82072__a = new Array(arguments.length -  2);
while (G__82072__i < G__82072__a.length) {G__82072__a[G__82072__i] = arguments[G__82072__i + 2]; ++G__82072__i;}
  more = new cljs.core.IndexedSeq(G__82072__a,0);
} 
return G__82071__delegate.call(this,x,y,more);};
G__82071.cljs$lang$maxFixedArity = 2;
G__82071.cljs$lang$applyTo = (function (arglist__82073){
var x = cljs.core.first(arglist__82073);
arglist__82073 = cljs.core.next(arglist__82073);
var y = cljs.core.first(arglist__82073);
var more = cljs.core.rest(arglist__82073);
return G__82071__delegate(x,y,more);
});
G__82071.cljs$core$IFn$_invoke$arity$variadic = G__82071__delegate;
return G__82071;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__82074 = null;
if (arguments.length > 2) {
var G__82075__i = 0, G__82075__a = new Array(arguments.length -  2);
while (G__82075__i < G__82075__a.length) {G__82075__a[G__82075__i] = arguments[G__82075__i + 2]; ++G__82075__i;}
G__82074 = new cljs.core.IndexedSeq(G__82075__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__82076__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__82076 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82077__i = 0, G__82077__a = new Array(arguments.length -  2);
while (G__82077__i < G__82077__a.length) {G__82077__a[G__82077__i] = arguments[G__82077__i + 2]; ++G__82077__i;}
  more = new cljs.core.IndexedSeq(G__82077__a,0);
} 
return G__82076__delegate.call(this,x,y,more);};
G__82076.cljs$lang$maxFixedArity = 2;
G__82076.cljs$lang$applyTo = (function (arglist__82078){
var x = cljs.core.first(arglist__82078);
arglist__82078 = cljs.core.next(arglist__82078);
var y = cljs.core.first(arglist__82078);
var more = cljs.core.rest(arglist__82078);
return G__82076__delegate(x,y,more);
});
G__82076.cljs$core$IFn$_invoke$arity$variadic = G__82076__delegate;
return G__82076;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__82079 = null;
if (arguments.length > 2) {
var G__82080__i = 0, G__82080__a = new Array(arguments.length -  2);
while (G__82080__i < G__82080__a.length) {G__82080__a[G__82080__i] = arguments[G__82080__i + 2]; ++G__82080__i;}
G__82079 = new cljs.core.IndexedSeq(G__82080__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__82081__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__82081 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82082__i = 0, G__82082__a = new Array(arguments.length -  2);
while (G__82082__i < G__82082__a.length) {G__82082__a[G__82082__i] = arguments[G__82082__i + 2]; ++G__82082__i;}
  more = new cljs.core.IndexedSeq(G__82082__a,0);
} 
return G__82081__delegate.call(this,x,y,more);};
G__82081.cljs$lang$maxFixedArity = 2;
G__82081.cljs$lang$applyTo = (function (arglist__82083){
var x = cljs.core.first(arglist__82083);
arglist__82083 = cljs.core.next(arglist__82083);
var y = cljs.core.first(arglist__82083);
var more = cljs.core.rest(arglist__82083);
return G__82081__delegate(x,y,more);
});
G__82081.cljs$core$IFn$_invoke$arity$variadic = G__82081__delegate;
return G__82081;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__82084 = null;
if (arguments.length > 2) {
var G__82085__i = 0, G__82085__a = new Array(arguments.length -  2);
while (G__82085__i < G__82085__a.length) {G__82085__a[G__82085__i] = arguments[G__82085__i + 2]; ++G__82085__i;}
G__82084 = new cljs.core.IndexedSeq(G__82085__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__82090__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__82091 = y;
var G__82092 = cljs.core.first(more);
var G__82093 = cljs.core.next(more);
x = G__82091;
y = G__82092;
more = G__82093;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__82090 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82094__i = 0, G__82094__a = new Array(arguments.length -  2);
while (G__82094__i < G__82094__a.length) {G__82094__a[G__82094__i] = arguments[G__82094__i + 2]; ++G__82094__i;}
  more = new cljs.core.IndexedSeq(G__82094__a,0);
} 
return G__82090__delegate.call(this,x,y,more);};
G__82090.cljs$lang$maxFixedArity = 2;
G__82090.cljs$lang$applyTo = (function (arglist__82095){
var x = cljs.core.first(arglist__82095);
arglist__82095 = cljs.core.next(arglist__82095);
var y = cljs.core.first(arglist__82095);
var more = cljs.core.rest(arglist__82095);
return G__82090__delegate(x,y,more);
});
G__82090.cljs$core$IFn$_invoke$arity$variadic = G__82090__delegate;
return G__82090;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__82096 = null;
if (arguments.length > 2) {
var G__82097__i = 0, G__82097__a = new Array(arguments.length -  2);
while (G__82097__i < G__82097__a.length) {G__82097__a[G__82097__i] = arguments[G__82097__i + 2]; ++G__82097__i;}
G__82096 = new cljs.core.IndexedSeq(G__82097__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__82098 = (n__$1 - (1));
var G__82099 = cljs.core.next(xs);
n__$1 = G__82098;
xs = G__82099;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__82103 = x;
return goog.string.buildString(G__82103);
}
});
var str__2 = (function() { 
var G__82104__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__82105 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__82106 = cljs.core.next(more);
sb = G__82105;
more = G__82106;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__82104 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__82107__i = 0, G__82107__a = new Array(arguments.length -  1);
while (G__82107__i < G__82107__a.length) {G__82107__a[G__82107__i] = arguments[G__82107__i + 1]; ++G__82107__i;}
  ys = new cljs.core.IndexedSeq(G__82107__a,0);
} 
return G__82104__delegate.call(this,x,ys);};
G__82104.cljs$lang$maxFixedArity = 1;
G__82104.cljs$lang$applyTo = (function (arglist__82108){
var x = cljs.core.first(arglist__82108);
var ys = cljs.core.rest(arglist__82108);
return G__82104__delegate(x,ys);
});
G__82104.cljs$core$IFn$_invoke$arity$variadic = G__82104__delegate;
return G__82104;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__82109 = null;
if (arguments.length > 1) {
var G__82110__i = 0, G__82110__a = new Array(arguments.length -  1);
while (G__82110__i < G__82110__a.length) {G__82110__a[G__82110__i] = arguments[G__82110__i + 1]; ++G__82110__i;}
G__82109 = new cljs.core.IndexedSeq(G__82110__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__82109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__82111 = cljs.core.next(xs);
var G__82112 = cljs.core.next(ys);
xs = G__82111;
ys = G__82112;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__82113 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__82114 = cljs.core.next(s);
res = G__82113;
s = G__82114;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__82119 = ((h + (cljs.core.hash((function (){var G__82117 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__82117) : cljs.core.key.call(null,G__82117));
})()) ^ cljs.core.hash((function (){var G__82118 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__82118) : cljs.core.val.call(null,G__82118));
})()))) % (4503599627370496));
var G__82120 = cljs.core.next(s);
h = G__82119;
s = G__82120;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__82121 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__82122 = cljs.core.next(s__$1);
h = G__82121;
s__$1 = G__82122;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__82133_82143 = cljs.core.seq(fn_map);
var chunk__82134_82144 = null;
var count__82135_82145 = (0);
var i__82136_82146 = (0);
while(true){
if((i__82136_82146 < count__82135_82145)){
var vec__82137_82147 = chunk__82134_82144.cljs$core$IIndexed$_nth$arity$2(null,i__82136_82146);
var key_name_82148 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82137_82147,(0),null);
var f_82149 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82137_82147,(1),null);
var str_name_82150 = (function (){var G__82138 = key_name_82148;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__82138) : cljs.core.name.call(null,G__82138));
})();
(obj[str_name_82150] = f_82149);

var G__82151 = seq__82133_82143;
var G__82152 = chunk__82134_82144;
var G__82153 = count__82135_82145;
var G__82154 = (i__82136_82146 + (1));
seq__82133_82143 = G__82151;
chunk__82134_82144 = G__82152;
count__82135_82145 = G__82153;
i__82136_82146 = G__82154;
continue;
} else {
var temp__4126__auto___82155 = cljs.core.seq(seq__82133_82143);
if(temp__4126__auto___82155){
var seq__82133_82156__$1 = temp__4126__auto___82155;
if(cljs.core.chunked_seq_QMARK_(seq__82133_82156__$1)){
var c__4768__auto___82157 = (function (){var G__82139 = seq__82133_82156__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__82139) : cljs.core.chunk_first.call(null,G__82139));
})();
var G__82158 = (function (){var G__82140 = seq__82133_82156__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__82140) : cljs.core.chunk_rest.call(null,G__82140));
})();
var G__82159 = c__4768__auto___82157;
var G__82160 = cljs.core.count(c__4768__auto___82157);
var G__82161 = (0);
seq__82133_82143 = G__82158;
chunk__82134_82144 = G__82159;
count__82135_82145 = G__82160;
i__82136_82146 = G__82161;
continue;
} else {
var vec__82141_82162 = cljs.core.first(seq__82133_82156__$1);
var key_name_82163 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82141_82162,(0),null);
var f_82164 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82141_82162,(1),null);
var str_name_82165 = (function (){var G__82142 = key_name_82163;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__82142) : cljs.core.name.call(null,G__82142));
})();
(obj[str_name_82165] = f_82164);

var G__82166 = cljs.core.next(seq__82133_82156__$1);
var G__82167 = null;
var G__82168 = (0);
var G__82169 = (0);
seq__82133_82143 = G__82166;
chunk__82134_82144 = G__82167;
count__82135_82145 = G__82168;
i__82136_82146 = G__82169;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__82171 = coll;
if(G__82171){
var bit__4662__auto__ = (G__82171.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4662__auto__) || (G__82171.cljs$core$IReversible$)){
return true;
} else {
if((!G__82171.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__82171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__82171);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__82172 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__82172;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__82173 = (i - (1));
var G__82174 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__82173;
r = G__82174;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__82175__i = 0, G__82175__a = new Array(arguments.length -  0);
while (G__82175__i < G__82175__a.length) {G__82175__a[G__82175__i] = arguments[G__82175__i + 0]; ++G__82175__i;}
  xs = new cljs.core.IndexedSeq(G__82175__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__82176){
var xs = cljs.core.seq(arglist__82176);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3981__auto__ = (coll == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__82180 = coll;
if(G__82180){
var bit__4655__auto__ = (G__82180.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__82180.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__82182 = x;
if(G__82182){
var bit__4662__auto__ = (G__82182.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4662__auto__) || (G__82182.cljs$core$IList$)){
return true;
} else {
if((!G__82182.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__82182);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__82182);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__82189 = a.ns;
var G__82190 = b.ns;
return goog.array.defaultCompare(G__82189,G__82190);
})();
if(((0) === nsc)){
var G__82191 = a.name;
var G__82192 = b.name;
return goog.array.defaultCompare(G__82191,G__82192);
} else {
return nsc;
}
}
} else {
var G__82193 = a.name;
var G__82194 = b.name;
return goog.array.defaultCompare(G__82193,G__82194);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__82196 = null;
var G__82196__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__82196__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__82196 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__82196__2.call(this,self__,coll);
case 3:
return G__82196__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__82196.cljs$core$IFn$_invoke$arity$2 = G__82196__2;
G__82196.cljs$core$IFn$_invoke$arity$3 = G__82196__3;
return G__82196;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args82195){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args82195)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__82198 = x;
if(G__82198){
var bit__4655__auto__ = (G__82198.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__82198.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__82200 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__82200) : cljs.core.name.call(null,G__82200));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__82201 = ls.sval();
ls = G__82201;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__82203 = s;
if(G__82203){
var bit__4655__auto__ = (G__82203.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4655__auto__) || (G__82203.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__82204 = cljs.core.next(s__$1);
s__$1 = G__82204;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_82205 = (0);
var xs_82206 = cljs.core.seq(coll);
while(true){
if(xs_82206){
(ret[i_82205] = cljs.core.to_array(cljs.core.first(xs_82206)));

var G__82207 = (i_82205 + (1));
var G__82208 = cljs.core.next(xs_82206);
i_82205 = G__82207;
xs_82206 = G__82208;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__82211 = (i + (1));
var G__82212 = cljs.core.next(s__$1);
i = G__82211;
s__$1 = G__82212;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___82213 = size;
var i_82214 = (0);
while(true){
if((i_82214 < n__4868__auto___82213)){
(a[i_82214] = init_val_or_seq);

var G__82215 = (i_82214 + (1));
i_82214 = G__82215;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__82218 = (i + (1));
var G__82219 = cljs.core.next(s__$1);
i = G__82218;
s__$1 = G__82219;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___82220 = size;
var i_82221 = (0);
while(true){
if((i_82221 < n__4868__auto___82220)){
(a[i_82221] = init_val_or_seq);

var G__82222 = (i_82221 + (1));
i_82221 = G__82222;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__82225 = (i + (1));
var G__82226 = cljs.core.next(s__$1);
i = G__82225;
s__$1 = G__82226;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___82227 = size;
var i_82228 = (0);
while(true){
if((i_82228 < n__4868__auto___82227)){
(a[i_82228] = init_val_or_seq);

var G__82229 = (i_82228 + (1));
i_82228 = G__82229;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__82232 = (i + (1));
var G__82233 = cljs.core.next(s__$1);
i = G__82232;
s__$1 = G__82233;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___82234 = size;
var i_82235 = (0);
while(true){
if((i_82235 < n__4868__auto___82234)){
(a[i_82235] = init_val_or_seq);

var G__82236 = (i_82235 + (1));
i_82235 = G__82236;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__82237 = cljs.core.next(s__$1);
var G__82238 = (i - (1));
var G__82239 = (sum + (1));
s__$1 = G__82237;
i = G__82238;
sum = G__82239;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__82259__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__82259 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__82260__i = 0, G__82260__a = new Array(arguments.length -  2);
while (G__82260__i < G__82260__a.length) {G__82260__a[G__82260__i] = arguments[G__82260__i + 2]; ++G__82260__i;}
  zs = new cljs.core.IndexedSeq(G__82260__a,0);
} 
return G__82259__delegate.call(this,x,y,zs);};
G__82259.cljs$lang$maxFixedArity = 2;
G__82259.cljs$lang$applyTo = (function (arglist__82261){
var x = cljs.core.first(arglist__82261);
arglist__82261 = cljs.core.next(arglist__82261);
var y = cljs.core.first(arglist__82261);
var zs = cljs.core.rest(arglist__82261);
return G__82259__delegate(x,y,zs);
});
G__82259.cljs$core$IFn$_invoke$arity$variadic = G__82259__delegate;
return G__82259;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__82262 = null;
if (arguments.length > 2) {
var G__82263__i = 0, G__82263__a = new Array(arguments.length -  2);
while (G__82263__i < G__82263__a.length) {G__82263__a[G__82263__i] = arguments[G__82263__i + 2]; ++G__82263__i;}
G__82262 = new cljs.core.IndexedSeq(G__82263__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__82264__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__82264 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__82265__i = 0, G__82265__a = new Array(arguments.length -  4);
while (G__82265__i < G__82265__a.length) {G__82265__a[G__82265__i] = arguments[G__82265__i + 4]; ++G__82265__i;}
  more = new cljs.core.IndexedSeq(G__82265__a,0);
} 
return G__82264__delegate.call(this,a,b,c,d,more);};
G__82264.cljs$lang$maxFixedArity = 4;
G__82264.cljs$lang$applyTo = (function (arglist__82266){
var a = cljs.core.first(arglist__82266);
arglist__82266 = cljs.core.next(arglist__82266);
var b = cljs.core.first(arglist__82266);
arglist__82266 = cljs.core.next(arglist__82266);
var c = cljs.core.first(arglist__82266);
arglist__82266 = cljs.core.next(arglist__82266);
var d = cljs.core.first(arglist__82266);
var more = cljs.core.rest(arglist__82266);
return G__82264__delegate(a,b,c,d,more);
});
G__82264.cljs$core$IFn$_invoke$arity$variadic = G__82264__delegate;
return G__82264;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__82267 = null;
if (arguments.length > 4) {
var G__82268__i = 0, G__82268__a = new Array(arguments.length -  4);
while (G__82268__i < G__82268__a.length) {G__82268__a[G__82268__i] = arguments[G__82268__i + 4]; ++G__82268__i;}
G__82267 = new cljs.core.IndexedSeq(G__82268__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__82267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__82269__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__82270 = ntcoll;
var G__82271 = cljs.core.first(vals);
var G__82272 = cljs.core.next(vals);
tcoll = G__82270;
val = G__82271;
vals = G__82272;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__82269 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__82273__i = 0, G__82273__a = new Array(arguments.length -  2);
while (G__82273__i < G__82273__a.length) {G__82273__a[G__82273__i] = arguments[G__82273__i + 2]; ++G__82273__i;}
  vals = new cljs.core.IndexedSeq(G__82273__a,0);
} 
return G__82269__delegate.call(this,tcoll,val,vals);};
G__82269.cljs$lang$maxFixedArity = 2;
G__82269.cljs$lang$applyTo = (function (arglist__82274){
var tcoll = cljs.core.first(arglist__82274);
arglist__82274 = cljs.core.next(arglist__82274);
var val = cljs.core.first(arglist__82274);
var vals = cljs.core.rest(arglist__82274);
return G__82269__delegate(tcoll,val,vals);
});
G__82269.cljs$core$IFn$_invoke$arity$variadic = G__82269__delegate;
return G__82269;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__82275 = null;
if (arguments.length > 2) {
var G__82276__i = 0, G__82276__a = new Array(arguments.length -  2);
while (G__82276__i < G__82276__a.length) {G__82276__a[G__82276__i] = arguments[G__82276__i + 2]; ++G__82276__i;}
G__82275 = new cljs.core.IndexedSeq(G__82276__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__82275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__82277__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__82278 = ntcoll;
var G__82279 = cljs.core.first(kvs);
var G__82280 = cljs.core.second(kvs);
var G__82281 = cljs.core.nnext(kvs);
tcoll = G__82278;
key = G__82279;
val = G__82280;
kvs = G__82281;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__82277 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__82282__i = 0, G__82282__a = new Array(arguments.length -  3);
while (G__82282__i < G__82282__a.length) {G__82282__a[G__82282__i] = arguments[G__82282__i + 3]; ++G__82282__i;}
  kvs = new cljs.core.IndexedSeq(G__82282__a,0);
} 
return G__82277__delegate.call(this,tcoll,key,val,kvs);};
G__82277.cljs$lang$maxFixedArity = 3;
G__82277.cljs$lang$applyTo = (function (arglist__82283){
var tcoll = cljs.core.first(arglist__82283);
arglist__82283 = cljs.core.next(arglist__82283);
var key = cljs.core.first(arglist__82283);
arglist__82283 = cljs.core.next(arglist__82283);
var val = cljs.core.first(arglist__82283);
var kvs = cljs.core.rest(arglist__82283);
return G__82277__delegate(tcoll,key,val,kvs);
});
G__82277.cljs$core$IFn$_invoke$arity$variadic = G__82277__delegate;
return G__82277;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__82284 = null;
if (arguments.length > 3) {
var G__82285__i = 0, G__82285__a = new Array(arguments.length -  3);
while (G__82285__i < G__82285__a.length) {G__82285__a[G__82285__i] = arguments[G__82285__i + 3]; ++G__82285__i;}
G__82284 = new cljs.core.IndexedSeq(G__82285__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__82284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__82286__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__82287 = ntcoll;
var G__82288 = cljs.core.first(ks);
var G__82289 = cljs.core.next(ks);
tcoll = G__82287;
key = G__82288;
ks = G__82289;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__82286 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__82290__i = 0, G__82290__a = new Array(arguments.length -  2);
while (G__82290__i < G__82290__a.length) {G__82290__a[G__82290__i] = arguments[G__82290__i + 2]; ++G__82290__i;}
  ks = new cljs.core.IndexedSeq(G__82290__a,0);
} 
return G__82286__delegate.call(this,tcoll,key,ks);};
G__82286.cljs$lang$maxFixedArity = 2;
G__82286.cljs$lang$applyTo = (function (arglist__82291){
var tcoll = cljs.core.first(arglist__82291);
arglist__82291 = cljs.core.next(arglist__82291);
var key = cljs.core.first(arglist__82291);
var ks = cljs.core.rest(arglist__82291);
return G__82286__delegate(tcoll,key,ks);
});
G__82286.cljs$core$IFn$_invoke$arity$variadic = G__82286__delegate;
return G__82286;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__82292 = null;
if (arguments.length > 2) {
var G__82293__i = 0, G__82293__a = new Array(arguments.length -  2);
while (G__82293__i < G__82293__a.length) {G__82293__a[G__82293__i] = arguments[G__82293__i + 2]; ++G__82293__i;}
G__82292 = new cljs.core.IndexedSeq(G__82293__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__82292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__82294__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__82295 = ntcoll;
var G__82296 = cljs.core.first(vals);
var G__82297 = cljs.core.next(vals);
tcoll = G__82295;
val = G__82296;
vals = G__82297;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__82294 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__82298__i = 0, G__82298__a = new Array(arguments.length -  2);
while (G__82298__i < G__82298__a.length) {G__82298__a[G__82298__i] = arguments[G__82298__i + 2]; ++G__82298__i;}
  vals = new cljs.core.IndexedSeq(G__82298__a,0);
} 
return G__82294__delegate.call(this,tcoll,val,vals);};
G__82294.cljs$lang$maxFixedArity = 2;
G__82294.cljs$lang$applyTo = (function (arglist__82299){
var tcoll = cljs.core.first(arglist__82299);
arglist__82299 = cljs.core.next(arglist__82299);
var val = cljs.core.first(arglist__82299);
var vals = cljs.core.rest(arglist__82299);
return G__82294__delegate(tcoll,val,vals);
});
G__82294.cljs$core$IFn$_invoke$arity$variadic = G__82294__delegate;
return G__82294;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__82300 = null;
if (arguments.length > 2) {
var G__82301__i = 0, G__82301__a = new Array(arguments.length -  2);
while (G__82301__i < G__82301__a.length) {G__82301__a[G__82301__i] = arguments[G__82301__i + 2]; ++G__82301__i;}
G__82300 = new cljs.core.IndexedSeq(G__82301__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__82300);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4912 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4912);
} else {
var G__82512 = a4912;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82512) : f.call(null,G__82512));
}
} else {
var b4913 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4912,b4913);
} else {
var G__82513 = a4912;
var G__82514 = b4913;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__82513,G__82514) : f.call(null,G__82513,G__82514));
}
} else {
var c4914 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4912,b4913,c4914);
} else {
var G__82515 = a4912;
var G__82516 = b4913;
var G__82517 = c4914;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__82515,G__82516,G__82517) : f.call(null,G__82515,G__82516,G__82517));
}
} else {
var d4915 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4912,b4913,c4914,d4915);
} else {
var G__82518 = a4912;
var G__82519 = b4913;
var G__82520 = c4914;
var G__82521 = d4915;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__82518,G__82519,G__82520,G__82521) : f.call(null,G__82518,G__82519,G__82520,G__82521));
}
} else {
var e4916 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4912,b4913,c4914,d4915,e4916);
} else {
var G__82522 = a4912;
var G__82523 = b4913;
var G__82524 = c4914;
var G__82525 = d4915;
var G__82526 = e4916;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__82522,G__82523,G__82524,G__82525,G__82526) : f.call(null,G__82522,G__82523,G__82524,G__82525,G__82526));
}
} else {
var f4917 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4912,b4913,c4914,d4915,e4916,f4917);
} else {
var G__82527 = a4912;
var G__82528 = b4913;
var G__82529 = c4914;
var G__82530 = d4915;
var G__82531 = e4916;
var G__82532 = f4917;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__82527,G__82528,G__82529,G__82530,G__82531,G__82532) : f.call(null,G__82527,G__82528,G__82529,G__82530,G__82531,G__82532));
}
} else {
var g4918 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4912,b4913,c4914,d4915,e4916,f4917,g4918);
} else {
var G__82533 = a4912;
var G__82534 = b4913;
var G__82535 = c4914;
var G__82536 = d4915;
var G__82537 = e4916;
var G__82538 = f4917;
var G__82539 = g4918;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__82533,G__82534,G__82535,G__82536,G__82537,G__82538,G__82539) : f.call(null,G__82533,G__82534,G__82535,G__82536,G__82537,G__82538,G__82539));
}
} else {
var h4919 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919);
} else {
var G__82540 = a4912;
var G__82541 = b4913;
var G__82542 = c4914;
var G__82543 = d4915;
var G__82544 = e4916;
var G__82545 = f4917;
var G__82546 = g4918;
var G__82547 = h4919;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__82540,G__82541,G__82542,G__82543,G__82544,G__82545,G__82546,G__82547) : f.call(null,G__82540,G__82541,G__82542,G__82543,G__82544,G__82545,G__82546,G__82547));
}
} else {
var i4920 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920);
} else {
var G__82548 = a4912;
var G__82549 = b4913;
var G__82550 = c4914;
var G__82551 = d4915;
var G__82552 = e4916;
var G__82553 = f4917;
var G__82554 = g4918;
var G__82555 = h4919;
var G__82556 = i4920;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__82548,G__82549,G__82550,G__82551,G__82552,G__82553,G__82554,G__82555,G__82556) : f.call(null,G__82548,G__82549,G__82550,G__82551,G__82552,G__82553,G__82554,G__82555,G__82556));
}
} else {
var j4921 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921);
} else {
var G__82557 = a4912;
var G__82558 = b4913;
var G__82559 = c4914;
var G__82560 = d4915;
var G__82561 = e4916;
var G__82562 = f4917;
var G__82563 = g4918;
var G__82564 = h4919;
var G__82565 = i4920;
var G__82566 = j4921;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__82557,G__82558,G__82559,G__82560,G__82561,G__82562,G__82563,G__82564,G__82565,G__82566) : f.call(null,G__82557,G__82558,G__82559,G__82560,G__82561,G__82562,G__82563,G__82564,G__82565,G__82566));
}
} else {
var k4922 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922);
} else {
var G__82567 = a4912;
var G__82568 = b4913;
var G__82569 = c4914;
var G__82570 = d4915;
var G__82571 = e4916;
var G__82572 = f4917;
var G__82573 = g4918;
var G__82574 = h4919;
var G__82575 = i4920;
var G__82576 = j4921;
var G__82577 = k4922;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__82567,G__82568,G__82569,G__82570,G__82571,G__82572,G__82573,G__82574,G__82575,G__82576,G__82577) : f.call(null,G__82567,G__82568,G__82569,G__82570,G__82571,G__82572,G__82573,G__82574,G__82575,G__82576,G__82577));
}
} else {
var l4923 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923);
} else {
var G__82578 = a4912;
var G__82579 = b4913;
var G__82580 = c4914;
var G__82581 = d4915;
var G__82582 = e4916;
var G__82583 = f4917;
var G__82584 = g4918;
var G__82585 = h4919;
var G__82586 = i4920;
var G__82587 = j4921;
var G__82588 = k4922;
var G__82589 = l4923;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__82578,G__82579,G__82580,G__82581,G__82582,G__82583,G__82584,G__82585,G__82586,G__82587,G__82588,G__82589) : f.call(null,G__82578,G__82579,G__82580,G__82581,G__82582,G__82583,G__82584,G__82585,G__82586,G__82587,G__82588,G__82589));
}
} else {
var m4924 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924);
} else {
var G__82590 = a4912;
var G__82591 = b4913;
var G__82592 = c4914;
var G__82593 = d4915;
var G__82594 = e4916;
var G__82595 = f4917;
var G__82596 = g4918;
var G__82597 = h4919;
var G__82598 = i4920;
var G__82599 = j4921;
var G__82600 = k4922;
var G__82601 = l4923;
var G__82602 = m4924;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__82590,G__82591,G__82592,G__82593,G__82594,G__82595,G__82596,G__82597,G__82598,G__82599,G__82600,G__82601,G__82602) : f.call(null,G__82590,G__82591,G__82592,G__82593,G__82594,G__82595,G__82596,G__82597,G__82598,G__82599,G__82600,G__82601,G__82602));
}
} else {
var n4925 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925);
} else {
var G__82603 = a4912;
var G__82604 = b4913;
var G__82605 = c4914;
var G__82606 = d4915;
var G__82607 = e4916;
var G__82608 = f4917;
var G__82609 = g4918;
var G__82610 = h4919;
var G__82611 = i4920;
var G__82612 = j4921;
var G__82613 = k4922;
var G__82614 = l4923;
var G__82615 = m4924;
var G__82616 = n4925;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__82603,G__82604,G__82605,G__82606,G__82607,G__82608,G__82609,G__82610,G__82611,G__82612,G__82613,G__82614,G__82615,G__82616) : f.call(null,G__82603,G__82604,G__82605,G__82606,G__82607,G__82608,G__82609,G__82610,G__82611,G__82612,G__82613,G__82614,G__82615,G__82616));
}
} else {
var o4926 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926);
} else {
var G__82617 = a4912;
var G__82618 = b4913;
var G__82619 = c4914;
var G__82620 = d4915;
var G__82621 = e4916;
var G__82622 = f4917;
var G__82623 = g4918;
var G__82624 = h4919;
var G__82625 = i4920;
var G__82626 = j4921;
var G__82627 = k4922;
var G__82628 = l4923;
var G__82629 = m4924;
var G__82630 = n4925;
var G__82631 = o4926;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__82617,G__82618,G__82619,G__82620,G__82621,G__82622,G__82623,G__82624,G__82625,G__82626,G__82627,G__82628,G__82629,G__82630,G__82631) : f.call(null,G__82617,G__82618,G__82619,G__82620,G__82621,G__82622,G__82623,G__82624,G__82625,G__82626,G__82627,G__82628,G__82629,G__82630,G__82631));
}
} else {
var p4927 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927);
} else {
var G__82632 = a4912;
var G__82633 = b4913;
var G__82634 = c4914;
var G__82635 = d4915;
var G__82636 = e4916;
var G__82637 = f4917;
var G__82638 = g4918;
var G__82639 = h4919;
var G__82640 = i4920;
var G__82641 = j4921;
var G__82642 = k4922;
var G__82643 = l4923;
var G__82644 = m4924;
var G__82645 = n4925;
var G__82646 = o4926;
var G__82647 = p4927;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__82632,G__82633,G__82634,G__82635,G__82636,G__82637,G__82638,G__82639,G__82640,G__82641,G__82642,G__82643,G__82644,G__82645,G__82646,G__82647) : f.call(null,G__82632,G__82633,G__82634,G__82635,G__82636,G__82637,G__82638,G__82639,G__82640,G__82641,G__82642,G__82643,G__82644,G__82645,G__82646,G__82647));
}
} else {
var q4928 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928);
} else {
var G__82648 = a4912;
var G__82649 = b4913;
var G__82650 = c4914;
var G__82651 = d4915;
var G__82652 = e4916;
var G__82653 = f4917;
var G__82654 = g4918;
var G__82655 = h4919;
var G__82656 = i4920;
var G__82657 = j4921;
var G__82658 = k4922;
var G__82659 = l4923;
var G__82660 = m4924;
var G__82661 = n4925;
var G__82662 = o4926;
var G__82663 = p4927;
var G__82664 = q4928;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__82648,G__82649,G__82650,G__82651,G__82652,G__82653,G__82654,G__82655,G__82656,G__82657,G__82658,G__82659,G__82660,G__82661,G__82662,G__82663,G__82664) : f.call(null,G__82648,G__82649,G__82650,G__82651,G__82652,G__82653,G__82654,G__82655,G__82656,G__82657,G__82658,G__82659,G__82660,G__82661,G__82662,G__82663,G__82664));
}
} else {
var r4929 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929);
} else {
var G__82665 = a4912;
var G__82666 = b4913;
var G__82667 = c4914;
var G__82668 = d4915;
var G__82669 = e4916;
var G__82670 = f4917;
var G__82671 = g4918;
var G__82672 = h4919;
var G__82673 = i4920;
var G__82674 = j4921;
var G__82675 = k4922;
var G__82676 = l4923;
var G__82677 = m4924;
var G__82678 = n4925;
var G__82679 = o4926;
var G__82680 = p4927;
var G__82681 = q4928;
var G__82682 = r4929;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__82665,G__82666,G__82667,G__82668,G__82669,G__82670,G__82671,G__82672,G__82673,G__82674,G__82675,G__82676,G__82677,G__82678,G__82679,G__82680,G__82681,G__82682) : f.call(null,G__82665,G__82666,G__82667,G__82668,G__82669,G__82670,G__82671,G__82672,G__82673,G__82674,G__82675,G__82676,G__82677,G__82678,G__82679,G__82680,G__82681,G__82682));
}
} else {
var s4930 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930);
} else {
var G__82683 = a4912;
var G__82684 = b4913;
var G__82685 = c4914;
var G__82686 = d4915;
var G__82687 = e4916;
var G__82688 = f4917;
var G__82689 = g4918;
var G__82690 = h4919;
var G__82691 = i4920;
var G__82692 = j4921;
var G__82693 = k4922;
var G__82694 = l4923;
var G__82695 = m4924;
var G__82696 = n4925;
var G__82697 = o4926;
var G__82698 = p4927;
var G__82699 = q4928;
var G__82700 = r4929;
var G__82701 = s4930;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__82683,G__82684,G__82685,G__82686,G__82687,G__82688,G__82689,G__82690,G__82691,G__82692,G__82693,G__82694,G__82695,G__82696,G__82697,G__82698,G__82699,G__82700,G__82701) : f.call(null,G__82683,G__82684,G__82685,G__82686,G__82687,G__82688,G__82689,G__82690,G__82691,G__82692,G__82693,G__82694,G__82695,G__82696,G__82697,G__82698,G__82699,G__82700,G__82701));
}
} else {
var t4931 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930,t4931);
} else {
var G__82702 = a4912;
var G__82703 = b4913;
var G__82704 = c4914;
var G__82705 = d4915;
var G__82706 = e4916;
var G__82707 = f4917;
var G__82708 = g4918;
var G__82709 = h4919;
var G__82710 = i4920;
var G__82711 = j4921;
var G__82712 = k4922;
var G__82713 = l4923;
var G__82714 = m4924;
var G__82715 = n4925;
var G__82716 = o4926;
var G__82717 = p4927;
var G__82718 = q4928;
var G__82719 = r4929;
var G__82720 = s4930;
var G__82721 = t4931;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__82702,G__82703,G__82704,G__82705,G__82706,G__82707,G__82708,G__82709,G__82710,G__82711,G__82712,G__82713,G__82714,G__82715,G__82716,G__82717,G__82718,G__82719,G__82720,G__82721) : f.call(null,G__82702,G__82703,G__82704,G__82705,G__82706,G__82707,G__82708,G__82709,G__82710,G__82711,G__82712,G__82713,G__82714,G__82715,G__82716,G__82717,G__82718,G__82719,G__82720,G__82721));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__82722__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__82722 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__82723__i = 0, G__82723__a = new Array(arguments.length -  5);
while (G__82723__i < G__82723__a.length) {G__82723__a[G__82723__i] = arguments[G__82723__i + 5]; ++G__82723__i;}
  args = new cljs.core.IndexedSeq(G__82723__a,0);
} 
return G__82722__delegate.call(this,f,a,b,c,d,args);};
G__82722.cljs$lang$maxFixedArity = 5;
G__82722.cljs$lang$applyTo = (function (arglist__82724){
var f = cljs.core.first(arglist__82724);
arglist__82724 = cljs.core.next(arglist__82724);
var a = cljs.core.first(arglist__82724);
arglist__82724 = cljs.core.next(arglist__82724);
var b = cljs.core.first(arglist__82724);
arglist__82724 = cljs.core.next(arglist__82724);
var c = cljs.core.first(arglist__82724);
arglist__82724 = cljs.core.next(arglist__82724);
var d = cljs.core.first(arglist__82724);
var args = cljs.core.rest(arglist__82724);
return G__82722__delegate(f,a,b,c,d,args);
});
G__82722.cljs$core$IFn$_invoke$arity$variadic = G__82722__delegate;
return G__82722;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__82725 = null;
if (arguments.length > 5) {
var G__82726__i = 0, G__82726__a = new Array(arguments.length -  5);
while (G__82726__i < G__82726__a.length) {G__82726__a[G__82726__i] = arguments[G__82726__i + 5]; ++G__82726__i;}
G__82725 = new cljs.core.IndexedSeq(G__82726__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__82725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__82742 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82742) : f.call(null,G__82742));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__82743 = cljs.core.meta(obj);
var G__82744 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__82743,G__82744) : f.call(null,G__82743,G__82744));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__82745 = cljs.core.meta(obj);
var G__82746 = a;
var G__82747 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__82745,G__82746,G__82747) : f.call(null,G__82745,G__82746,G__82747));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__82748 = cljs.core.meta(obj);
var G__82749 = a;
var G__82750 = b;
var G__82751 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__82748,G__82749,G__82750,G__82751) : f.call(null,G__82748,G__82749,G__82750,G__82751));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__82752 = cljs.core.meta(obj);
var G__82753 = a;
var G__82754 = b;
var G__82755 = c;
var G__82756 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__82752,G__82753,G__82754,G__82755,G__82756) : f.call(null,G__82752,G__82753,G__82754,G__82755,G__82756));
})());
});
var vary_meta__7 = (function() { 
var G__82757__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__82757 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__82758__i = 0, G__82758__a = new Array(arguments.length -  6);
while (G__82758__i < G__82758__a.length) {G__82758__a[G__82758__i] = arguments[G__82758__i + 6]; ++G__82758__i;}
  args = new cljs.core.IndexedSeq(G__82758__a,0);
} 
return G__82757__delegate.call(this,obj,f,a,b,c,d,args);};
G__82757.cljs$lang$maxFixedArity = 6;
G__82757.cljs$lang$applyTo = (function (arglist__82759){
var obj = cljs.core.first(arglist__82759);
arglist__82759 = cljs.core.next(arglist__82759);
var f = cljs.core.first(arglist__82759);
arglist__82759 = cljs.core.next(arglist__82759);
var a = cljs.core.first(arglist__82759);
arglist__82759 = cljs.core.next(arglist__82759);
var b = cljs.core.first(arglist__82759);
arglist__82759 = cljs.core.next(arglist__82759);
var c = cljs.core.first(arglist__82759);
arglist__82759 = cljs.core.next(arglist__82759);
var d = cljs.core.first(arglist__82759);
var args = cljs.core.rest(arglist__82759);
return G__82757__delegate(obj,f,a,b,c,d,args);
});
G__82757.cljs$core$IFn$_invoke$arity$variadic = G__82757__delegate;
return G__82757;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__82760 = null;
if (arguments.length > 6) {
var G__82761__i = 0, G__82761__a = new Array(arguments.length -  6);
while (G__82761__i < G__82761__a.length) {G__82761__a[G__82761__i] = arguments[G__82761__i + 6]; ++G__82761__i;}
G__82760 = new cljs.core.IndexedSeq(G__82761__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__82760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__82762__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__82762 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__82763__i = 0, G__82763__a = new Array(arguments.length -  2);
while (G__82763__i < G__82763__a.length) {G__82763__a[G__82763__i] = arguments[G__82763__i + 2]; ++G__82763__i;}
  more = new cljs.core.IndexedSeq(G__82763__a,0);
} 
return G__82762__delegate.call(this,x,y,more);};
G__82762.cljs$lang$maxFixedArity = 2;
G__82762.cljs$lang$applyTo = (function (arglist__82764){
var x = cljs.core.first(arglist__82764);
arglist__82764 = cljs.core.next(arglist__82764);
var y = cljs.core.first(arglist__82764);
var more = cljs.core.rest(arglist__82764);
return G__82762__delegate(x,y,more);
});
G__82762.cljs$core$IFn$_invoke$arity$variadic = G__82762__delegate;
return G__82762;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__82765 = null;
if (arguments.length > 2) {
var G__82766__i = 0, G__82766__a = new Array(arguments.length -  2);
while (G__82766__i < G__82766__a.length) {G__82766__a[G__82766__i] = arguments[G__82766__i + 2]; ++G__82766__i;}
G__82765 = new cljs.core.IndexedSeq(G__82766__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t82770 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t82770 = (function (nil_iter,meta82771){
this.nil_iter = nil_iter;
this.meta82771 = meta82771;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t82770.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t82770.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t82770.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t82770.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_82772){
var self__ = this;
var _82772__$1 = this;
return self__.meta82771;
});

cljs.core.t82770.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_82772,meta82771__$1){
var self__ = this;
var _82772__$1 = this;
return (new cljs.core.t82770(self__.nil_iter,meta82771__$1));
});

cljs.core.t82770.cljs$lang$type = true;

cljs.core.t82770.cljs$lang$ctorStr = "cljs.core/t82770";

cljs.core.t82770.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/t82770");
});

cljs.core.__GT_t82770 = (function __GT_t82770(nil_iter__$1,meta82771){
return (new cljs.core.t82770(nil_iter__$1,meta82771));
});

}

return (new cljs.core.t82770(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return self__.iter.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__82773 = lt;
var G__82774 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__82773,G__82774) : self__.xform.call(null,G__82773,G__82774));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__82775 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__82775) : self__.xform.call(null,G__82775));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__82777 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__82777) : xform.call(null,G__82777));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__82779 = cljs.core.next(iters__$1);
iters__$1 = G__82779;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4868__auto___82780 = self__.iters.length;
var i_82781 = (0);
while(true){
if((i_82781 < n__4868__auto___82780)){
(self__.nexts[i_82781] = (self__.iters[i_82781]).next());

var G__82782 = (i_82781 + (1));
i_82781 = G__82782;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return this$.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__82778 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__82778) : self__.xform.call(null,G__82778));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__82787 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__82787) : xform.call(null,G__82787));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__82788_82792 = cljs.core.seq(colls);
var chunk__82789_82793 = null;
var count__82790_82794 = (0);
var i__82791_82795 = (0);
while(true){
if((i__82791_82795 < count__82790_82794)){
var coll_82796 = chunk__82789_82793.cljs$core$IIndexed$_nth$arity$2(null,i__82791_82795);
iters.push(cljs.core.iter(coll_82796));

var G__82797 = seq__82788_82792;
var G__82798 = chunk__82789_82793;
var G__82799 = count__82790_82794;
var G__82800 = (i__82791_82795 + (1));
seq__82788_82792 = G__82797;
chunk__82789_82793 = G__82798;
count__82790_82794 = G__82799;
i__82791_82795 = G__82800;
continue;
} else {
var temp__4126__auto___82801 = cljs.core.seq(seq__82788_82792);
if(temp__4126__auto___82801){
var seq__82788_82802__$1 = temp__4126__auto___82801;
if(cljs.core.chunked_seq_QMARK_(seq__82788_82802__$1)){
var c__4768__auto___82803 = cljs.core.chunk_first(seq__82788_82802__$1);
var G__82804 = cljs.core.chunk_rest(seq__82788_82802__$1);
var G__82805 = c__4768__auto___82803;
var G__82806 = cljs.core.count(c__4768__auto___82803);
var G__82807 = (0);
seq__82788_82792 = G__82804;
chunk__82789_82793 = G__82805;
count__82790_82794 = G__82806;
i__82791_82795 = G__82807;
continue;
} else {
var coll_82808 = cljs.core.first(seq__82788_82802__$1);
iters.push(cljs.core.iter(coll_82808));

var G__82809 = cljs.core.next(seq__82788_82802__$1);
var G__82810 = null;
var G__82811 = (0);
var G__82812 = (0);
seq__82788_82792 = G__82809;
chunk__82789_82793 = G__82810;
count__82790_82794 = G__82811;
i__82791_82795 = G__82812;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3981__auto__ = cljs.core.seq(coll);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__82813__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__82813 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__82814__i = 0, G__82814__a = new Array(arguments.length -  2);
while (G__82814__i < G__82814__a.length) {G__82814__a[G__82814__i] = arguments[G__82814__i + 2]; ++G__82814__i;}
  colls = new cljs.core.IndexedSeq(G__82814__a,0);
} 
return G__82813__delegate.call(this,xform,coll,colls);};
G__82813.cljs$lang$maxFixedArity = 2;
G__82813.cljs$lang$applyTo = (function (arglist__82815){
var xform = cljs.core.first(arglist__82815);
arglist__82815 = cljs.core.next(arglist__82815);
var coll = cljs.core.first(arglist__82815);
var colls = cljs.core.rest(arglist__82815);
return G__82813__delegate(xform,coll,colls);
});
G__82813.cljs$core$IFn$_invoke$arity$variadic = G__82813__delegate;
return G__82813;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__82816 = null;
if (arguments.length > 2) {
var G__82817__i = 0, G__82817__a = new Array(arguments.length -  2);
while (G__82817__i < G__82817__a.length) {G__82817__a[G__82817__i] = arguments[G__82817__i + 2]; ++G__82817__i;}
G__82816 = new cljs.core.IndexedSeq(G__82817__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__82816);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__82819 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__82819) : pred.call(null,G__82819));
})())){
var G__82820 = pred;
var G__82821 = cljs.core.next(coll);
pred = G__82820;
coll = G__82821;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3981__auto__ = (function (){var G__82825 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__82825) : pred.call(null,G__82825));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__82826 = pred;
var G__82827 = cljs.core.next(coll);
pred = G__82826;
coll = G__82827;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__82834 = null;
var G__82834__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__82834__1 = (function (x){
return cljs.core.not((function (){var G__82831 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82831) : f.call(null,G__82831));
})());
});
var G__82834__2 = (function (x,y){
return cljs.core.not((function (){var G__82832 = x;
var G__82833 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__82832,G__82833) : f.call(null,G__82832,G__82833));
})());
});
var G__82834__3 = (function() { 
var G__82835__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__82835 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__82836__i = 0, G__82836__a = new Array(arguments.length -  2);
while (G__82836__i < G__82836__a.length) {G__82836__a[G__82836__i] = arguments[G__82836__i + 2]; ++G__82836__i;}
  zs = new cljs.core.IndexedSeq(G__82836__a,0);
} 
return G__82835__delegate.call(this,x,y,zs);};
G__82835.cljs$lang$maxFixedArity = 2;
G__82835.cljs$lang$applyTo = (function (arglist__82837){
var x = cljs.core.first(arglist__82837);
arglist__82837 = cljs.core.next(arglist__82837);
var y = cljs.core.first(arglist__82837);
var zs = cljs.core.rest(arglist__82837);
return G__82835__delegate(x,y,zs);
});
G__82835.cljs$core$IFn$_invoke$arity$variadic = G__82835__delegate;
return G__82835;
})()
;
G__82834 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__82834__0.call(this);
case 1:
return G__82834__1.call(this,x);
case 2:
return G__82834__2.call(this,x,y);
default:
var G__82838 = null;
if (arguments.length > 2) {
var G__82839__i = 0, G__82839__a = new Array(arguments.length -  2);
while (G__82839__i < G__82839__a.length) {G__82839__a[G__82839__i] = arguments[G__82839__i + 2]; ++G__82839__i;}
G__82838 = new cljs.core.IndexedSeq(G__82839__a,0);
}
return G__82834__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__82838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__82834.cljs$lang$maxFixedArity = 2;
G__82834.cljs$lang$applyTo = G__82834__3.cljs$lang$applyTo;
G__82834.cljs$core$IFn$_invoke$arity$0 = G__82834__0;
G__82834.cljs$core$IFn$_invoke$arity$1 = G__82834__1;
G__82834.cljs$core$IFn$_invoke$arity$2 = G__82834__2;
G__82834.cljs$core$IFn$_invoke$arity$variadic = G__82834__3.cljs$core$IFn$_invoke$arity$variadic;
return G__82834;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__82840__delegate = function (args){
return x;
};
var G__82840 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__82841__i = 0, G__82841__a = new Array(arguments.length -  0);
while (G__82841__i < G__82841__a.length) {G__82841__a[G__82841__i] = arguments[G__82841__i + 0]; ++G__82841__i;}
  args = new cljs.core.IndexedSeq(G__82841__a,0);
} 
return G__82840__delegate.call(this,args);};
G__82840.cljs$lang$maxFixedArity = 0;
G__82840.cljs$lang$applyTo = (function (arglist__82842){
var args = cljs.core.seq(arglist__82842);
return G__82840__delegate(args);
});
G__82840.cljs$core$IFn$_invoke$arity$variadic = G__82840__delegate;
return G__82840;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__82897 = null;
var G__82897__0 = (function (){
var G__82870 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82870) : f.call(null,G__82870));
});
var G__82897__1 = (function (x){
var G__82871 = (function (){var G__82872 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82872) : g.call(null,G__82872));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82871) : f.call(null,G__82871));
});
var G__82897__2 = (function (x,y){
var G__82873 = (function (){var G__82874 = x;
var G__82875 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__82874,G__82875) : g.call(null,G__82874,G__82875));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82873) : f.call(null,G__82873));
});
var G__82897__3 = (function (x,y,z){
var G__82876 = (function (){var G__82877 = x;
var G__82878 = y;
var G__82879 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__82877,G__82878,G__82879) : g.call(null,G__82877,G__82878,G__82879));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82876) : f.call(null,G__82876));
});
var G__82897__4 = (function() { 
var G__82898__delegate = function (x,y,z,args){
var G__82880 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82880) : f.call(null,G__82880));
};
var G__82898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__82899__i = 0, G__82899__a = new Array(arguments.length -  3);
while (G__82899__i < G__82899__a.length) {G__82899__a[G__82899__i] = arguments[G__82899__i + 3]; ++G__82899__i;}
  args = new cljs.core.IndexedSeq(G__82899__a,0);
} 
return G__82898__delegate.call(this,x,y,z,args);};
G__82898.cljs$lang$maxFixedArity = 3;
G__82898.cljs$lang$applyTo = (function (arglist__82900){
var x = cljs.core.first(arglist__82900);
arglist__82900 = cljs.core.next(arglist__82900);
var y = cljs.core.first(arglist__82900);
arglist__82900 = cljs.core.next(arglist__82900);
var z = cljs.core.first(arglist__82900);
var args = cljs.core.rest(arglist__82900);
return G__82898__delegate(x,y,z,args);
});
G__82898.cljs$core$IFn$_invoke$arity$variadic = G__82898__delegate;
return G__82898;
})()
;
G__82897 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__82897__0.call(this);
case 1:
return G__82897__1.call(this,x);
case 2:
return G__82897__2.call(this,x,y);
case 3:
return G__82897__3.call(this,x,y,z);
default:
var G__82901 = null;
if (arguments.length > 3) {
var G__82902__i = 0, G__82902__a = new Array(arguments.length -  3);
while (G__82902__i < G__82902__a.length) {G__82902__a[G__82902__i] = arguments[G__82902__i + 3]; ++G__82902__i;}
G__82901 = new cljs.core.IndexedSeq(G__82902__a,0);
}
return G__82897__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__82901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__82897.cljs$lang$maxFixedArity = 3;
G__82897.cljs$lang$applyTo = G__82897__4.cljs$lang$applyTo;
G__82897.cljs$core$IFn$_invoke$arity$0 = G__82897__0;
G__82897.cljs$core$IFn$_invoke$arity$1 = G__82897__1;
G__82897.cljs$core$IFn$_invoke$arity$2 = G__82897__2;
G__82897.cljs$core$IFn$_invoke$arity$3 = G__82897__3;
G__82897.cljs$core$IFn$_invoke$arity$variadic = G__82897__4.cljs$core$IFn$_invoke$arity$variadic;
return G__82897;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__82903 = null;
var G__82903__0 = (function (){
var G__82881 = (function (){var G__82882 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82882) : g.call(null,G__82882));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82881) : f.call(null,G__82881));
});
var G__82903__1 = (function (x){
var G__82883 = (function (){var G__82884 = (function (){var G__82885 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__82885) : h.call(null,G__82885));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82884) : g.call(null,G__82884));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82883) : f.call(null,G__82883));
});
var G__82903__2 = (function (x,y){
var G__82886 = (function (){var G__82887 = (function (){var G__82888 = x;
var G__82889 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__82888,G__82889) : h.call(null,G__82888,G__82889));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82887) : g.call(null,G__82887));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82886) : f.call(null,G__82886));
});
var G__82903__3 = (function (x,y,z){
var G__82890 = (function (){var G__82891 = (function (){var G__82892 = x;
var G__82893 = y;
var G__82894 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__82892,G__82893,G__82894) : h.call(null,G__82892,G__82893,G__82894));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82891) : g.call(null,G__82891));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82890) : f.call(null,G__82890));
});
var G__82903__4 = (function() { 
var G__82904__delegate = function (x,y,z,args){
var G__82895 = (function (){var G__82896 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__82896) : g.call(null,G__82896));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82895) : f.call(null,G__82895));
};
var G__82904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__82905__i = 0, G__82905__a = new Array(arguments.length -  3);
while (G__82905__i < G__82905__a.length) {G__82905__a[G__82905__i] = arguments[G__82905__i + 3]; ++G__82905__i;}
  args = new cljs.core.IndexedSeq(G__82905__a,0);
} 
return G__82904__delegate.call(this,x,y,z,args);};
G__82904.cljs$lang$maxFixedArity = 3;
G__82904.cljs$lang$applyTo = (function (arglist__82906){
var x = cljs.core.first(arglist__82906);
arglist__82906 = cljs.core.next(arglist__82906);
var y = cljs.core.first(arglist__82906);
arglist__82906 = cljs.core.next(arglist__82906);
var z = cljs.core.first(arglist__82906);
var args = cljs.core.rest(arglist__82906);
return G__82904__delegate(x,y,z,args);
});
G__82904.cljs$core$IFn$_invoke$arity$variadic = G__82904__delegate;
return G__82904;
})()
;
G__82903 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__82903__0.call(this);
case 1:
return G__82903__1.call(this,x);
case 2:
return G__82903__2.call(this,x,y);
case 3:
return G__82903__3.call(this,x,y,z);
default:
var G__82907 = null;
if (arguments.length > 3) {
var G__82908__i = 0, G__82908__a = new Array(arguments.length -  3);
while (G__82908__i < G__82908__a.length) {G__82908__a[G__82908__i] = arguments[G__82908__i + 3]; ++G__82908__i;}
G__82907 = new cljs.core.IndexedSeq(G__82908__a,0);
}
return G__82903__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__82907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__82903.cljs$lang$maxFixedArity = 3;
G__82903.cljs$lang$applyTo = G__82903__4.cljs$lang$applyTo;
G__82903.cljs$core$IFn$_invoke$arity$0 = G__82903__0;
G__82903.cljs$core$IFn$_invoke$arity$1 = G__82903__1;
G__82903.cljs$core$IFn$_invoke$arity$2 = G__82903__2;
G__82903.cljs$core$IFn$_invoke$arity$3 = G__82903__3;
G__82903.cljs$core$IFn$_invoke$arity$variadic = G__82903__4.cljs$core$IFn$_invoke$arity$variadic;
return G__82903;
})()
});
var comp__4 = (function() { 
var G__82909__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__82910__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__82911 = cljs.core.first(fs__$2).call(null,ret);
var G__82912 = cljs.core.next(fs__$2);
ret = G__82911;
fs__$2 = G__82912;
continue;
} else {
return ret;
}
break;
}
};
var G__82910 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__82913__i = 0, G__82913__a = new Array(arguments.length -  0);
while (G__82913__i < G__82913__a.length) {G__82913__a[G__82913__i] = arguments[G__82913__i + 0]; ++G__82913__i;}
  args = new cljs.core.IndexedSeq(G__82913__a,0);
} 
return G__82910__delegate.call(this,args);};
G__82910.cljs$lang$maxFixedArity = 0;
G__82910.cljs$lang$applyTo = (function (arglist__82914){
var args = cljs.core.seq(arglist__82914);
return G__82910__delegate(args);
});
G__82910.cljs$core$IFn$_invoke$arity$variadic = G__82910__delegate;
return G__82910;
})()
;
;})(fs__$1))
};
var G__82909 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__82915__i = 0, G__82915__a = new Array(arguments.length -  3);
while (G__82915__i < G__82915__a.length) {G__82915__a[G__82915__i] = arguments[G__82915__i + 3]; ++G__82915__i;}
  fs = new cljs.core.IndexedSeq(G__82915__a,0);
} 
return G__82909__delegate.call(this,f1,f2,f3,fs);};
G__82909.cljs$lang$maxFixedArity = 3;
G__82909.cljs$lang$applyTo = (function (arglist__82916){
var f1 = cljs.core.first(arglist__82916);
arglist__82916 = cljs.core.next(arglist__82916);
var f2 = cljs.core.first(arglist__82916);
arglist__82916 = cljs.core.next(arglist__82916);
var f3 = cljs.core.first(arglist__82916);
var fs = cljs.core.rest(arglist__82916);
return G__82909__delegate(f1,f2,f3,fs);
});
G__82909.cljs$core$IFn$_invoke$arity$variadic = G__82909__delegate;
return G__82909;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__82917 = null;
if (arguments.length > 3) {
var G__82918__i = 0, G__82918__a = new Array(arguments.length -  3);
while (G__82918__i < G__82918__a.length) {G__82918__a[G__82918__i] = arguments[G__82918__i + 3]; ++G__82918__i;}
G__82917 = new cljs.core.IndexedSeq(G__82918__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__82917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__83003 = null;
var G__83003__0 = (function (){
var G__82961 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__82961) : f.call(null,G__82961));
});
var G__83003__1 = (function (x){
var G__82962 = arg1;
var G__82963 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__82962,G__82963) : f.call(null,G__82962,G__82963));
});
var G__83003__2 = (function (x,y){
var G__82964 = arg1;
var G__82965 = x;
var G__82966 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__82964,G__82965,G__82966) : f.call(null,G__82964,G__82965,G__82966));
});
var G__83003__3 = (function (x,y,z){
var G__82967 = arg1;
var G__82968 = x;
var G__82969 = y;
var G__82970 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__82967,G__82968,G__82969,G__82970) : f.call(null,G__82967,G__82968,G__82969,G__82970));
});
var G__83003__4 = (function() { 
var G__83004__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__83004 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83005__i = 0, G__83005__a = new Array(arguments.length -  3);
while (G__83005__i < G__83005__a.length) {G__83005__a[G__83005__i] = arguments[G__83005__i + 3]; ++G__83005__i;}
  args = new cljs.core.IndexedSeq(G__83005__a,0);
} 
return G__83004__delegate.call(this,x,y,z,args);};
G__83004.cljs$lang$maxFixedArity = 3;
G__83004.cljs$lang$applyTo = (function (arglist__83006){
var x = cljs.core.first(arglist__83006);
arglist__83006 = cljs.core.next(arglist__83006);
var y = cljs.core.first(arglist__83006);
arglist__83006 = cljs.core.next(arglist__83006);
var z = cljs.core.first(arglist__83006);
var args = cljs.core.rest(arglist__83006);
return G__83004__delegate(x,y,z,args);
});
G__83004.cljs$core$IFn$_invoke$arity$variadic = G__83004__delegate;
return G__83004;
})()
;
G__83003 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__83003__0.call(this);
case 1:
return G__83003__1.call(this,x);
case 2:
return G__83003__2.call(this,x,y);
case 3:
return G__83003__3.call(this,x,y,z);
default:
var G__83007 = null;
if (arguments.length > 3) {
var G__83008__i = 0, G__83008__a = new Array(arguments.length -  3);
while (G__83008__i < G__83008__a.length) {G__83008__a[G__83008__i] = arguments[G__83008__i + 3]; ++G__83008__i;}
G__83007 = new cljs.core.IndexedSeq(G__83008__a,0);
}
return G__83003__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83003.cljs$lang$maxFixedArity = 3;
G__83003.cljs$lang$applyTo = G__83003__4.cljs$lang$applyTo;
G__83003.cljs$core$IFn$_invoke$arity$0 = G__83003__0;
G__83003.cljs$core$IFn$_invoke$arity$1 = G__83003__1;
G__83003.cljs$core$IFn$_invoke$arity$2 = G__83003__2;
G__83003.cljs$core$IFn$_invoke$arity$3 = G__83003__3;
G__83003.cljs$core$IFn$_invoke$arity$variadic = G__83003__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83003;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__83009 = null;
var G__83009__0 = (function (){
var G__82971 = arg1;
var G__82972 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__82971,G__82972) : f.call(null,G__82971,G__82972));
});
var G__83009__1 = (function (x){
var G__82973 = arg1;
var G__82974 = arg2;
var G__82975 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__82973,G__82974,G__82975) : f.call(null,G__82973,G__82974,G__82975));
});
var G__83009__2 = (function (x,y){
var G__82976 = arg1;
var G__82977 = arg2;
var G__82978 = x;
var G__82979 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__82976,G__82977,G__82978,G__82979) : f.call(null,G__82976,G__82977,G__82978,G__82979));
});
var G__83009__3 = (function (x,y,z){
var G__82980 = arg1;
var G__82981 = arg2;
var G__82982 = x;
var G__82983 = y;
var G__82984 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__82980,G__82981,G__82982,G__82983,G__82984) : f.call(null,G__82980,G__82981,G__82982,G__82983,G__82984));
});
var G__83009__4 = (function() { 
var G__83010__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__83010 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83011__i = 0, G__83011__a = new Array(arguments.length -  3);
while (G__83011__i < G__83011__a.length) {G__83011__a[G__83011__i] = arguments[G__83011__i + 3]; ++G__83011__i;}
  args = new cljs.core.IndexedSeq(G__83011__a,0);
} 
return G__83010__delegate.call(this,x,y,z,args);};
G__83010.cljs$lang$maxFixedArity = 3;
G__83010.cljs$lang$applyTo = (function (arglist__83012){
var x = cljs.core.first(arglist__83012);
arglist__83012 = cljs.core.next(arglist__83012);
var y = cljs.core.first(arglist__83012);
arglist__83012 = cljs.core.next(arglist__83012);
var z = cljs.core.first(arglist__83012);
var args = cljs.core.rest(arglist__83012);
return G__83010__delegate(x,y,z,args);
});
G__83010.cljs$core$IFn$_invoke$arity$variadic = G__83010__delegate;
return G__83010;
})()
;
G__83009 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__83009__0.call(this);
case 1:
return G__83009__1.call(this,x);
case 2:
return G__83009__2.call(this,x,y);
case 3:
return G__83009__3.call(this,x,y,z);
default:
var G__83013 = null;
if (arguments.length > 3) {
var G__83014__i = 0, G__83014__a = new Array(arguments.length -  3);
while (G__83014__i < G__83014__a.length) {G__83014__a[G__83014__i] = arguments[G__83014__i + 3]; ++G__83014__i;}
G__83013 = new cljs.core.IndexedSeq(G__83014__a,0);
}
return G__83009__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83009.cljs$lang$maxFixedArity = 3;
G__83009.cljs$lang$applyTo = G__83009__4.cljs$lang$applyTo;
G__83009.cljs$core$IFn$_invoke$arity$0 = G__83009__0;
G__83009.cljs$core$IFn$_invoke$arity$1 = G__83009__1;
G__83009.cljs$core$IFn$_invoke$arity$2 = G__83009__2;
G__83009.cljs$core$IFn$_invoke$arity$3 = G__83009__3;
G__83009.cljs$core$IFn$_invoke$arity$variadic = G__83009__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83009;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__83015 = null;
var G__83015__0 = (function (){
var G__82985 = arg1;
var G__82986 = arg2;
var G__82987 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__82985,G__82986,G__82987) : f.call(null,G__82985,G__82986,G__82987));
});
var G__83015__1 = (function (x){
var G__82988 = arg1;
var G__82989 = arg2;
var G__82990 = arg3;
var G__82991 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__82988,G__82989,G__82990,G__82991) : f.call(null,G__82988,G__82989,G__82990,G__82991));
});
var G__83015__2 = (function (x,y){
var G__82992 = arg1;
var G__82993 = arg2;
var G__82994 = arg3;
var G__82995 = x;
var G__82996 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__82992,G__82993,G__82994,G__82995,G__82996) : f.call(null,G__82992,G__82993,G__82994,G__82995,G__82996));
});
var G__83015__3 = (function (x,y,z){
var G__82997 = arg1;
var G__82998 = arg2;
var G__82999 = arg3;
var G__83000 = x;
var G__83001 = y;
var G__83002 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__82997,G__82998,G__82999,G__83000,G__83001,G__83002) : f.call(null,G__82997,G__82998,G__82999,G__83000,G__83001,G__83002));
});
var G__83015__4 = (function() { 
var G__83016__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__83016 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83017__i = 0, G__83017__a = new Array(arguments.length -  3);
while (G__83017__i < G__83017__a.length) {G__83017__a[G__83017__i] = arguments[G__83017__i + 3]; ++G__83017__i;}
  args = new cljs.core.IndexedSeq(G__83017__a,0);
} 
return G__83016__delegate.call(this,x,y,z,args);};
G__83016.cljs$lang$maxFixedArity = 3;
G__83016.cljs$lang$applyTo = (function (arglist__83018){
var x = cljs.core.first(arglist__83018);
arglist__83018 = cljs.core.next(arglist__83018);
var y = cljs.core.first(arglist__83018);
arglist__83018 = cljs.core.next(arglist__83018);
var z = cljs.core.first(arglist__83018);
var args = cljs.core.rest(arglist__83018);
return G__83016__delegate(x,y,z,args);
});
G__83016.cljs$core$IFn$_invoke$arity$variadic = G__83016__delegate;
return G__83016;
})()
;
G__83015 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__83015__0.call(this);
case 1:
return G__83015__1.call(this,x);
case 2:
return G__83015__2.call(this,x,y);
case 3:
return G__83015__3.call(this,x,y,z);
default:
var G__83019 = null;
if (arguments.length > 3) {
var G__83020__i = 0, G__83020__a = new Array(arguments.length -  3);
while (G__83020__i < G__83020__a.length) {G__83020__a[G__83020__i] = arguments[G__83020__i + 3]; ++G__83020__i;}
G__83019 = new cljs.core.IndexedSeq(G__83020__a,0);
}
return G__83015__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83015.cljs$lang$maxFixedArity = 3;
G__83015.cljs$lang$applyTo = G__83015__4.cljs$lang$applyTo;
G__83015.cljs$core$IFn$_invoke$arity$0 = G__83015__0;
G__83015.cljs$core$IFn$_invoke$arity$1 = G__83015__1;
G__83015.cljs$core$IFn$_invoke$arity$2 = G__83015__2;
G__83015.cljs$core$IFn$_invoke$arity$3 = G__83015__3;
G__83015.cljs$core$IFn$_invoke$arity$variadic = G__83015__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83015;
})()
});
var partial__5 = (function() { 
var G__83021__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__83022__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__83022 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__83023__i = 0, G__83023__a = new Array(arguments.length -  0);
while (G__83023__i < G__83023__a.length) {G__83023__a[G__83023__i] = arguments[G__83023__i + 0]; ++G__83023__i;}
  args = new cljs.core.IndexedSeq(G__83023__a,0);
} 
return G__83022__delegate.call(this,args);};
G__83022.cljs$lang$maxFixedArity = 0;
G__83022.cljs$lang$applyTo = (function (arglist__83024){
var args = cljs.core.seq(arglist__83024);
return G__83022__delegate(args);
});
G__83022.cljs$core$IFn$_invoke$arity$variadic = G__83022__delegate;
return G__83022;
})()
;
};
var G__83021 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__83025__i = 0, G__83025__a = new Array(arguments.length -  4);
while (G__83025__i < G__83025__a.length) {G__83025__a[G__83025__i] = arguments[G__83025__i + 4]; ++G__83025__i;}
  more = new cljs.core.IndexedSeq(G__83025__a,0);
} 
return G__83021__delegate.call(this,f,arg1,arg2,arg3,more);};
G__83021.cljs$lang$maxFixedArity = 4;
G__83021.cljs$lang$applyTo = (function (arglist__83026){
var f = cljs.core.first(arglist__83026);
arglist__83026 = cljs.core.next(arglist__83026);
var arg1 = cljs.core.first(arglist__83026);
arglist__83026 = cljs.core.next(arglist__83026);
var arg2 = cljs.core.first(arglist__83026);
arglist__83026 = cljs.core.next(arglist__83026);
var arg3 = cljs.core.first(arglist__83026);
var more = cljs.core.rest(arglist__83026);
return G__83021__delegate(f,arg1,arg2,arg3,more);
});
G__83021.cljs$core$IFn$_invoke$arity$variadic = G__83021__delegate;
return G__83021;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__83027 = null;
if (arguments.length > 4) {
var G__83028__i = 0, G__83028__a = new Array(arguments.length -  4);
while (G__83028__i < G__83028__a.length) {G__83028__a[G__83028__i] = arguments[G__83028__i + 4]; ++G__83028__i;}
G__83027 = new cljs.core.IndexedSeq(G__83028__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__83027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__83061 = null;
var G__83061__1 = (function (a){
var G__83045 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__83045) : f.call(null,G__83045));
});
var G__83061__2 = (function (a,b){
var G__83046 = (((a == null))?x:a);
var G__83047 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83046,G__83047) : f.call(null,G__83046,G__83047));
});
var G__83061__3 = (function (a,b,c){
var G__83048 = (((a == null))?x:a);
var G__83049 = b;
var G__83050 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__83048,G__83049,G__83050) : f.call(null,G__83048,G__83049,G__83050));
});
var G__83061__4 = (function() { 
var G__83062__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__83062 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__83063__i = 0, G__83063__a = new Array(arguments.length -  3);
while (G__83063__i < G__83063__a.length) {G__83063__a[G__83063__i] = arguments[G__83063__i + 3]; ++G__83063__i;}
  ds = new cljs.core.IndexedSeq(G__83063__a,0);
} 
return G__83062__delegate.call(this,a,b,c,ds);};
G__83062.cljs$lang$maxFixedArity = 3;
G__83062.cljs$lang$applyTo = (function (arglist__83064){
var a = cljs.core.first(arglist__83064);
arglist__83064 = cljs.core.next(arglist__83064);
var b = cljs.core.first(arglist__83064);
arglist__83064 = cljs.core.next(arglist__83064);
var c = cljs.core.first(arglist__83064);
var ds = cljs.core.rest(arglist__83064);
return G__83062__delegate(a,b,c,ds);
});
G__83062.cljs$core$IFn$_invoke$arity$variadic = G__83062__delegate;
return G__83062;
})()
;
G__83061 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__83061__1.call(this,a);
case 2:
return G__83061__2.call(this,a,b);
case 3:
return G__83061__3.call(this,a,b,c);
default:
var G__83065 = null;
if (arguments.length > 3) {
var G__83066__i = 0, G__83066__a = new Array(arguments.length -  3);
while (G__83066__i < G__83066__a.length) {G__83066__a[G__83066__i] = arguments[G__83066__i + 3]; ++G__83066__i;}
G__83065 = new cljs.core.IndexedSeq(G__83066__a,0);
}
return G__83061__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__83065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83061.cljs$lang$maxFixedArity = 3;
G__83061.cljs$lang$applyTo = G__83061__4.cljs$lang$applyTo;
G__83061.cljs$core$IFn$_invoke$arity$1 = G__83061__1;
G__83061.cljs$core$IFn$_invoke$arity$2 = G__83061__2;
G__83061.cljs$core$IFn$_invoke$arity$3 = G__83061__3;
G__83061.cljs$core$IFn$_invoke$arity$variadic = G__83061__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83061;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__83067 = null;
var G__83067__2 = (function (a,b){
var G__83051 = (((a == null))?x:a);
var G__83052 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83051,G__83052) : f.call(null,G__83051,G__83052));
});
var G__83067__3 = (function (a,b,c){
var G__83053 = (((a == null))?x:a);
var G__83054 = (((b == null))?y:b);
var G__83055 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__83053,G__83054,G__83055) : f.call(null,G__83053,G__83054,G__83055));
});
var G__83067__4 = (function() { 
var G__83068__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__83068 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__83069__i = 0, G__83069__a = new Array(arguments.length -  3);
while (G__83069__i < G__83069__a.length) {G__83069__a[G__83069__i] = arguments[G__83069__i + 3]; ++G__83069__i;}
  ds = new cljs.core.IndexedSeq(G__83069__a,0);
} 
return G__83068__delegate.call(this,a,b,c,ds);};
G__83068.cljs$lang$maxFixedArity = 3;
G__83068.cljs$lang$applyTo = (function (arglist__83070){
var a = cljs.core.first(arglist__83070);
arglist__83070 = cljs.core.next(arglist__83070);
var b = cljs.core.first(arglist__83070);
arglist__83070 = cljs.core.next(arglist__83070);
var c = cljs.core.first(arglist__83070);
var ds = cljs.core.rest(arglist__83070);
return G__83068__delegate(a,b,c,ds);
});
G__83068.cljs$core$IFn$_invoke$arity$variadic = G__83068__delegate;
return G__83068;
})()
;
G__83067 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__83067__2.call(this,a,b);
case 3:
return G__83067__3.call(this,a,b,c);
default:
var G__83071 = null;
if (arguments.length > 3) {
var G__83072__i = 0, G__83072__a = new Array(arguments.length -  3);
while (G__83072__i < G__83072__a.length) {G__83072__a[G__83072__i] = arguments[G__83072__i + 3]; ++G__83072__i;}
G__83071 = new cljs.core.IndexedSeq(G__83072__a,0);
}
return G__83067__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__83071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83067.cljs$lang$maxFixedArity = 3;
G__83067.cljs$lang$applyTo = G__83067__4.cljs$lang$applyTo;
G__83067.cljs$core$IFn$_invoke$arity$2 = G__83067__2;
G__83067.cljs$core$IFn$_invoke$arity$3 = G__83067__3;
G__83067.cljs$core$IFn$_invoke$arity$variadic = G__83067__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83067;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__83073 = null;
var G__83073__2 = (function (a,b){
var G__83056 = (((a == null))?x:a);
var G__83057 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83056,G__83057) : f.call(null,G__83056,G__83057));
});
var G__83073__3 = (function (a,b,c){
var G__83058 = (((a == null))?x:a);
var G__83059 = (((b == null))?y:b);
var G__83060 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__83058,G__83059,G__83060) : f.call(null,G__83058,G__83059,G__83060));
});
var G__83073__4 = (function() { 
var G__83074__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__83074 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__83075__i = 0, G__83075__a = new Array(arguments.length -  3);
while (G__83075__i < G__83075__a.length) {G__83075__a[G__83075__i] = arguments[G__83075__i + 3]; ++G__83075__i;}
  ds = new cljs.core.IndexedSeq(G__83075__a,0);
} 
return G__83074__delegate.call(this,a,b,c,ds);};
G__83074.cljs$lang$maxFixedArity = 3;
G__83074.cljs$lang$applyTo = (function (arglist__83076){
var a = cljs.core.first(arglist__83076);
arglist__83076 = cljs.core.next(arglist__83076);
var b = cljs.core.first(arglist__83076);
arglist__83076 = cljs.core.next(arglist__83076);
var c = cljs.core.first(arglist__83076);
var ds = cljs.core.rest(arglist__83076);
return G__83074__delegate(a,b,c,ds);
});
G__83074.cljs$core$IFn$_invoke$arity$variadic = G__83074__delegate;
return G__83074;
})()
;
G__83073 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__83073__2.call(this,a,b);
case 3:
return G__83073__3.call(this,a,b,c);
default:
var G__83077 = null;
if (arguments.length > 3) {
var G__83078__i = 0, G__83078__a = new Array(arguments.length -  3);
while (G__83078__i < G__83078__a.length) {G__83078__a[G__83078__i] = arguments[G__83078__i + 3]; ++G__83078__i;}
G__83077 = new cljs.core.IndexedSeq(G__83078__a,0);
}
return G__83073__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__83077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83073.cljs$lang$maxFixedArity = 3;
G__83073.cljs$lang$applyTo = G__83073__4.cljs$lang$applyTo;
G__83073.cljs$core$IFn$_invoke$arity$2 = G__83073__2;
G__83073.cljs$core$IFn$_invoke$arity$3 = G__83073__3;
G__83073.cljs$core$IFn$_invoke$arity$variadic = G__83073__4.cljs$core$IFn$_invoke$arity$variadic;
return G__83073;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__83109 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__83109) : cljs.core.volatile_BANG_.call(null,G__83109));
})();
return ((function (i){
return (function() {
var G__83139 = null;
var G__83139__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__83139__1 = (function (result){
var G__83110 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__83110) : rf.call(null,G__83110));
});
var G__83139__2 = (function (result,input){
var G__83111 = result;
var G__83112 = (function (){var G__83113 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__83114 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83113,G__83114) : f.call(null,G__83113,G__83114));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__83111,G__83112) : rf.call(null,G__83111,G__83112));
});
G__83139 = function(result,input){
switch(arguments.length){
case 0:
return G__83139__0.call(this);
case 1:
return G__83139__1.call(this,result);
case 2:
return G__83139__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83139.cljs$core$IFn$_invoke$arity$0 = G__83139__0;
G__83139.cljs$core$IFn$_invoke$arity$1 = G__83139__1;
G__83139.cljs$core$IFn$_invoke$arity$2 = G__83139__2;
return G__83139;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___83140 = size;
var i_83141 = (0);
while(true){
if((i_83141 < n__4868__auto___83140)){
cljs.core.chunk_append(b,(function (){var G__83135 = (idx + i_83141);
var G__83136 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_83141);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83135,G__83136) : f.call(null,G__83135,G__83136));
})());

var G__83142 = (i_83141 + (1));
i_83141 = G__83142;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__83137 = idx;
var G__83138 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83137,G__83138) : f.call(null,G__83137,G__83138));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__83161 = null;
var G__83161__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__83161__1 = (function (result){
var G__83155 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__83155) : rf.call(null,G__83155));
});
var G__83161__2 = (function (result,input){
var v = (function (){var G__83156 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__83156) : f.call(null,G__83156));
})();
if((v == null)){
return result;
} else {
var G__83157 = result;
var G__83158 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__83157,G__83158) : rf.call(null,G__83157,G__83158));
}
});
G__83161 = function(result,input){
switch(arguments.length){
case 0:
return G__83161__0.call(this);
case 1:
return G__83161__1.call(this,result);
case 2:
return G__83161__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83161.cljs$core$IFn$_invoke$arity$0 = G__83161__0;
G__83161.cljs$core$IFn$_invoke$arity$1 = G__83161__1;
G__83161.cljs$core$IFn$_invoke$arity$2 = G__83161__2;
return G__83161;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___83162 = size;
var i_83163 = (0);
while(true){
if((i_83163 < n__4868__auto___83162)){
var x_83164 = (function (){var G__83159 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_83163);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__83159) : f.call(null,G__83159));
})();
if((x_83164 == null)){
} else {
cljs.core.chunk_append(b,x_83164);
}

var G__83165 = (i_83163 + (1));
i_83163 = G__83165;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__83160 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__83160) : f.call(null,G__83160));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__83166 = this$__$1;
return goog.getUid(G__83166);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__83167 = cljs.core.seq(self__.watches);
var chunk__83168 = null;
var count__83169 = (0);
var i__83170 = (0);
while(true){
if((i__83170 < count__83169)){
var vec__83171 = chunk__83168.cljs$core$IIndexed$_nth$arity$2(null,i__83170);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83171,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83171,(1),null);
var G__83172_83181 = key;
var G__83173_83182 = this$__$1;
var G__83174_83183 = oldval;
var G__83175_83184 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__83172_83181,G__83173_83182,G__83174_83183,G__83175_83184) : f.call(null,G__83172_83181,G__83173_83182,G__83174_83183,G__83175_83184));

var G__83185 = seq__83167;
var G__83186 = chunk__83168;
var G__83187 = count__83169;
var G__83188 = (i__83170 + (1));
seq__83167 = G__83185;
chunk__83168 = G__83186;
count__83169 = G__83187;
i__83170 = G__83188;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__83167);
if(temp__4126__auto__){
var seq__83167__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__83167__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__83167__$1);
var G__83189 = cljs.core.chunk_rest(seq__83167__$1);
var G__83190 = c__4768__auto__;
var G__83191 = cljs.core.count(c__4768__auto__);
var G__83192 = (0);
seq__83167 = G__83189;
chunk__83168 = G__83190;
count__83169 = G__83191;
i__83170 = G__83192;
continue;
} else {
var vec__83176 = cljs.core.first(seq__83167__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83176,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83176,(1),null);
var G__83177_83193 = key;
var G__83178_83194 = this$__$1;
var G__83179_83195 = oldval;
var G__83180_83196 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__83177_83193,G__83178_83194,G__83179_83195,G__83180_83196) : f.call(null,G__83177_83193,G__83178_83194,G__83179_83195,G__83180_83196));

var G__83197 = cljs.core.next(seq__83167__$1);
var G__83198 = null;
var G__83199 = (0);
var G__83200 = (0);
seq__83167 = G__83197;
chunk__83168 = G__83198;
count__83169 = G__83199;
i__83170 = G__83200;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__83204__delegate = function (x,p__83201){
var map__83203 = p__83201;
var map__83203__$1 = ((cljs.core.seq_QMARK_(map__83203))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__83203):map__83203);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__83203__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__83203__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__83204 = function (x,var_args){
var p__83201 = null;
if (arguments.length > 1) {
var G__83205__i = 0, G__83205__a = new Array(arguments.length -  1);
while (G__83205__i < G__83205__a.length) {G__83205__a[G__83205__i] = arguments[G__83205__i + 1]; ++G__83205__i;}
  p__83201 = new cljs.core.IndexedSeq(G__83205__a,0);
} 
return G__83204__delegate.call(this,x,p__83201);};
G__83204.cljs$lang$maxFixedArity = 1;
G__83204.cljs$lang$applyTo = (function (arglist__83206){
var x = cljs.core.first(arglist__83206);
var p__83201 = cljs.core.rest(arglist__83206);
return G__83204__delegate(x,p__83201);
});
G__83204.cljs$core$IFn$_invoke$arity$variadic = G__83204__delegate;
return G__83204;
})()
;
atom = function(x,var_args){
var p__83201 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__83207 = null;
if (arguments.length > 1) {
var G__83208__i = 0, G__83208__a = new Array(arguments.length -  1);
while (G__83208__i < G__83208__a.length) {G__83208__a[G__83208__i] = arguments[G__83208__i + 1]; ++G__83208__i;}
G__83207 = new cljs.core.IndexedSeq(G__83208__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__83207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__83211 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__83211) : validate.call(null,G__83211));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__83212 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__83212) : cljs.core.pr_str.call(null,G__83212));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__83219 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__83219) : f.call(null,G__83219));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__83220 = a.state;
var G__83221 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83220,G__83221) : f.call(null,G__83220,G__83221));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__83222 = a.state;
var G__83223 = x;
var G__83224 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__83222,G__83223,G__83224) : f.call(null,G__83222,G__83223,G__83224));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__83225__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__83225 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__83226__i = 0, G__83226__a = new Array(arguments.length -  4);
while (G__83226__i < G__83226__a.length) {G__83226__a[G__83226__i] = arguments[G__83226__i + 4]; ++G__83226__i;}
  more = new cljs.core.IndexedSeq(G__83226__a,0);
} 
return G__83225__delegate.call(this,a,f,x,y,more);};
G__83225.cljs$lang$maxFixedArity = 4;
G__83225.cljs$lang$applyTo = (function (arglist__83227){
var a = cljs.core.first(arglist__83227);
arglist__83227 = cljs.core.next(arglist__83227);
var f = cljs.core.first(arglist__83227);
arglist__83227 = cljs.core.next(arglist__83227);
var x = cljs.core.first(arglist__83227);
arglist__83227 = cljs.core.next(arglist__83227);
var y = cljs.core.first(arglist__83227);
var more = cljs.core.rest(arglist__83227);
return G__83225__delegate(a,f,x,y,more);
});
G__83225.cljs$core$IFn$_invoke$arity$variadic = G__83225__delegate;
return G__83225;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__83228 = null;
if (arguments.length > 4) {
var G__83229__i = 0, G__83229__a = new Array(arguments.length -  4);
while (G__83229__i < G__83229__a.length) {G__83229__a[G__83229__i] = arguments[G__83229__i + 4]; ++G__83229__i;}
G__83228 = new cljs.core.IndexedSeq(G__83229__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__83228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__83296 = null;
var G__83296__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__83296__1 = (function (result){
var G__83263 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__83263) : rf.call(null,G__83263));
});
var G__83296__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__83264 = i;
var G__83265 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83264,G__83265) : f.call(null,G__83264,G__83265));
})();
if((v == null)){
return result;
} else {
var G__83266 = result;
var G__83267 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__83266,G__83267) : rf.call(null,G__83266,G__83267));
}
});
G__83296 = function(result,input){
switch(arguments.length){
case 0:
return G__83296__0.call(this);
case 1:
return G__83296__1.call(this,result);
case 2:
return G__83296__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__83296.cljs$core$IFn$_invoke$arity$0 = G__83296__0;
G__83296.cljs$core$IFn$_invoke$arity$1 = G__83296__1;
G__83296.cljs$core$IFn$_invoke$arity$2 = G__83296__2;
return G__83296;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___83297 = size;
var i_83298 = (0);
while(true){
if((i_83298 < n__4868__auto___83297)){
var x_83299 = (function (){var G__83292 = (idx + i_83298);
var G__83293 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_83298);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83292,G__83293) : f.call(null,G__83292,G__83293));
})();
if((x_83299 == null)){
} else {
cljs.core.chunk_append(b,x_83299);
}

var G__83300 = (i_83298 + (1));
i_83298 = G__83300;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__83294 = idx;
var G__83295 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__83294,G__83295) : f.call(null,G__83294,G__83295));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__83514 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83514) : p.call(null,G__83514));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83516 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83516) : p.call(null,G__83516));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__83517 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83517) : p.call(null,G__83517));
} else {
return and__3969__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83519 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83519) : p.call(null,G__83519));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83521 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83521) : p.call(null,G__83521));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__83522 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83522) : p.call(null,G__83522));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__83691__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__83691 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83692__i = 0, G__83692__a = new Array(arguments.length -  3);
while (G__83692__i < G__83692__a.length) {G__83692__a[G__83692__i] = arguments[G__83692__i + 3]; ++G__83692__i;}
  args = new cljs.core.IndexedSeq(G__83692__a,0);
} 
return G__83691__delegate.call(this,x,y,z,args);};
G__83691.cljs$lang$maxFixedArity = 3;
G__83691.cljs$lang$applyTo = (function (arglist__83693){
var x = cljs.core.first(arglist__83693);
arglist__83693 = cljs.core.next(arglist__83693);
var y = cljs.core.first(arglist__83693);
arglist__83693 = cljs.core.next(arglist__83693);
var z = cljs.core.first(arglist__83693);
var args = cljs.core.rest(arglist__83693);
return G__83691__delegate(x,y,z,args);
});
G__83691.cljs$core$IFn$_invoke$arity$variadic = G__83691__delegate;
return G__83691;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__83694 = null;
if (arguments.length > 3) {
var G__83695__i = 0, G__83695__a = new Array(arguments.length -  3);
while (G__83695__i < G__83695__a.length) {G__83695__a[G__83695__i] = arguments[G__83695__i + 3]; ++G__83695__i;}
G__83694 = new cljs.core.IndexedSeq(G__83695__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83554 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83554) : p1.call(null,G__83554));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__83555 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83555) : p2.call(null,G__83555));
} else {
return and__3969__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83557 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83557) : p1.call(null,G__83557));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83559 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83559) : p1.call(null,G__83559));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__83561 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83561) : p2.call(null,G__83561));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var G__83562 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83562) : p2.call(null,G__83562));
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83564 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83564) : p1.call(null,G__83564));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83566 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83566) : p1.call(null,G__83566));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__83568 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83568) : p1.call(null,G__83568));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__83570 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83570) : p2.call(null,G__83570));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__83572 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83572) : p2.call(null,G__83572));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__83573 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83573) : p2.call(null,G__83573));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__83696__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__83301_SHARP_){
var and__3969__auto__ = (function (){var G__83578 = p1__83301_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83578) : p1.call(null,G__83578));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__83579 = p1__83301_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83579) : p2.call(null,G__83579));
} else {
return and__3969__auto__;
}
}),args)));
};
var G__83696 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83697__i = 0, G__83697__a = new Array(arguments.length -  3);
while (G__83697__i < G__83697__a.length) {G__83697__a[G__83697__i] = arguments[G__83697__i + 3]; ++G__83697__i;}
  args = new cljs.core.IndexedSeq(G__83697__a,0);
} 
return G__83696__delegate.call(this,x,y,z,args);};
G__83696.cljs$lang$maxFixedArity = 3;
G__83696.cljs$lang$applyTo = (function (arglist__83698){
var x = cljs.core.first(arglist__83698);
arglist__83698 = cljs.core.next(arglist__83698);
var y = cljs.core.first(arglist__83698);
arglist__83698 = cljs.core.next(arglist__83698);
var z = cljs.core.first(arglist__83698);
var args = cljs.core.rest(arglist__83698);
return G__83696__delegate(x,y,z,args);
});
G__83696.cljs$core$IFn$_invoke$arity$variadic = G__83696__delegate;
return G__83696;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__83699 = null;
if (arguments.length > 3) {
var G__83700__i = 0, G__83700__a = new Array(arguments.length -  3);
while (G__83700__i < G__83700__a.length) {G__83700__a[G__83700__i] = arguments[G__83700__i + 3]; ++G__83700__i;}
G__83699 = new cljs.core.IndexedSeq(G__83700__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83625 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83625) : p1.call(null,G__83625));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83627 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83627) : p2.call(null,G__83627));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__83628 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83628) : p3.call(null,G__83628));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83630 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83630) : p1.call(null,G__83630));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83632 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83632) : p2.call(null,G__83632));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__83634 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83634) : p3.call(null,G__83634));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__83636 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83636) : p1.call(null,G__83636));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__83638 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83638) : p2.call(null,G__83638));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__83639 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83639) : p3.call(null,G__83639));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__83641 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83641) : p1.call(null,G__83641));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83643 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83643) : p2.call(null,G__83643));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__83645 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83645) : p3.call(null,G__83645));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__83647 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83647) : p1.call(null,G__83647));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__83649 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83649) : p2.call(null,G__83649));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var and__3969__auto____$5 = (function (){var G__83651 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83651) : p3.call(null,G__83651));
})();
if(cljs.core.truth_(and__3969__auto____$5)){
var and__3969__auto____$6 = (function (){var G__83653 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83653) : p1.call(null,G__83653));
})();
if(cljs.core.truth_(and__3969__auto____$6)){
var and__3969__auto____$7 = (function (){var G__83655 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83655) : p2.call(null,G__83655));
})();
if(cljs.core.truth_(and__3969__auto____$7)){
var G__83656 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83656) : p3.call(null,G__83656));
} else {
return and__3969__auto____$7;
}
} else {
return and__3969__auto____$6;
}
} else {
return and__3969__auto____$5;
}
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__83701__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__83302_SHARP_){
var and__3969__auto__ = (function (){var G__83663 = p1__83302_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83663) : p1.call(null,G__83663));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83665 = p1__83302_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83665) : p2.call(null,G__83665));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__83666 = p1__83302_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__83666) : p3.call(null,G__83666));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}),args)));
};
var G__83701 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83702__i = 0, G__83702__a = new Array(arguments.length -  3);
while (G__83702__i < G__83702__a.length) {G__83702__a[G__83702__i] = arguments[G__83702__i + 3]; ++G__83702__i;}
  args = new cljs.core.IndexedSeq(G__83702__a,0);
} 
return G__83701__delegate.call(this,x,y,z,args);};
G__83701.cljs$lang$maxFixedArity = 3;
G__83701.cljs$lang$applyTo = (function (arglist__83703){
var x = cljs.core.first(arglist__83703);
arglist__83703 = cljs.core.next(arglist__83703);
var y = cljs.core.first(arglist__83703);
arglist__83703 = cljs.core.next(arglist__83703);
var z = cljs.core.first(arglist__83703);
var args = cljs.core.rest(arglist__83703);
return G__83701__delegate(x,y,z,args);
});
G__83701.cljs$core$IFn$_invoke$arity$variadic = G__83701__delegate;
return G__83701;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__83704 = null;
if (arguments.length > 3) {
var G__83705__i = 0, G__83705__a = new Array(arguments.length -  3);
while (G__83705__i < G__83705__a.length) {G__83705__a[G__83705__i] = arguments[G__83705__i + 3]; ++G__83705__i;}
G__83704 = new cljs.core.IndexedSeq(G__83705__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__83706__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__83303_SHARP_){
var G__83682 = x;
return (p1__83303_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83303_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83682) : p1__83303_SHARP_.call(null,G__83682));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__83304_SHARP_){
var and__3969__auto__ = (function (){var G__83684 = x;
return (p1__83304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83304_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83684) : p1__83304_SHARP_.call(null,G__83684));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__83685 = y;
return (p1__83304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83304_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83685) : p1__83304_SHARP_.call(null,G__83685));
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__83305_SHARP_){
var and__3969__auto__ = (function (){var G__83687 = x;
return (p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83687) : p1__83305_SHARP_.call(null,G__83687));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__83689 = y;
return (p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83689) : p1__83305_SHARP_.call(null,G__83689));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__83690 = z;
return (p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83305_SHARP_.cljs$core$IFn$_invoke$arity$1(G__83690) : p1__83305_SHARP_.call(null,G__83690));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__83707__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__83306_SHARP_){
return cljs.core.every_QMARK_(p1__83306_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__83707 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__83708__i = 0, G__83708__a = new Array(arguments.length -  3);
while (G__83708__i < G__83708__a.length) {G__83708__a[G__83708__i] = arguments[G__83708__i + 3]; ++G__83708__i;}
  args = new cljs.core.IndexedSeq(G__83708__a,0);
} 
return G__83707__delegate.call(this,x,y,z,args);};
G__83707.cljs$lang$maxFixedArity = 3;
G__83707.cljs$lang$applyTo = (function (arglist__83709){
var x = cljs.core.first(arglist__83709);
arglist__83709 = cljs.core.next(arglist__83709);
var y = cljs.core.first(arglist__83709);
arglist__83709 = cljs.core.next(arglist__83709);
var z = cljs.core.first(arglist__83709);
var args = cljs.core.rest(arglist__83709);
return G__83707__delegate(x,y,z,args);
});
G__83707.cljs$core$IFn$_invoke$arity$variadic = G__83707__delegate;
return G__83707;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__83710 = null;
if (arguments.length > 3) {
var G__83711__i = 0, G__83711__a = new Array(arguments.length -  3);
while (G__83711__i < G__83711__a.length) {G__83711__a[G__83711__i] = arguments[G__83711__i + 3]; ++G__83711__i;}
G__83710 = new cljs.core.IndexedSeq(G__83711__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__83710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__83706 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__83712__i = 0, G__83712__a = new Array(arguments.length -  3);
while (G__83712__i < G__83712__a.length) {G__83712__a[G__83712__i] = arguments[G__83712__i + 3]; ++G__83712__i;}
  ps = new cljs.core.IndexedSeq(G__83712__a,0);
} 
return G__83706__delegate.call(this,p1,p2,p3,ps);};
G__83706.cljs$lang$maxFixedArity = 3;
G__83706.cljs$lang$applyTo = (function (arglist__83713){
var p1 = cljs.core.first(arglist__83713);
arglist__83713 = cljs.core.next(arglist__83713);
var p2 = cljs.core.first(arglist__83713);
arglist__83713 = cljs.core.next(arglist__83713);
var p3 = cljs.core.first(arglist__83713);
var ps = cljs.core.rest(arglist__83713);
return G__83706__delegate(p1,p2,p3,ps);
});
G__83706.cljs$core$IFn$_invoke$arity$variadic = G__83706__delegate;
return G__83706;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__83714 = null;
if (arguments.length > 3) {
var G__83715__i = 0, G__83715__a = new Array(arguments.length -  3);
while (G__83715__i < G__83715__a.length) {G__83715__a[G__83715__i] = arguments[G__83715__i + 3]; ++G__83715__i;}
G__83714 = new cljs.core.IndexedSeq(G__83715__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__83714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__83921 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83921) : p.call(null,G__83921));
});
var sp1__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__83923 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83923) : p.call(null,G__83923));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__83924 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83924) : p.call(null,G__83924));
}
});
var sp1__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__83926 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83926) : p.call(null,G__83926));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__83928 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83928) : p.call(null,G__83928));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__83929 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__83929) : p.call(null,G__83929));
}
}
});
var sp1__4 = (function() { 
var G__84090__delegate = function (x,y,z,args){
var or__3981__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__84090 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__84091__i = 0, G__84091__a = new Array(arguments.length -  3);
while (G__84091__i < G__84091__a.length) {G__84091__a[G__84091__i] = arguments[G__84091__i + 3]; ++G__84091__i;}
  args = new cljs.core.IndexedSeq(G__84091__a,0);
} 
return G__84090__delegate.call(this,x,y,z,args);};
G__84090.cljs$lang$maxFixedArity = 3;
G__84090.cljs$lang$applyTo = (function (arglist__84092){
var x = cljs.core.first(arglist__84092);
arglist__84092 = cljs.core.next(arglist__84092);
var y = cljs.core.first(arglist__84092);
arglist__84092 = cljs.core.next(arglist__84092);
var z = cljs.core.first(arglist__84092);
var args = cljs.core.rest(arglist__84092);
return G__84090__delegate(x,y,z,args);
});
G__84090.cljs$core$IFn$_invoke$arity$variadic = G__84090__delegate;
return G__84090;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__84093 = null;
if (arguments.length > 3) {
var G__84094__i = 0, G__84094__a = new Array(arguments.length -  3);
while (G__84094__i < G__84094__a.length) {G__84094__a[G__84094__i] = arguments[G__84094__i + 3]; ++G__84094__i;}
G__84093 = new cljs.core.IndexedSeq(G__84094__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__84093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3981__auto__ = (function (){var G__83961 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83961) : p1.call(null,G__83961));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__83962 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83962) : p2.call(null,G__83962));
}
});
var sp2__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__83964 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83964) : p1.call(null,G__83964));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__83966 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83966) : p1.call(null,G__83966));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__83968 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83968) : p2.call(null,G__83968));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__83969 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83969) : p2.call(null,G__83969));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__83971 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83971) : p1.call(null,G__83971));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__83973 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83973) : p1.call(null,G__83973));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__83975 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83975) : p1.call(null,G__83975));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__83977 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83977) : p2.call(null,G__83977));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__83979 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83979) : p2.call(null,G__83979));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__83980 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83980) : p2.call(null,G__83980));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__84095__delegate = function (x,y,z,args){
var or__3981__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__83716_SHARP_){
var or__3981__auto____$1 = (function (){var G__83982 = p1__83716_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__83982) : p1.call(null,G__83982));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__83983 = p1__83716_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__83983) : p2.call(null,G__83983));
}
});})(or__3981__auto__))
,args);
}
};
var G__84095 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__84096__i = 0, G__84096__a = new Array(arguments.length -  3);
while (G__84096__i < G__84096__a.length) {G__84096__a[G__84096__i] = arguments[G__84096__i + 3]; ++G__84096__i;}
  args = new cljs.core.IndexedSeq(G__84096__a,0);
} 
return G__84095__delegate.call(this,x,y,z,args);};
G__84095.cljs$lang$maxFixedArity = 3;
G__84095.cljs$lang$applyTo = (function (arglist__84097){
var x = cljs.core.first(arglist__84097);
arglist__84097 = cljs.core.next(arglist__84097);
var y = cljs.core.first(arglist__84097);
arglist__84097 = cljs.core.next(arglist__84097);
var z = cljs.core.first(arglist__84097);
var args = cljs.core.rest(arglist__84097);
return G__84095__delegate(x,y,z,args);
});
G__84095.cljs$core$IFn$_invoke$arity$variadic = G__84095__delegate;
return G__84095;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__84098 = null;
if (arguments.length > 3) {
var G__84099__i = 0, G__84099__a = new Array(arguments.length -  3);
while (G__84099__i < G__84099__a.length) {G__84099__a[G__84099__i] = arguments[G__84099__i + 3]; ++G__84099__i;}
G__84098 = new cljs.core.IndexedSeq(G__84099__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__84098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3981__auto__ = (function (){var G__84029 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84029) : p1.call(null,G__84029));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__84031 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84031) : p2.call(null,G__84031));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__84032 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84032) : p3.call(null,G__84032));
}
}
});
var sp3__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__84034 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84034) : p1.call(null,G__84034));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__84036 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84036) : p2.call(null,G__84036));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__84038 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84038) : p3.call(null,G__84038));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__84040 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84040) : p1.call(null,G__84040));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__84042 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84042) : p2.call(null,G__84042));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__84043 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84043) : p3.call(null,G__84043));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__84045 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84045) : p1.call(null,G__84045));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__84047 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84047) : p2.call(null,G__84047));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__84049 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84049) : p3.call(null,G__84049));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__84051 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84051) : p1.call(null,G__84051));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__84053 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84053) : p2.call(null,G__84053));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var or__3981__auto____$5 = (function (){var G__84055 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84055) : p3.call(null,G__84055));
})();
if(cljs.core.truth_(or__3981__auto____$5)){
return or__3981__auto____$5;
} else {
var or__3981__auto____$6 = (function (){var G__84057 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84057) : p1.call(null,G__84057));
})();
if(cljs.core.truth_(or__3981__auto____$6)){
return or__3981__auto____$6;
} else {
var or__3981__auto____$7 = (function (){var G__84059 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84059) : p2.call(null,G__84059));
})();
if(cljs.core.truth_(or__3981__auto____$7)){
return or__3981__auto____$7;
} else {
var G__84060 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84060) : p3.call(null,G__84060));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__84100__delegate = function (x,y,z,args){
var or__3981__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__83717_SHARP_){
var or__3981__auto____$1 = (function (){var G__84062 = p1__83717_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__84062) : p1.call(null,G__84062));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__84064 = p1__83717_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__84064) : p2.call(null,G__84064));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__84065 = p1__83717_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__84065) : p3.call(null,G__84065));
}
}
});})(or__3981__auto__))
,args);
}
};
var G__84100 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__84101__i = 0, G__84101__a = new Array(arguments.length -  3);
while (G__84101__i < G__84101__a.length) {G__84101__a[G__84101__i] = arguments[G__84101__i + 3]; ++G__84101__i;}
  args = new cljs.core.IndexedSeq(G__84101__a,0);
} 
return G__84100__delegate.call(this,x,y,z,args);};
G__84100.cljs$lang$maxFixedArity = 3;
G__84100.cljs$lang$applyTo = (function (arglist__84102){
var x = cljs.core.first(arglist__84102);
arglist__84102 = cljs.core.next(arglist__84102);
var y = cljs.core.first(arglist__84102);
arglist__84102 = cljs.core.next(arglist__84102);
var z = cljs.core.first(arglist__84102);
var args = cljs.core.rest(arglist__84102);
return G__84100__delegate(x,y,z,args);
});
G__84100.cljs$core$IFn$_invoke$arity$variadic = G__84100__delegate;
return G__84100;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__84103 = null;
if (arguments.length > 3) {
var G__84104__i = 0, G__84104__a = new Array(arguments.length -  3);
while (G__84104__i < G__84104__a.length) {G__84104__a[G__84104__i] = arguments[G__84104__i + 3]; ++G__84104__i;}
G__84103 = new cljs.core.IndexedSeq(G__84104__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__84103);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__84105__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__83718_SHARP_){
var G__84081 = x;
return (p1__83718_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83718_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84081) : p1__83718_SHARP_.call(null,G__84081));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__83719_SHARP_){
var or__3981__auto__ = (function (){var G__84083 = x;
return (p1__83719_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83719_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84083) : p1__83719_SHARP_.call(null,G__84083));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__84084 = y;
return (p1__83719_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83719_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84084) : p1__83719_SHARP_.call(null,G__84084));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__83720_SHARP_){
var or__3981__auto__ = (function (){var G__84086 = x;
return (p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84086) : p1__83720_SHARP_.call(null,G__84086));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__84088 = y;
return (p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84088) : p1__83720_SHARP_.call(null,G__84088));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__84089 = z;
return (p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__83720_SHARP_.cljs$core$IFn$_invoke$arity$1(G__84089) : p1__83720_SHARP_.call(null,G__84089));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__84106__delegate = function (x,y,z,args){
var or__3981__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__,ps__$1){
return (function (p1__83721_SHARP_){
return cljs.core.some(p1__83721_SHARP_,args);
});})(or__3981__auto__,ps__$1))
,ps__$1);
}
};
var G__84106 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__84107__i = 0, G__84107__a = new Array(arguments.length -  3);
while (G__84107__i < G__84107__a.length) {G__84107__a[G__84107__i] = arguments[G__84107__i + 3]; ++G__84107__i;}
  args = new cljs.core.IndexedSeq(G__84107__a,0);
} 
return G__84106__delegate.call(this,x,y,z,args);};
G__84106.cljs$lang$maxFixedArity = 3;
G__84106.cljs$lang$applyTo = (function (arglist__84108){
var x = cljs.core.first(arglist__84108);
arglist__84108 = cljs.core.next(arglist__84108);
var y = cljs.core.first(arglist__84108);
arglist__84108 = cljs.core.next(arglist__84108);
var z = cljs.core.first(arglist__84108);
var args = cljs.core.rest(arglist__84108);
return G__84106__delegate(x,y,z,args);
});
G__84106.cljs$core$IFn$_invoke$arity$variadic = G__84106__delegate;
return G__84106;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__84109 = null;
if (arguments.length > 3) {
var G__84110__i = 0, G__84110__a = new Array(arguments.length -  3);
while (G__84110__i < G__84110__a.length) {G__84110__a[G__84110__i] = arguments[G__84110__i + 3]; ++G__84110__i;}
G__84109 = new cljs.core.IndexedSeq(G__84110__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__84109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__84105 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__84111__i = 0, G__84111__a = new Array(arguments.length -  3);
while (G__84111__i < G__84111__a.length) {G__84111__a[G__84111__i] = arguments[G__84111__i + 3]; ++G__84111__i;}
  ps = new cljs.core.IndexedSeq(G__84111__a,0);
} 
return G__84105__delegate.call(this,p1,p2,p3,ps);};
G__84105.cljs$lang$maxFixedArity = 3;
G__84105.cljs$lang$applyTo = (function (arglist__84112){
var p1 = cljs.core.first(arglist__84112);
arglist__84112 = cljs.core.next(arglist__84112);
var p2 = cljs.core.first(arglist__84112);
arglist__84112 = cljs.core.next(arglist__84112);
var p3 = cljs.core.first(arglist__84112);
var ps = cljs.core.rest(arglist__84112);
return G__84105__delegate(p1,p2,p3,ps);
});
G__84105.cljs$core$IFn$_invoke$arity$variadic = G__84105__delegate;
return G__84105;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__84113 = null;
if (arguments.length > 3) {
var G__84114__i = 0, G__84114__a = new Array(arguments.length -  3);
while (G__84114__i < G__84114__a.length) {G__84114__a[G__84114__i] = arguments[G__84114__i + 3]; ++G__84114__i;}
G__84113 = new cljs.core.IndexedSeq(G__84114__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__84113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__84169 = null;
var G__84169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84169__1 = (function (result){
var G__84155 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84155) : rf.call(null,G__84155));
});
var G__84169__2 = (function (result,input){
var G__84156 = result;
var G__84157 = (function (){var G__84158 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84158) : f.call(null,G__84158));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84156,G__84157) : rf.call(null,G__84156,G__84157));
});
var G__84169__3 = (function() { 
var G__84170__delegate = function (result,input,inputs){
var G__84159 = result;
var G__84160 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84159,G__84160) : rf.call(null,G__84159,G__84160));
};
var G__84170 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__84171__i = 0, G__84171__a = new Array(arguments.length -  2);
while (G__84171__i < G__84171__a.length) {G__84171__a[G__84171__i] = arguments[G__84171__i + 2]; ++G__84171__i;}
  inputs = new cljs.core.IndexedSeq(G__84171__a,0);
} 
return G__84170__delegate.call(this,result,input,inputs);};
G__84170.cljs$lang$maxFixedArity = 2;
G__84170.cljs$lang$applyTo = (function (arglist__84172){
var result = cljs.core.first(arglist__84172);
arglist__84172 = cljs.core.next(arglist__84172);
var input = cljs.core.first(arglist__84172);
var inputs = cljs.core.rest(arglist__84172);
return G__84170__delegate(result,input,inputs);
});
G__84170.cljs$core$IFn$_invoke$arity$variadic = G__84170__delegate;
return G__84170;
})()
;
G__84169 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__84169__0.call(this);
case 1:
return G__84169__1.call(this,result);
case 2:
return G__84169__2.call(this,result,input);
default:
var G__84173 = null;
if (arguments.length > 2) {
var G__84174__i = 0, G__84174__a = new Array(arguments.length -  2);
while (G__84174__i < G__84174__a.length) {G__84174__a[G__84174__i] = arguments[G__84174__i + 2]; ++G__84174__i;}
G__84173 = new cljs.core.IndexedSeq(G__84174__a,0);
}
return G__84169__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__84173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84169.cljs$lang$maxFixedArity = 2;
G__84169.cljs$lang$applyTo = G__84169__3.cljs$lang$applyTo;
G__84169.cljs$core$IFn$_invoke$arity$0 = G__84169__0;
G__84169.cljs$core$IFn$_invoke$arity$1 = G__84169__1;
G__84169.cljs$core$IFn$_invoke$arity$2 = G__84169__2;
G__84169.cljs$core$IFn$_invoke$arity$variadic = G__84169__3.cljs$core$IFn$_invoke$arity$variadic;
return G__84169;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___84175 = size;
var i_84176 = (0);
while(true){
if((i_84176 < n__4868__auto___84175)){
cljs.core.chunk_append(b,(function (){var G__84161 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_84176);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84161) : f.call(null,G__84161));
})());

var G__84177 = (i_84176 + (1));
i_84176 = G__84177;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__84162 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84162) : f.call(null,G__84162));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__84163 = cljs.core.first(s1);
var G__84164 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84163,G__84164) : f.call(null,G__84163,G__84164));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__84165 = cljs.core.first(s1);
var G__84166 = cljs.core.first(s2);
var G__84167 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84165,G__84166,G__84167) : f.call(null,G__84165,G__84166,G__84167));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__84178__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__84115_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__84115_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__84178 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__84179__i = 0, G__84179__a = new Array(arguments.length -  4);
while (G__84179__i < G__84179__a.length) {G__84179__a[G__84179__i] = arguments[G__84179__i + 4]; ++G__84179__i;}
  colls = new cljs.core.IndexedSeq(G__84179__a,0);
} 
return G__84178__delegate.call(this,f,c1,c2,c3,colls);};
G__84178.cljs$lang$maxFixedArity = 4;
G__84178.cljs$lang$applyTo = (function (arglist__84180){
var f = cljs.core.first(arglist__84180);
arglist__84180 = cljs.core.next(arglist__84180);
var c1 = cljs.core.first(arglist__84180);
arglist__84180 = cljs.core.next(arglist__84180);
var c2 = cljs.core.first(arglist__84180);
arglist__84180 = cljs.core.next(arglist__84180);
var c3 = cljs.core.first(arglist__84180);
var colls = cljs.core.rest(arglist__84180);
return G__84178__delegate(f,c1,c2,c3,colls);
});
G__84178.cljs$core$IFn$_invoke$arity$variadic = G__84178__delegate;
return G__84178;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__84181 = null;
if (arguments.length > 4) {
var G__84182__i = 0, G__84182__a = new Array(arguments.length -  4);
while (G__84182__i < G__84182__a.length) {G__84182__a[G__84182__i] = arguments[G__84182__i + 4]; ++G__84182__i;}
G__84181 = new cljs.core.IndexedSeq(G__84182__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__84181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__84191 = null;
var G__84191__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84191__1 = (function (result){
var G__84188 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84188) : rf.call(null,G__84188));
});
var G__84191__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__84189 = result;
var G__84190 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84189,G__84190) : rf.call(null,G__84189,G__84190));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__84191 = function(result,input){
switch(arguments.length){
case 0:
return G__84191__0.call(this);
case 1:
return G__84191__1.call(this,result);
case 2:
return G__84191__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84191.cljs$core$IFn$_invoke$arity$0 = G__84191__0;
G__84191.cljs$core$IFn$_invoke$arity$1 = G__84191__1;
G__84191.cljs$core$IFn$_invoke$arity$2 = G__84191__2;
return G__84191;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__84198 = null;
var G__84198__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84198__1 = (function (result){
var G__84195 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84195) : rf.call(null,G__84195));
});
var G__84198__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__84196 = result;
var G__84197 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84196,G__84197) : rf.call(null,G__84196,G__84197));
}
});
G__84198 = function(result,input){
switch(arguments.length){
case 0:
return G__84198__0.call(this);
case 1:
return G__84198__1.call(this,result);
case 2:
return G__84198__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84198.cljs$core$IFn$_invoke$arity$0 = G__84198__0;
G__84198.cljs$core$IFn$_invoke$arity$1 = G__84198__1;
G__84198.cljs$core$IFn$_invoke$arity$2 = G__84198__2;
return G__84198;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__84199 = (n__$1 - (1));
var G__84200 = cljs.core.rest(s);
n__$1 = G__84199;
coll__$1 = G__84200;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__84203 = cljs.core.next(s);
var G__84204 = cljs.core.next(lead);
s = G__84203;
lead = G__84204;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__84217 = null;
var G__84217__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84217__1 = (function (result){
var G__84211 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84211) : rf.call(null,G__84211));
});
var G__84217__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3969__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3969__auto__)){
var G__84212 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__84212) : pred.call(null,G__84212));
} else {
return and__3969__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__84213 = result;
var G__84214 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84213,G__84214) : rf.call(null,G__84213,G__84214));
}
});
G__84217 = function(result,input){
switch(arguments.length){
case 0:
return G__84217__0.call(this);
case 1:
return G__84217__1.call(this,result);
case 2:
return G__84217__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84217.cljs$core$IFn$_invoke$arity$0 = G__84217__0;
G__84217.cljs$core$IFn$_invoke$arity$1 = G__84217__1;
G__84217.cljs$core$IFn$_invoke$arity$2 = G__84217__2;
return G__84217;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3969__auto__ = s;
if(and__3969__auto__){
var G__84216 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__84216) : pred__$1.call(null,G__84216));
} else {
return and__3969__auto__;
}
})())){
var G__84218 = pred__$1;
var G__84219 = cljs.core.rest(s);
pred__$1 = G__84218;
coll__$1 = G__84219;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__84228 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84228) : f.call(null,G__84228));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__84231__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__84231 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__84232__i = 0, G__84232__a = new Array(arguments.length -  2);
while (G__84232__i < G__84232__a.length) {G__84232__a[G__84232__i] = arguments[G__84232__i + 2]; ++G__84232__i;}
  colls = new cljs.core.IndexedSeq(G__84232__a,0);
} 
return G__84231__delegate.call(this,c1,c2,colls);};
G__84231.cljs$lang$maxFixedArity = 2;
G__84231.cljs$lang$applyTo = (function (arglist__84233){
var c1 = cljs.core.first(arglist__84233);
arglist__84233 = cljs.core.next(arglist__84233);
var c2 = cljs.core.first(arglist__84233);
var colls = cljs.core.rest(arglist__84233);
return G__84231__delegate(c1,c2,colls);
});
G__84231.cljs$core$IFn$_invoke$arity$variadic = G__84231__delegate;
return G__84231;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__84234 = null;
if (arguments.length > 2) {
var G__84235__i = 0, G__84235__a = new Array(arguments.length -  2);
while (G__84235__i < G__84235__a.length) {G__84235__a[G__84235__i] = arguments[G__84235__i + 2]; ++G__84235__i;}
G__84234 = new cljs.core.IndexedSeq(G__84235__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__84234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__84250 = null;
var G__84250__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84250__1 = (function (result){
var G__84243 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84243) : rf.call(null,G__84243));
});
var G__84250__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__84244 = result;
var G__84245 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84244,G__84245) : rf.call(null,G__84244,G__84245));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__84246 = sepr;
var G__84247 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84246,G__84247) : rf.call(null,G__84246,G__84247));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__84248 = result;
var G__84249 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84248,G__84249) : rf.call(null,G__84248,G__84249));
}
});
G__84250 = function(result,input){
switch(arguments.length){
case 0:
return G__84250__0.call(this);
case 1:
return G__84250__1.call(this,result);
case 2:
return G__84250__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84250.cljs$core$IFn$_invoke$arity$0 = G__84250__0;
G__84250.cljs$core$IFn$_invoke$arity$1 = G__84250__1;
G__84250.cljs$core$IFn$_invoke$arity$2 = G__84250__2;
return G__84250;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__84259__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__84259 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__84260__i = 0, G__84260__a = new Array(arguments.length -  1);
while (G__84260__i < G__84260__a.length) {G__84260__a[G__84260__i] = arguments[G__84260__i + 1]; ++G__84260__i;}
  colls = new cljs.core.IndexedSeq(G__84260__a,0);
} 
return G__84259__delegate.call(this,f,colls);};
G__84259.cljs$lang$maxFixedArity = 1;
G__84259.cljs$lang$applyTo = (function (arglist__84261){
var f = cljs.core.first(arglist__84261);
var colls = cljs.core.rest(arglist__84261);
return G__84259__delegate(f,colls);
});
G__84259.cljs$core$IFn$_invoke$arity$variadic = G__84259__delegate;
return G__84259;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__84262 = null;
if (arguments.length > 1) {
var G__84263__i = 0, G__84263__a = new Array(arguments.length -  1);
while (G__84263__i < G__84263__a.length) {G__84263__a[G__84263__i] = arguments[G__84263__i + 1]; ++G__84263__i;}
G__84262 = new cljs.core.IndexedSeq(G__84263__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__84262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__84282 = null;
var G__84282__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__84282__1 = (function (result){
var G__84276 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__84276) : rf.call(null,G__84276));
});
var G__84282__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__84277 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__84277) : pred.call(null,G__84277));
})())){
var G__84278 = result;
var G__84279 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__84278,G__84279) : rf.call(null,G__84278,G__84279));
} else {
return result;
}
});
G__84282 = function(result,input){
switch(arguments.length){
case 0:
return G__84282__0.call(this);
case 1:
return G__84282__1.call(this,result);
case 2:
return G__84282__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84282.cljs$core$IFn$_invoke$arity$0 = G__84282__0;
G__84282.cljs$core$IFn$_invoke$arity$1 = G__84282__1;
G__84282.cljs$core$IFn$_invoke$arity$2 = G__84282__2;
return G__84282;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___84283 = size;
var i_84284 = (0);
while(true){
if((i_84284 < n__4868__auto___84283)){
if(cljs.core.truth_((function (){var G__84280 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_84284);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__84280) : pred.call(null,G__84280));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_84284));
} else {
}

var G__84285 = (i_84284 + (1));
i_84284 = G__84285;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__84281 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__84281) : pred.call(null,G__84281));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__84292 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__84292) : branch_QMARK_.call(null,G__84292));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__84293 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__84293) : children.call(null,G__84293));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__84294_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__84294_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__84297 = to;
if(G__84297){
var bit__4655__auto__ = (G__84297.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__84297.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__84298 = to;
if(G__84298){
var bit__4655__auto__ = (G__84298.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__84298.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__84300 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84300) : f.call(null,G__84300));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__84301__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__84301 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__84302__i = 0, G__84302__a = new Array(arguments.length -  4);
while (G__84302__i < G__84302__a.length) {G__84302__a[G__84302__i] = arguments[G__84302__i + 4]; ++G__84302__i;}
  colls = new cljs.core.IndexedSeq(G__84302__a,0);
} 
return G__84301__delegate.call(this,f,c1,c2,c3,colls);};
G__84301.cljs$lang$maxFixedArity = 4;
G__84301.cljs$lang$applyTo = (function (arglist__84303){
var f = cljs.core.first(arglist__84303);
arglist__84303 = cljs.core.next(arglist__84303);
var c1 = cljs.core.first(arglist__84303);
arglist__84303 = cljs.core.next(arglist__84303);
var c2 = cljs.core.first(arglist__84303);
arglist__84303 = cljs.core.next(arglist__84303);
var c3 = cljs.core.first(arglist__84303);
var colls = cljs.core.rest(arglist__84303);
return G__84301__delegate(f,c1,c2,c3,colls);
});
G__84301.cljs$core$IFn$_invoke$arity$variadic = G__84301__delegate;
return G__84301;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__84304 = null;
if (arguments.length > 4) {
var G__84305__i = 0, G__84305__a = new Array(arguments.length -  4);
while (G__84305__i < G__84305__a.length) {G__84305__a[G__84305__i] = arguments[G__84305__i + 4]; ++G__84305__i;}
G__84304 = new cljs.core.IndexedSeq(G__84305__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__84304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__84307 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__84307) : pred.call(null,G__84307));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__84322 = m__$1;
if(G__84322){
var bit__4662__auto__ = (G__84322.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4662__auto__) || (G__84322.cljs$core$ILookup$)){
return true;
} else {
if((!G__84322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__84322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__84322);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__84323 = sentinel;
var G__84324 = m__$2;
var G__84325 = cljs.core.next(ks__$1);
sentinel = G__84323;
m__$1 = G__84324;
ks__$1 = G__84325;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__84326,v){
var vec__84331 = p__84326;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84331,(0),null);
var ks = cljs.core.nthnext(vec__84331,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__84332,f){
var vec__84370 = p__84332;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84370,(0),null);
var ks = cljs.core.nthnext(vec__84370,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84371 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84371) : f.call(null,G__84371));
})());
}
});
var update_in__4 = (function (m,p__84333,f,a){
var vec__84372 = p__84333;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84372,(0),null);
var ks = cljs.core.nthnext(vec__84372,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84373 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84374 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84373,G__84374) : f.call(null,G__84373,G__84374));
})());
}
});
var update_in__5 = (function (m,p__84334,f,a,b){
var vec__84375 = p__84334;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84375,(0),null);
var ks = cljs.core.nthnext(vec__84375,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84376 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84377 = a;
var G__84378 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84376,G__84377,G__84378) : f.call(null,G__84376,G__84377,G__84378));
})());
}
});
var update_in__6 = (function (m,p__84335,f,a,b,c){
var vec__84379 = p__84335;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84379,(0),null);
var ks = cljs.core.nthnext(vec__84379,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84380 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84381 = a;
var G__84382 = b;
var G__84383 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__84380,G__84381,G__84382,G__84383) : f.call(null,G__84380,G__84381,G__84382,G__84383));
})());
}
});
var update_in__7 = (function() { 
var G__84385__delegate = function (m,p__84336,f,a,b,c,args){
var vec__84384 = p__84336;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84384,(0),null);
var ks = cljs.core.nthnext(vec__84384,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__84385 = function (m,p__84336,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__84386__i = 0, G__84386__a = new Array(arguments.length -  6);
while (G__84386__i < G__84386__a.length) {G__84386__a[G__84386__i] = arguments[G__84386__i + 6]; ++G__84386__i;}
  args = new cljs.core.IndexedSeq(G__84386__a,0);
} 
return G__84385__delegate.call(this,m,p__84336,f,a,b,c,args);};
G__84385.cljs$lang$maxFixedArity = 6;
G__84385.cljs$lang$applyTo = (function (arglist__84387){
var m = cljs.core.first(arglist__84387);
arglist__84387 = cljs.core.next(arglist__84387);
var p__84336 = cljs.core.first(arglist__84387);
arglist__84387 = cljs.core.next(arglist__84387);
var f = cljs.core.first(arglist__84387);
arglist__84387 = cljs.core.next(arglist__84387);
var a = cljs.core.first(arglist__84387);
arglist__84387 = cljs.core.next(arglist__84387);
var b = cljs.core.first(arglist__84387);
arglist__84387 = cljs.core.next(arglist__84387);
var c = cljs.core.first(arglist__84387);
var args = cljs.core.rest(arglist__84387);
return G__84385__delegate(m,p__84336,f,a,b,c,args);
});
G__84385.cljs$core$IFn$_invoke$arity$variadic = G__84385__delegate;
return G__84385;
})()
;
update_in = function(m,p__84336,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__84336,f);
case 4:
return update_in__4.call(this,m,p__84336,f,a);
case 5:
return update_in__5.call(this,m,p__84336,f,a,b);
case 6:
return update_in__6.call(this,m,p__84336,f,a,b,c);
default:
var G__84388 = null;
if (arguments.length > 6) {
var G__84389__i = 0, G__84389__a = new Array(arguments.length -  6);
while (G__84389__i < G__84389__a.length) {G__84389__a[G__84389__i] = arguments[G__84389__i + 6]; ++G__84389__i;}
G__84388 = new cljs.core.IndexedSeq(G__84389__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__84336,f,a,b,c, G__84388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84400 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__84400) : f.call(null,G__84400));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84401 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84402 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84401,G__84402) : f.call(null,G__84401,G__84402));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84403 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84404 = x;
var G__84405 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84403,G__84404,G__84405) : f.call(null,G__84403,G__84404,G__84405));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84406 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84407 = x;
var G__84408 = y;
var G__84409 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__84406,G__84407,G__84408,G__84409) : f.call(null,G__84406,G__84407,G__84408,G__84409));
})());
});
var update__7 = (function() { 
var G__84410__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__84410 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__84411__i = 0, G__84411__a = new Array(arguments.length -  6);
while (G__84411__i < G__84411__a.length) {G__84411__a[G__84411__i] = arguments[G__84411__i + 6]; ++G__84411__i;}
  more = new cljs.core.IndexedSeq(G__84411__a,0);
} 
return G__84410__delegate.call(this,m,k,f,x,y,z,more);};
G__84410.cljs$lang$maxFixedArity = 6;
G__84410.cljs$lang$applyTo = (function (arglist__84412){
var m = cljs.core.first(arglist__84412);
arglist__84412 = cljs.core.next(arglist__84412);
var k = cljs.core.first(arglist__84412);
arglist__84412 = cljs.core.next(arglist__84412);
var f = cljs.core.first(arglist__84412);
arglist__84412 = cljs.core.next(arglist__84412);
var x = cljs.core.first(arglist__84412);
arglist__84412 = cljs.core.next(arglist__84412);
var y = cljs.core.first(arglist__84412);
arglist__84412 = cljs.core.next(arglist__84412);
var z = cljs.core.first(arglist__84412);
var more = cljs.core.rest(arglist__84412);
return G__84410__delegate(m,k,f,x,y,z,more);
});
G__84410.cljs$core$IFn$_invoke$arity$variadic = G__84410__delegate;
return G__84410;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__84413 = null;
if (arguments.length > 6) {
var G__84414__i = 0, G__84414__a = new Array(arguments.length -  6);
while (G__84414__i < G__84414__a.length) {G__84414__a[G__84414__i] = arguments[G__84414__i + 6]; ++G__84414__i;}
G__84413 = new cljs.core.IndexedSeq(G__84414__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__84413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__84415 = (ll - (5));
var G__84416 = r;
ll = G__84415;
ret = G__84416;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__84421 = cljs.core.pv_aget(node,(0));
var G__84422 = (level - (5));
node = G__84421;
level = G__84422;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__84423 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__84424 = (level - (5));
node = G__84423;
level = G__84424;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__84434 = init__$2;
var G__84435 = (j + i);
var G__84436 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84434,G__84435,G__84436) : f.call(null,G__84434,G__84435,G__84436));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__84447 = (j + (1));
var G__84448 = init__$3;
j = G__84447;
init__$2 = G__84448;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84437 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84437) : cljs.core.deref.call(null,G__84437));
} else {
var G__84449 = (i + len);
var G__84450 = init__$2;
i = G__84449;
init__$1 = G__84450;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__84438 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__84438) : cljs.core.tv_editable_root.call(null,G__84438));
})(),(function (){var G__84439 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__84439) : cljs.core.tv_editable_tail.call(null,G__84439));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__84440 = init__$2;
var G__84441 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84440,G__84441) : f.call(null,G__84440,G__84441));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__84451 = (j + (1));
var G__84452 = init__$3;
j = G__84451;
init__$2 = G__84452;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84442 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84442) : cljs.core.deref.call(null,G__84442));
} else {
var G__84453 = (i + len);
var G__84454 = init__$2;
i = G__84453;
init__$1 = G__84454;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__84443 = coll__$1;
var G__84444 = cljs.core.first_array_for_longvec(coll__$1);
var G__84445 = (0);
var G__84446 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__84443,G__84444,G__84445,G__84446) : cljs.core.chunked_seq.call(null,G__84443,G__84444,G__84445,G__84446));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4868__auto___84455 = len;
var i_84456 = (0);
while(true){
if((i_84456 < n__4868__auto___84455)){
(new_tail[i_84456] = (self__.tail[i_84456]));

var G__84457 = (i_84456 + (1));
i_84456 = G__84457;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__84458 = null;
var G__84458__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__84458__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__84458 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84458__2.call(this,self__,k);
case 3:
return G__84458__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84458.cljs$core$IFn$_invoke$arity$2 = G__84458__2;
G__84458.cljs$core$IFn$_invoke$arity$3 = G__84458__3;
return G__84458;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args84433){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84433)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__84459 = (i + (1));
var G__84460 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__84459;
out = G__84460;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__84461__i = 0, G__84461__a = new Array(arguments.length -  0);
while (G__84461__i < G__84461__a.length) {G__84461__a[G__84461__i] = arguments[G__84461__i + 0]; ++G__84461__i;}
  args = new cljs.core.IndexedSeq(G__84461__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__84462){
var args = cljs.core.seq(arglist__84462);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__84463 = self__.vec;
var G__84464 = self__.node;
var G__84465 = self__.i;
var G__84466 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__84463,G__84464,G__84465,G__84466) : cljs.core.chunked_seq.call(null,G__84463,G__84464,G__84465,G__84466));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__84467 = self__.vec;
var G__84468 = (self__.i + self__.off);
var G__84469 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__84467,G__84468,G__84469) : cljs.core.subvec.call(null,G__84467,G__84468,G__84469));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__84470 = self__.vec;
var G__84471 = (self__.i + self__.off);
var G__84472 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__84470,G__84471,G__84472) : cljs.core.subvec.call(null,G__84470,G__84471,G__84472));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__84473 = self__.vec;
var G__84474 = self__.node;
var G__84475 = self__.i;
var G__84476 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__84473,G__84474,G__84475,G__84476) : cljs.core.chunked_seq.call(null,G__84473,G__84474,G__84475,G__84476));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__84477 = self__.vec;
var G__84478 = cljs.core.unchecked_array_for(self__.vec,end);
var G__84479 = end;
var G__84480 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__84477,G__84478,G__84479,G__84480) : cljs.core.chunked_seq.call(null,G__84477,G__84478,G__84479,G__84480));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__84481 = self__.vec;
var G__84482 = self__.node;
var G__84483 = self__.i;
var G__84484 = self__.off;
var G__84485 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__84481,G__84482,G__84483,G__84484,G__84485) : cljs.core.chunked_seq.call(null,G__84481,G__84482,G__84483,G__84484,G__84485));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__84486 = self__.vec;
var G__84487 = cljs.core.unchecked_array_for(self__.vec,end);
var G__84488 = end;
var G__84489 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__84486,G__84487,G__84488,G__84489) : cljs.core.chunked_seq.call(null,G__84486,G__84487,G__84488,G__84489));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__84491 = self__.meta;
var G__84492 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__84493 = self__.start;
var G__84494 = (function (){var x__4298__auto__ = self__.end;
var y__4299__auto__ = (v_pos + (1));
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})();
var G__84495 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__84491,G__84492,G__84493,G__84494,G__84495) : cljs.core.build_subvec.call(null,G__84491,G__84492,G__84493,G__84494,G__84495));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__84496 = self__.meta;
var G__84497 = self__.v;
var G__84498 = self__.start;
var G__84499 = (self__.end - (1));
var G__84500 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__84496,G__84497,G__84498,G__84499,G__84500) : cljs.core.build_subvec.call(null,G__84496,G__84497,G__84498,G__84499,G__84500));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__84502 = meta__$1;
var G__84503 = self__.v;
var G__84504 = self__.start;
var G__84505 = self__.end;
var G__84506 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__84502,G__84503,G__84504,G__84505,G__84506) : cljs.core.build_subvec.call(null,G__84502,G__84503,G__84504,G__84505,G__84506));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__84507 = self__.meta;
var G__84508 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__84509 = self__.start;
var G__84510 = (self__.end + (1));
var G__84511 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__84507,G__84508,G__84509,G__84510,G__84511) : cljs.core.build_subvec.call(null,G__84507,G__84508,G__84509,G__84510,G__84511));
});

cljs.core.Subvec.prototype.call = (function() {
var G__84512 = null;
var G__84512__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__84512__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__84512 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84512__2.call(this,self__,k);
case 3:
return G__84512__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84512.cljs$core$IFn$_invoke$arity$2 = G__84512__2;
G__84512.cljs$core$IFn$_invoke$arity$3 = G__84512__3;
return G__84512;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args84490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84490)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__84513 = meta;
var G__84514 = v.v;
var G__84515 = (v.start + start);
var G__84516 = (v.start + end);
var G__84517 = __hash;
meta = G__84513;
v = G__84514;
start = G__84515;
end = G__84516;
__hash = G__84517;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj84524 = {};
return obj84524;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__84532 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__84533 = (level - (5));
node = G__84532;
level = G__84533;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__84537 = null;
var G__84537__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84537__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84537 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84537__2.call(this,self__,k);
case 3:
return G__84537__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84537.cljs$core$IFn$_invoke$arity$2 = G__84537__2;
G__84537.cljs$core$IFn$_invoke$arity$3 = G__84537__3;
return G__84537;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args84534){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84534)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3981__auto__ = self__.front;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = self__.rear;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__84538 = (i + incr);
i = G__84538;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__84539 = (i + (1));
var G__84540 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__84539;
out = G__84540;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj84544 = {};
return obj84544;
})();
var l = ks.length;
var i_84545 = (0);
while(true){
if((i_84545 < l)){
var k_84546 = (ks[i_84545]);
(new_obj[k_84546] = (obj[k_84546]));

var G__84547 = (i_84545 + (1));
i_84545 = G__84547;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__84551 = k;
return goog.isString(G__84551);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__84552 = init__$1;
var G__84553 = k;
var G__84554 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84552,G__84553,G__84554) : f.call(null,G__84552,G__84553,G__84554));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84555 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84555) : cljs.core.deref.call(null,G__84555));
} else {
var G__84561 = cljs.core.rest(keys__$1);
var G__84562 = init__$2;
keys__$1 = G__84561;
init__$1 = G__84562;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__84557 = k;
return goog.isString(G__84557);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__84558 = k;
return goog.isString(G__84558);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__84560 = k;
return goog.isString(G__84560);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__84548_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__84548_SHARP_,(self__.strobj[p1__84548_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__84563 = null;
var G__84563__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84563__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84563 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84563__2.call(this,self__,k);
case 3:
return G__84563__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84563.cljs$core$IFn$_invoke$arity$2 = G__84563__2;
G__84563.cljs$core$IFn$_invoke$arity$3 = G__84563__3;
return G__84563;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args84549){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84549)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj84565 = {};
return obj84565;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__84566 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84566,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84566,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__84567 = (i + (2));
i = G__84567;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__84568 = (i + (2));
i = G__84568;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__84569 = (i + (2));
i = G__84569;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__84570 = (i + (2));
i = G__84570;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__84571 = (i + (2));
i = G__84571;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3981__auto__ = (function (){var G__84575 = k;
return goog.isString(G__84575);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_84576 = (0);
while(true){
if((i_84576 < l)){
(narr[i_84576] = (arr[i_84576]));

var G__84577 = (i_84576 + (1));
i_84576 = G__84577;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84579 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__84579) : cljs.core.keys.call(null,G__84579));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84580 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__84580) : cljs.core.vals.call(null,G__84580));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__84581 = cljs.core.seq(coll);
var chunk__84582 = null;
var count__84583 = (0);
var i__84584 = (0);
while(true){
if((i__84584 < count__84583)){
var vec__84585 = chunk__84582.cljs$core$IIndexed$_nth$arity$2(null,i__84584);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84585,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84585,(1),null);
var G__84586_84599 = v;
var G__84587_84600 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84586_84599,G__84587_84600) : f.call(null,G__84586_84599,G__84587_84600));

var G__84601 = seq__84581;
var G__84602 = chunk__84582;
var G__84603 = count__84583;
var G__84604 = (i__84584 + (1));
seq__84581 = G__84601;
chunk__84582 = G__84602;
count__84583 = G__84603;
i__84584 = G__84604;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__84581);
if(temp__4126__auto__){
var seq__84581__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__84581__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__84581__$1);
var G__84605 = cljs.core.chunk_rest(seq__84581__$1);
var G__84606 = c__4768__auto__;
var G__84607 = cljs.core.count(c__4768__auto__);
var G__84608 = (0);
seq__84581 = G__84605;
chunk__84582 = G__84606;
count__84583 = G__84607;
i__84584 = G__84608;
continue;
} else {
var vec__84588 = cljs.core.first(seq__84581__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84588,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84588,(1),null);
var G__84589_84609 = v;
var G__84590_84610 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84589_84609,G__84590_84610) : f.call(null,G__84589_84609,G__84590_84610));

var G__84611 = cljs.core.next(seq__84581__$1);
var G__84612 = null;
var G__84613 = (0);
var G__84614 = (0);
seq__84581 = G__84611;
chunk__84582 = G__84612;
count__84583 = G__84613;
i__84584 = G__84614;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__84591 = init__$1;
var G__84592 = (self__.arr[i]);
var G__84593 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84591,G__84592,G__84593) : f.call(null,G__84591,G__84592,G__84593));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84594 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84594) : cljs.core.deref.call(null,G__84594));
} else {
var G__84615 = (i + (2));
var G__84616 = init__$2;
i = G__84615;
init__$1 = G__84616;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__84595 = other;
if(G__84595){
var bit__4655__auto__ = (G__84595.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4655__auto__) || (G__84595.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__84617 = (i + (2));
i = G__84617;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj84597 = {};
return obj84597;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__84618 = (s + (2));
var G__84619 = d;
s = G__84618;
d = G__84619;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__84620 = (s + (2));
var G__84621 = (d + (2));
s = G__84620;
d = G__84621;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__84598 = cljs.core.aclone(self__.arr);
(G__84598[(idx + (1))] = v);

return G__84598;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__84622 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__84623 = cljs.core.next(es);
ret = G__84622;
es = G__84623;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__84624 = null;
var G__84624__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84624__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84624 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84624__2.call(this,self__,k);
case 3:
return G__84624__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84624.cljs$core$IFn$_invoke$arity$2 = G__84624__2;
G__84624.cljs$core$IFn$_invoke$arity$3 = G__84624__3;
return G__84624;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args84578){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84578)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__84625 = (i + (2));
var G__84626 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__84625;
ret = G__84626;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__84627_84635 = self__.arr;
G__84627_84635.pop();

G__84627_84635.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__84628 = self__.len;
var G__84629 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__84628,G__84629) : cljs.core.array__GT_transient_hash_map.call(null,G__84628,G__84629));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__84630 = o;
if(G__84630){
var bit__4662__auto__ = (G__84630.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__84630.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__84630.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__84630);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__84630);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__84631 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__84631) : cljs.core.key.call(null,G__84631));
})(),(function (){var G__84632 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__84632) : cljs.core.val.call(null,G__84632));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__84636 = cljs.core.next(es);
var G__84637 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__84633 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__84633) : cljs.core.key.call(null,G__84633));
})(),(function (){var G__84634 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__84634) : cljs.core.val.call(null,G__84634));
})());
es = G__84636;
tcoll__$2 = G__84637;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__84638 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__84639 = (i + (2));
out = G__84638;
i = G__84639;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__84642 = cljs.core.aclone(arr);
(G__84642[i] = a);

return G__84642;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__84643 = cljs.core.aclone(arr);
(G__84643[i] = a);

(G__84643[j] = b);

return G__84643;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__84648 = init__$1;
var G__84649 = k;
var G__84650 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84648,G__84649,G__84650) : f.call(null,G__84648,G__84649,G__84650));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84651 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84651) : cljs.core.deref.call(null,G__84651));
} else {
var G__84652 = (i + (2));
var G__84653 = init__$2;
i = G__84652;
init__$1 = G__84653;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__84654 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__84654) : cljs.core.create_inode_seq.call(null,G__84654));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_84668 = (0);
var j_84669 = (0);
while(true){
if((i_84668 < (32))){
if((((self__.bitmap >>> i_84668) & (1)) === (0))){
var G__84670 = (i_84668 + (1));
var G__84671 = j_84669;
i_84668 = G__84670;
j_84669 = G__84671;
continue;
} else {
(nodes[i_84668] = ((!(((self__.arr[j_84669]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_84669])),(self__.arr[j_84669]),(self__.arr[(j_84669 + (1))]),added_leaf_QMARK_):(self__.arr[(j_84669 + (1))])));

var G__84672 = (i_84668 + (1));
var G__84673 = (j_84669 + (2));
i_84668 = G__84672;
j_84669 = G__84673;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__84655 = edit__$1;
var G__84656 = (shift + (5));
var G__84657 = key_or_nil;
var G__84658 = val_or_node;
var G__84659 = hash;
var G__84660 = key;
var G__84661 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__84655,G__84656,G__84657,G__84658,G__84659,G__84660,G__84661) : cljs.core.create_node.call(null,G__84655,G__84656,G__84657,G__84658,G__84659,G__84660,G__84661));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_84674 = (0);
var j_84675 = (0);
while(true){
if((i_84674 < (32))){
if((((self__.bitmap >>> i_84674) & (1)) === (0))){
var G__84676 = (i_84674 + (1));
var G__84677 = j_84675;
i_84674 = G__84676;
j_84675 = G__84677;
continue;
} else {
(nodes[i_84674] = ((!(((self__.arr[j_84675]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_84675])),(self__.arr[j_84675]),(self__.arr[(j_84675 + (1))]),added_leaf_QMARK_):(self__.arr[(j_84675 + (1))])));

var G__84678 = (i_84674 + (1));
var G__84679 = (j_84675 + (2));
i_84674 = G__84678;
j_84675 = G__84679;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__84662 = (shift + (5));
var G__84663 = key_or_nil;
var G__84664 = val_or_node;
var G__84665 = hash;
var G__84666 = key;
var G__84667 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__84662,G__84663,G__84664,G__84665,G__84666,G__84667) : cljs.core.create_node.call(null,G__84662,G__84663,G__84664,G__84665,G__84666,G__84667));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__84680 = (i + (1));
var G__84681 = (j + (2));
var G__84682 = (bitmap | ((1) << i));
i = G__84680;
j = G__84681;
bitmap = G__84682;
continue;
} else {
var G__84683 = (i + (1));
var G__84684 = j;
var G__84685 = bitmap;
i = G__84683;
j = G__84684;
bitmap = G__84685;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__84686 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__84686) : cljs.core.create_array_node_seq.call(null,G__84686));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84687 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84687) : cljs.core.deref.call(null,G__84687));
} else {
var G__84688 = (i + (1));
var G__84689 = init__$2;
i = G__84688;
init__$1 = G__84689;
continue;
}
} else {
var G__84690 = (i + (1));
var G__84691 = init__$1;
i = G__84690;
init__$1 = G__84691;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__84692 = (i + (2));
i = G__84692;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__84693 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__84693) : cljs.core.create_inode_seq.call(null,G__84693));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__84694 = self__.nodes;
var G__84695 = (self__.i + (2));
var G__84696 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__84694,G__84695,G__84696) : cljs.core.create_inode_seq.call(null,G__84694,G__84695,G__84696));
} else {
var G__84697 = self__.nodes;
var G__84698 = self__.i;
var G__84699 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__84697,G__84698,G__84699) : cljs.core.create_inode_seq.call(null,G__84697,G__84698,G__84699));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__84703 = (j + (2));
j = G__84703;
continue;
}
} else {
var G__84704 = (j + (2));
j = G__84704;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__84705 = null;
var G__84706 = self__.nodes;
var G__84707 = self__.i;
var G__84708 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__84705,G__84706,G__84707,G__84708) : cljs.core.create_array_node_seq.call(null,G__84705,G__84706,G__84707,G__84708));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__84713 = (j + (1));
j = G__84713;
continue;
}
} else {
var G__84714 = (j + (1));
j = G__84714;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84716 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__84716) : cljs.core.keys.call(null,G__84716));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84717 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__84717) : cljs.core.vals.call(null,G__84717));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__84718 = cljs.core.seq(coll);
var chunk__84719 = null;
var count__84720 = (0);
var i__84721 = (0);
while(true){
if((i__84721 < count__84720)){
var vec__84722 = chunk__84719.cljs$core$IIndexed$_nth$arity$2(null,i__84721);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84722,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84722,(1),null);
var G__84723_84734 = v;
var G__84724_84735 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84723_84734,G__84724_84735) : f.call(null,G__84723_84734,G__84724_84735));

var G__84736 = seq__84718;
var G__84737 = chunk__84719;
var G__84738 = count__84720;
var G__84739 = (i__84721 + (1));
seq__84718 = G__84736;
chunk__84719 = G__84737;
count__84720 = G__84738;
i__84721 = G__84739;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__84718);
if(temp__4126__auto__){
var seq__84718__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__84718__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__84718__$1);
var G__84740 = cljs.core.chunk_rest(seq__84718__$1);
var G__84741 = c__4768__auto__;
var G__84742 = cljs.core.count(c__4768__auto__);
var G__84743 = (0);
seq__84718 = G__84740;
chunk__84719 = G__84741;
count__84720 = G__84742;
i__84721 = G__84743;
continue;
} else {
var vec__84725 = cljs.core.first(seq__84718__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84725,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84725,(1),null);
var G__84726_84744 = v;
var G__84727_84745 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84726_84744,G__84727_84745) : f.call(null,G__84726_84744,G__84727_84745));

var G__84746 = cljs.core.next(seq__84718__$1);
var G__84747 = null;
var G__84748 = (0);
var G__84749 = (0);
seq__84718 = G__84746;
chunk__84719 = G__84747;
count__84720 = G__84748;
i__84721 = G__84749;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__84728 = init;
var G__84729 = null;
var G__84730 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84728,G__84729,G__84730) : f.call(null,G__84728,G__84729,G__84730));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__84731 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84731) : cljs.core.deref.call(null,G__84731));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj84733 = {};
return obj84733;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__84750 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__84751 = cljs.core.next(es);
ret = G__84750;
es = G__84751;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__84752 = null;
var G__84752__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84752__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84752 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84752__2.call(this,self__,k);
case 3:
return G__84752__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84752.cljs$core$IFn$_invoke$arity$2 = G__84752__2;
G__84752.cljs$core$IFn$_invoke$arity$3 = G__84752__3;
return G__84752;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args84715){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84715)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__84753 = (i + (2));
var G__84754 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__84753;
ret = G__84754;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__84755 = (i + (1));
var G__84756 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__84755;
out = G__84756;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__84757 = o;
if(G__84757){
var bit__4662__auto__ = (G__84757.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__84757.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__84757.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__84757);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__84757);
}
})()){
return tcoll.assoc_BANG_((function (){var G__84758 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__84758) : cljs.core.key.call(null,G__84758));
})(),(function (){var G__84759 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__84759) : cljs.core.val.call(null,G__84759));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__84762 = cljs.core.next(es);
var G__84763 = tcoll__$1.assoc_BANG_((function (){var G__84760 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__84760) : cljs.core.key.call(null,G__84760));
})(),(function (){var G__84761 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__84761) : cljs.core.val.call(null,G__84761));
})());
es = G__84762;
tcoll__$1 = G__84763;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__84764 = ((ascending_QMARK_)?t.left:t.right);
var G__84765 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__84764;
stack__$1 = G__84765;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__84778 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84778) : cljs.core.deref.call(null,G__84778));
} else {
var init__$2 = (function (){var G__84779 = init__$1;
var G__84780 = node.key;
var G__84781 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__84779,G__84780,G__84781) : f.call(null,G__84779,G__84780,G__84781));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__84782 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84782) : cljs.core.deref.call(null,G__84782));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__84783 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__84783) : cljs.core.deref.call(null,G__84783));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__84785 = null;
var G__84785__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84785__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84785 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84785__2.call(this,self__,k);
case 3:
return G__84785__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84785.cljs$core$IFn$_invoke$arity$2 = G__84785__2;
G__84785.cljs$core$IFn$_invoke$arity$3 = G__84785__3;
return G__84785;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args84784){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84784)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__84787 = null;
var G__84787__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84787__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84787 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84787__2.call(this,self__,k);
case 3:
return G__84787__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84787.cljs$core$IFn$_invoke$arity$2 = G__84787__2;
G__84787.cljs$core$IFn$_invoke$arity$3 = G__84787__3;
return G__84787;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args84786){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84786)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__84800 = k;
var G__84801 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__84800,G__84801) : comp.call(null,G__84800,G__84801));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__84820 = k;
var G__84821 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__84820,G__84821) : comp.call(null,G__84820,G__84821));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__84832 = k;
var G__84833 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__84832,G__84833) : comp.call(null,G__84832,G__84833));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__84835 = cljs.core.seq(coll);
var chunk__84836 = null;
var count__84837 = (0);
var i__84838 = (0);
while(true){
if((i__84838 < count__84837)){
var vec__84839 = chunk__84836.cljs$core$IIndexed$_nth$arity$2(null,i__84838);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84839,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84839,(1),null);
var G__84840_84852 = v;
var G__84841_84853 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84840_84852,G__84841_84853) : f.call(null,G__84840_84852,G__84841_84853));

var G__84854 = seq__84835;
var G__84855 = chunk__84836;
var G__84856 = count__84837;
var G__84857 = (i__84838 + (1));
seq__84835 = G__84854;
chunk__84836 = G__84855;
count__84837 = G__84856;
i__84838 = G__84857;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__84835);
if(temp__4126__auto__){
var seq__84835__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__84835__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__84835__$1);
var G__84858 = cljs.core.chunk_rest(seq__84835__$1);
var G__84859 = c__4768__auto__;
var G__84860 = cljs.core.count(c__4768__auto__);
var G__84861 = (0);
seq__84835 = G__84858;
chunk__84836 = G__84859;
count__84837 = G__84860;
i__84838 = G__84861;
continue;
} else {
var vec__84842 = cljs.core.first(seq__84835__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84842,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84842,(1),null);
var G__84843_84862 = v;
var G__84844_84863 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84843_84862,G__84844_84863) : f.call(null,G__84843_84862,G__84844_84863));

var G__84864 = cljs.core.next(seq__84835__$1);
var G__84865 = null;
var G__84866 = (0);
var G__84867 = (0);
seq__84835 = G__84864;
chunk__84836 = G__84865;
count__84837 = G__84866;
i__84838 = G__84867;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84845 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__84845) : cljs.core.keys.call(null,G__84845));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__84846 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__84846) : cljs.core.vals.call(null,G__84846));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__84847 = k;
var G__84848 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__84847,G__84848) : self__.comp.call(null,G__84847,G__84848));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__84868 = t.left;
t = G__84868;
continue;
} else {
var G__84869 = t.right;
t = G__84869;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__84870 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__84871 = cljs.core.next(es);
ret = G__84870;
es = G__84871;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__84872 = null;
var G__84872__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84872__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84872 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84872__2.call(this,self__,k);
case 3:
return G__84872__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84872.cljs$core$IFn$_invoke$arity$2 = G__84872__2;
G__84872.cljs$core$IFn$_invoke$arity$3 = G__84872__3;
return G__84872;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args84834){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84834)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__84849 = k;
var G__84850 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__84849,G__84850) : self__.comp.call(null,G__84849,G__84850));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__84873 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__84874 = t.left;
stack = G__84873;
t = G__84874;
continue;
} else {
var G__84875 = stack;
var G__84876 = t.right;
stack = G__84875;
t = G__84876;
continue;
}
} else {
if((c > (0))){
var G__84877 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__84878 = t.right;
stack = G__84877;
t = G__84878;
continue;
} else {
var G__84879 = stack;
var G__84880 = t.left;
stack = G__84879;
t = G__84880;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__84851 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__84851) : cljs.core.key.call(null,G__84851));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__84881 = cljs.core.nnext(in$);
var G__84882 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__84881;
out = G__84882;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__84883__i = 0, G__84883__a = new Array(arguments.length -  0);
while (G__84883__i < G__84883__a.length) {G__84883__a[G__84883__i] = arguments[G__84883__i + 0]; ++G__84883__i;}
  keyvals = new cljs.core.IndexedSeq(G__84883__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__84884){
var keyvals = cljs.core.seq(arglist__84884);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__84885__i = 0, G__84885__a = new Array(arguments.length -  0);
while (G__84885__i < G__84885__a.length) {G__84885__a[G__84885__i] = arguments[G__84885__i + 0]; ++G__84885__i;}
  keyvals = new cljs.core.IndexedSeq(G__84885__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__84886){
var keyvals = cljs.core.seq(arglist__84886);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj84890 = {};
return obj84890;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__84891 = cljs.core.nnext(kvs);
kvs = G__84891;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__84892__i = 0, G__84892__a = new Array(arguments.length -  0);
while (G__84892__i < G__84892__a.length) {G__84892__a[G__84892__i] = arguments[G__84892__i + 0]; ++G__84892__i;}
  keyvals = new cljs.core.IndexedSeq(G__84892__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__84893){
var keyvals = cljs.core.seq(arglist__84893);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__84894 = cljs.core.nnext(in$);
var G__84895 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__84894;
out = G__84895;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__84896__i = 0, G__84896__a = new Array(arguments.length -  0);
while (G__84896__i < G__84896__a.length) {G__84896__a[G__84896__i] = arguments[G__84896__i + 0]; ++G__84896__i;}
  keyvals = new cljs.core.IndexedSeq(G__84896__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__84897){
var keyvals = cljs.core.seq(arglist__84897);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__84898 = cljs.core.nnext(in$);
var G__84899 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__84898;
out = G__84899;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__84900__i = 0, G__84900__a = new Array(arguments.length -  1);
while (G__84900__i < G__84900__a.length) {G__84900__a[G__84900__i] = arguments[G__84900__i + 1]; ++G__84900__i;}
  keyvals = new cljs.core.IndexedSeq(G__84900__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__84901){
var comparator = cljs.core.first(arglist__84901);
var keyvals = cljs.core.rest(arglist__84901);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__84902 = self__.mseq;
if(G__84902){
var bit__4662__auto__ = (G__84902.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__84902.cljs$core$INext$)){
return true;
} else {
if((!G__84902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84902);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__84903 = self__.mseq;
if(G__84903){
var bit__4662__auto__ = (G__84903.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__84903.cljs$core$INext$)){
return true;
} else {
if((!G__84903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84903);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__84904 = self__.mseq;
if(G__84904){
var bit__4662__auto__ = (G__84904.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__84904.cljs$core$INext$)){
return true;
} else {
if((!G__84904.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84904);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84904);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__84905 = self__.mseq;
if(G__84905){
var bit__4662__auto__ = (G__84905.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__84905.cljs$core$INext$)){
return true;
} else {
if((!G__84905.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84905);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__84905);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__84906_SHARP_,p2__84907_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = p1__84906_SHARP_;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__84907_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__84908__i = 0, G__84908__a = new Array(arguments.length -  0);
while (G__84908__i < G__84908__a.length) {G__84908__a[G__84908__i] = arguments[G__84908__i + 0]; ++G__84908__i;}
  maps = new cljs.core.IndexedSeq(G__84908__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__84909){
var maps = cljs.core.seq(arglist__84909);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__84912 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__84913 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84912,G__84913) : f.call(null,G__84912,G__84913));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3981__auto__ = m1;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__84914__i = 0, G__84914__a = new Array(arguments.length -  1);
while (G__84914__i < G__84914__a.length) {G__84914__a[G__84914__i] = arguments[G__84914__i + 1]; ++G__84914__i;}
  maps = new cljs.core.IndexedSeq(G__84914__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__84915){
var f = cljs.core.first(arglist__84915);
var maps = cljs.core.rest(arglist__84915);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__84916 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__84917 = cljs.core.next(keys);
ret = G__84916;
keys = G__84917;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__84920 = cljs.core.seq(coll);
var chunk__84921 = null;
var count__84922 = (0);
var i__84923 = (0);
while(true){
if((i__84923 < count__84922)){
var vec__84924 = chunk__84921.cljs$core$IIndexed$_nth$arity$2(null,i__84923);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84924,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84924,(1),null);
var G__84925_84930 = v;
var G__84926_84931 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84925_84930,G__84926_84931) : f.call(null,G__84925_84930,G__84926_84931));

var G__84932 = seq__84920;
var G__84933 = chunk__84921;
var G__84934 = count__84922;
var G__84935 = (i__84923 + (1));
seq__84920 = G__84932;
chunk__84921 = G__84933;
count__84922 = G__84934;
i__84923 = G__84935;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__84920);
if(temp__4126__auto__){
var seq__84920__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__84920__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__84920__$1);
var G__84936 = cljs.core.chunk_rest(seq__84920__$1);
var G__84937 = c__4768__auto__;
var G__84938 = cljs.core.count(c__4768__auto__);
var G__84939 = (0);
seq__84920 = G__84936;
chunk__84921 = G__84937;
count__84922 = G__84938;
i__84923 = G__84939;
continue;
} else {
var vec__84927 = cljs.core.first(seq__84920__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84927,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84927,(1),null);
var G__84928_84940 = v;
var G__84929_84941 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84928_84940,G__84929_84941) : f.call(null,G__84928_84940,G__84929_84941));

var G__84942 = cljs.core.next(seq__84920__$1);
var G__84943 = null;
var G__84944 = (0);
var G__84945 = (0);
seq__84920 = G__84942;
chunk__84921 = G__84943;
count__84922 = G__84944;
i__84923 = G__84945;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__84918_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__84918_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__84946 = null;
var G__84946__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84946__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84946 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84946__2.call(this,self__,k);
case 3:
return G__84946__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84946.cljs$core$IFn$_invoke$arity$2 = G__84946__2;
G__84946.cljs$core$IFn$_invoke$arity$3 = G__84946__3;
return G__84946;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args84919){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84919)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__84947 = (i + (1));
var G__84948 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__84947;
out = G__84948;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__84949 = (i + (1));
var G__84950 = cljs.core._conj_BANG_(out,(items[i]));
i = G__84949;
out = G__84950;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__84952 = null;
var G__84952__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__84952__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__84952 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84952__2.call(this,self__,k);
case 3:
return G__84952__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84952.cljs$core$IFn$_invoke$arity$2 = G__84952__2;
G__84952.cljs$core$IFn$_invoke$arity$3 = G__84952__3;
return G__84952;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args84951){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84951)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__84955 = cljs.core.seq(coll);
var chunk__84956 = null;
var count__84957 = (0);
var i__84958 = (0);
while(true){
if((i__84958 < count__84957)){
var vec__84959 = chunk__84956.cljs$core$IIndexed$_nth$arity$2(null,i__84958);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84959,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84959,(1),null);
var G__84960_84965 = v;
var G__84961_84966 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84960_84965,G__84961_84966) : f.call(null,G__84960_84965,G__84961_84966));

var G__84967 = seq__84955;
var G__84968 = chunk__84956;
var G__84969 = count__84957;
var G__84970 = (i__84958 + (1));
seq__84955 = G__84967;
chunk__84956 = G__84968;
count__84957 = G__84969;
i__84958 = G__84970;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__84955);
if(temp__4126__auto__){
var seq__84955__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__84955__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__84955__$1);
var G__84971 = cljs.core.chunk_rest(seq__84955__$1);
var G__84972 = c__4768__auto__;
var G__84973 = cljs.core.count(c__4768__auto__);
var G__84974 = (0);
seq__84955 = G__84971;
chunk__84956 = G__84972;
count__84957 = G__84973;
i__84958 = G__84974;
continue;
} else {
var vec__84962 = cljs.core.first(seq__84955__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84962,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__84962,(1),null);
var G__84963_84975 = v;
var G__84964_84976 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__84963_84975,G__84964_84976) : f.call(null,G__84963_84975,G__84964_84976));

var G__84977 = cljs.core.next(seq__84955__$1);
var G__84978 = null;
var G__84979 = (0);
var G__84980 = (0);
seq__84955 = G__84977;
chunk__84956 = G__84978;
count__84957 = G__84979;
i__84958 = G__84980;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__84953_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__84953_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__84981 = null;
var G__84981__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__84981__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__84981 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__84981__2.call(this,self__,k);
case 3:
return G__84981__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__84981.cljs$core$IFn$_invoke$arity$2 = G__84981__2;
G__84981.cljs$core$IFn$_invoke$arity$3 = G__84981__3;
return G__84981;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args84954){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args84954)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4862__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4862__auto__.length)){
var G__84982 = (i + (1));
var G__84983 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__84982;
res = G__84983;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__84984 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__84985 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__84984;
out = G__84985;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__84986__delegate = function (keys){
return cljs.core.set(keys);
};
var G__84986 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__84987__i = 0, G__84987__a = new Array(arguments.length -  0);
while (G__84987__i < G__84987__a.length) {G__84987__a[G__84987__i] = arguments[G__84987__i + 0]; ++G__84987__i;}
  keys = new cljs.core.IndexedSeq(G__84987__a,0);
} 
return G__84986__delegate.call(this,keys);};
G__84986.cljs$lang$maxFixedArity = 0;
G__84986.cljs$lang$applyTo = (function (arglist__84988){
var keys = cljs.core.seq(arglist__84988);
return G__84986__delegate(keys);
});
G__84986.cljs$core$IFn$_invoke$arity$variadic = G__84986__delegate;
return G__84986;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__84989 = null;
if (arguments.length > 0) {
var G__84990__i = 0, G__84990__a = new Array(arguments.length -  0);
while (G__84990__i < G__84990__a.length) {G__84990__a[G__84990__i] = arguments[G__84990__i + 0]; ++G__84990__i;}
G__84989 = new cljs.core.IndexedSeq(G__84990__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__84989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__84991__i = 0, G__84991__a = new Array(arguments.length -  0);
while (G__84991__i < G__84991__a.length) {G__84991__a[G__84991__i] = arguments[G__84991__i + 0]; ++G__84991__i;}
  keys = new cljs.core.IndexedSeq(G__84991__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__84992){
var keys = cljs.core.seq(arglist__84992);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__84993__i = 0, G__84993__a = new Array(arguments.length -  1);
while (G__84993__i < G__84993__a.length) {G__84993__a[G__84993__i] = arguments[G__84993__i + 1]; ++G__84993__i;}
  keys = new cljs.core.IndexedSeq(G__84993__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__84994){
var comparator = cljs.core.first(arglist__84994);
var keys = cljs.core.rest(arglist__84994);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__84995_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__84995_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__84995_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__84996_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__84996_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__84996_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__85017 = null;
var G__85017__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85017__1 = (function (result){
var G__85007 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85007) : rf.call(null,G__85007));
});
var G__85017__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__85008 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85008) : cljs.core.deref.call(null,G__85008));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__85009 = result;
var G__85010 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85009,G__85010) : rf.call(null,G__85009,G__85010));
}
});
G__85017 = function(result,input){
switch(arguments.length){
case 0:
return G__85017__0.call(this);
case 1:
return G__85017__1.call(this,result);
case 2:
return G__85017__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85017.cljs$core$IFn$_invoke$arity$0 = G__85017__0;
G__85017.cljs$core$IFn$_invoke$arity$1 = G__85017__1;
G__85017.cljs$core$IFn$_invoke$arity$2 = G__85017__2;
return G__85017;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__85015,seen__$1){
while(true){
var vec__85016 = p__85015;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85016,(0),null);
var xs__$1 = vec__85016;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__85018 = cljs.core.rest(s);
var G__85019 = seen__$1;
p__85015 = G__85018;
seen__$1 = G__85019;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__85020 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__85021 = cljs.core.next(s__$1);
ret = G__85020;
s__$1 = G__85021;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__85023 = x;
if(G__85023){
var bit__4655__auto__ = (G__85023.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__85023.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__85024 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__85025 = cljs.core.next(ks);
var G__85026 = cljs.core.next(vs);
map = G__85024;
ks = G__85025;
vs = G__85026;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__85037 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__85037) : k.call(null,G__85037));
})() > (function (){var G__85038 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__85038) : k.call(null,G__85038));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__85039__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__85027_SHARP_,p2__85028_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__85027_SHARP_,p2__85028_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__85039 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__85040__i = 0, G__85040__a = new Array(arguments.length -  3);
while (G__85040__i < G__85040__a.length) {G__85040__a[G__85040__i] = arguments[G__85040__i + 3]; ++G__85040__i;}
  more = new cljs.core.IndexedSeq(G__85040__a,0);
} 
return G__85039__delegate.call(this,k,x,y,more);};
G__85039.cljs$lang$maxFixedArity = 3;
G__85039.cljs$lang$applyTo = (function (arglist__85041){
var k = cljs.core.first(arglist__85041);
arglist__85041 = cljs.core.next(arglist__85041);
var x = cljs.core.first(arglist__85041);
arglist__85041 = cljs.core.next(arglist__85041);
var y = cljs.core.first(arglist__85041);
var more = cljs.core.rest(arglist__85041);
return G__85039__delegate(k,x,y,more);
});
G__85039.cljs$core$IFn$_invoke$arity$variadic = G__85039__delegate;
return G__85039;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__85042 = null;
if (arguments.length > 3) {
var G__85043__i = 0, G__85043__a = new Array(arguments.length -  3);
while (G__85043__i < G__85043__a.length) {G__85043__a[G__85043__i] = arguments[G__85043__i + 3]; ++G__85043__i;}
G__85042 = new cljs.core.IndexedSeq(G__85043__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__85042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__85054 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__85054) : k.call(null,G__85054));
})() < (function (){var G__85055 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__85055) : k.call(null,G__85055));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__85056__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__85044_SHARP_,p2__85045_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__85044_SHARP_,p2__85045_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__85056 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__85057__i = 0, G__85057__a = new Array(arguments.length -  3);
while (G__85057__i < G__85057__a.length) {G__85057__a[G__85057__i] = arguments[G__85057__i + 3]; ++G__85057__i;}
  more = new cljs.core.IndexedSeq(G__85057__a,0);
} 
return G__85056__delegate.call(this,k,x,y,more);};
G__85056.cljs$lang$maxFixedArity = 3;
G__85056.cljs$lang$applyTo = (function (arglist__85058){
var k = cljs.core.first(arglist__85058);
arglist__85058 = cljs.core.next(arglist__85058);
var x = cljs.core.first(arglist__85058);
arglist__85058 = cljs.core.next(arglist__85058);
var y = cljs.core.first(arglist__85058);
var more = cljs.core.rest(arglist__85058);
return G__85056__delegate(k,x,y,more);
});
G__85056.cljs$core$IFn$_invoke$arity$variadic = G__85056__delegate;
return G__85056;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__85059 = null;
if (arguments.length > 3) {
var G__85060__i = 0, G__85060__a = new Array(arguments.length -  3);
while (G__85060__i < G__85060__a.length) {G__85060__a[G__85060__i] = arguments[G__85060__i + 3]; ++G__85060__i;}
G__85059 = new cljs.core.IndexedSeq(G__85060__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__85059);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__85077 = null;
var G__85077__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85077__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__85072 = result;
var G__85073 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85072,G__85073) : rf.call(null,G__85072,G__85073));
})());
})());
var G__85074 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85074) : rf.call(null,G__85074));
});
var G__85077__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__85075 = result;
var G__85076 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85075,G__85076) : rf.call(null,G__85075,G__85076));
} else {
return result;
}
});
G__85077 = function(result,input){
switch(arguments.length){
case 0:
return G__85077__0.call(this);
case 1:
return G__85077__1.call(this,result);
case 2:
return G__85077__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85077.cljs$core$IFn$_invoke$arity$0 = G__85077__0;
G__85077.cljs$core$IFn$_invoke$arity$1 = G__85077__1;
G__85077.cljs$core$IFn$_invoke$arity$2 = G__85077__2;
return G__85077;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__85090 = null;
var G__85090__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85090__1 = (function (result){
var G__85085 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85085) : rf.call(null,G__85085));
});
var G__85090__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__85086 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__85086) : pred.call(null,G__85086));
})())){
var G__85087 = result;
var G__85088 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85087,G__85088) : rf.call(null,G__85087,G__85088));
} else {
return cljs.core.reduced(result);
}
});
G__85090 = function(result,input){
switch(arguments.length){
case 0:
return G__85090__0.call(this);
case 1:
return G__85090__1.call(this,result);
case 2:
return G__85090__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85090.cljs$core$IFn$_invoke$arity$0 = G__85090__0;
G__85090.cljs$core$IFn$_invoke$arity$1 = G__85090__1;
G__85090.cljs$core$IFn$_invoke$arity$2 = G__85090__2;
return G__85090;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__85089 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__85089) : pred.call(null,G__85089));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__85095 = (function (){var G__85097 = cljs.core._entry_key(sc,e);
var G__85098 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__85097,G__85098) : comp.call(null,G__85097,G__85098));
})();
var G__85096 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__85095,G__85096) : test.call(null,G__85095,G__85096));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__85102 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85102,(0),null);
var s = vec__85102;
if(cljs.core.truth_((function (){var G__85103 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__85103) : include.call(null,G__85103));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__85104 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85104,(0),null);
var s = vec__85104;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__85108 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85108,(0),null);
var s = vec__85108;
if(cljs.core.truth_((function (){var G__85109 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__85109) : include.call(null,G__85109));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__85110 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85110,(0),null);
var s = vec__85110;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__85111 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__85111) : Math.ceil.call(null,G__85111));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__85112 = ret;
var G__85113 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__85112,G__85113) : f.call(null,G__85112,G__85113));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__85114 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85114) : cljs.core.deref.call(null,G__85114));
} else {
var G__85115 = (i + self__.step);
var G__85116 = ret__$1;
i = G__85115;
ret = G__85116;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__85134 = null;
var G__85134__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85134__1 = (function (result){
var G__85131 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85131) : rf.call(null,G__85131));
});
var G__85134__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__85132 = result;
var G__85133 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85132,G__85133) : rf.call(null,G__85132,G__85133));
} else {
return result;
}
});
G__85134 = function(result,input){
switch(arguments.length){
case 0:
return G__85134__0.call(this);
case 1:
return G__85134__1.call(this,result);
case 2:
return G__85134__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85134.cljs$core$IFn$_invoke$arity$0 = G__85134__0;
G__85134.cljs$core$IFn$_invoke$arity$1 = G__85134__1;
G__85134.cljs$core$IFn$_invoke$arity$2 = G__85134__2;
return G__85134;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__85156 = null;
var G__85156__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85156__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__85147 = result;
var G__85148 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85147,G__85148) : rf.call(null,G__85147,G__85148));
})());
})());
var G__85149 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85149) : rf.call(null,G__85149));
});
var G__85156__2 = (function (result,input){
var pval = (function (){var G__85150 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85150) : cljs.core.deref.call(null,G__85150));
})();
var val = (function (){var G__85151 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85151) : f.call(null,G__85151));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__85152 = result;
var G__85153 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85152,G__85153) : rf.call(null,G__85152,G__85153));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__85156 = function(result,input){
switch(arguments.length){
case 0:
return G__85156__0.call(this);
case 1:
return G__85156__1.call(this,result);
case 2:
return G__85156__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85156.cljs$core$IFn$_invoke$arity$0 = G__85156__0;
G__85156.cljs$core$IFn$_invoke$arity$1 = G__85156__1;
G__85156.cljs$core$IFn$_invoke$arity$2 = G__85156__2;
return G__85156;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__85154 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85154) : f.call(null,G__85154));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__85135_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__85155 = p1__85135_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85155) : f.call(null,G__85155));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__85165 = init;
var G__85166 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__85165,G__85166) : f.call(null,G__85165,G__85166));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__85261 = null;
var G__85261__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__85261__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85219 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85219) : f.call(null,G__85219));
})()],null));
});
var G__85261__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85220 = x;
var G__85221 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__85220,G__85221) : f.call(null,G__85220,G__85221));
})()],null));
});
var G__85261__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85222 = x;
var G__85223 = y;
var G__85224 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__85222,G__85223,G__85224) : f.call(null,G__85222,G__85223,G__85224));
})()],null));
});
var G__85261__4 = (function() { 
var G__85262__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__85262 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__85263__i = 0, G__85263__a = new Array(arguments.length -  3);
while (G__85263__i < G__85263__a.length) {G__85263__a[G__85263__i] = arguments[G__85263__i + 3]; ++G__85263__i;}
  args = new cljs.core.IndexedSeq(G__85263__a,0);
} 
return G__85262__delegate.call(this,x,y,z,args);};
G__85262.cljs$lang$maxFixedArity = 3;
G__85262.cljs$lang$applyTo = (function (arglist__85264){
var x = cljs.core.first(arglist__85264);
arglist__85264 = cljs.core.next(arglist__85264);
var y = cljs.core.first(arglist__85264);
arglist__85264 = cljs.core.next(arglist__85264);
var z = cljs.core.first(arglist__85264);
var args = cljs.core.rest(arglist__85264);
return G__85262__delegate(x,y,z,args);
});
G__85262.cljs$core$IFn$_invoke$arity$variadic = G__85262__delegate;
return G__85262;
})()
;
G__85261 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__85261__0.call(this);
case 1:
return G__85261__1.call(this,x);
case 2:
return G__85261__2.call(this,x,y);
case 3:
return G__85261__3.call(this,x,y,z);
default:
var G__85265 = null;
if (arguments.length > 3) {
var G__85266__i = 0, G__85266__a = new Array(arguments.length -  3);
while (G__85266__i < G__85266__a.length) {G__85266__a[G__85266__i] = arguments[G__85266__i + 3]; ++G__85266__i;}
G__85265 = new cljs.core.IndexedSeq(G__85266__a,0);
}
return G__85261__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__85265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85261.cljs$lang$maxFixedArity = 3;
G__85261.cljs$lang$applyTo = G__85261__4.cljs$lang$applyTo;
G__85261.cljs$core$IFn$_invoke$arity$0 = G__85261__0;
G__85261.cljs$core$IFn$_invoke$arity$1 = G__85261__1;
G__85261.cljs$core$IFn$_invoke$arity$2 = G__85261__2;
G__85261.cljs$core$IFn$_invoke$arity$3 = G__85261__3;
G__85261.cljs$core$IFn$_invoke$arity$variadic = G__85261__4.cljs$core$IFn$_invoke$arity$variadic;
return G__85261;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__85267 = null;
var G__85267__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__85267__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85225 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85225) : f.call(null,G__85225));
})(),(function (){var G__85226 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__85226) : g.call(null,G__85226));
})()],null));
});
var G__85267__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85227 = x;
var G__85228 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__85227,G__85228) : f.call(null,G__85227,G__85228));
})(),(function (){var G__85229 = x;
var G__85230 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__85229,G__85230) : g.call(null,G__85229,G__85230));
})()],null));
});
var G__85267__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85231 = x;
var G__85232 = y;
var G__85233 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__85231,G__85232,G__85233) : f.call(null,G__85231,G__85232,G__85233));
})(),(function (){var G__85234 = x;
var G__85235 = y;
var G__85236 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__85234,G__85235,G__85236) : g.call(null,G__85234,G__85235,G__85236));
})()],null));
});
var G__85267__4 = (function() { 
var G__85268__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__85268 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__85269__i = 0, G__85269__a = new Array(arguments.length -  3);
while (G__85269__i < G__85269__a.length) {G__85269__a[G__85269__i] = arguments[G__85269__i + 3]; ++G__85269__i;}
  args = new cljs.core.IndexedSeq(G__85269__a,0);
} 
return G__85268__delegate.call(this,x,y,z,args);};
G__85268.cljs$lang$maxFixedArity = 3;
G__85268.cljs$lang$applyTo = (function (arglist__85270){
var x = cljs.core.first(arglist__85270);
arglist__85270 = cljs.core.next(arglist__85270);
var y = cljs.core.first(arglist__85270);
arglist__85270 = cljs.core.next(arglist__85270);
var z = cljs.core.first(arglist__85270);
var args = cljs.core.rest(arglist__85270);
return G__85268__delegate(x,y,z,args);
});
G__85268.cljs$core$IFn$_invoke$arity$variadic = G__85268__delegate;
return G__85268;
})()
;
G__85267 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__85267__0.call(this);
case 1:
return G__85267__1.call(this,x);
case 2:
return G__85267__2.call(this,x,y);
case 3:
return G__85267__3.call(this,x,y,z);
default:
var G__85271 = null;
if (arguments.length > 3) {
var G__85272__i = 0, G__85272__a = new Array(arguments.length -  3);
while (G__85272__i < G__85272__a.length) {G__85272__a[G__85272__i] = arguments[G__85272__i + 3]; ++G__85272__i;}
G__85271 = new cljs.core.IndexedSeq(G__85272__a,0);
}
return G__85267__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__85271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85267.cljs$lang$maxFixedArity = 3;
G__85267.cljs$lang$applyTo = G__85267__4.cljs$lang$applyTo;
G__85267.cljs$core$IFn$_invoke$arity$0 = G__85267__0;
G__85267.cljs$core$IFn$_invoke$arity$1 = G__85267__1;
G__85267.cljs$core$IFn$_invoke$arity$2 = G__85267__2;
G__85267.cljs$core$IFn$_invoke$arity$3 = G__85267__3;
G__85267.cljs$core$IFn$_invoke$arity$variadic = G__85267__4.cljs$core$IFn$_invoke$arity$variadic;
return G__85267;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__85273 = null;
var G__85273__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__85273__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85237 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85237) : f.call(null,G__85237));
})(),(function (){var G__85238 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__85238) : g.call(null,G__85238));
})(),(function (){var G__85239 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__85239) : h.call(null,G__85239));
})()],null));
});
var G__85273__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85240 = x;
var G__85241 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__85240,G__85241) : f.call(null,G__85240,G__85241));
})(),(function (){var G__85242 = x;
var G__85243 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__85242,G__85243) : g.call(null,G__85242,G__85243));
})(),(function (){var G__85244 = x;
var G__85245 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__85244,G__85245) : h.call(null,G__85244,G__85245));
})()],null));
});
var G__85273__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__85246 = x;
var G__85247 = y;
var G__85248 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__85246,G__85247,G__85248) : f.call(null,G__85246,G__85247,G__85248));
})(),(function (){var G__85249 = x;
var G__85250 = y;
var G__85251 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__85249,G__85250,G__85251) : g.call(null,G__85249,G__85250,G__85251));
})(),(function (){var G__85252 = x;
var G__85253 = y;
var G__85254 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__85252,G__85253,G__85254) : h.call(null,G__85252,G__85253,G__85254));
})()],null));
});
var G__85273__4 = (function() { 
var G__85274__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__85274 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__85275__i = 0, G__85275__a = new Array(arguments.length -  3);
while (G__85275__i < G__85275__a.length) {G__85275__a[G__85275__i] = arguments[G__85275__i + 3]; ++G__85275__i;}
  args = new cljs.core.IndexedSeq(G__85275__a,0);
} 
return G__85274__delegate.call(this,x,y,z,args);};
G__85274.cljs$lang$maxFixedArity = 3;
G__85274.cljs$lang$applyTo = (function (arglist__85276){
var x = cljs.core.first(arglist__85276);
arglist__85276 = cljs.core.next(arglist__85276);
var y = cljs.core.first(arglist__85276);
arglist__85276 = cljs.core.next(arglist__85276);
var z = cljs.core.first(arglist__85276);
var args = cljs.core.rest(arglist__85276);
return G__85274__delegate(x,y,z,args);
});
G__85274.cljs$core$IFn$_invoke$arity$variadic = G__85274__delegate;
return G__85274;
})()
;
G__85273 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__85273__0.call(this);
case 1:
return G__85273__1.call(this,x);
case 2:
return G__85273__2.call(this,x,y);
case 3:
return G__85273__3.call(this,x,y,z);
default:
var G__85277 = null;
if (arguments.length > 3) {
var G__85278__i = 0, G__85278__a = new Array(arguments.length -  3);
while (G__85278__i < G__85278__a.length) {G__85278__a[G__85278__i] = arguments[G__85278__i + 3]; ++G__85278__i;}
G__85277 = new cljs.core.IndexedSeq(G__85278__a,0);
}
return G__85273__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__85277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85273.cljs$lang$maxFixedArity = 3;
G__85273.cljs$lang$applyTo = G__85273__4.cljs$lang$applyTo;
G__85273.cljs$core$IFn$_invoke$arity$0 = G__85273__0;
G__85273.cljs$core$IFn$_invoke$arity$1 = G__85273__1;
G__85273.cljs$core$IFn$_invoke$arity$2 = G__85273__2;
G__85273.cljs$core$IFn$_invoke$arity$3 = G__85273__3;
G__85273.cljs$core$IFn$_invoke$arity$variadic = G__85273__4.cljs$core$IFn$_invoke$arity$variadic;
return G__85273;
})()
});
var juxt__4 = (function() { 
var G__85279__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__85280 = null;
var G__85280__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__85167_SHARP_,p2__85168_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__85167_SHARP_,(function (){return (p2__85168_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__85168_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__85168_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__85280__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__85169_SHARP_,p2__85170_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__85169_SHARP_,(function (){var G__85255 = x;
return (p2__85170_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__85170_SHARP_.cljs$core$IFn$_invoke$arity$1(G__85255) : p2__85170_SHARP_.call(null,G__85255));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__85280__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__85171_SHARP_,p2__85172_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__85171_SHARP_,(function (){var G__85256 = x;
var G__85257 = y;
return (p2__85172_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__85172_SHARP_.cljs$core$IFn$_invoke$arity$2(G__85256,G__85257) : p2__85172_SHARP_.call(null,G__85256,G__85257));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__85280__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__85173_SHARP_,p2__85174_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__85173_SHARP_,(function (){var G__85258 = x;
var G__85259 = y;
var G__85260 = z;
return (p2__85174_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__85174_SHARP_.cljs$core$IFn$_invoke$arity$3(G__85258,G__85259,G__85260) : p2__85174_SHARP_.call(null,G__85258,G__85259,G__85260));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__85280__4 = (function() { 
var G__85281__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__85175_SHARP_,p2__85176_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__85175_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__85176_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__85281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__85282__i = 0, G__85282__a = new Array(arguments.length -  3);
while (G__85282__i < G__85282__a.length) {G__85282__a[G__85282__i] = arguments[G__85282__i + 3]; ++G__85282__i;}
  args = new cljs.core.IndexedSeq(G__85282__a,0);
} 
return G__85281__delegate.call(this,x,y,z,args);};
G__85281.cljs$lang$maxFixedArity = 3;
G__85281.cljs$lang$applyTo = (function (arglist__85283){
var x = cljs.core.first(arglist__85283);
arglist__85283 = cljs.core.next(arglist__85283);
var y = cljs.core.first(arglist__85283);
arglist__85283 = cljs.core.next(arglist__85283);
var z = cljs.core.first(arglist__85283);
var args = cljs.core.rest(arglist__85283);
return G__85281__delegate(x,y,z,args);
});
G__85281.cljs$core$IFn$_invoke$arity$variadic = G__85281__delegate;
return G__85281;
})()
;
G__85280 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__85280__0.call(this);
case 1:
return G__85280__1.call(this,x);
case 2:
return G__85280__2.call(this,x,y);
case 3:
return G__85280__3.call(this,x,y,z);
default:
var G__85284 = null;
if (arguments.length > 3) {
var G__85285__i = 0, G__85285__a = new Array(arguments.length -  3);
while (G__85285__i < G__85285__a.length) {G__85285__a[G__85285__i] = arguments[G__85285__i + 3]; ++G__85285__i;}
G__85284 = new cljs.core.IndexedSeq(G__85285__a,0);
}
return G__85280__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__85284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85280.cljs$lang$maxFixedArity = 3;
G__85280.cljs$lang$applyTo = G__85280__4.cljs$lang$applyTo;
G__85280.cljs$core$IFn$_invoke$arity$0 = G__85280__0;
G__85280.cljs$core$IFn$_invoke$arity$1 = G__85280__1;
G__85280.cljs$core$IFn$_invoke$arity$2 = G__85280__2;
G__85280.cljs$core$IFn$_invoke$arity$3 = G__85280__3;
G__85280.cljs$core$IFn$_invoke$arity$variadic = G__85280__4.cljs$core$IFn$_invoke$arity$variadic;
return G__85280;
})()
;})(fs__$1))
};
var G__85279 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__85286__i = 0, G__85286__a = new Array(arguments.length -  3);
while (G__85286__i < G__85286__a.length) {G__85286__a[G__85286__i] = arguments[G__85286__i + 3]; ++G__85286__i;}
  fs = new cljs.core.IndexedSeq(G__85286__a,0);
} 
return G__85279__delegate.call(this,f,g,h,fs);};
G__85279.cljs$lang$maxFixedArity = 3;
G__85279.cljs$lang$applyTo = (function (arglist__85287){
var f = cljs.core.first(arglist__85287);
arglist__85287 = cljs.core.next(arglist__85287);
var g = cljs.core.first(arglist__85287);
arglist__85287 = cljs.core.next(arglist__85287);
var h = cljs.core.first(arglist__85287);
var fs = cljs.core.rest(arglist__85287);
return G__85279__delegate(f,g,h,fs);
});
G__85279.cljs$core$IFn$_invoke$arity$variadic = G__85279__delegate;
return G__85279;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__85288 = null;
if (arguments.length > 3) {
var G__85289__i = 0, G__85289__a = new Array(arguments.length -  3);
while (G__85289__i < G__85289__a.length) {G__85289__a[G__85289__i] = arguments[G__85289__i + 3]; ++G__85289__i;}
G__85288 = new cljs.core.IndexedSeq(G__85289__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__85288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__85290 = cljs.core.next(coll);
coll = G__85290;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__85291 = (n - (1));
var G__85292 = cljs.core.next(coll);
n = G__85291;
coll = G__85292;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__85296 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85296,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85296,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85296,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_85304 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__85305_85311 = cljs.core.first(coll);
var G__85306_85312 = writer;
var G__85307_85313 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__85305_85311,G__85306_85312,G__85307_85313) : print_one.call(null,G__85305_85311,G__85306_85312,G__85307_85313));
} else {
}

var coll_85314__$1 = cljs.core.next(coll);
var n_85315 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_85314__$1) && (((n_85315 == null)) || (!((n_85315 === (0)))))){
cljs.core._write(writer,sep);

var G__85308_85316 = cljs.core.first(coll_85314__$1);
var G__85309_85317 = writer;
var G__85310_85318 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__85308_85316,G__85309_85317,G__85310_85318) : print_one.call(null,G__85308_85316,G__85309_85317,G__85310_85318));

var G__85319 = cljs.core.next(coll_85314__$1);
var G__85320 = (n_85315 - (1));
coll_85314__$1 = G__85319;
n_85315 = G__85320;
continue;
} else {
if((cljs.core.seq(coll_85314__$1)) && ((n_85315 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_85304;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__85325 = cljs.core.seq(ss);
var chunk__85326 = null;
var count__85327 = (0);
var i__85328 = (0);
while(true){
if((i__85328 < count__85327)){
var s = chunk__85326.cljs$core$IIndexed$_nth$arity$2(null,i__85328);
cljs.core._write(writer,s);

var G__85329 = seq__85325;
var G__85330 = chunk__85326;
var G__85331 = count__85327;
var G__85332 = (i__85328 + (1));
seq__85325 = G__85329;
chunk__85326 = G__85330;
count__85327 = G__85331;
i__85328 = G__85332;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__85325);
if(temp__4126__auto__){
var seq__85325__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__85325__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__85325__$1);
var G__85333 = cljs.core.chunk_rest(seq__85325__$1);
var G__85334 = c__4768__auto__;
var G__85335 = cljs.core.count(c__4768__auto__);
var G__85336 = (0);
seq__85325 = G__85333;
chunk__85326 = G__85334;
count__85327 = G__85335;
i__85328 = G__85336;
continue;
} else {
var s = cljs.core.first(seq__85325__$1);
cljs.core._write(writer,s);

var G__85337 = cljs.core.next(seq__85325__$1);
var G__85338 = null;
var G__85339 = (0);
var G__85340 = (0);
seq__85325 = G__85337;
chunk__85326 = G__85338;
count__85327 = G__85339;
i__85328 = G__85340;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__85341__i = 0, G__85341__a = new Array(arguments.length -  1);
while (G__85341__i < G__85341__a.length) {G__85341__a[G__85341__i] = arguments[G__85341__i + 1]; ++G__85341__i;}
  ss = new cljs.core.IndexedSeq(G__85341__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__85342){
var writer = cljs.core.first(arglist__85342);
var ss = cljs.core.rest(arglist__85342);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj85344 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj85344;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__85347 = "[\\\\\"\b\f\n\r\t]";
var G__85348 = "g";
return RegExp(G__85347,G__85348);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__85362 = obj;
if(G__85362){
var bit__4662__auto__ = (G__85362.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__85362.cljs$core$IMeta$)){
return true;
} else {
if((!G__85362.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__85362);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__85362);
}
})();
if(and__3969__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__85363_85373 = cljs.core.meta(obj);
var G__85364_85374 = writer;
var G__85365_85375 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__85363_85373,G__85364_85374,G__85365_85375) : cljs.core.pr_writer.call(null,G__85363_85373,G__85364_85374,G__85365_85375));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__85366 = obj;
if(G__85366){
var bit__4655__auto__ = (G__85366.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4655__auto__) || (G__85366.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__85367 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__85368 = cljs.core.pr_writer;
var G__85369 = writer;
var G__85370 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__85367,G__85368,G__85369,G__85370) : cljs.core.print_map.call(null,G__85367,G__85368,G__85369,G__85370));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__85371 = obj;
return goog.isString(G__85371);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__85376 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__85376;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__85372 = obj;
if(G__85372){
var bit__4662__auto__ = (G__85372.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4662__auto__) || (G__85372.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__85372.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__85372);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__85372);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__85380 = obj;
var G__85381 = writer;
var G__85382 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__85380,G__85381,G__85382) : alt_impl.call(null,G__85380,G__85381,G__85382));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__85387 = cljs.core.seq(cljs.core.next(objs));
var chunk__85388 = null;
var count__85389 = (0);
var i__85390 = (0);
while(true){
if((i__85390 < count__85389)){
var obj = chunk__85388.cljs$core$IIndexed$_nth$arity$2(null,i__85390);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__85391 = seq__85387;
var G__85392 = chunk__85388;
var G__85393 = count__85389;
var G__85394 = (i__85390 + (1));
seq__85387 = G__85391;
chunk__85388 = G__85392;
count__85389 = G__85393;
i__85390 = G__85394;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__85387);
if(temp__4126__auto__){
var seq__85387__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__85387__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__85387__$1);
var G__85395 = cljs.core.chunk_rest(seq__85387__$1);
var G__85396 = c__4768__auto__;
var G__85397 = cljs.core.count(c__4768__auto__);
var G__85398 = (0);
seq__85387 = G__85395;
chunk__85388 = G__85396;
count__85389 = G__85397;
i__85390 = G__85398;
continue;
} else {
var obj = cljs.core.first(seq__85387__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__85399 = cljs.core.next(seq__85387__$1);
var G__85400 = null;
var G__85401 = (0);
var G__85402 = (0);
seq__85387 = G__85399;
chunk__85388 = G__85400;
count__85389 = G__85401;
i__85390 = G__85402;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85403__i = 0, G__85403__a = new Array(arguments.length -  0);
while (G__85403__i < G__85403__a.length) {G__85403__a[G__85403__i] = arguments[G__85403__i + 0]; ++G__85403__i;}
  objs = new cljs.core.IndexedSeq(G__85403__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__85404){
var objs = cljs.core.seq(arglist__85404);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85405__i = 0, G__85405__a = new Array(arguments.length -  0);
while (G__85405__i < G__85405__a.length) {G__85405__a[G__85405__i] = arguments[G__85405__i + 0]; ++G__85405__i;}
  objs = new cljs.core.IndexedSeq(G__85405__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__85406){
var objs = cljs.core.seq(arglist__85406);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85407__i = 0, G__85407__a = new Array(arguments.length -  0);
while (G__85407__i < G__85407__a.length) {G__85407__a[G__85407__i] = arguments[G__85407__i + 0]; ++G__85407__i;}
  objs = new cljs.core.IndexedSeq(G__85407__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__85408){
var objs = cljs.core.seq(arglist__85408);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85409__i = 0, G__85409__a = new Array(arguments.length -  0);
while (G__85409__i < G__85409__a.length) {G__85409__a[G__85409__i] = arguments[G__85409__i + 0]; ++G__85409__i;}
  objs = new cljs.core.IndexedSeq(G__85409__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__85410){
var objs = cljs.core.seq(arglist__85410);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85411__i = 0, G__85411__a = new Array(arguments.length -  0);
while (G__85411__i < G__85411__a.length) {G__85411__a[G__85411__i] = arguments[G__85411__i + 0]; ++G__85411__i;}
  objs = new cljs.core.IndexedSeq(G__85411__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__85412){
var objs = cljs.core.seq(arglist__85412);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85413__i = 0, G__85413__a = new Array(arguments.length -  0);
while (G__85413__i < G__85413__a.length) {G__85413__a[G__85413__i] = arguments[G__85413__i + 0]; ++G__85413__i;}
  objs = new cljs.core.IndexedSeq(G__85413__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__85414){
var objs = cljs.core.seq(arglist__85414);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85415__i = 0, G__85415__a = new Array(arguments.length -  0);
while (G__85415__i < G__85415__a.length) {G__85415__a[G__85415__i] = arguments[G__85415__i + 0]; ++G__85415__i;}
  objs = new cljs.core.IndexedSeq(G__85415__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__85416){
var objs = cljs.core.seq(arglist__85416);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__85417__i = 0, G__85417__a = new Array(arguments.length -  0);
while (G__85417__i < G__85417__a.length) {G__85417__a[G__85417__i] = arguments[G__85417__i + 0]; ++G__85417__i;}
  objs = new cljs.core.IndexedSeq(G__85417__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__85418){
var objs = cljs.core.seq(arglist__85418);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__85425_85431 = cljs.core.key(e);
var G__85426_85432 = w;
var G__85427_85433 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__85425_85431,G__85426_85432,G__85427_85433) : print_one.call(null,G__85425_85431,G__85426_85432,G__85427_85433));

cljs.core._write(w," ");

var G__85428 = cljs.core.val(e);
var G__85429 = w;
var G__85430 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__85428,G__85429,G__85430) : print_one.call(null,G__85428,G__85429,G__85430));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__85434__i = 0, G__85434__a = new Array(arguments.length -  2);
while (G__85434__i < G__85434__a.length) {G__85434__a[G__85434__i] = arguments[G__85434__i + 2]; ++G__85434__i;}
  args = new cljs.core.IndexedSeq(G__85434__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__85435){
var iref = cljs.core.first(arglist__85435);
arglist__85435 = cljs.core.next(arglist__85435);
var f = cljs.core.first(arglist__85435);
var args = cljs.core.rest(arglist__85435);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__85438 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__85438) : cljs.core.atom.call(null,G__85438));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__85440 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85440) : cljs.core.deref.call(null,G__85440));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__85441_SHARP_,p2__85442_SHARP_){
var ret = (function (){var G__85445 = p1__85441_SHARP_;
var G__85446 = p2__85442_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85445,G__85446) : rf.call(null,G__85445,G__85446));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__85449 = null;
var G__85449__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85449__1 = (function (result){
var G__85448 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85448) : rf.call(null,G__85448));
});
var G__85449__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__85449 = function(result,input){
switch(arguments.length){
case 0:
return G__85449__0.call(this);
case 1:
return G__85449__1.call(this,result);
case 2:
return G__85449__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85449.cljs$core$IFn$_invoke$arity$0 = G__85449__0;
G__85449.cljs$core$IFn$_invoke$arity$1 = G__85449__1;
G__85449.cljs$core$IFn$_invoke$arity$2 = G__85449__2;
return G__85449;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__85458 = null;
var G__85458__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__85458__1 = (function (result){
var G__85454 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__85454) : rf.call(null,G__85454));
});
var G__85458__2 = (function (result,input){
var prior = (function (){var G__85455 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85455) : cljs.core.deref.call(null,G__85455));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__85456 = result;
var G__85457 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__85456,G__85457) : rf.call(null,G__85456,G__85457));
}
});
G__85458 = function(result,input){
switch(arguments.length){
case 0:
return G__85458__0.call(this);
case 1:
return G__85458__1.call(this,result);
case 2:
return G__85458__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__85458.cljs$core$IFn$_invoke$arity$0 = G__85458__0;
G__85458.cljs$core$IFn$_invoke$arity$1 = G__85458__1;
G__85458.cljs$core$IFn$_invoke$arity$2 = G__85458__2;
return G__85458;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__85460_SHARP_,p2__85459_SHARP_){
var G__85462 = p2__85459_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__85462) : proc.call(null,G__85462));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj85464 = {};
return obj85464;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._clj__GT_js[(function (){var G__85468 = x__4625__auto__;
return goog.typeOf(G__85468);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._key__GT_js[(function (){var G__85472 = x__4625__auto__;
return goog.typeOf(G__85472);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__85475 = k;
if(G__85475){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__85475.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__85475.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__85475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__85475);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__85476 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__85476) : cljs.core.clj__GT_js.call(null,G__85476));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__85492 = x;
if(G__85492){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__85492.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__85492.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__85492);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__85492);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj85494 = {};
return obj85494;
})();
var seq__85495_85505 = cljs.core.seq(x);
var chunk__85496_85506 = null;
var count__85497_85507 = (0);
var i__85498_85508 = (0);
while(true){
if((i__85498_85508 < count__85497_85507)){
var vec__85499_85509 = chunk__85496_85506.cljs$core$IIndexed$_nth$arity$2(null,i__85498_85508);
var k_85510 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85499_85509,(0),null);
var v_85511 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85499_85509,(1),null);
(m[cljs.core.key__GT_js(k_85510)] = clj__GT_js(v_85511));

var G__85512 = seq__85495_85505;
var G__85513 = chunk__85496_85506;
var G__85514 = count__85497_85507;
var G__85515 = (i__85498_85508 + (1));
seq__85495_85505 = G__85512;
chunk__85496_85506 = G__85513;
count__85497_85507 = G__85514;
i__85498_85508 = G__85515;
continue;
} else {
var temp__4126__auto___85516 = cljs.core.seq(seq__85495_85505);
if(temp__4126__auto___85516){
var seq__85495_85517__$1 = temp__4126__auto___85516;
if(cljs.core.chunked_seq_QMARK_(seq__85495_85517__$1)){
var c__4768__auto___85518 = cljs.core.chunk_first(seq__85495_85517__$1);
var G__85519 = cljs.core.chunk_rest(seq__85495_85517__$1);
var G__85520 = c__4768__auto___85518;
var G__85521 = cljs.core.count(c__4768__auto___85518);
var G__85522 = (0);
seq__85495_85505 = G__85519;
chunk__85496_85506 = G__85520;
count__85497_85507 = G__85521;
i__85498_85508 = G__85522;
continue;
} else {
var vec__85500_85523 = cljs.core.first(seq__85495_85517__$1);
var k_85524 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85500_85523,(0),null);
var v_85525 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85500_85523,(1),null);
(m[cljs.core.key__GT_js(k_85524)] = clj__GT_js(v_85525));

var G__85526 = cljs.core.next(seq__85495_85517__$1);
var G__85527 = null;
var G__85528 = (0);
var G__85529 = (0);
seq__85495_85505 = G__85526;
chunk__85496_85506 = G__85527;
count__85497_85507 = G__85528;
i__85498_85508 = G__85529;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__85501_85530 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__85502_85531 = null;
var count__85503_85532 = (0);
var i__85504_85533 = (0);
while(true){
if((i__85504_85533 < count__85503_85532)){
var x_85534__$1 = chunk__85502_85531.cljs$core$IIndexed$_nth$arity$2(null,i__85504_85533);
arr.push(x_85534__$1);

var G__85535 = seq__85501_85530;
var G__85536 = chunk__85502_85531;
var G__85537 = count__85503_85532;
var G__85538 = (i__85504_85533 + (1));
seq__85501_85530 = G__85535;
chunk__85502_85531 = G__85536;
count__85503_85532 = G__85537;
i__85504_85533 = G__85538;
continue;
} else {
var temp__4126__auto___85539 = cljs.core.seq(seq__85501_85530);
if(temp__4126__auto___85539){
var seq__85501_85540__$1 = temp__4126__auto___85539;
if(cljs.core.chunked_seq_QMARK_(seq__85501_85540__$1)){
var c__4768__auto___85541 = cljs.core.chunk_first(seq__85501_85540__$1);
var G__85542 = cljs.core.chunk_rest(seq__85501_85540__$1);
var G__85543 = c__4768__auto___85541;
var G__85544 = cljs.core.count(c__4768__auto___85541);
var G__85545 = (0);
seq__85501_85530 = G__85542;
chunk__85502_85531 = G__85543;
count__85503_85532 = G__85544;
i__85504_85533 = G__85545;
continue;
} else {
var x_85546__$1 = cljs.core.first(seq__85501_85540__$1);
arr.push(x_85546__$1);

var G__85547 = cljs.core.next(seq__85501_85540__$1);
var G__85548 = null;
var G__85549 = (0);
var G__85550 = (0);
seq__85501_85530 = G__85547;
chunk__85502_85531 = G__85548;
count__85503_85532 = G__85549;
i__85504_85533 = G__85550;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj85552 = {};
return obj85552;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._js__GT_clj[(function (){var G__85556 = x__4625__auto__;
return goog.typeOf(G__85556);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__85613__delegate = function (x,opts){
var map__85586 = opts;
var map__85586__$1 = ((cljs.core.seq_QMARK_(map__85586))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__85586):map__85586);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__85586__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__85586,map__85586__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__85602 = x__$1;
if(G__85602){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__85602.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__85602.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__85602);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__85602);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4737__auto__ = ((function (map__85586,map__85586__$1,keywordize_keys,keyfn){
return (function iter__85603(s__85604){
return (new cljs.core.LazySeq(null,((function (map__85586,map__85586__$1,keywordize_keys,keyfn){
return (function (){
var s__85604__$1 = s__85604;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__85604__$1);
if(temp__4126__auto__){
var s__85604__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__85604__$2)){
var c__4735__auto__ = cljs.core.chunk_first(s__85604__$2);
var size__4736__auto__ = cljs.core.count(c__4735__auto__);
var b__85606 = cljs.core.chunk_buffer(size__4736__auto__);
if((function (){var i__85605 = (0);
while(true){
if((i__85605 < size__4736__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4735__auto__,i__85605);
cljs.core.chunk_append(b__85606,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__85611 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__85611) : keyfn.call(null,G__85611));
})(),thisfn((x__$1[k]))], null));

var G__85614 = (i__85605 + (1));
i__85605 = G__85614;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__85606),iter__85603(cljs.core.chunk_rest(s__85604__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__85606),null);
}
} else {
var k = cljs.core.first(s__85604__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__85612 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__85612) : keyfn.call(null,G__85612));
})(),thisfn((x__$1[k]))], null),iter__85603(cljs.core.rest(s__85604__$2)));
}
} else {
return null;
}
break;
}
});})(map__85586,map__85586__$1,keywordize_keys,keyfn))
,null,null));
});})(map__85586,map__85586__$1,keywordize_keys,keyfn))
;
return iter__4737__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__85586,map__85586__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__85613 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__85615__i = 0, G__85615__a = new Array(arguments.length -  1);
while (G__85615__i < G__85615__a.length) {G__85615__a[G__85615__i] = arguments[G__85615__i + 1]; ++G__85615__i;}
  opts = new cljs.core.IndexedSeq(G__85615__a,0);
} 
return G__85613__delegate.call(this,x,opts);};
G__85613.cljs$lang$maxFixedArity = 1;
G__85613.cljs$lang$applyTo = (function (arglist__85616){
var x = cljs.core.first(arglist__85616);
var opts = cljs.core.rest(arglist__85616);
return G__85613__delegate(x,opts);
});
G__85613.cljs$core$IFn$_invoke$arity$variadic = G__85613__delegate;
return G__85613;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__85617 = null;
if (arguments.length > 1) {
var G__85618__i = 0, G__85618__a = new Array(arguments.length -  1);
while (G__85618__i < G__85618__a.length) {G__85618__a[G__85618__i] = arguments[G__85618__i + 1]; ++G__85618__i;}
G__85617 = new cljs.core.IndexedSeq(G__85618__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__85617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__85621 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__85621) : cljs.core.atom.call(null,G__85621));
})();
return ((function (mem){
return (function() { 
var G__85623__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__85622 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85622) : cljs.core.deref.call(null,G__85622));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__85623 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__85624__i = 0, G__85624__a = new Array(arguments.length -  0);
while (G__85624__i < G__85624__a.length) {G__85624__a[G__85624__i] = arguments[G__85624__i + 0]; ++G__85624__i;}
  args = new cljs.core.IndexedSeq(G__85624__a,0);
} 
return G__85623__delegate.call(this,args);};
G__85623.cljs$lang$maxFixedArity = 0;
G__85623.cljs$lang$applyTo = (function (arglist__85625){
var args = cljs.core.seq(arglist__85625);
return G__85623__delegate(args);
});
G__85623.cljs$core$IFn$_invoke$arity$variadic = G__85623__delegate;
return G__85623;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__85627 = ret;
f = G__85627;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__85628__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__85628 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__85629__i = 0, G__85629__a = new Array(arguments.length -  1);
while (G__85629__i < G__85629__a.length) {G__85629__a[G__85629__i] = arguments[G__85629__i + 1]; ++G__85629__i;}
  args = new cljs.core.IndexedSeq(G__85629__a,0);
} 
return G__85628__delegate.call(this,f,args);};
G__85628.cljs$lang$maxFixedArity = 1;
G__85628.cljs$lang$applyTo = (function (arglist__85630){
var f = cljs.core.first(arglist__85630);
var args = cljs.core.rest(arglist__85630);
return G__85628__delegate(f,args);
});
G__85628.cljs$core$IFn$_invoke$arity$variadic = G__85628__delegate;
return G__85628;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__85631 = null;
if (arguments.length > 1) {
var G__85632__i = 0, G__85632__a = new Array(arguments.length -  1);
while (G__85632__i < G__85632__a.length) {G__85632__a[G__85632__i] = arguments[G__85632__i + 1]; ++G__85632__i;}
G__85631 = new cljs.core.IndexedSeq(G__85632__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__85631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__85635 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__85635) : Math.floor.call(null,G__85635));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__85637 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__85637) : f.call(null,G__85637));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__85639 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__85639) : cljs.core.atom.call(null,G__85639));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__85640__i = 0, G__85640__a = new Array(arguments.length -  1);
while (G__85640__i < G__85640__a.length) {G__85640__a[G__85640__i] = arguments[G__85640__i + 1]; ++G__85640__i;}
  args = new cljs.core.IndexedSeq(G__85640__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__85641){
var f = cljs.core.first(arglist__85641);
var args = cljs.core.rest(arglist__85641);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__85706 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85706) : cljs.core.deref.call(null,G__85706));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3981__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
var and__3969__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3969__auto__){
var and__3969__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3969__auto____$1){
var and__3969__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3969__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__85731 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__85729 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__85729) : child.call(null,G__85729));
})(),(function (){var G__85730 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__85730) : parent.call(null,G__85730));
})());
var G__85732 = (i + (1));
ret = G__85731;
i = G__85732;
continue;
}
break;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__85736 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85736) : cljs.core.deref.call(null,G__85736));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__85740 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85740) : cljs.core.deref.call(null,G__85740));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__85744 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85744) : cljs.core.deref.call(null,G__85744));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__85753 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__85753) : targets.call(null,G__85753));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__85754 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__85754) : sources.call(null,G__85754));
})()));
});})(tp,td,ta))
;
var or__3981__auto__ = ((cljs.core.contains_QMARK_((function (){var G__85758 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__85758) : tp.call(null,G__85758));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__85759 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__85759) : ta.call(null,G__85759));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__85760 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__85760) : ta.call(null,G__85760));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__85767 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__85767) : parentMap.call(null,G__85767));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__85768 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__85768) : parentMap.call(null,G__85768));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__85761_SHARP_){
return cljs.core.cons(cljs.core.first(p1__85761_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__85761_SHARP_),cljs.core.second(p1__85761_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__85769 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__85769) : parentMap.call(null,G__85769));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__85762_SHARP_,p2__85763_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__85762_SHARP_,p2__85763_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__85772 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85772) : cljs.core.deref.call(null,G__85772));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__85773 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85773) : cljs.core.deref.call(null,G__85773));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__85789 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85789) : cljs.core.deref.call(null,G__85789));
})().call(null,x);
var or__3981__auto__ = (cljs.core.truth_((function (){var and__3969__auto__ = xprefs;
if(cljs.core.truth_(and__3969__auto__)){
var G__85791 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__85791) : xprefs.call(null,G__85791));
} else {
return and__3969__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__85792 = cljs.core.rest(ps);
ps = G__85792;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__85793 = cljs.core.rest(ps);
ps = G__85793;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3981__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__85807){
var vec__85808 = p__85807;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85808,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__85808,(1),null);
var e = vec__85808;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__85809 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85809) : cljs.core.deref.call(null,G__85809));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3981__auto__ = (be == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__85810 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85810) : cljs.core.deref.call(null,G__85810));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__85811 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85811) : cljs.core.deref.call(null,G__85811));
})(),(function (){var G__85812 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85812) : cljs.core.deref.call(null,G__85812));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj85814 = {};
return obj85814;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._reset[(function (){var G__85818 = x__4625__auto__;
return goog.typeOf(G__85818);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._add_method[(function (){var G__85822 = x__4625__auto__;
return goog.typeOf(G__85822);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._remove_method[(function (){var G__85826 = x__4625__auto__;
return goog.typeOf(G__85826);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefer_method[(function (){var G__85830 = x__4625__auto__;
return goog.typeOf(G__85830);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._get_method[(function (){var G__85834 = x__4625__auto__;
return goog.typeOf(G__85834);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._get_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._methods[(function (){var G__85838 = x__4625__auto__;
return goog.typeOf(G__85838);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._methods["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefers[(function (){var G__85842 = x__4625__auto__;
return goog.typeOf(G__85842);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefers["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__85844 = this$__$1;
return goog.getUid(G__85844);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__85845 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85845) : cljs.core.deref.call(null,G__85845));
})(),(function (){var G__85846 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85846) : cljs.core.deref.call(null,G__85846));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__85847 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85847) : cljs.core.deref.call(null,G__85847));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__85848 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85848) : cljs.core.deref.call(null,G__85848));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__85849 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85849) : cljs.core.deref.call(null,G__85849));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__85850 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__85850) : cljs.core.deref.call(null,G__85850));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__86691 = null;
var G__86691__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__86691__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85851 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__85851) : self__.dispatch_fn.call(null,G__85851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85852 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__85852) : target_fn.call(null,G__85852));
});
var G__86691__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85853 = a;
var G__85854 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__85853,G__85854) : self__.dispatch_fn.call(null,G__85853,G__85854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85855 = a;
var G__85856 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__85855,G__85856) : target_fn.call(null,G__85855,G__85856));
});
var G__86691__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85857 = a;
var G__85858 = b;
var G__85859 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__85857,G__85858,G__85859) : self__.dispatch_fn.call(null,G__85857,G__85858,G__85859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85860 = a;
var G__85861 = b;
var G__85862 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__85860,G__85861,G__85862) : target_fn.call(null,G__85860,G__85861,G__85862));
});
var G__86691__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85863 = a;
var G__85864 = b;
var G__85865 = c;
var G__85866 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__85863,G__85864,G__85865,G__85866) : self__.dispatch_fn.call(null,G__85863,G__85864,G__85865,G__85866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85867 = a;
var G__85868 = b;
var G__85869 = c;
var G__85870 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__85867,G__85868,G__85869,G__85870) : target_fn.call(null,G__85867,G__85868,G__85869,G__85870));
});
var G__86691__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85871 = a;
var G__85872 = b;
var G__85873 = c;
var G__85874 = d;
var G__85875 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__85871,G__85872,G__85873,G__85874,G__85875) : self__.dispatch_fn.call(null,G__85871,G__85872,G__85873,G__85874,G__85875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85876 = a;
var G__85877 = b;
var G__85878 = c;
var G__85879 = d;
var G__85880 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__85876,G__85877,G__85878,G__85879,G__85880) : target_fn.call(null,G__85876,G__85877,G__85878,G__85879,G__85880));
});
var G__86691__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85881 = a;
var G__85882 = b;
var G__85883 = c;
var G__85884 = d;
var G__85885 = e;
var G__85886 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__85881,G__85882,G__85883,G__85884,G__85885,G__85886) : self__.dispatch_fn.call(null,G__85881,G__85882,G__85883,G__85884,G__85885,G__85886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85887 = a;
var G__85888 = b;
var G__85889 = c;
var G__85890 = d;
var G__85891 = e;
var G__85892 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__85887,G__85888,G__85889,G__85890,G__85891,G__85892) : target_fn.call(null,G__85887,G__85888,G__85889,G__85890,G__85891,G__85892));
});
var G__86691__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85893 = a;
var G__85894 = b;
var G__85895 = c;
var G__85896 = d;
var G__85897 = e;
var G__85898 = f;
var G__85899 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__85893,G__85894,G__85895,G__85896,G__85897,G__85898,G__85899) : self__.dispatch_fn.call(null,G__85893,G__85894,G__85895,G__85896,G__85897,G__85898,G__85899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85900 = a;
var G__85901 = b;
var G__85902 = c;
var G__85903 = d;
var G__85904 = e;
var G__85905 = f;
var G__85906 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__85900,G__85901,G__85902,G__85903,G__85904,G__85905,G__85906) : target_fn.call(null,G__85900,G__85901,G__85902,G__85903,G__85904,G__85905,G__85906));
});
var G__86691__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85907 = a;
var G__85908 = b;
var G__85909 = c;
var G__85910 = d;
var G__85911 = e;
var G__85912 = f;
var G__85913 = g;
var G__85914 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__85907,G__85908,G__85909,G__85910,G__85911,G__85912,G__85913,G__85914) : self__.dispatch_fn.call(null,G__85907,G__85908,G__85909,G__85910,G__85911,G__85912,G__85913,G__85914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85915 = a;
var G__85916 = b;
var G__85917 = c;
var G__85918 = d;
var G__85919 = e;
var G__85920 = f;
var G__85921 = g;
var G__85922 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__85915,G__85916,G__85917,G__85918,G__85919,G__85920,G__85921,G__85922) : target_fn.call(null,G__85915,G__85916,G__85917,G__85918,G__85919,G__85920,G__85921,G__85922));
});
var G__86691__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85923 = a;
var G__85924 = b;
var G__85925 = c;
var G__85926 = d;
var G__85927 = e;
var G__85928 = f;
var G__85929 = g;
var G__85930 = h;
var G__85931 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__85923,G__85924,G__85925,G__85926,G__85927,G__85928,G__85929,G__85930,G__85931) : self__.dispatch_fn.call(null,G__85923,G__85924,G__85925,G__85926,G__85927,G__85928,G__85929,G__85930,G__85931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85932 = a;
var G__85933 = b;
var G__85934 = c;
var G__85935 = d;
var G__85936 = e;
var G__85937 = f;
var G__85938 = g;
var G__85939 = h;
var G__85940 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__85932,G__85933,G__85934,G__85935,G__85936,G__85937,G__85938,G__85939,G__85940) : target_fn.call(null,G__85932,G__85933,G__85934,G__85935,G__85936,G__85937,G__85938,G__85939,G__85940));
});
var G__86691__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85941 = a;
var G__85942 = b;
var G__85943 = c;
var G__85944 = d;
var G__85945 = e;
var G__85946 = f;
var G__85947 = g;
var G__85948 = h;
var G__85949 = i;
var G__85950 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__85941,G__85942,G__85943,G__85944,G__85945,G__85946,G__85947,G__85948,G__85949,G__85950) : self__.dispatch_fn.call(null,G__85941,G__85942,G__85943,G__85944,G__85945,G__85946,G__85947,G__85948,G__85949,G__85950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85951 = a;
var G__85952 = b;
var G__85953 = c;
var G__85954 = d;
var G__85955 = e;
var G__85956 = f;
var G__85957 = g;
var G__85958 = h;
var G__85959 = i;
var G__85960 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__85951,G__85952,G__85953,G__85954,G__85955,G__85956,G__85957,G__85958,G__85959,G__85960) : target_fn.call(null,G__85951,G__85952,G__85953,G__85954,G__85955,G__85956,G__85957,G__85958,G__85959,G__85960));
});
var G__86691__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85961 = a;
var G__85962 = b;
var G__85963 = c;
var G__85964 = d;
var G__85965 = e;
var G__85966 = f;
var G__85967 = g;
var G__85968 = h;
var G__85969 = i;
var G__85970 = j;
var G__85971 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__85961,G__85962,G__85963,G__85964,G__85965,G__85966,G__85967,G__85968,G__85969,G__85970,G__85971) : self__.dispatch_fn.call(null,G__85961,G__85962,G__85963,G__85964,G__85965,G__85966,G__85967,G__85968,G__85969,G__85970,G__85971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85972 = a;
var G__85973 = b;
var G__85974 = c;
var G__85975 = d;
var G__85976 = e;
var G__85977 = f;
var G__85978 = g;
var G__85979 = h;
var G__85980 = i;
var G__85981 = j;
var G__85982 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__85972,G__85973,G__85974,G__85975,G__85976,G__85977,G__85978,G__85979,G__85980,G__85981,G__85982) : target_fn.call(null,G__85972,G__85973,G__85974,G__85975,G__85976,G__85977,G__85978,G__85979,G__85980,G__85981,G__85982));
});
var G__86691__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__85983 = a;
var G__85984 = b;
var G__85985 = c;
var G__85986 = d;
var G__85987 = e;
var G__85988 = f;
var G__85989 = g;
var G__85990 = h;
var G__85991 = i;
var G__85992 = j;
var G__85993 = k;
var G__85994 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__85983,G__85984,G__85985,G__85986,G__85987,G__85988,G__85989,G__85990,G__85991,G__85992,G__85993,G__85994) : self__.dispatch_fn.call(null,G__85983,G__85984,G__85985,G__85986,G__85987,G__85988,G__85989,G__85990,G__85991,G__85992,G__85993,G__85994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__85995 = a;
var G__85996 = b;
var G__85997 = c;
var G__85998 = d;
var G__85999 = e;
var G__86000 = f;
var G__86001 = g;
var G__86002 = h;
var G__86003 = i;
var G__86004 = j;
var G__86005 = k;
var G__86006 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__85995,G__85996,G__85997,G__85998,G__85999,G__86000,G__86001,G__86002,G__86003,G__86004,G__86005,G__86006) : target_fn.call(null,G__85995,G__85996,G__85997,G__85998,G__85999,G__86000,G__86001,G__86002,G__86003,G__86004,G__86005,G__86006));
});
var G__86691__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86007 = a;
var G__86008 = b;
var G__86009 = c;
var G__86010 = d;
var G__86011 = e;
var G__86012 = f;
var G__86013 = g;
var G__86014 = h;
var G__86015 = i;
var G__86016 = j;
var G__86017 = k;
var G__86018 = l;
var G__86019 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__86007,G__86008,G__86009,G__86010,G__86011,G__86012,G__86013,G__86014,G__86015,G__86016,G__86017,G__86018,G__86019) : self__.dispatch_fn.call(null,G__86007,G__86008,G__86009,G__86010,G__86011,G__86012,G__86013,G__86014,G__86015,G__86016,G__86017,G__86018,G__86019));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86020 = a;
var G__86021 = b;
var G__86022 = c;
var G__86023 = d;
var G__86024 = e;
var G__86025 = f;
var G__86026 = g;
var G__86027 = h;
var G__86028 = i;
var G__86029 = j;
var G__86030 = k;
var G__86031 = l;
var G__86032 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__86020,G__86021,G__86022,G__86023,G__86024,G__86025,G__86026,G__86027,G__86028,G__86029,G__86030,G__86031,G__86032) : target_fn.call(null,G__86020,G__86021,G__86022,G__86023,G__86024,G__86025,G__86026,G__86027,G__86028,G__86029,G__86030,G__86031,G__86032));
});
var G__86691__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86033 = a;
var G__86034 = b;
var G__86035 = c;
var G__86036 = d;
var G__86037 = e;
var G__86038 = f;
var G__86039 = g;
var G__86040 = h;
var G__86041 = i;
var G__86042 = j;
var G__86043 = k;
var G__86044 = l;
var G__86045 = m;
var G__86046 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__86033,G__86034,G__86035,G__86036,G__86037,G__86038,G__86039,G__86040,G__86041,G__86042,G__86043,G__86044,G__86045,G__86046) : self__.dispatch_fn.call(null,G__86033,G__86034,G__86035,G__86036,G__86037,G__86038,G__86039,G__86040,G__86041,G__86042,G__86043,G__86044,G__86045,G__86046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86047 = a;
var G__86048 = b;
var G__86049 = c;
var G__86050 = d;
var G__86051 = e;
var G__86052 = f;
var G__86053 = g;
var G__86054 = h;
var G__86055 = i;
var G__86056 = j;
var G__86057 = k;
var G__86058 = l;
var G__86059 = m;
var G__86060 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__86047,G__86048,G__86049,G__86050,G__86051,G__86052,G__86053,G__86054,G__86055,G__86056,G__86057,G__86058,G__86059,G__86060) : target_fn.call(null,G__86047,G__86048,G__86049,G__86050,G__86051,G__86052,G__86053,G__86054,G__86055,G__86056,G__86057,G__86058,G__86059,G__86060));
});
var G__86691__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86061 = a;
var G__86062 = b;
var G__86063 = c;
var G__86064 = d;
var G__86065 = e;
var G__86066 = f;
var G__86067 = g;
var G__86068 = h;
var G__86069 = i;
var G__86070 = j;
var G__86071 = k;
var G__86072 = l;
var G__86073 = m;
var G__86074 = n;
var G__86075 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__86061,G__86062,G__86063,G__86064,G__86065,G__86066,G__86067,G__86068,G__86069,G__86070,G__86071,G__86072,G__86073,G__86074,G__86075) : self__.dispatch_fn.call(null,G__86061,G__86062,G__86063,G__86064,G__86065,G__86066,G__86067,G__86068,G__86069,G__86070,G__86071,G__86072,G__86073,G__86074,G__86075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86076 = a;
var G__86077 = b;
var G__86078 = c;
var G__86079 = d;
var G__86080 = e;
var G__86081 = f;
var G__86082 = g;
var G__86083 = h;
var G__86084 = i;
var G__86085 = j;
var G__86086 = k;
var G__86087 = l;
var G__86088 = m;
var G__86089 = n;
var G__86090 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__86076,G__86077,G__86078,G__86079,G__86080,G__86081,G__86082,G__86083,G__86084,G__86085,G__86086,G__86087,G__86088,G__86089,G__86090) : target_fn.call(null,G__86076,G__86077,G__86078,G__86079,G__86080,G__86081,G__86082,G__86083,G__86084,G__86085,G__86086,G__86087,G__86088,G__86089,G__86090));
});
var G__86691__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86091 = a;
var G__86092 = b;
var G__86093 = c;
var G__86094 = d;
var G__86095 = e;
var G__86096 = f;
var G__86097 = g;
var G__86098 = h;
var G__86099 = i;
var G__86100 = j;
var G__86101 = k;
var G__86102 = l;
var G__86103 = m;
var G__86104 = n;
var G__86105 = o;
var G__86106 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__86091,G__86092,G__86093,G__86094,G__86095,G__86096,G__86097,G__86098,G__86099,G__86100,G__86101,G__86102,G__86103,G__86104,G__86105,G__86106) : self__.dispatch_fn.call(null,G__86091,G__86092,G__86093,G__86094,G__86095,G__86096,G__86097,G__86098,G__86099,G__86100,G__86101,G__86102,G__86103,G__86104,G__86105,G__86106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86107 = a;
var G__86108 = b;
var G__86109 = c;
var G__86110 = d;
var G__86111 = e;
var G__86112 = f;
var G__86113 = g;
var G__86114 = h;
var G__86115 = i;
var G__86116 = j;
var G__86117 = k;
var G__86118 = l;
var G__86119 = m;
var G__86120 = n;
var G__86121 = o;
var G__86122 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__86107,G__86108,G__86109,G__86110,G__86111,G__86112,G__86113,G__86114,G__86115,G__86116,G__86117,G__86118,G__86119,G__86120,G__86121,G__86122) : target_fn.call(null,G__86107,G__86108,G__86109,G__86110,G__86111,G__86112,G__86113,G__86114,G__86115,G__86116,G__86117,G__86118,G__86119,G__86120,G__86121,G__86122));
});
var G__86691__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86123 = a;
var G__86124 = b;
var G__86125 = c;
var G__86126 = d;
var G__86127 = e;
var G__86128 = f;
var G__86129 = g;
var G__86130 = h;
var G__86131 = i;
var G__86132 = j;
var G__86133 = k;
var G__86134 = l;
var G__86135 = m;
var G__86136 = n;
var G__86137 = o;
var G__86138 = p;
var G__86139 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__86123,G__86124,G__86125,G__86126,G__86127,G__86128,G__86129,G__86130,G__86131,G__86132,G__86133,G__86134,G__86135,G__86136,G__86137,G__86138,G__86139) : self__.dispatch_fn.call(null,G__86123,G__86124,G__86125,G__86126,G__86127,G__86128,G__86129,G__86130,G__86131,G__86132,G__86133,G__86134,G__86135,G__86136,G__86137,G__86138,G__86139));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86140 = a;
var G__86141 = b;
var G__86142 = c;
var G__86143 = d;
var G__86144 = e;
var G__86145 = f;
var G__86146 = g;
var G__86147 = h;
var G__86148 = i;
var G__86149 = j;
var G__86150 = k;
var G__86151 = l;
var G__86152 = m;
var G__86153 = n;
var G__86154 = o;
var G__86155 = p;
var G__86156 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__86140,G__86141,G__86142,G__86143,G__86144,G__86145,G__86146,G__86147,G__86148,G__86149,G__86150,G__86151,G__86152,G__86153,G__86154,G__86155,G__86156) : target_fn.call(null,G__86140,G__86141,G__86142,G__86143,G__86144,G__86145,G__86146,G__86147,G__86148,G__86149,G__86150,G__86151,G__86152,G__86153,G__86154,G__86155,G__86156));
});
var G__86691__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86157 = a;
var G__86158 = b;
var G__86159 = c;
var G__86160 = d;
var G__86161 = e;
var G__86162 = f;
var G__86163 = g;
var G__86164 = h;
var G__86165 = i;
var G__86166 = j;
var G__86167 = k;
var G__86168 = l;
var G__86169 = m;
var G__86170 = n;
var G__86171 = o;
var G__86172 = p;
var G__86173 = q;
var G__86174 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__86157,G__86158,G__86159,G__86160,G__86161,G__86162,G__86163,G__86164,G__86165,G__86166,G__86167,G__86168,G__86169,G__86170,G__86171,G__86172,G__86173,G__86174) : self__.dispatch_fn.call(null,G__86157,G__86158,G__86159,G__86160,G__86161,G__86162,G__86163,G__86164,G__86165,G__86166,G__86167,G__86168,G__86169,G__86170,G__86171,G__86172,G__86173,G__86174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86175 = a;
var G__86176 = b;
var G__86177 = c;
var G__86178 = d;
var G__86179 = e;
var G__86180 = f;
var G__86181 = g;
var G__86182 = h;
var G__86183 = i;
var G__86184 = j;
var G__86185 = k;
var G__86186 = l;
var G__86187 = m;
var G__86188 = n;
var G__86189 = o;
var G__86190 = p;
var G__86191 = q;
var G__86192 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__86175,G__86176,G__86177,G__86178,G__86179,G__86180,G__86181,G__86182,G__86183,G__86184,G__86185,G__86186,G__86187,G__86188,G__86189,G__86190,G__86191,G__86192) : target_fn.call(null,G__86175,G__86176,G__86177,G__86178,G__86179,G__86180,G__86181,G__86182,G__86183,G__86184,G__86185,G__86186,G__86187,G__86188,G__86189,G__86190,G__86191,G__86192));
});
var G__86691__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86193 = a;
var G__86194 = b;
var G__86195 = c;
var G__86196 = d;
var G__86197 = e;
var G__86198 = f;
var G__86199 = g;
var G__86200 = h;
var G__86201 = i;
var G__86202 = j;
var G__86203 = k;
var G__86204 = l;
var G__86205 = m;
var G__86206 = n;
var G__86207 = o;
var G__86208 = p;
var G__86209 = q;
var G__86210 = r;
var G__86211 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__86193,G__86194,G__86195,G__86196,G__86197,G__86198,G__86199,G__86200,G__86201,G__86202,G__86203,G__86204,G__86205,G__86206,G__86207,G__86208,G__86209,G__86210,G__86211) : self__.dispatch_fn.call(null,G__86193,G__86194,G__86195,G__86196,G__86197,G__86198,G__86199,G__86200,G__86201,G__86202,G__86203,G__86204,G__86205,G__86206,G__86207,G__86208,G__86209,G__86210,G__86211));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86212 = a;
var G__86213 = b;
var G__86214 = c;
var G__86215 = d;
var G__86216 = e;
var G__86217 = f;
var G__86218 = g;
var G__86219 = h;
var G__86220 = i;
var G__86221 = j;
var G__86222 = k;
var G__86223 = l;
var G__86224 = m;
var G__86225 = n;
var G__86226 = o;
var G__86227 = p;
var G__86228 = q;
var G__86229 = r;
var G__86230 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__86212,G__86213,G__86214,G__86215,G__86216,G__86217,G__86218,G__86219,G__86220,G__86221,G__86222,G__86223,G__86224,G__86225,G__86226,G__86227,G__86228,G__86229,G__86230) : target_fn.call(null,G__86212,G__86213,G__86214,G__86215,G__86216,G__86217,G__86218,G__86219,G__86220,G__86221,G__86222,G__86223,G__86224,G__86225,G__86226,G__86227,G__86228,G__86229,G__86230));
});
var G__86691__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__86231 = a;
var G__86232 = b;
var G__86233 = c;
var G__86234 = d;
var G__86235 = e;
var G__86236 = f;
var G__86237 = g;
var G__86238 = h;
var G__86239 = i;
var G__86240 = j;
var G__86241 = k;
var G__86242 = l;
var G__86243 = m;
var G__86244 = n;
var G__86245 = o;
var G__86246 = p;
var G__86247 = q;
var G__86248 = r;
var G__86249 = s;
var G__86250 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__86231,G__86232,G__86233,G__86234,G__86235,G__86236,G__86237,G__86238,G__86239,G__86240,G__86241,G__86242,G__86243,G__86244,G__86245,G__86246,G__86247,G__86248,G__86249,G__86250) : self__.dispatch_fn.call(null,G__86231,G__86232,G__86233,G__86234,G__86235,G__86236,G__86237,G__86238,G__86239,G__86240,G__86241,G__86242,G__86243,G__86244,G__86245,G__86246,G__86247,G__86248,G__86249,G__86250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86251 = a;
var G__86252 = b;
var G__86253 = c;
var G__86254 = d;
var G__86255 = e;
var G__86256 = f;
var G__86257 = g;
var G__86258 = h;
var G__86259 = i;
var G__86260 = j;
var G__86261 = k;
var G__86262 = l;
var G__86263 = m;
var G__86264 = n;
var G__86265 = o;
var G__86266 = p;
var G__86267 = q;
var G__86268 = r;
var G__86269 = s;
var G__86270 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__86251,G__86252,G__86253,G__86254,G__86255,G__86256,G__86257,G__86258,G__86259,G__86260,G__86261,G__86262,G__86263,G__86264,G__86265,G__86266,G__86267,G__86268,G__86269,G__86270) : target_fn.call(null,G__86251,G__86252,G__86253,G__86254,G__86255,G__86256,G__86257,G__86258,G__86259,G__86260,G__86261,G__86262,G__86263,G__86264,G__86265,G__86266,G__86267,G__86268,G__86269,G__86270));
});
var G__86691__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__86691 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__86691__1.call(this,self__);
case 2:
return G__86691__2.call(this,self__,a);
case 3:
return G__86691__3.call(this,self__,a,b);
case 4:
return G__86691__4.call(this,self__,a,b,c);
case 5:
return G__86691__5.call(this,self__,a,b,c,d);
case 6:
return G__86691__6.call(this,self__,a,b,c,d,e);
case 7:
return G__86691__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__86691__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__86691__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__86691__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__86691__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__86691__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__86691__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__86691__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__86691__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__86691__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__86691__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__86691__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__86691__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__86691__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__86691__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__86691__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__86691.cljs$core$IFn$_invoke$arity$1 = G__86691__1;
G__86691.cljs$core$IFn$_invoke$arity$2 = G__86691__2;
G__86691.cljs$core$IFn$_invoke$arity$3 = G__86691__3;
G__86691.cljs$core$IFn$_invoke$arity$4 = G__86691__4;
G__86691.cljs$core$IFn$_invoke$arity$5 = G__86691__5;
G__86691.cljs$core$IFn$_invoke$arity$6 = G__86691__6;
G__86691.cljs$core$IFn$_invoke$arity$7 = G__86691__7;
G__86691.cljs$core$IFn$_invoke$arity$8 = G__86691__8;
G__86691.cljs$core$IFn$_invoke$arity$9 = G__86691__9;
G__86691.cljs$core$IFn$_invoke$arity$10 = G__86691__10;
G__86691.cljs$core$IFn$_invoke$arity$11 = G__86691__11;
G__86691.cljs$core$IFn$_invoke$arity$12 = G__86691__12;
G__86691.cljs$core$IFn$_invoke$arity$13 = G__86691__13;
G__86691.cljs$core$IFn$_invoke$arity$14 = G__86691__14;
G__86691.cljs$core$IFn$_invoke$arity$15 = G__86691__15;
G__86691.cljs$core$IFn$_invoke$arity$16 = G__86691__16;
G__86691.cljs$core$IFn$_invoke$arity$17 = G__86691__17;
G__86691.cljs$core$IFn$_invoke$arity$18 = G__86691__18;
G__86691.cljs$core$IFn$_invoke$arity$19 = G__86691__19;
G__86691.cljs$core$IFn$_invoke$arity$20 = G__86691__20;
G__86691.cljs$core$IFn$_invoke$arity$21 = G__86691__21;
G__86691.cljs$core$IFn$_invoke$arity$22 = G__86691__22;
return G__86691;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args85843){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args85843)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86271 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__86271) : self__.dispatch_fn.call(null,G__86271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86272 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__86272) : target_fn.call(null,G__86272));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86273 = a;
var G__86274 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__86273,G__86274) : self__.dispatch_fn.call(null,G__86273,G__86274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86275 = a;
var G__86276 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__86275,G__86276) : target_fn.call(null,G__86275,G__86276));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86277 = a;
var G__86278 = b;
var G__86279 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__86277,G__86278,G__86279) : self__.dispatch_fn.call(null,G__86277,G__86278,G__86279));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86280 = a;
var G__86281 = b;
var G__86282 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__86280,G__86281,G__86282) : target_fn.call(null,G__86280,G__86281,G__86282));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86283 = a;
var G__86284 = b;
var G__86285 = c;
var G__86286 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__86283,G__86284,G__86285,G__86286) : self__.dispatch_fn.call(null,G__86283,G__86284,G__86285,G__86286));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86287 = a;
var G__86288 = b;
var G__86289 = c;
var G__86290 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__86287,G__86288,G__86289,G__86290) : target_fn.call(null,G__86287,G__86288,G__86289,G__86290));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86291 = a;
var G__86292 = b;
var G__86293 = c;
var G__86294 = d;
var G__86295 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__86291,G__86292,G__86293,G__86294,G__86295) : self__.dispatch_fn.call(null,G__86291,G__86292,G__86293,G__86294,G__86295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86296 = a;
var G__86297 = b;
var G__86298 = c;
var G__86299 = d;
var G__86300 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__86296,G__86297,G__86298,G__86299,G__86300) : target_fn.call(null,G__86296,G__86297,G__86298,G__86299,G__86300));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86301 = a;
var G__86302 = b;
var G__86303 = c;
var G__86304 = d;
var G__86305 = e;
var G__86306 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__86301,G__86302,G__86303,G__86304,G__86305,G__86306) : self__.dispatch_fn.call(null,G__86301,G__86302,G__86303,G__86304,G__86305,G__86306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86307 = a;
var G__86308 = b;
var G__86309 = c;
var G__86310 = d;
var G__86311 = e;
var G__86312 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__86307,G__86308,G__86309,G__86310,G__86311,G__86312) : target_fn.call(null,G__86307,G__86308,G__86309,G__86310,G__86311,G__86312));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86313 = a;
var G__86314 = b;
var G__86315 = c;
var G__86316 = d;
var G__86317 = e;
var G__86318 = f;
var G__86319 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__86313,G__86314,G__86315,G__86316,G__86317,G__86318,G__86319) : self__.dispatch_fn.call(null,G__86313,G__86314,G__86315,G__86316,G__86317,G__86318,G__86319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86320 = a;
var G__86321 = b;
var G__86322 = c;
var G__86323 = d;
var G__86324 = e;
var G__86325 = f;
var G__86326 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__86320,G__86321,G__86322,G__86323,G__86324,G__86325,G__86326) : target_fn.call(null,G__86320,G__86321,G__86322,G__86323,G__86324,G__86325,G__86326));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86327 = a;
var G__86328 = b;
var G__86329 = c;
var G__86330 = d;
var G__86331 = e;
var G__86332 = f;
var G__86333 = g;
var G__86334 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__86327,G__86328,G__86329,G__86330,G__86331,G__86332,G__86333,G__86334) : self__.dispatch_fn.call(null,G__86327,G__86328,G__86329,G__86330,G__86331,G__86332,G__86333,G__86334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86335 = a;
var G__86336 = b;
var G__86337 = c;
var G__86338 = d;
var G__86339 = e;
var G__86340 = f;
var G__86341 = g;
var G__86342 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__86335,G__86336,G__86337,G__86338,G__86339,G__86340,G__86341,G__86342) : target_fn.call(null,G__86335,G__86336,G__86337,G__86338,G__86339,G__86340,G__86341,G__86342));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86343 = a;
var G__86344 = b;
var G__86345 = c;
var G__86346 = d;
var G__86347 = e;
var G__86348 = f;
var G__86349 = g;
var G__86350 = h;
var G__86351 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__86343,G__86344,G__86345,G__86346,G__86347,G__86348,G__86349,G__86350,G__86351) : self__.dispatch_fn.call(null,G__86343,G__86344,G__86345,G__86346,G__86347,G__86348,G__86349,G__86350,G__86351));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86352 = a;
var G__86353 = b;
var G__86354 = c;
var G__86355 = d;
var G__86356 = e;
var G__86357 = f;
var G__86358 = g;
var G__86359 = h;
var G__86360 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__86352,G__86353,G__86354,G__86355,G__86356,G__86357,G__86358,G__86359,G__86360) : target_fn.call(null,G__86352,G__86353,G__86354,G__86355,G__86356,G__86357,G__86358,G__86359,G__86360));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86361 = a;
var G__86362 = b;
var G__86363 = c;
var G__86364 = d;
var G__86365 = e;
var G__86366 = f;
var G__86367 = g;
var G__86368 = h;
var G__86369 = i;
var G__86370 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__86361,G__86362,G__86363,G__86364,G__86365,G__86366,G__86367,G__86368,G__86369,G__86370) : self__.dispatch_fn.call(null,G__86361,G__86362,G__86363,G__86364,G__86365,G__86366,G__86367,G__86368,G__86369,G__86370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86371 = a;
var G__86372 = b;
var G__86373 = c;
var G__86374 = d;
var G__86375 = e;
var G__86376 = f;
var G__86377 = g;
var G__86378 = h;
var G__86379 = i;
var G__86380 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__86371,G__86372,G__86373,G__86374,G__86375,G__86376,G__86377,G__86378,G__86379,G__86380) : target_fn.call(null,G__86371,G__86372,G__86373,G__86374,G__86375,G__86376,G__86377,G__86378,G__86379,G__86380));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86381 = a;
var G__86382 = b;
var G__86383 = c;
var G__86384 = d;
var G__86385 = e;
var G__86386 = f;
var G__86387 = g;
var G__86388 = h;
var G__86389 = i;
var G__86390 = j;
var G__86391 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__86381,G__86382,G__86383,G__86384,G__86385,G__86386,G__86387,G__86388,G__86389,G__86390,G__86391) : self__.dispatch_fn.call(null,G__86381,G__86382,G__86383,G__86384,G__86385,G__86386,G__86387,G__86388,G__86389,G__86390,G__86391));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86392 = a;
var G__86393 = b;
var G__86394 = c;
var G__86395 = d;
var G__86396 = e;
var G__86397 = f;
var G__86398 = g;
var G__86399 = h;
var G__86400 = i;
var G__86401 = j;
var G__86402 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__86392,G__86393,G__86394,G__86395,G__86396,G__86397,G__86398,G__86399,G__86400,G__86401,G__86402) : target_fn.call(null,G__86392,G__86393,G__86394,G__86395,G__86396,G__86397,G__86398,G__86399,G__86400,G__86401,G__86402));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86403 = a;
var G__86404 = b;
var G__86405 = c;
var G__86406 = d;
var G__86407 = e;
var G__86408 = f;
var G__86409 = g;
var G__86410 = h;
var G__86411 = i;
var G__86412 = j;
var G__86413 = k;
var G__86414 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__86403,G__86404,G__86405,G__86406,G__86407,G__86408,G__86409,G__86410,G__86411,G__86412,G__86413,G__86414) : self__.dispatch_fn.call(null,G__86403,G__86404,G__86405,G__86406,G__86407,G__86408,G__86409,G__86410,G__86411,G__86412,G__86413,G__86414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86415 = a;
var G__86416 = b;
var G__86417 = c;
var G__86418 = d;
var G__86419 = e;
var G__86420 = f;
var G__86421 = g;
var G__86422 = h;
var G__86423 = i;
var G__86424 = j;
var G__86425 = k;
var G__86426 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__86415,G__86416,G__86417,G__86418,G__86419,G__86420,G__86421,G__86422,G__86423,G__86424,G__86425,G__86426) : target_fn.call(null,G__86415,G__86416,G__86417,G__86418,G__86419,G__86420,G__86421,G__86422,G__86423,G__86424,G__86425,G__86426));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86427 = a;
var G__86428 = b;
var G__86429 = c;
var G__86430 = d;
var G__86431 = e;
var G__86432 = f;
var G__86433 = g;
var G__86434 = h;
var G__86435 = i;
var G__86436 = j;
var G__86437 = k;
var G__86438 = l;
var G__86439 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__86427,G__86428,G__86429,G__86430,G__86431,G__86432,G__86433,G__86434,G__86435,G__86436,G__86437,G__86438,G__86439) : self__.dispatch_fn.call(null,G__86427,G__86428,G__86429,G__86430,G__86431,G__86432,G__86433,G__86434,G__86435,G__86436,G__86437,G__86438,G__86439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86440 = a;
var G__86441 = b;
var G__86442 = c;
var G__86443 = d;
var G__86444 = e;
var G__86445 = f;
var G__86446 = g;
var G__86447 = h;
var G__86448 = i;
var G__86449 = j;
var G__86450 = k;
var G__86451 = l;
var G__86452 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__86440,G__86441,G__86442,G__86443,G__86444,G__86445,G__86446,G__86447,G__86448,G__86449,G__86450,G__86451,G__86452) : target_fn.call(null,G__86440,G__86441,G__86442,G__86443,G__86444,G__86445,G__86446,G__86447,G__86448,G__86449,G__86450,G__86451,G__86452));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86453 = a;
var G__86454 = b;
var G__86455 = c;
var G__86456 = d;
var G__86457 = e;
var G__86458 = f;
var G__86459 = g;
var G__86460 = h;
var G__86461 = i;
var G__86462 = j;
var G__86463 = k;
var G__86464 = l;
var G__86465 = m;
var G__86466 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__86453,G__86454,G__86455,G__86456,G__86457,G__86458,G__86459,G__86460,G__86461,G__86462,G__86463,G__86464,G__86465,G__86466) : self__.dispatch_fn.call(null,G__86453,G__86454,G__86455,G__86456,G__86457,G__86458,G__86459,G__86460,G__86461,G__86462,G__86463,G__86464,G__86465,G__86466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86467 = a;
var G__86468 = b;
var G__86469 = c;
var G__86470 = d;
var G__86471 = e;
var G__86472 = f;
var G__86473 = g;
var G__86474 = h;
var G__86475 = i;
var G__86476 = j;
var G__86477 = k;
var G__86478 = l;
var G__86479 = m;
var G__86480 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__86467,G__86468,G__86469,G__86470,G__86471,G__86472,G__86473,G__86474,G__86475,G__86476,G__86477,G__86478,G__86479,G__86480) : target_fn.call(null,G__86467,G__86468,G__86469,G__86470,G__86471,G__86472,G__86473,G__86474,G__86475,G__86476,G__86477,G__86478,G__86479,G__86480));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86481 = a;
var G__86482 = b;
var G__86483 = c;
var G__86484 = d;
var G__86485 = e;
var G__86486 = f;
var G__86487 = g;
var G__86488 = h;
var G__86489 = i;
var G__86490 = j;
var G__86491 = k;
var G__86492 = l;
var G__86493 = m;
var G__86494 = n;
var G__86495 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__86481,G__86482,G__86483,G__86484,G__86485,G__86486,G__86487,G__86488,G__86489,G__86490,G__86491,G__86492,G__86493,G__86494,G__86495) : self__.dispatch_fn.call(null,G__86481,G__86482,G__86483,G__86484,G__86485,G__86486,G__86487,G__86488,G__86489,G__86490,G__86491,G__86492,G__86493,G__86494,G__86495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86496 = a;
var G__86497 = b;
var G__86498 = c;
var G__86499 = d;
var G__86500 = e;
var G__86501 = f;
var G__86502 = g;
var G__86503 = h;
var G__86504 = i;
var G__86505 = j;
var G__86506 = k;
var G__86507 = l;
var G__86508 = m;
var G__86509 = n;
var G__86510 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__86496,G__86497,G__86498,G__86499,G__86500,G__86501,G__86502,G__86503,G__86504,G__86505,G__86506,G__86507,G__86508,G__86509,G__86510) : target_fn.call(null,G__86496,G__86497,G__86498,G__86499,G__86500,G__86501,G__86502,G__86503,G__86504,G__86505,G__86506,G__86507,G__86508,G__86509,G__86510));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86511 = a;
var G__86512 = b;
var G__86513 = c;
var G__86514 = d;
var G__86515 = e;
var G__86516 = f;
var G__86517 = g;
var G__86518 = h;
var G__86519 = i;
var G__86520 = j;
var G__86521 = k;
var G__86522 = l;
var G__86523 = m;
var G__86524 = n;
var G__86525 = o;
var G__86526 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__86511,G__86512,G__86513,G__86514,G__86515,G__86516,G__86517,G__86518,G__86519,G__86520,G__86521,G__86522,G__86523,G__86524,G__86525,G__86526) : self__.dispatch_fn.call(null,G__86511,G__86512,G__86513,G__86514,G__86515,G__86516,G__86517,G__86518,G__86519,G__86520,G__86521,G__86522,G__86523,G__86524,G__86525,G__86526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86527 = a;
var G__86528 = b;
var G__86529 = c;
var G__86530 = d;
var G__86531 = e;
var G__86532 = f;
var G__86533 = g;
var G__86534 = h;
var G__86535 = i;
var G__86536 = j;
var G__86537 = k;
var G__86538 = l;
var G__86539 = m;
var G__86540 = n;
var G__86541 = o;
var G__86542 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__86527,G__86528,G__86529,G__86530,G__86531,G__86532,G__86533,G__86534,G__86535,G__86536,G__86537,G__86538,G__86539,G__86540,G__86541,G__86542) : target_fn.call(null,G__86527,G__86528,G__86529,G__86530,G__86531,G__86532,G__86533,G__86534,G__86535,G__86536,G__86537,G__86538,G__86539,G__86540,G__86541,G__86542));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86543 = a;
var G__86544 = b;
var G__86545 = c;
var G__86546 = d;
var G__86547 = e;
var G__86548 = f;
var G__86549 = g;
var G__86550 = h;
var G__86551 = i;
var G__86552 = j;
var G__86553 = k;
var G__86554 = l;
var G__86555 = m;
var G__86556 = n;
var G__86557 = o;
var G__86558 = p;
var G__86559 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__86543,G__86544,G__86545,G__86546,G__86547,G__86548,G__86549,G__86550,G__86551,G__86552,G__86553,G__86554,G__86555,G__86556,G__86557,G__86558,G__86559) : self__.dispatch_fn.call(null,G__86543,G__86544,G__86545,G__86546,G__86547,G__86548,G__86549,G__86550,G__86551,G__86552,G__86553,G__86554,G__86555,G__86556,G__86557,G__86558,G__86559));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86560 = a;
var G__86561 = b;
var G__86562 = c;
var G__86563 = d;
var G__86564 = e;
var G__86565 = f;
var G__86566 = g;
var G__86567 = h;
var G__86568 = i;
var G__86569 = j;
var G__86570 = k;
var G__86571 = l;
var G__86572 = m;
var G__86573 = n;
var G__86574 = o;
var G__86575 = p;
var G__86576 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__86560,G__86561,G__86562,G__86563,G__86564,G__86565,G__86566,G__86567,G__86568,G__86569,G__86570,G__86571,G__86572,G__86573,G__86574,G__86575,G__86576) : target_fn.call(null,G__86560,G__86561,G__86562,G__86563,G__86564,G__86565,G__86566,G__86567,G__86568,G__86569,G__86570,G__86571,G__86572,G__86573,G__86574,G__86575,G__86576));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86577 = a;
var G__86578 = b;
var G__86579 = c;
var G__86580 = d;
var G__86581 = e;
var G__86582 = f;
var G__86583 = g;
var G__86584 = h;
var G__86585 = i;
var G__86586 = j;
var G__86587 = k;
var G__86588 = l;
var G__86589 = m;
var G__86590 = n;
var G__86591 = o;
var G__86592 = p;
var G__86593 = q;
var G__86594 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__86577,G__86578,G__86579,G__86580,G__86581,G__86582,G__86583,G__86584,G__86585,G__86586,G__86587,G__86588,G__86589,G__86590,G__86591,G__86592,G__86593,G__86594) : self__.dispatch_fn.call(null,G__86577,G__86578,G__86579,G__86580,G__86581,G__86582,G__86583,G__86584,G__86585,G__86586,G__86587,G__86588,G__86589,G__86590,G__86591,G__86592,G__86593,G__86594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86595 = a;
var G__86596 = b;
var G__86597 = c;
var G__86598 = d;
var G__86599 = e;
var G__86600 = f;
var G__86601 = g;
var G__86602 = h;
var G__86603 = i;
var G__86604 = j;
var G__86605 = k;
var G__86606 = l;
var G__86607 = m;
var G__86608 = n;
var G__86609 = o;
var G__86610 = p;
var G__86611 = q;
var G__86612 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__86595,G__86596,G__86597,G__86598,G__86599,G__86600,G__86601,G__86602,G__86603,G__86604,G__86605,G__86606,G__86607,G__86608,G__86609,G__86610,G__86611,G__86612) : target_fn.call(null,G__86595,G__86596,G__86597,G__86598,G__86599,G__86600,G__86601,G__86602,G__86603,G__86604,G__86605,G__86606,G__86607,G__86608,G__86609,G__86610,G__86611,G__86612));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86613 = a;
var G__86614 = b;
var G__86615 = c;
var G__86616 = d;
var G__86617 = e;
var G__86618 = f;
var G__86619 = g;
var G__86620 = h;
var G__86621 = i;
var G__86622 = j;
var G__86623 = k;
var G__86624 = l;
var G__86625 = m;
var G__86626 = n;
var G__86627 = o;
var G__86628 = p;
var G__86629 = q;
var G__86630 = r;
var G__86631 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__86613,G__86614,G__86615,G__86616,G__86617,G__86618,G__86619,G__86620,G__86621,G__86622,G__86623,G__86624,G__86625,G__86626,G__86627,G__86628,G__86629,G__86630,G__86631) : self__.dispatch_fn.call(null,G__86613,G__86614,G__86615,G__86616,G__86617,G__86618,G__86619,G__86620,G__86621,G__86622,G__86623,G__86624,G__86625,G__86626,G__86627,G__86628,G__86629,G__86630,G__86631));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86632 = a;
var G__86633 = b;
var G__86634 = c;
var G__86635 = d;
var G__86636 = e;
var G__86637 = f;
var G__86638 = g;
var G__86639 = h;
var G__86640 = i;
var G__86641 = j;
var G__86642 = k;
var G__86643 = l;
var G__86644 = m;
var G__86645 = n;
var G__86646 = o;
var G__86647 = p;
var G__86648 = q;
var G__86649 = r;
var G__86650 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__86632,G__86633,G__86634,G__86635,G__86636,G__86637,G__86638,G__86639,G__86640,G__86641,G__86642,G__86643,G__86644,G__86645,G__86646,G__86647,G__86648,G__86649,G__86650) : target_fn.call(null,G__86632,G__86633,G__86634,G__86635,G__86636,G__86637,G__86638,G__86639,G__86640,G__86641,G__86642,G__86643,G__86644,G__86645,G__86646,G__86647,G__86648,G__86649,G__86650));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__86651 = a;
var G__86652 = b;
var G__86653 = c;
var G__86654 = d;
var G__86655 = e;
var G__86656 = f;
var G__86657 = g;
var G__86658 = h;
var G__86659 = i;
var G__86660 = j;
var G__86661 = k;
var G__86662 = l;
var G__86663 = m;
var G__86664 = n;
var G__86665 = o;
var G__86666 = p;
var G__86667 = q;
var G__86668 = r;
var G__86669 = s;
var G__86670 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__86651,G__86652,G__86653,G__86654,G__86655,G__86656,G__86657,G__86658,G__86659,G__86660,G__86661,G__86662,G__86663,G__86664,G__86665,G__86666,G__86667,G__86668,G__86669,G__86670) : self__.dispatch_fn.call(null,G__86651,G__86652,G__86653,G__86654,G__86655,G__86656,G__86657,G__86658,G__86659,G__86660,G__86661,G__86662,G__86663,G__86664,G__86665,G__86666,G__86667,G__86668,G__86669,G__86670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__86671 = a;
var G__86672 = b;
var G__86673 = c;
var G__86674 = d;
var G__86675 = e;
var G__86676 = f;
var G__86677 = g;
var G__86678 = h;
var G__86679 = i;
var G__86680 = j;
var G__86681 = k;
var G__86682 = l;
var G__86683 = m;
var G__86684 = n;
var G__86685 = o;
var G__86686 = p;
var G__86687 = q;
var G__86688 = r;
var G__86689 = s;
var G__86690 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__86671,G__86672,G__86673,G__86674,G__86675,G__86676,G__86677,G__86678,G__86679,G__86680,G__86681,G__86682,G__86683,G__86684,G__86685,G__86686,G__86687,G__86688,G__86689,G__86690) : target_fn.call(null,G__86671,G__86672,G__86673,G__86674,G__86675,G__86676,G__86677,G__86678,G__86679,G__86680,G__86681,G__86682,G__86683,G__86684,G__86685,G__86686,G__86687,G__86688,G__86689,G__86690));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__86692 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__86692);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__86697 = msg;
return Error(G__86697);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__86702 = x;
var G__86703 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__86702,G__86703) : pred.call(null,G__86702,G__86703));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__86704 = y;
var G__86705 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__86704,G__86705) : pred.call(null,G__86704,G__86705));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
