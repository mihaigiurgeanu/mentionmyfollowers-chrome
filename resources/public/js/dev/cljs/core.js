// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__296598__delegate = function (args){
return console.log.apply(console,(function (){var G__296597 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__296597) : cljs.core.into_array.call(null,G__296597));
})());
};
var G__296598 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__296599__i = 0, G__296599__a = new Array(arguments.length -  0);
while (G__296599__i < G__296599__a.length) {G__296599__a[G__296599__i] = arguments[G__296599__i + 0]; ++G__296599__i;}
  args = new cljs.core.IndexedSeq(G__296599__a,0);
} 
return G__296598__delegate.call(this,args);};
G__296598.cljs$lang$maxFixedArity = 0;
G__296598.cljs$lang$applyTo = (function (arglist__296600){
var args = cljs.core.seq(arglist__296600);
return G__296598__delegate(args);
});
G__296598.cljs$core$IFn$_invoke$arity$variadic = G__296598__delegate;
return G__296598;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__296602 = x;
return goog.isString(G__296602);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__296604 = x__$1;
return goog.typeOf(G__296604);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3969__auto__ = ty;
if(cljs.core.truth_(and__3969__auto__)){
return ty.cljs$lang$type;
} else {
return and__3969__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__296606 = obj;
return goog.typeOf(G__296606);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__296608 = Symbol;
return goog.typeOf(G__296608);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4868__auto___296610 = len;
var i_296611 = (0);
while(true){
if((i_296611 < n__4868__auto___296610)){
(new_arr[i_296611] = (arr[i_296611]));

var G__296612 = (i_296611 + (1));
i_296611 = G__296612;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__296613 = (i + (1));
i = G__296613;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__296622__delegate = function (array,i,idxs){
var G__296619 = aget;
var G__296620 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__296621 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__296619,G__296620,G__296621) : cljs.core.apply.call(null,G__296619,G__296620,G__296621));
};
var G__296622 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__296623__i = 0, G__296623__a = new Array(arguments.length -  2);
while (G__296623__i < G__296623__a.length) {G__296623__a[G__296623__i] = arguments[G__296623__i + 2]; ++G__296623__i;}
  idxs = new cljs.core.IndexedSeq(G__296623__a,0);
} 
return G__296622__delegate.call(this,array,i,idxs);};
G__296622.cljs$lang$maxFixedArity = 2;
G__296622.cljs$lang$applyTo = (function (arglist__296624){
var array = cljs.core.first(arglist__296624);
arglist__296624 = cljs.core.next(arglist__296624);
var i = cljs.core.first(arglist__296624);
var idxs = cljs.core.rest(arglist__296624);
return G__296622__delegate(array,i,idxs);
});
G__296622.cljs$core$IFn$_invoke$arity$variadic = G__296622__delegate;
return G__296622;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__296625 = null;
if (arguments.length > 2) {
var G__296626__i = 0, G__296626__a = new Array(arguments.length -  2);
while (G__296626__i < G__296626__a.length) {G__296626__a[G__296626__i] = arguments[G__296626__i + 2]; ++G__296626__i;}
G__296625 = new cljs.core.IndexedSeq(G__296626__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__296625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__296635__delegate = function (array,idx,idx2,idxv){
var G__296631 = aset;
var G__296632 = (array[idx]);
var G__296633 = idx2;
var G__296634 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__296631,G__296632,G__296633,G__296634) : cljs.core.apply.call(null,G__296631,G__296632,G__296633,G__296634));
};
var G__296635 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__296636__i = 0, G__296636__a = new Array(arguments.length -  3);
while (G__296636__i < G__296636__a.length) {G__296636__a[G__296636__i] = arguments[G__296636__i + 3]; ++G__296636__i;}
  idxv = new cljs.core.IndexedSeq(G__296636__a,0);
} 
return G__296635__delegate.call(this,array,idx,idx2,idxv);};
G__296635.cljs$lang$maxFixedArity = 3;
G__296635.cljs$lang$applyTo = (function (arglist__296637){
var array = cljs.core.first(arglist__296637);
arglist__296637 = cljs.core.next(arglist__296637);
var idx = cljs.core.first(arglist__296637);
arglist__296637 = cljs.core.next(arglist__296637);
var idx2 = cljs.core.first(arglist__296637);
var idxv = cljs.core.rest(arglist__296637);
return G__296635__delegate(array,idx,idx2,idxv);
});
G__296635.cljs$core$IFn$_invoke$arity$variadic = G__296635__delegate;
return G__296635;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__296638 = null;
if (arguments.length > 3) {
var G__296639__i = 0, G__296639__a = new Array(arguments.length -  3);
while (G__296639__i < G__296639__a.length) {G__296639__a[G__296639__i] = arguments[G__296639__i + 3]; ++G__296639__i;}
G__296638 = new cljs.core.IndexedSeq(G__296639__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__296638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__296645 = (function (a,x){
a.push(x);

return a;
});
var G__296646 = [];
var G__296647 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__296645,G__296646,G__296647) : cljs.core.reduce.call(null,G__296645,G__296646,G__296647));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__296648__i = 0, G__296648__a = new Array(arguments.length -  2);
while (G__296648__i < G__296648__a.length) {G__296648__a[G__296648__i] = arguments[G__296648__i + 2]; ++G__296648__i;}
  args = new cljs.core.IndexedSeq(G__296648__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__296649){
var obj = cljs.core.first(arglist__296649);
arglist__296649 = cljs.core.next(arglist__296649);
var s = cljs.core.first(arglist__296649);
var args = cljs.core.rest(arglist__296649);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj296651 = {};
return obj296651;
})();


cljs.core.IFn = (function (){var obj296653 = {};
return obj296653;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296699 = x__4625__auto__;
return goog.typeOf(G__296699);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296701 = x__4625__auto__;
return goog.typeOf(G__296701);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296703 = x__4625__auto__;
return goog.typeOf(G__296703);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296705 = x__4625__auto__;
return goog.typeOf(G__296705);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296707 = x__4625__auto__;
return goog.typeOf(G__296707);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296709 = x__4625__auto__;
return goog.typeOf(G__296709);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296711 = x__4625__auto__;
return goog.typeOf(G__296711);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296713 = x__4625__auto__;
return goog.typeOf(G__296713);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296715 = x__4625__auto__;
return goog.typeOf(G__296715);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296717 = x__4625__auto__;
return goog.typeOf(G__296717);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296719 = x__4625__auto__;
return goog.typeOf(G__296719);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296721 = x__4625__auto__;
return goog.typeOf(G__296721);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296723 = x__4625__auto__;
return goog.typeOf(G__296723);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296725 = x__4625__auto__;
return goog.typeOf(G__296725);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296727 = x__4625__auto__;
return goog.typeOf(G__296727);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296729 = x__4625__auto__;
return goog.typeOf(G__296729);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296731 = x__4625__auto__;
return goog.typeOf(G__296731);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296733 = x__4625__auto__;
return goog.typeOf(G__296733);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296735 = x__4625__auto__;
return goog.typeOf(G__296735);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296737 = x__4625__auto__;
return goog.typeOf(G__296737);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296739 = x__4625__auto__;
return goog.typeOf(G__296739);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__296741 = x__4625__auto__;
return goog.typeOf(G__296741);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj296743 = {};
return obj296743;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3969__auto__ = value;
if(and__3969__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3969__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4625__auto__ = (((value == null))?null:value);
return (function (){var or__3981__auto__ = (cljs.core._clone[(function (){var G__296747 = x__4625__auto__;
return goog.typeOf(G__296747);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clone["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj296749 = {};
return obj296749;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._count[(function (){var G__296753 = x__4625__auto__;
return goog.typeOf(G__296753);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._count["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj296755 = {};
return obj296755;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._empty[(function (){var G__296759 = x__4625__auto__;
return goog.typeOf(G__296759);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._empty["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj296761 = {};
return obj296761;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._conj[(function (){var G__296765 = x__4625__auto__;
return goog.typeOf(G__296765);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj296767 = {};
return obj296767;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__296773 = x__4625__auto__;
return goog.typeOf(G__296773);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__296775 = x__4625__auto__;
return goog.typeOf(G__296775);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj296777 = {};
return obj296777;
})();


cljs.core.ISeq = (function (){var obj296779 = {};
return obj296779;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._first[(function (){var G__296783 = x__4625__auto__;
return goog.typeOf(G__296783);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rest[(function (){var G__296787 = x__4625__auto__;
return goog.typeOf(G__296787);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj296789 = {};
return obj296789;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._next[(function (){var G__296793 = x__4625__auto__;
return goog.typeOf(G__296793);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj296795 = {};
return obj296795;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__296801 = x__4625__auto__;
return goog.typeOf(G__296801);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__296803 = x__4625__auto__;
return goog.typeOf(G__296803);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj296805 = {};
return obj296805;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__296809 = x__4625__auto__;
return goog.typeOf(G__296809);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc[(function (){var G__296813 = x__4625__auto__;
return goog.typeOf(G__296813);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj296815 = {};
return obj296815;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc[(function (){var G__296819 = x__4625__auto__;
return goog.typeOf(G__296819);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj296821 = {};
return obj296821;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._key[(function (){var G__296825 = x__4625__auto__;
return goog.typeOf(G__296825);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._val[(function (){var G__296829 = x__4625__auto__;
return goog.typeOf(G__296829);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._val["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj296831 = {};
return obj296831;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin[(function (){var G__296835 = x__4625__auto__;
return goog.typeOf(G__296835);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj296837 = {};
return obj296837;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._peek[(function (){var G__296841 = x__4625__auto__;
return goog.typeOf(G__296841);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._peek["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._pop[(function (){var G__296845 = x__4625__auto__;
return goog.typeOf(G__296845);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj296847 = {};
return obj296847;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n[(function (){var G__296851 = x__4625__auto__;
return goog.typeOf(G__296851);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj296853 = {};
return obj296853;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref[(function (){var G__296857 = x__4625__auto__;
return goog.typeOf(G__296857);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj296859 = {};
return obj296859;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref_with_timeout[(function (){var G__296863 = x__4625__auto__;
return goog.typeOf(G__296863);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj296865 = {};
return obj296865;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._meta[(function (){var G__296869 = x__4625__auto__;
return goog.typeOf(G__296869);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj296871 = {};
return obj296871;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._with_meta[(function (){var G__296875 = x__4625__auto__;
return goog.typeOf(G__296875);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj296877 = {};
return obj296877;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__296883 = x__4625__auto__;
return goog.typeOf(G__296883);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__296885 = x__4625__auto__;
return goog.typeOf(G__296885);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj296887 = {};
return obj296887;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._kv_reduce[(function (){var G__296891 = x__4625__auto__;
return goog.typeOf(G__296891);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj296893 = {};
return obj296893;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._equiv[(function (){var G__296897 = x__4625__auto__;
return goog.typeOf(G__296897);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._equiv["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj296899 = {};
return obj296899;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._hash[(function (){var G__296903 = x__4625__auto__;
return goog.typeOf(G__296903);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._hash["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj296905 = {};
return obj296905;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._seq[(function (){var G__296909 = x__4625__auto__;
return goog.typeOf(G__296909);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj296911 = {};
return obj296911;
})();


cljs.core.IList = (function (){var obj296913 = {};
return obj296913;
})();


cljs.core.IRecord = (function (){var obj296915 = {};
return obj296915;
})();


cljs.core.IReversible = (function (){var obj296917 = {};
return obj296917;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rseq[(function (){var G__296921 = x__4625__auto__;
return goog.typeOf(G__296921);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rseq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj296923 = {};
return obj296923;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq[(function (){var G__296927 = x__4625__auto__;
return goog.typeOf(G__296927);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq_from[(function (){var G__296931 = x__4625__auto__;
return goog.typeOf(G__296931);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._entry_key[(function (){var G__296935 = x__4625__auto__;
return goog.typeOf(G__296935);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._comparator[(function (){var G__296939 = x__4625__auto__;
return goog.typeOf(G__296939);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._comparator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj296941 = {};
return obj296941;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._write[(function (){var G__296945 = x__4625__auto__;
return goog.typeOf(G__296945);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._write["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._flush[(function (){var G__296949 = x__4625__auto__;
return goog.typeOf(G__296949);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._flush["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj296951 = {};
return obj296951;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._pr_writer[(function (){var G__296955 = x__4625__auto__;
return goog.typeOf(G__296955);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj296957 = {};
return obj296957;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3969__auto__ = d;
if(and__3969__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4625__auto__ = (((d == null))?null:d);
return (function (){var or__3981__auto__ = (cljs.core._realized_QMARK_[(function (){var G__296961 = x__4625__auto__;
return goog.typeOf(G__296961);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj296963 = {};
return obj296963;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._notify_watches[(function (){var G__296967 = x__4625__auto__;
return goog.typeOf(G__296967);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._add_watch[(function (){var G__296971 = x__4625__auto__;
return goog.typeOf(G__296971);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._remove_watch[(function (){var G__296975 = x__4625__auto__;
return goog.typeOf(G__296975);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj296977 = {};
return obj296977;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._as_transient[(function (){var G__296981 = x__4625__auto__;
return goog.typeOf(G__296981);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj296983 = {};
return obj296983;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._conj_BANG_[(function (){var G__296987 = x__4625__auto__;
return goog.typeOf(G__296987);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._persistent_BANG_[(function (){var G__296991 = x__4625__auto__;
return goog.typeOf(G__296991);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj296993 = {};
return obj296993;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_BANG_[(function (){var G__296997 = x__4625__auto__;
return goog.typeOf(G__296997);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj296999 = {};
return obj296999;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__297003 = x__4625__auto__;
return goog.typeOf(G__297003);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj297005 = {};
return obj297005;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__297009 = x__4625__auto__;
return goog.typeOf(G__297009);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._pop_BANG_[(function (){var G__297013 = x__4625__auto__;
return goog.typeOf(G__297013);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj297015 = {};
return obj297015;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__297019 = x__4625__auto__;
return goog.typeOf(G__297019);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj297021 = {};
return obj297021;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._compare[(function (){var G__297025 = x__4625__auto__;
return goog.typeOf(G__297025);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._compare["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj297027 = {};
return obj297027;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._drop_first[(function (){var G__297031 = x__4625__auto__;
return goog.typeOf(G__297031);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj297033 = {};
return obj297033;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_first[(function (){var G__297037 = x__4625__auto__;
return goog.typeOf(G__297037);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_rest[(function (){var G__297041 = x__4625__auto__;
return goog.typeOf(G__297041);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj297043 = {};
return obj297043;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_next[(function (){var G__297047 = x__4625__auto__;
return goog.typeOf(G__297047);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj297049 = {};
return obj297049;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._name[(function (){var G__297053 = x__4625__auto__;
return goog.typeOf(G__297053);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._name["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._namespace[(function (){var G__297057 = x__4625__auto__;
return goog.typeOf(G__297057);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._namespace["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj297059 = {};
return obj297059;
})();


cljs.core.IReset = (function (){var obj297061 = {};
return obj297061;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._reset_BANG_[(function (){var G__297065 = x__4625__auto__;
return goog.typeOf(G__297065);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj297067 = {};
return obj297067;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__297077 = x__4625__auto__;
return goog.typeOf(G__297077);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__297079 = x__4625__auto__;
return goog.typeOf(G__297079);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__297081 = x__4625__auto__;
return goog.typeOf(G__297081);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__297083 = x__4625__auto__;
return goog.typeOf(G__297083);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj297085 = {};
return obj297085;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._vreset_BANG_[(function (){var G__297089 = x__4625__auto__;
return goog.typeOf(G__297089);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj297091 = {};
return obj297091;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._iterator[(function (){var G__297095 = x__4625__auto__;
return goog.typeOf(G__297095);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._iterator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__297098 = (4294967295);
var G__297099 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__297098,G__297099) : Math.imul.call(null,G__297098,G__297099));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__297102 = a;
var G__297103 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__297102,G__297103) : Math.imul.call(null,G__297102,G__297103));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__297104 = (i + (2));
var G__297105 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__297104;
h1 = G__297105;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj297107 = {};
return obj297107;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__297108 = (i + (1));
var G__297109 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__297108;
hash = G__297109;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj297113 = {};
return obj297113;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__297116 = o;
if(G__297116){
var bit__4655__auto__ = (G__297116.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4655__auto__) || (G__297116.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__297117 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__297117) : Math.floor.call(null,G__297117));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__297124 = a.ns;
var G__297125 = b.ns;
return goog.array.defaultCompare(G__297124,G__297125);
})();
if(((0) === nsc)){
var G__297126 = a.name;
var G__297127 = b.name;
return goog.array.defaultCompare(G__297126,G__297127);
} else {
return nsc;
}
}
} else {
var G__297128 = a.name;
var G__297129 = b.name;
return goog.array.defaultCompare(G__297128,G__297129);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__297131 = null;
var G__297131__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__297131__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__297131 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__297131__2.call(this,self__,coll);
case 3:
return G__297131__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__297131.cljs$core$IFn$_invoke$arity$2 = G__297131__2;
G__297131.cljs$core$IFn$_invoke$arity$3 = G__297131__3;
return G__297131;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args297130){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args297130)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__297179 = null;
var G__297179__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__297179__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__297179__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__297179__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__297179__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__297179__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__297179__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__297179__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__297179__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__297179__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__297179__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__297179__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__297179__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__297179__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__297179__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__297179__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__297179__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__297179__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__297179__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__297179__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__297179__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__297179__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297135 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__297136 = a;
var G__297137 = b;
var G__297138 = c;
var G__297139 = d;
var G__297140 = e;
var G__297141 = f;
var G__297142 = g;
var G__297143 = h;
var G__297144 = i;
var G__297145 = j;
var G__297146 = k;
var G__297147 = l;
var G__297148 = m;
var G__297149 = n;
var G__297150 = o;
var G__297151 = p;
var G__297152 = q;
var G__297153 = r;
var G__297154 = s;
var G__297155 = t;
var G__297156 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__297135,G__297136,G__297137,G__297138,G__297139,G__297140,G__297141,G__297142,G__297143,G__297144,G__297145,G__297146,G__297147,G__297148,G__297149,G__297150,G__297151,G__297152,G__297153,G__297154,G__297155,G__297156) : cljs.core.apply.call(null,G__297135,G__297136,G__297137,G__297138,G__297139,G__297140,G__297141,G__297142,G__297143,G__297144,G__297145,G__297146,G__297147,G__297148,G__297149,G__297150,G__297151,G__297152,G__297153,G__297154,G__297155,G__297156));
});
G__297179 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__297179__1.call(this,self__);
case 2:
return G__297179__2.call(this,self__,a);
case 3:
return G__297179__3.call(this,self__,a,b);
case 4:
return G__297179__4.call(this,self__,a,b,c);
case 5:
return G__297179__5.call(this,self__,a,b,c,d);
case 6:
return G__297179__6.call(this,self__,a,b,c,d,e);
case 7:
return G__297179__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__297179__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__297179__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__297179__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__297179__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__297179__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__297179__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__297179__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__297179__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__297179__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__297179__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__297179__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__297179__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__297179__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__297179__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__297179__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__297179.cljs$core$IFn$_invoke$arity$1 = G__297179__1;
G__297179.cljs$core$IFn$_invoke$arity$2 = G__297179__2;
G__297179.cljs$core$IFn$_invoke$arity$3 = G__297179__3;
G__297179.cljs$core$IFn$_invoke$arity$4 = G__297179__4;
G__297179.cljs$core$IFn$_invoke$arity$5 = G__297179__5;
G__297179.cljs$core$IFn$_invoke$arity$6 = G__297179__6;
G__297179.cljs$core$IFn$_invoke$arity$7 = G__297179__7;
G__297179.cljs$core$IFn$_invoke$arity$8 = G__297179__8;
G__297179.cljs$core$IFn$_invoke$arity$9 = G__297179__9;
G__297179.cljs$core$IFn$_invoke$arity$10 = G__297179__10;
G__297179.cljs$core$IFn$_invoke$arity$11 = G__297179__11;
G__297179.cljs$core$IFn$_invoke$arity$12 = G__297179__12;
G__297179.cljs$core$IFn$_invoke$arity$13 = G__297179__13;
G__297179.cljs$core$IFn$_invoke$arity$14 = G__297179__14;
G__297179.cljs$core$IFn$_invoke$arity$15 = G__297179__15;
G__297179.cljs$core$IFn$_invoke$arity$16 = G__297179__16;
G__297179.cljs$core$IFn$_invoke$arity$17 = G__297179__17;
G__297179.cljs$core$IFn$_invoke$arity$18 = G__297179__18;
G__297179.cljs$core$IFn$_invoke$arity$19 = G__297179__19;
G__297179.cljs$core$IFn$_invoke$arity$20 = G__297179__20;
G__297179.cljs$core$IFn$_invoke$arity$21 = G__297179__21;
G__297179.cljs$core$IFn$_invoke$arity$22 = G__297179__22;
return G__297179;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args297134){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args297134)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__297157 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__297158 = a;
var G__297159 = b;
var G__297160 = c;
var G__297161 = d;
var G__297162 = e;
var G__297163 = f;
var G__297164 = g;
var G__297165 = h;
var G__297166 = i;
var G__297167 = j;
var G__297168 = k;
var G__297169 = l;
var G__297170 = m;
var G__297171 = n;
var G__297172 = o;
var G__297173 = p;
var G__297174 = q;
var G__297175 = r;
var G__297176 = s;
var G__297177 = t;
var G__297178 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__297157,G__297158,G__297159,G__297160,G__297161,G__297162,G__297163,G__297164,G__297165,G__297166,G__297167,G__297168,G__297169,G__297170,G__297171,G__297172,G__297173,G__297174,G__297175,G__297176,G__297177,G__297178) : cljs.core.apply.call(null,G__297157,G__297158,G__297159,G__297160,G__297161,G__297162,G__297163,G__297164,G__297165,G__297166,G__297167,G__297168,G__297169,G__297170,G__297171,G__297172,G__297173,G__297174,G__297175,G__297176,G__297177,G__297178));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__297181 = x;
if(G__297181){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__297181.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__297181.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__297181);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__297181);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__297183 = value;
if(G__297183){
var bit__4662__auto__ = (G__297183.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4662__auto__) || (G__297183.cljs$core$ICloneable$)){
return true;
} else {
if((!G__297183.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__297183);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__297183);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__297185 = coll;
if(G__297185){
var bit__4655__auto__ = (G__297185.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4655__auto__) || (G__297185.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__297187 = coll;
if(G__297187){
var bit__4655__auto__ = (G__297187.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__297187.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__297189 = coll;
if(G__297189){
var bit__4655__auto__ = (G__297189.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__297189.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__297191 = coll;
if(G__297191){
var bit__4655__auto__ = (G__297191.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4655__auto__) || (G__297191.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__297196__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__297197 = y;
var G__297198 = cljs.core.first(more);
var G__297199 = cljs.core.next(more);
x = G__297197;
y = G__297198;
more = G__297199;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__297196 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297200__i = 0, G__297200__a = new Array(arguments.length -  2);
while (G__297200__i < G__297200__a.length) {G__297200__a[G__297200__i] = arguments[G__297200__i + 2]; ++G__297200__i;}
  more = new cljs.core.IndexedSeq(G__297200__a,0);
} 
return G__297196__delegate.call(this,x,y,more);};
G__297196.cljs$lang$maxFixedArity = 2;
G__297196.cljs$lang$applyTo = (function (arglist__297201){
var x = cljs.core.first(arglist__297201);
arglist__297201 = cljs.core.next(arglist__297201);
var y = cljs.core.first(arglist__297201);
var more = cljs.core.rest(arglist__297201);
return G__297196__delegate(x,y,more);
});
G__297196.cljs$core$IFn$_invoke$arity$variadic = G__297196__delegate;
return G__297196;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__297202 = null;
if (arguments.length > 2) {
var G__297203__i = 0, G__297203__a = new Array(arguments.length -  2);
while (G__297203__i < G__297203__a.length) {G__297203__a[G__297203__i] = arguments[G__297203__i + 2]; ++G__297203__i;}
G__297202 = new cljs.core.IndexedSeq(G__297203__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__297204 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__297204) : cljs.core.es6_iterator_seq.call(null,G__297204));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__297205 = (n + (1));
var G__297206 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__297207 = cljs.core.next(coll__$1);
n = G__297205;
hash_code = G__297206;
coll__$1 = G__297207;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__297208 = (n + (1));
var G__297209 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__297210 = cljs.core.next(coll__$1);
n = G__297208;
hash_code = G__297209;
coll__$1 = G__297210;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__297211 = o;
return goog.getUid(G__297211);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__297213 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__297213) : cljs.core.deref.call(null,G__297213));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__297220 = val;
var G__297221 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297220,G__297221) : f.call(null,G__297220,G__297221));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297226 = nval;
var G__297227 = (n + (1));
val = G__297226;
n = G__297227;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__297222 = val__$1;
var G__297223 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297222,G__297223) : f.call(null,G__297222,G__297223));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297228 = nval;
var G__297229 = (n + (1));
val__$1 = G__297228;
n = G__297229;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__297224 = val__$1;
var G__297225 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297224,G__297225) : f.call(null,G__297224,G__297225));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297230 = nval;
var G__297231 = (n + (1));
val__$1 = G__297230;
n = G__297231;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__297238 = val;
var G__297239 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297238,G__297239) : f.call(null,G__297238,G__297239));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297244 = nval;
var G__297245 = (n + (1));
val = G__297244;
n = G__297245;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__297240 = val__$1;
var G__297241 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297240,G__297241) : f.call(null,G__297240,G__297241));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297246 = nval;
var G__297247 = (n + (1));
val__$1 = G__297246;
n = G__297247;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__297242 = val__$1;
var G__297243 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297242,G__297243) : f.call(null,G__297242,G__297243));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297248 = nval;
var G__297249 = (n + (1));
val__$1 = G__297248;
n = G__297249;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__297251 = x;
if(G__297251){
var bit__4662__auto__ = (G__297251.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4662__auto__) || (G__297251.cljs$core$ICounted$)){
return true;
} else {
if((!G__297251.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__297251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__297251);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__297253 = x;
if(G__297253){
var bit__4662__auto__ = (G__297253.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4662__auto__) || (G__297253.cljs$core$IIndexed$)){
return true;
} else {
if((!G__297253.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__297253);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__297253);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__297254 = coll__$1;
var G__297255 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__297254,G__297255) : cljs.core.equiv_sequential.call(null,G__297254,G__297255));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__297256 = o;
var G__297257 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__297256,G__297257) : cljs.core.cons.call(null,G__297256,G__297257));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__297260 = coll__$1;
var G__297261 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__297260,G__297261) : cljs.core.equiv_sequential.call(null,G__297260,G__297261));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__297262 = cljs.core.List.EMPTY;
var G__297263 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__297262,G__297263) : cljs.core.with_meta.call(null,G__297262,G__297263));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__297264 = f;
var G__297265 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__297264,G__297265) : cljs.core.seq_reduce.call(null,G__297264,G__297265));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__297266 = f;
var G__297267 = start;
var G__297268 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__297266,G__297267,G__297268) : cljs.core.seq_reduce.call(null,G__297266,G__297267,G__297268));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__297269 = o;
var G__297270 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__297269,G__297270) : cljs.core.cons.call(null,G__297269,G__297270));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__297271 = sn;
s = G__297271;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__297276__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__297277 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__297278 = cljs.core.first(xs);
var G__297279 = cljs.core.next(xs);
coll = G__297277;
x = G__297278;
xs = G__297279;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__297276 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__297280__i = 0, G__297280__a = new Array(arguments.length -  2);
while (G__297280__i < G__297280__a.length) {G__297280__a[G__297280__i] = arguments[G__297280__i + 2]; ++G__297280__i;}
  xs = new cljs.core.IndexedSeq(G__297280__a,0);
} 
return G__297276__delegate.call(this,coll,x,xs);};
G__297276.cljs$lang$maxFixedArity = 2;
G__297276.cljs$lang$applyTo = (function (arglist__297281){
var coll = cljs.core.first(arglist__297281);
arglist__297281 = cljs.core.next(arglist__297281);
var x = cljs.core.first(arglist__297281);
var xs = cljs.core.rest(arglist__297281);
return G__297276__delegate(coll,x,xs);
});
G__297276.cljs$core$IFn$_invoke$arity$variadic = G__297276__delegate;
return G__297276;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__297282 = null;
if (arguments.length > 2) {
var G__297283__i = 0, G__297283__a = new Array(arguments.length -  2);
while (G__297283__i < G__297283__a.length) {G__297283__a[G__297283__i] = arguments[G__297283__i + 2]; ++G__297283__i;}
G__297282 = new cljs.core.IndexedSeq(G__297283__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__297282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__297284 = cljs.core.next(s);
var G__297285 = (acc + (1));
s = G__297284;
acc = G__297285;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__297287 = coll;
if(G__297287){
var bit__4655__auto__ = (G__297287.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4655__auto__) || (G__297287.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__297288 = cljs.core.next(coll);
var G__297289 = (n - (1));
coll = G__297288;
n = G__297289;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__297290 = cljs.core.next(coll);
var G__297291 = (n - (1));
var G__297292 = not_found;
coll = G__297290;
n = G__297291;
not_found = G__297292;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__297297 = coll;
if(G__297297){
var bit__4655__auto__ = (G__297297.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__297297.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__297298 = coll;
if(G__297298){
var bit__4662__auto__ = (G__297298.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__297298.cljs$core$ISeq$)){
return true;
} else {
if((!G__297298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297298);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__297299 = coll;
if(G__297299){
var bit__4655__auto__ = (G__297299.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__297299.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__297300 = coll;
if(G__297300){
var bit__4662__auto__ = (G__297300.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__297300.cljs$core$ISeq$)){
return true;
} else {
if((!G__297300.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297300);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297300);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__297301 = (n__$1 - (1));
var G__297302 = cljs.core.rest(xs);
n__$1 = G__297301;
xs = G__297302;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__297305 = o;
if(G__297305){
var bit__4655__auto__ = (G__297305.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__297305.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__297306 = o;
if(G__297306){
var bit__4655__auto__ = (G__297306.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__297306.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__297310__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__297311 = ret;
var G__297312 = cljs.core.first(kvs);
var G__297313 = cljs.core.second(kvs);
var G__297314 = cljs.core.nnext(kvs);
coll = G__297311;
k = G__297312;
v = G__297313;
kvs = G__297314;
continue;
} else {
return ret;
}
break;
}
};
var G__297310 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__297315__i = 0, G__297315__a = new Array(arguments.length -  3);
while (G__297315__i < G__297315__a.length) {G__297315__a[G__297315__i] = arguments[G__297315__i + 3]; ++G__297315__i;}
  kvs = new cljs.core.IndexedSeq(G__297315__a,0);
} 
return G__297310__delegate.call(this,coll,k,v,kvs);};
G__297310.cljs$lang$maxFixedArity = 3;
G__297310.cljs$lang$applyTo = (function (arglist__297316){
var coll = cljs.core.first(arglist__297316);
arglist__297316 = cljs.core.next(arglist__297316);
var k = cljs.core.first(arglist__297316);
arglist__297316 = cljs.core.next(arglist__297316);
var v = cljs.core.first(arglist__297316);
var kvs = cljs.core.rest(arglist__297316);
return G__297310__delegate(coll,k,v,kvs);
});
G__297310.cljs$core$IFn$_invoke$arity$variadic = G__297310__delegate;
return G__297310;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__297317 = null;
if (arguments.length > 3) {
var G__297318__i = 0, G__297318__a = new Array(arguments.length -  3);
while (G__297318__i < G__297318__a.length) {G__297318__a[G__297318__i] = arguments[G__297318__i + 3]; ++G__297318__i;}
G__297317 = new cljs.core.IndexedSeq(G__297318__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__297317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__297321__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__297322 = ret;
var G__297323 = cljs.core.first(ks);
var G__297324 = cljs.core.next(ks);
coll = G__297322;
k = G__297323;
ks = G__297324;
continue;
} else {
return ret;
}
}
break;
}
};
var G__297321 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__297325__i = 0, G__297325__a = new Array(arguments.length -  2);
while (G__297325__i < G__297325__a.length) {G__297325__a[G__297325__i] = arguments[G__297325__i + 2]; ++G__297325__i;}
  ks = new cljs.core.IndexedSeq(G__297325__a,0);
} 
return G__297321__delegate.call(this,coll,k,ks);};
G__297321.cljs$lang$maxFixedArity = 2;
G__297321.cljs$lang$applyTo = (function (arglist__297326){
var coll = cljs.core.first(arglist__297326);
arglist__297326 = cljs.core.next(arglist__297326);
var k = cljs.core.first(arglist__297326);
var ks = cljs.core.rest(arglist__297326);
return G__297321__delegate(coll,k,ks);
});
G__297321.cljs$core$IFn$_invoke$arity$variadic = G__297321__delegate;
return G__297321;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__297327 = null;
if (arguments.length > 2) {
var G__297328__i = 0, G__297328__a = new Array(arguments.length -  2);
while (G__297328__i < G__297328__a.length) {G__297328__a[G__297328__i] = arguments[G__297328__i + 2]; ++G__297328__i;}
G__297327 = new cljs.core.IndexedSeq(G__297328__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__297327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3981__auto__ = (function (){var G__297333 = f;
return goog.isFunction(G__297333);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__297334 = f;
if(G__297334){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto____$1 = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
return G__297334.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__297334.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__297334);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__297334);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__297800 = null;
var G__297800__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__297800__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297336 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__297336) : self__.afn.call(null,G__297336));
});
var G__297800__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297337 = a;
var G__297338 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__297337,G__297338) : self__.afn.call(null,G__297337,G__297338));
});
var G__297800__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297339 = a;
var G__297340 = b;
var G__297341 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__297339,G__297340,G__297341) : self__.afn.call(null,G__297339,G__297340,G__297341));
});
var G__297800__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297342 = a;
var G__297343 = b;
var G__297344 = c;
var G__297345 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__297342,G__297343,G__297344,G__297345) : self__.afn.call(null,G__297342,G__297343,G__297344,G__297345));
});
var G__297800__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297346 = a;
var G__297347 = b;
var G__297348 = c;
var G__297349 = d;
var G__297350 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__297346,G__297347,G__297348,G__297349,G__297350) : self__.afn.call(null,G__297346,G__297347,G__297348,G__297349,G__297350));
});
var G__297800__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297351 = a;
var G__297352 = b;
var G__297353 = c;
var G__297354 = d;
var G__297355 = e;
var G__297356 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__297351,G__297352,G__297353,G__297354,G__297355,G__297356) : self__.afn.call(null,G__297351,G__297352,G__297353,G__297354,G__297355,G__297356));
});
var G__297800__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297357 = a;
var G__297358 = b;
var G__297359 = c;
var G__297360 = d;
var G__297361 = e;
var G__297362 = f;
var G__297363 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__297357,G__297358,G__297359,G__297360,G__297361,G__297362,G__297363) : self__.afn.call(null,G__297357,G__297358,G__297359,G__297360,G__297361,G__297362,G__297363));
});
var G__297800__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297364 = a;
var G__297365 = b;
var G__297366 = c;
var G__297367 = d;
var G__297368 = e;
var G__297369 = f;
var G__297370 = g;
var G__297371 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__297364,G__297365,G__297366,G__297367,G__297368,G__297369,G__297370,G__297371) : self__.afn.call(null,G__297364,G__297365,G__297366,G__297367,G__297368,G__297369,G__297370,G__297371));
});
var G__297800__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297372 = a;
var G__297373 = b;
var G__297374 = c;
var G__297375 = d;
var G__297376 = e;
var G__297377 = f;
var G__297378 = g;
var G__297379 = h;
var G__297380 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__297372,G__297373,G__297374,G__297375,G__297376,G__297377,G__297378,G__297379,G__297380) : self__.afn.call(null,G__297372,G__297373,G__297374,G__297375,G__297376,G__297377,G__297378,G__297379,G__297380));
});
var G__297800__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297381 = a;
var G__297382 = b;
var G__297383 = c;
var G__297384 = d;
var G__297385 = e;
var G__297386 = f;
var G__297387 = g;
var G__297388 = h;
var G__297389 = i;
var G__297390 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__297381,G__297382,G__297383,G__297384,G__297385,G__297386,G__297387,G__297388,G__297389,G__297390) : self__.afn.call(null,G__297381,G__297382,G__297383,G__297384,G__297385,G__297386,G__297387,G__297388,G__297389,G__297390));
});
var G__297800__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297391 = a;
var G__297392 = b;
var G__297393 = c;
var G__297394 = d;
var G__297395 = e;
var G__297396 = f;
var G__297397 = g;
var G__297398 = h;
var G__297399 = i;
var G__297400 = j;
var G__297401 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__297391,G__297392,G__297393,G__297394,G__297395,G__297396,G__297397,G__297398,G__297399,G__297400,G__297401) : self__.afn.call(null,G__297391,G__297392,G__297393,G__297394,G__297395,G__297396,G__297397,G__297398,G__297399,G__297400,G__297401));
});
var G__297800__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297402 = a;
var G__297403 = b;
var G__297404 = c;
var G__297405 = d;
var G__297406 = e;
var G__297407 = f;
var G__297408 = g;
var G__297409 = h;
var G__297410 = i;
var G__297411 = j;
var G__297412 = k;
var G__297413 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__297402,G__297403,G__297404,G__297405,G__297406,G__297407,G__297408,G__297409,G__297410,G__297411,G__297412,G__297413) : self__.afn.call(null,G__297402,G__297403,G__297404,G__297405,G__297406,G__297407,G__297408,G__297409,G__297410,G__297411,G__297412,G__297413));
});
var G__297800__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297414 = a;
var G__297415 = b;
var G__297416 = c;
var G__297417 = d;
var G__297418 = e;
var G__297419 = f;
var G__297420 = g;
var G__297421 = h;
var G__297422 = i;
var G__297423 = j;
var G__297424 = k;
var G__297425 = l;
var G__297426 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__297414,G__297415,G__297416,G__297417,G__297418,G__297419,G__297420,G__297421,G__297422,G__297423,G__297424,G__297425,G__297426) : self__.afn.call(null,G__297414,G__297415,G__297416,G__297417,G__297418,G__297419,G__297420,G__297421,G__297422,G__297423,G__297424,G__297425,G__297426));
});
var G__297800__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297427 = a;
var G__297428 = b;
var G__297429 = c;
var G__297430 = d;
var G__297431 = e;
var G__297432 = f;
var G__297433 = g;
var G__297434 = h;
var G__297435 = i;
var G__297436 = j;
var G__297437 = k;
var G__297438 = l;
var G__297439 = m;
var G__297440 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__297427,G__297428,G__297429,G__297430,G__297431,G__297432,G__297433,G__297434,G__297435,G__297436,G__297437,G__297438,G__297439,G__297440) : self__.afn.call(null,G__297427,G__297428,G__297429,G__297430,G__297431,G__297432,G__297433,G__297434,G__297435,G__297436,G__297437,G__297438,G__297439,G__297440));
});
var G__297800__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297441 = a;
var G__297442 = b;
var G__297443 = c;
var G__297444 = d;
var G__297445 = e;
var G__297446 = f;
var G__297447 = g;
var G__297448 = h;
var G__297449 = i;
var G__297450 = j;
var G__297451 = k;
var G__297452 = l;
var G__297453 = m;
var G__297454 = n;
var G__297455 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__297441,G__297442,G__297443,G__297444,G__297445,G__297446,G__297447,G__297448,G__297449,G__297450,G__297451,G__297452,G__297453,G__297454,G__297455) : self__.afn.call(null,G__297441,G__297442,G__297443,G__297444,G__297445,G__297446,G__297447,G__297448,G__297449,G__297450,G__297451,G__297452,G__297453,G__297454,G__297455));
});
var G__297800__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297456 = a;
var G__297457 = b;
var G__297458 = c;
var G__297459 = d;
var G__297460 = e;
var G__297461 = f;
var G__297462 = g;
var G__297463 = h;
var G__297464 = i;
var G__297465 = j;
var G__297466 = k;
var G__297467 = l;
var G__297468 = m;
var G__297469 = n;
var G__297470 = o;
var G__297471 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__297456,G__297457,G__297458,G__297459,G__297460,G__297461,G__297462,G__297463,G__297464,G__297465,G__297466,G__297467,G__297468,G__297469,G__297470,G__297471) : self__.afn.call(null,G__297456,G__297457,G__297458,G__297459,G__297460,G__297461,G__297462,G__297463,G__297464,G__297465,G__297466,G__297467,G__297468,G__297469,G__297470,G__297471));
});
var G__297800__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297472 = a;
var G__297473 = b;
var G__297474 = c;
var G__297475 = d;
var G__297476 = e;
var G__297477 = f;
var G__297478 = g;
var G__297479 = h;
var G__297480 = i;
var G__297481 = j;
var G__297482 = k;
var G__297483 = l;
var G__297484 = m;
var G__297485 = n;
var G__297486 = o;
var G__297487 = p;
var G__297488 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__297472,G__297473,G__297474,G__297475,G__297476,G__297477,G__297478,G__297479,G__297480,G__297481,G__297482,G__297483,G__297484,G__297485,G__297486,G__297487,G__297488) : self__.afn.call(null,G__297472,G__297473,G__297474,G__297475,G__297476,G__297477,G__297478,G__297479,G__297480,G__297481,G__297482,G__297483,G__297484,G__297485,G__297486,G__297487,G__297488));
});
var G__297800__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297489 = a;
var G__297490 = b;
var G__297491 = c;
var G__297492 = d;
var G__297493 = e;
var G__297494 = f;
var G__297495 = g;
var G__297496 = h;
var G__297497 = i;
var G__297498 = j;
var G__297499 = k;
var G__297500 = l;
var G__297501 = m;
var G__297502 = n;
var G__297503 = o;
var G__297504 = p;
var G__297505 = q;
var G__297506 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__297489,G__297490,G__297491,G__297492,G__297493,G__297494,G__297495,G__297496,G__297497,G__297498,G__297499,G__297500,G__297501,G__297502,G__297503,G__297504,G__297505,G__297506) : self__.afn.call(null,G__297489,G__297490,G__297491,G__297492,G__297493,G__297494,G__297495,G__297496,G__297497,G__297498,G__297499,G__297500,G__297501,G__297502,G__297503,G__297504,G__297505,G__297506));
});
var G__297800__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297507 = a;
var G__297508 = b;
var G__297509 = c;
var G__297510 = d;
var G__297511 = e;
var G__297512 = f;
var G__297513 = g;
var G__297514 = h;
var G__297515 = i;
var G__297516 = j;
var G__297517 = k;
var G__297518 = l;
var G__297519 = m;
var G__297520 = n;
var G__297521 = o;
var G__297522 = p;
var G__297523 = q;
var G__297524 = r;
var G__297525 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__297507,G__297508,G__297509,G__297510,G__297511,G__297512,G__297513,G__297514,G__297515,G__297516,G__297517,G__297518,G__297519,G__297520,G__297521,G__297522,G__297523,G__297524,G__297525) : self__.afn.call(null,G__297507,G__297508,G__297509,G__297510,G__297511,G__297512,G__297513,G__297514,G__297515,G__297516,G__297517,G__297518,G__297519,G__297520,G__297521,G__297522,G__297523,G__297524,G__297525));
});
var G__297800__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297526 = a;
var G__297527 = b;
var G__297528 = c;
var G__297529 = d;
var G__297530 = e;
var G__297531 = f;
var G__297532 = g;
var G__297533 = h;
var G__297534 = i;
var G__297535 = j;
var G__297536 = k;
var G__297537 = l;
var G__297538 = m;
var G__297539 = n;
var G__297540 = o;
var G__297541 = p;
var G__297542 = q;
var G__297543 = r;
var G__297544 = s;
var G__297545 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__297526,G__297527,G__297528,G__297529,G__297530,G__297531,G__297532,G__297533,G__297534,G__297535,G__297536,G__297537,G__297538,G__297539,G__297540,G__297541,G__297542,G__297543,G__297544,G__297545) : self__.afn.call(null,G__297526,G__297527,G__297528,G__297529,G__297530,G__297531,G__297532,G__297533,G__297534,G__297535,G__297536,G__297537,G__297538,G__297539,G__297540,G__297541,G__297542,G__297543,G__297544,G__297545));
});
var G__297800__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__297546 = self__.afn;
var G__297547 = a;
var G__297548 = b;
var G__297549 = c;
var G__297550 = d;
var G__297551 = e;
var G__297552 = f;
var G__297553 = g;
var G__297554 = h;
var G__297555 = i;
var G__297556 = j;
var G__297557 = k;
var G__297558 = l;
var G__297559 = m;
var G__297560 = n;
var G__297561 = o;
var G__297562 = p;
var G__297563 = q;
var G__297564 = r;
var G__297565 = s;
var G__297566 = t;
var G__297567 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__297546,G__297547,G__297548,G__297549,G__297550,G__297551,G__297552,G__297553,G__297554,G__297555,G__297556,G__297557,G__297558,G__297559,G__297560,G__297561,G__297562,G__297563,G__297564,G__297565,G__297566,G__297567) : cljs.core.apply.call(null,G__297546,G__297547,G__297548,G__297549,G__297550,G__297551,G__297552,G__297553,G__297554,G__297555,G__297556,G__297557,G__297558,G__297559,G__297560,G__297561,G__297562,G__297563,G__297564,G__297565,G__297566,G__297567));
});
G__297800 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__297800__1.call(this,self__);
case 2:
return G__297800__2.call(this,self__,a);
case 3:
return G__297800__3.call(this,self__,a,b);
case 4:
return G__297800__4.call(this,self__,a,b,c);
case 5:
return G__297800__5.call(this,self__,a,b,c,d);
case 6:
return G__297800__6.call(this,self__,a,b,c,d,e);
case 7:
return G__297800__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__297800__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__297800__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__297800__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__297800__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__297800__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__297800__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__297800__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__297800__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__297800__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__297800__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__297800__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__297800__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__297800__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__297800__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__297800__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__297800.cljs$core$IFn$_invoke$arity$1 = G__297800__1;
G__297800.cljs$core$IFn$_invoke$arity$2 = G__297800__2;
G__297800.cljs$core$IFn$_invoke$arity$3 = G__297800__3;
G__297800.cljs$core$IFn$_invoke$arity$4 = G__297800__4;
G__297800.cljs$core$IFn$_invoke$arity$5 = G__297800__5;
G__297800.cljs$core$IFn$_invoke$arity$6 = G__297800__6;
G__297800.cljs$core$IFn$_invoke$arity$7 = G__297800__7;
G__297800.cljs$core$IFn$_invoke$arity$8 = G__297800__8;
G__297800.cljs$core$IFn$_invoke$arity$9 = G__297800__9;
G__297800.cljs$core$IFn$_invoke$arity$10 = G__297800__10;
G__297800.cljs$core$IFn$_invoke$arity$11 = G__297800__11;
G__297800.cljs$core$IFn$_invoke$arity$12 = G__297800__12;
G__297800.cljs$core$IFn$_invoke$arity$13 = G__297800__13;
G__297800.cljs$core$IFn$_invoke$arity$14 = G__297800__14;
G__297800.cljs$core$IFn$_invoke$arity$15 = G__297800__15;
G__297800.cljs$core$IFn$_invoke$arity$16 = G__297800__16;
G__297800.cljs$core$IFn$_invoke$arity$17 = G__297800__17;
G__297800.cljs$core$IFn$_invoke$arity$18 = G__297800__18;
G__297800.cljs$core$IFn$_invoke$arity$19 = G__297800__19;
G__297800.cljs$core$IFn$_invoke$arity$20 = G__297800__20;
G__297800.cljs$core$IFn$_invoke$arity$21 = G__297800__21;
G__297800.cljs$core$IFn$_invoke$arity$22 = G__297800__22;
return G__297800;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args297335){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args297335)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__297568 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__297568) : self__.afn.call(null,G__297568));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__297569 = a;
var G__297570 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__297569,G__297570) : self__.afn.call(null,G__297569,G__297570));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__297571 = a;
var G__297572 = b;
var G__297573 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__297571,G__297572,G__297573) : self__.afn.call(null,G__297571,G__297572,G__297573));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__297574 = a;
var G__297575 = b;
var G__297576 = c;
var G__297577 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__297574,G__297575,G__297576,G__297577) : self__.afn.call(null,G__297574,G__297575,G__297576,G__297577));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__297578 = a;
var G__297579 = b;
var G__297580 = c;
var G__297581 = d;
var G__297582 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__297578,G__297579,G__297580,G__297581,G__297582) : self__.afn.call(null,G__297578,G__297579,G__297580,G__297581,G__297582));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__297583 = a;
var G__297584 = b;
var G__297585 = c;
var G__297586 = d;
var G__297587 = e;
var G__297588 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__297583,G__297584,G__297585,G__297586,G__297587,G__297588) : self__.afn.call(null,G__297583,G__297584,G__297585,G__297586,G__297587,G__297588));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__297589 = a;
var G__297590 = b;
var G__297591 = c;
var G__297592 = d;
var G__297593 = e;
var G__297594 = f;
var G__297595 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__297589,G__297590,G__297591,G__297592,G__297593,G__297594,G__297595) : self__.afn.call(null,G__297589,G__297590,G__297591,G__297592,G__297593,G__297594,G__297595));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__297596 = a;
var G__297597 = b;
var G__297598 = c;
var G__297599 = d;
var G__297600 = e;
var G__297601 = f;
var G__297602 = g;
var G__297603 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__297596,G__297597,G__297598,G__297599,G__297600,G__297601,G__297602,G__297603) : self__.afn.call(null,G__297596,G__297597,G__297598,G__297599,G__297600,G__297601,G__297602,G__297603));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__297604 = a;
var G__297605 = b;
var G__297606 = c;
var G__297607 = d;
var G__297608 = e;
var G__297609 = f;
var G__297610 = g;
var G__297611 = h;
var G__297612 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__297604,G__297605,G__297606,G__297607,G__297608,G__297609,G__297610,G__297611,G__297612) : self__.afn.call(null,G__297604,G__297605,G__297606,G__297607,G__297608,G__297609,G__297610,G__297611,G__297612));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__297613 = a;
var G__297614 = b;
var G__297615 = c;
var G__297616 = d;
var G__297617 = e;
var G__297618 = f;
var G__297619 = g;
var G__297620 = h;
var G__297621 = i;
var G__297622 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__297613,G__297614,G__297615,G__297616,G__297617,G__297618,G__297619,G__297620,G__297621,G__297622) : self__.afn.call(null,G__297613,G__297614,G__297615,G__297616,G__297617,G__297618,G__297619,G__297620,G__297621,G__297622));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__297623 = a;
var G__297624 = b;
var G__297625 = c;
var G__297626 = d;
var G__297627 = e;
var G__297628 = f;
var G__297629 = g;
var G__297630 = h;
var G__297631 = i;
var G__297632 = j;
var G__297633 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__297623,G__297624,G__297625,G__297626,G__297627,G__297628,G__297629,G__297630,G__297631,G__297632,G__297633) : self__.afn.call(null,G__297623,G__297624,G__297625,G__297626,G__297627,G__297628,G__297629,G__297630,G__297631,G__297632,G__297633));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__297634 = a;
var G__297635 = b;
var G__297636 = c;
var G__297637 = d;
var G__297638 = e;
var G__297639 = f;
var G__297640 = g;
var G__297641 = h;
var G__297642 = i;
var G__297643 = j;
var G__297644 = k;
var G__297645 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__297634,G__297635,G__297636,G__297637,G__297638,G__297639,G__297640,G__297641,G__297642,G__297643,G__297644,G__297645) : self__.afn.call(null,G__297634,G__297635,G__297636,G__297637,G__297638,G__297639,G__297640,G__297641,G__297642,G__297643,G__297644,G__297645));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__297646 = a;
var G__297647 = b;
var G__297648 = c;
var G__297649 = d;
var G__297650 = e;
var G__297651 = f;
var G__297652 = g;
var G__297653 = h;
var G__297654 = i;
var G__297655 = j;
var G__297656 = k;
var G__297657 = l;
var G__297658 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__297646,G__297647,G__297648,G__297649,G__297650,G__297651,G__297652,G__297653,G__297654,G__297655,G__297656,G__297657,G__297658) : self__.afn.call(null,G__297646,G__297647,G__297648,G__297649,G__297650,G__297651,G__297652,G__297653,G__297654,G__297655,G__297656,G__297657,G__297658));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__297659 = a;
var G__297660 = b;
var G__297661 = c;
var G__297662 = d;
var G__297663 = e;
var G__297664 = f;
var G__297665 = g;
var G__297666 = h;
var G__297667 = i;
var G__297668 = j;
var G__297669 = k;
var G__297670 = l;
var G__297671 = m;
var G__297672 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__297659,G__297660,G__297661,G__297662,G__297663,G__297664,G__297665,G__297666,G__297667,G__297668,G__297669,G__297670,G__297671,G__297672) : self__.afn.call(null,G__297659,G__297660,G__297661,G__297662,G__297663,G__297664,G__297665,G__297666,G__297667,G__297668,G__297669,G__297670,G__297671,G__297672));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__297673 = a;
var G__297674 = b;
var G__297675 = c;
var G__297676 = d;
var G__297677 = e;
var G__297678 = f;
var G__297679 = g;
var G__297680 = h;
var G__297681 = i;
var G__297682 = j;
var G__297683 = k;
var G__297684 = l;
var G__297685 = m;
var G__297686 = n;
var G__297687 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__297673,G__297674,G__297675,G__297676,G__297677,G__297678,G__297679,G__297680,G__297681,G__297682,G__297683,G__297684,G__297685,G__297686,G__297687) : self__.afn.call(null,G__297673,G__297674,G__297675,G__297676,G__297677,G__297678,G__297679,G__297680,G__297681,G__297682,G__297683,G__297684,G__297685,G__297686,G__297687));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__297688 = a;
var G__297689 = b;
var G__297690 = c;
var G__297691 = d;
var G__297692 = e;
var G__297693 = f;
var G__297694 = g;
var G__297695 = h;
var G__297696 = i;
var G__297697 = j;
var G__297698 = k;
var G__297699 = l;
var G__297700 = m;
var G__297701 = n;
var G__297702 = o;
var G__297703 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__297688,G__297689,G__297690,G__297691,G__297692,G__297693,G__297694,G__297695,G__297696,G__297697,G__297698,G__297699,G__297700,G__297701,G__297702,G__297703) : self__.afn.call(null,G__297688,G__297689,G__297690,G__297691,G__297692,G__297693,G__297694,G__297695,G__297696,G__297697,G__297698,G__297699,G__297700,G__297701,G__297702,G__297703));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__297704 = a;
var G__297705 = b;
var G__297706 = c;
var G__297707 = d;
var G__297708 = e;
var G__297709 = f;
var G__297710 = g;
var G__297711 = h;
var G__297712 = i;
var G__297713 = j;
var G__297714 = k;
var G__297715 = l;
var G__297716 = m;
var G__297717 = n;
var G__297718 = o;
var G__297719 = p;
var G__297720 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__297704,G__297705,G__297706,G__297707,G__297708,G__297709,G__297710,G__297711,G__297712,G__297713,G__297714,G__297715,G__297716,G__297717,G__297718,G__297719,G__297720) : self__.afn.call(null,G__297704,G__297705,G__297706,G__297707,G__297708,G__297709,G__297710,G__297711,G__297712,G__297713,G__297714,G__297715,G__297716,G__297717,G__297718,G__297719,G__297720));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__297721 = a;
var G__297722 = b;
var G__297723 = c;
var G__297724 = d;
var G__297725 = e;
var G__297726 = f;
var G__297727 = g;
var G__297728 = h;
var G__297729 = i;
var G__297730 = j;
var G__297731 = k;
var G__297732 = l;
var G__297733 = m;
var G__297734 = n;
var G__297735 = o;
var G__297736 = p;
var G__297737 = q;
var G__297738 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__297721,G__297722,G__297723,G__297724,G__297725,G__297726,G__297727,G__297728,G__297729,G__297730,G__297731,G__297732,G__297733,G__297734,G__297735,G__297736,G__297737,G__297738) : self__.afn.call(null,G__297721,G__297722,G__297723,G__297724,G__297725,G__297726,G__297727,G__297728,G__297729,G__297730,G__297731,G__297732,G__297733,G__297734,G__297735,G__297736,G__297737,G__297738));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__297739 = a;
var G__297740 = b;
var G__297741 = c;
var G__297742 = d;
var G__297743 = e;
var G__297744 = f;
var G__297745 = g;
var G__297746 = h;
var G__297747 = i;
var G__297748 = j;
var G__297749 = k;
var G__297750 = l;
var G__297751 = m;
var G__297752 = n;
var G__297753 = o;
var G__297754 = p;
var G__297755 = q;
var G__297756 = r;
var G__297757 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__297739,G__297740,G__297741,G__297742,G__297743,G__297744,G__297745,G__297746,G__297747,G__297748,G__297749,G__297750,G__297751,G__297752,G__297753,G__297754,G__297755,G__297756,G__297757) : self__.afn.call(null,G__297739,G__297740,G__297741,G__297742,G__297743,G__297744,G__297745,G__297746,G__297747,G__297748,G__297749,G__297750,G__297751,G__297752,G__297753,G__297754,G__297755,G__297756,G__297757));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__297758 = a;
var G__297759 = b;
var G__297760 = c;
var G__297761 = d;
var G__297762 = e;
var G__297763 = f;
var G__297764 = g;
var G__297765 = h;
var G__297766 = i;
var G__297767 = j;
var G__297768 = k;
var G__297769 = l;
var G__297770 = m;
var G__297771 = n;
var G__297772 = o;
var G__297773 = p;
var G__297774 = q;
var G__297775 = r;
var G__297776 = s;
var G__297777 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__297758,G__297759,G__297760,G__297761,G__297762,G__297763,G__297764,G__297765,G__297766,G__297767,G__297768,G__297769,G__297770,G__297771,G__297772,G__297773,G__297774,G__297775,G__297776,G__297777) : self__.afn.call(null,G__297758,G__297759,G__297760,G__297761,G__297762,G__297763,G__297764,G__297765,G__297766,G__297767,G__297768,G__297769,G__297770,G__297771,G__297772,G__297773,G__297774,G__297775,G__297776,G__297777));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__297778 = self__.afn;
var G__297779 = a;
var G__297780 = b;
var G__297781 = c;
var G__297782 = d;
var G__297783 = e;
var G__297784 = f;
var G__297785 = g;
var G__297786 = h;
var G__297787 = i;
var G__297788 = j;
var G__297789 = k;
var G__297790 = l;
var G__297791 = m;
var G__297792 = n;
var G__297793 = o;
var G__297794 = p;
var G__297795 = q;
var G__297796 = r;
var G__297797 = s;
var G__297798 = t;
var G__297799 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__297778,G__297779,G__297780,G__297781,G__297782,G__297783,G__297784,G__297785,G__297786,G__297787,G__297788,G__297789,G__297790,G__297791,G__297792,G__297793,G__297794,G__297795,G__297796,G__297797,G__297798,G__297799) : cljs.core.apply.call(null,G__297778,G__297779,G__297780,G__297781,G__297782,G__297783,G__297784,G__297785,G__297786,G__297787,G__297788,G__297789,G__297790,G__297791,G__297792,G__297793,G__297794,G__297795,G__297796,G__297797,G__297798,G__297799));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__297804 = o;
if(G__297804){
var bit__4662__auto__ = (G__297804.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4662__auto__) || (G__297804.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__297804.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__297804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__297804);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3969__auto__ = !((o == null));
if(and__3969__auto__){
var G__297808 = o;
if(G__297808){
var bit__4662__auto__ = (G__297808.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__297808.cljs$core$IMeta$)){
return true;
} else {
if((!G__297808.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__297808);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__297808);
}
} else {
return and__3969__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__297811__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__297812 = ret;
var G__297813 = cljs.core.first(ks);
var G__297814 = cljs.core.next(ks);
coll = G__297812;
k = G__297813;
ks = G__297814;
continue;
} else {
return ret;
}
}
break;
}
};
var G__297811 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__297815__i = 0, G__297815__a = new Array(arguments.length -  2);
while (G__297815__i < G__297815__a.length) {G__297815__a[G__297815__i] = arguments[G__297815__i + 2]; ++G__297815__i;}
  ks = new cljs.core.IndexedSeq(G__297815__a,0);
} 
return G__297811__delegate.call(this,coll,k,ks);};
G__297811.cljs$lang$maxFixedArity = 2;
G__297811.cljs$lang$applyTo = (function (arglist__297816){
var coll = cljs.core.first(arglist__297816);
arglist__297816 = cljs.core.next(arglist__297816);
var k = cljs.core.first(arglist__297816);
var ks = cljs.core.rest(arglist__297816);
return G__297811__delegate(coll,k,ks);
});
G__297811.cljs$core$IFn$_invoke$arity$variadic = G__297811__delegate;
return G__297811;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__297817 = null;
if (arguments.length > 2) {
var G__297818__i = 0, G__297818__a = new Array(arguments.length -  2);
while (G__297818__i < G__297818__a.length) {G__297818__a[G__297818__i] = arguments[G__297818__i + 2]; ++G__297818__i;}
G__297817 = new cljs.core.IndexedSeq(G__297818__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__297817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__297820 = x;
if(G__297820){
var bit__4662__auto__ = (G__297820.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4662__auto__) || (G__297820.cljs$core$ICollection$)){
return true;
} else {
if((!G__297820.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__297820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__297820);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__297822 = x;
if(G__297822){
var bit__4662__auto__ = (G__297822.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4662__auto__) || (G__297822.cljs$core$ISet$)){
return true;
} else {
if((!G__297822.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__297822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__297822);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__297824 = x;
if(G__297824){
var bit__4662__auto__ = (G__297824.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4662__auto__) || (G__297824.cljs$core$IAssociative$)){
return true;
} else {
if((!G__297824.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__297824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__297824);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__297826 = x;
if(G__297826){
var bit__4662__auto__ = (G__297826.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4662__auto__) || (G__297826.cljs$core$ISequential$)){
return true;
} else {
if((!G__297826.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__297826);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__297826);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__297828 = x;
if(G__297828){
var bit__4662__auto__ = (G__297828.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4662__auto__) || (G__297828.cljs$core$ISorted$)){
return true;
} else {
if((!G__297828.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__297828);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__297828);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__297830 = x;
if(G__297830){
var bit__4662__auto__ = (G__297830.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4662__auto__) || (G__297830.cljs$core$IReduce$)){
return true;
} else {
if((!G__297830.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__297830);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__297830);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__297832 = x;
if(G__297832){
var bit__4662__auto__ = (G__297832.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4662__auto__) || (G__297832.cljs$core$IMap$)){
return true;
} else {
if((!G__297832.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__297832);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__297832);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__297834 = x;
if(G__297834){
var bit__4662__auto__ = (G__297834.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4662__auto__) || (G__297834.cljs$core$IVector$)){
return true;
} else {
if((!G__297834.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__297834);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__297834);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__297836 = x;
if(G__297836){
var bit__4655__auto__ = (G__297836.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4655__auto__) || (G__297836.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj297842 = {};
return obj297842;
});
var js_obj__1 = (function() { 
var G__297845__delegate = function (keyvals){
var G__297843 = goog.object.create;
var G__297844 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__297843,G__297844) : cljs.core.apply.call(null,G__297843,G__297844));
};
var G__297845 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__297846__i = 0, G__297846__a = new Array(arguments.length -  0);
while (G__297846__i < G__297846__a.length) {G__297846__a[G__297846__i] = arguments[G__297846__i + 0]; ++G__297846__i;}
  keyvals = new cljs.core.IndexedSeq(G__297846__a,0);
} 
return G__297845__delegate.call(this,keyvals);};
G__297845.cljs$lang$maxFixedArity = 0;
G__297845.cljs$lang$applyTo = (function (arglist__297847){
var keyvals = cljs.core.seq(arglist__297847);
return G__297845__delegate(keyvals);
});
G__297845.cljs$core$IFn$_invoke$arity$variadic = G__297845__delegate;
return G__297845;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__297848 = null;
if (arguments.length > 0) {
var G__297849__i = 0, G__297849__a = new Array(arguments.length -  0);
while (G__297849__i < G__297849__a.length) {G__297849__a[G__297849__i] = arguments[G__297849__i + 0]; ++G__297849__i;}
G__297848 = new cljs.core.IndexedSeq(G__297849__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__297848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__297852_297854 = obj;
var G__297853_297855 = ((function (G__297852_297854,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__297852_297854,keys))
;
goog.object.forEach(G__297852_297854,G__297853_297855);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__297856 = (i__$1 + (1));
var G__297857 = (j__$1 + (1));
var G__297858 = (len__$1 - (1));
i__$1 = G__297856;
j__$1 = G__297857;
len__$1 = G__297858;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__297859 = (i__$1 - (1));
var G__297860 = (j__$1 - (1));
var G__297861 = (len__$1 - (1));
i__$1 = G__297859;
j__$1 = G__297860;
len__$1 = G__297861;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj297863 = {};
return obj297863;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__297865 = s;
if(G__297865){
var bit__4662__auto__ = (G__297865.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__297865.cljs$core$ISeq$)){
return true;
} else {
if((!G__297865.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297865);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__297865);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__297867 = s;
if(G__297867){
var bit__4662__auto__ = (G__297867.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4662__auto__) || (G__297867.cljs$core$ISeqable$)){
return true;
} else {
if((!G__297867.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__297867);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__297867);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3981__auto__ = cljs.core.fn_QMARK_(f);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__297871 = f;
if(G__297871){
var bit__4662__auto__ = (G__297871.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4662__auto__) || (G__297871.cljs$core$IFn$)){
return true;
} else {
if((!G__297871.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__297871);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__297871);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__297884 = n;
return isNaN(G__297884);
})())) && (!((n === Infinity))) && (((function (){var G__297885 = n;
return parseFloat(G__297885);
})() === (function (){var G__297886 = n;
var G__297887 = (10);
return parseInt(G__297886,G__297887);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__297888__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__297889 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__297890 = etc;
s = G__297889;
xs = G__297890;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__297888 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297891__i = 0, G__297891__a = new Array(arguments.length -  2);
while (G__297891__i < G__297891__a.length) {G__297891__a[G__297891__i] = arguments[G__297891__i + 2]; ++G__297891__i;}
  more = new cljs.core.IndexedSeq(G__297891__a,0);
} 
return G__297888__delegate.call(this,x,y,more);};
G__297888.cljs$lang$maxFixedArity = 2;
G__297888.cljs$lang$applyTo = (function (arglist__297892){
var x = cljs.core.first(arglist__297892);
arglist__297892 = cljs.core.next(arglist__297892);
var y = cljs.core.first(arglist__297892);
var more = cljs.core.rest(arglist__297892);
return G__297888__delegate(x,y,more);
});
G__297888.cljs$core$IFn$_invoke$arity$variadic = G__297888__delegate;
return G__297888;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__297893 = null;
if (arguments.length > 2) {
var G__297894__i = 0, G__297894__a = new Array(arguments.length -  2);
while (G__297894__i < G__297894__a.length) {G__297894__a[G__297894__i] = arguments[G__297894__i + 2]; ++G__297894__i;}
G__297893 = new cljs.core.IndexedSeq(G__297894__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__297898 = x;
if(G__297898){
var bit__4655__auto__ = (G__297898.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4655__auto__) || (G__297898.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__297899 = x;
var G__297900 = y;
return goog.array.defaultCompare(G__297899,G__297900);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__297905 = xs;
var G__297906 = ys;
var G__297907 = len;
var G__297908 = (n + (1));
xs = G__297905;
ys = G__297906;
len = G__297907;
n = G__297908;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__297913 = x;
var G__297914 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297913,G__297914) : f.call(null,G__297913,G__297914));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__297915 = y;
var G__297916 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297915,G__297916) : f.call(null,G__297915,G__297916));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__297922 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__297922) : cljs.core.to_array.call(null,G__297922));
})();
var G__297923_297925 = a;
var G__297924_297926 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__297923_297925,G__297924_297926);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__297932 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__297932) : keyfn.call(null,G__297932));
})(),(function (){var G__297933 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__297933) : keyfn.call(null,G__297933));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__297939 = f;
var G__297940 = cljs.core.first(s);
var G__297941 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__297939,G__297940,G__297941) : cljs.core.reduce.call(null,G__297939,G__297940,G__297941));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__297942 = val__$1;
var G__297943 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297942,G__297943) : f.call(null,G__297942,G__297943));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__297944 = nval;
var G__297945 = cljs.core.next(coll__$1);
val__$1 = G__297944;
coll__$1 = G__297945;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__297949 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__297949) : cljs.core.to_array.call(null,G__297949));
})();
var G__297950_297952 = a;
goog.array.shuffle(G__297950_297952);

var G__297951 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__297951) : cljs.core.vec.call(null,G__297951));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__297955 = coll;
if(G__297955){
var bit__4655__auto__ = (G__297955.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__297955.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__297956 = coll;
if(G__297956){
var bit__4655__auto__ = (G__297956.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__297956.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__297965 = null;
var G__297965__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__297965__1 = (function (x){
var G__297962 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__297962) : cf.call(null,G__297962));
});
var G__297965__2 = (function (x,y){
var G__297963 = x;
var G__297964 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__297963,G__297964) : f.call(null,G__297963,G__297964));
});
G__297965 = function(x,y){
switch(arguments.length){
case 0:
return G__297965__0.call(this);
case 1:
return G__297965__1.call(this,x);
case 2:
return G__297965__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__297965.cljs$core$IFn$_invoke$arity$0 = G__297965__0;
G__297965.cljs$core$IFn$_invoke$arity$1 = G__297965__1;
G__297965.cljs$core$IFn$_invoke$arity$2 = G__297965__2;
return G__297965;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__297972 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__297972) : xform.call(null,G__297972));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__297973 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__297973) : f__$1.call(null,G__297973));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__297974__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__297974 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297975__i = 0, G__297975__a = new Array(arguments.length -  2);
while (G__297975__i < G__297975__a.length) {G__297975__a[G__297975__i] = arguments[G__297975__i + 2]; ++G__297975__i;}
  more = new cljs.core.IndexedSeq(G__297975__a,0);
} 
return G__297974__delegate.call(this,x,y,more);};
G__297974.cljs$lang$maxFixedArity = 2;
G__297974.cljs$lang$applyTo = (function (arglist__297976){
var x = cljs.core.first(arglist__297976);
arglist__297976 = cljs.core.next(arglist__297976);
var y = cljs.core.first(arglist__297976);
var more = cljs.core.rest(arglist__297976);
return G__297974__delegate(x,y,more);
});
G__297974.cljs$core$IFn$_invoke$arity$variadic = G__297974__delegate;
return G__297974;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__297977 = null;
if (arguments.length > 2) {
var G__297978__i = 0, G__297978__a = new Array(arguments.length -  2);
while (G__297978__i < G__297978__a.length) {G__297978__a[G__297978__i] = arguments[G__297978__i + 2]; ++G__297978__i;}
G__297977 = new cljs.core.IndexedSeq(G__297978__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__297979__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__297979 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297980__i = 0, G__297980__a = new Array(arguments.length -  2);
while (G__297980__i < G__297980__a.length) {G__297980__a[G__297980__i] = arguments[G__297980__i + 2]; ++G__297980__i;}
  more = new cljs.core.IndexedSeq(G__297980__a,0);
} 
return G__297979__delegate.call(this,x,y,more);};
G__297979.cljs$lang$maxFixedArity = 2;
G__297979.cljs$lang$applyTo = (function (arglist__297981){
var x = cljs.core.first(arglist__297981);
arglist__297981 = cljs.core.next(arglist__297981);
var y = cljs.core.first(arglist__297981);
var more = cljs.core.rest(arglist__297981);
return G__297979__delegate(x,y,more);
});
G__297979.cljs$core$IFn$_invoke$arity$variadic = G__297979__delegate;
return G__297979;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__297982 = null;
if (arguments.length > 2) {
var G__297983__i = 0, G__297983__a = new Array(arguments.length -  2);
while (G__297983__i < G__297983__a.length) {G__297983__a[G__297983__i] = arguments[G__297983__i + 2]; ++G__297983__i;}
G__297982 = new cljs.core.IndexedSeq(G__297983__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__297984__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__297984 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297985__i = 0, G__297985__a = new Array(arguments.length -  2);
while (G__297985__i < G__297985__a.length) {G__297985__a[G__297985__i] = arguments[G__297985__i + 2]; ++G__297985__i;}
  more = new cljs.core.IndexedSeq(G__297985__a,0);
} 
return G__297984__delegate.call(this,x,y,more);};
G__297984.cljs$lang$maxFixedArity = 2;
G__297984.cljs$lang$applyTo = (function (arglist__297986){
var x = cljs.core.first(arglist__297986);
arglist__297986 = cljs.core.next(arglist__297986);
var y = cljs.core.first(arglist__297986);
var more = cljs.core.rest(arglist__297986);
return G__297984__delegate(x,y,more);
});
G__297984.cljs$core$IFn$_invoke$arity$variadic = G__297984__delegate;
return G__297984;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__297987 = null;
if (arguments.length > 2) {
var G__297988__i = 0, G__297988__a = new Array(arguments.length -  2);
while (G__297988__i < G__297988__a.length) {G__297988__a[G__297988__i] = arguments[G__297988__i + 2]; ++G__297988__i;}
G__297987 = new cljs.core.IndexedSeq(G__297988__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__297993__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__297993 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__297994__i = 0, G__297994__a = new Array(arguments.length -  2);
while (G__297994__i < G__297994__a.length) {G__297994__a[G__297994__i] = arguments[G__297994__i + 2]; ++G__297994__i;}
  more = new cljs.core.IndexedSeq(G__297994__a,0);
} 
return G__297993__delegate.call(this,x,y,more);};
G__297993.cljs$lang$maxFixedArity = 2;
G__297993.cljs$lang$applyTo = (function (arglist__297995){
var x = cljs.core.first(arglist__297995);
arglist__297995 = cljs.core.next(arglist__297995);
var y = cljs.core.first(arglist__297995);
var more = cljs.core.rest(arglist__297995);
return G__297993__delegate(x,y,more);
});
G__297993.cljs$core$IFn$_invoke$arity$variadic = G__297993__delegate;
return G__297993;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__297996 = null;
if (arguments.length > 2) {
var G__297997__i = 0, G__297997__a = new Array(arguments.length -  2);
while (G__297997__i < G__297997__a.length) {G__297997__a[G__297997__i] = arguments[G__297997__i + 2]; ++G__297997__i;}
G__297996 = new cljs.core.IndexedSeq(G__297997__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__297996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__297998__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__297999 = y;
var G__298000 = cljs.core.first(more);
var G__298001 = cljs.core.next(more);
x = G__297999;
y = G__298000;
more = G__298001;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__297998 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298002__i = 0, G__298002__a = new Array(arguments.length -  2);
while (G__298002__i < G__298002__a.length) {G__298002__a[G__298002__i] = arguments[G__298002__i + 2]; ++G__298002__i;}
  more = new cljs.core.IndexedSeq(G__298002__a,0);
} 
return G__297998__delegate.call(this,x,y,more);};
G__297998.cljs$lang$maxFixedArity = 2;
G__297998.cljs$lang$applyTo = (function (arglist__298003){
var x = cljs.core.first(arglist__298003);
arglist__298003 = cljs.core.next(arglist__298003);
var y = cljs.core.first(arglist__298003);
var more = cljs.core.rest(arglist__298003);
return G__297998__delegate(x,y,more);
});
G__297998.cljs$core$IFn$_invoke$arity$variadic = G__297998__delegate;
return G__297998;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__298004 = null;
if (arguments.length > 2) {
var G__298005__i = 0, G__298005__a = new Array(arguments.length -  2);
while (G__298005__i < G__298005__a.length) {G__298005__a[G__298005__i] = arguments[G__298005__i + 2]; ++G__298005__i;}
G__298004 = new cljs.core.IndexedSeq(G__298005__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__298006__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__298007 = y;
var G__298008 = cljs.core.first(more);
var G__298009 = cljs.core.next(more);
x = G__298007;
y = G__298008;
more = G__298009;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__298006 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298010__i = 0, G__298010__a = new Array(arguments.length -  2);
while (G__298010__i < G__298010__a.length) {G__298010__a[G__298010__i] = arguments[G__298010__i + 2]; ++G__298010__i;}
  more = new cljs.core.IndexedSeq(G__298010__a,0);
} 
return G__298006__delegate.call(this,x,y,more);};
G__298006.cljs$lang$maxFixedArity = 2;
G__298006.cljs$lang$applyTo = (function (arglist__298011){
var x = cljs.core.first(arglist__298011);
arglist__298011 = cljs.core.next(arglist__298011);
var y = cljs.core.first(arglist__298011);
var more = cljs.core.rest(arglist__298011);
return G__298006__delegate(x,y,more);
});
G__298006.cljs$core$IFn$_invoke$arity$variadic = G__298006__delegate;
return G__298006;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__298012 = null;
if (arguments.length > 2) {
var G__298013__i = 0, G__298013__a = new Array(arguments.length -  2);
while (G__298013__i < G__298013__a.length) {G__298013__a[G__298013__i] = arguments[G__298013__i + 2]; ++G__298013__i;}
G__298012 = new cljs.core.IndexedSeq(G__298013__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__298014__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__298015 = y;
var G__298016 = cljs.core.first(more);
var G__298017 = cljs.core.next(more);
x = G__298015;
y = G__298016;
more = G__298017;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__298014 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298018__i = 0, G__298018__a = new Array(arguments.length -  2);
while (G__298018__i < G__298018__a.length) {G__298018__a[G__298018__i] = arguments[G__298018__i + 2]; ++G__298018__i;}
  more = new cljs.core.IndexedSeq(G__298018__a,0);
} 
return G__298014__delegate.call(this,x,y,more);};
G__298014.cljs$lang$maxFixedArity = 2;
G__298014.cljs$lang$applyTo = (function (arglist__298019){
var x = cljs.core.first(arglist__298019);
arglist__298019 = cljs.core.next(arglist__298019);
var y = cljs.core.first(arglist__298019);
var more = cljs.core.rest(arglist__298019);
return G__298014__delegate(x,y,more);
});
G__298014.cljs$core$IFn$_invoke$arity$variadic = G__298014__delegate;
return G__298014;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__298020 = null;
if (arguments.length > 2) {
var G__298021__i = 0, G__298021__a = new Array(arguments.length -  2);
while (G__298021__i < G__298021__a.length) {G__298021__a[G__298021__i] = arguments[G__298021__i + 2]; ++G__298021__i;}
G__298020 = new cljs.core.IndexedSeq(G__298021__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__298022__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__298023 = y;
var G__298024 = cljs.core.first(more);
var G__298025 = cljs.core.next(more);
x = G__298023;
y = G__298024;
more = G__298025;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__298022 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298026__i = 0, G__298026__a = new Array(arguments.length -  2);
while (G__298026__i < G__298026__a.length) {G__298026__a[G__298026__i] = arguments[G__298026__i + 2]; ++G__298026__i;}
  more = new cljs.core.IndexedSeq(G__298026__a,0);
} 
return G__298022__delegate.call(this,x,y,more);};
G__298022.cljs$lang$maxFixedArity = 2;
G__298022.cljs$lang$applyTo = (function (arglist__298027){
var x = cljs.core.first(arglist__298027);
arglist__298027 = cljs.core.next(arglist__298027);
var y = cljs.core.first(arglist__298027);
var more = cljs.core.rest(arglist__298027);
return G__298022__delegate(x,y,more);
});
G__298022.cljs$core$IFn$_invoke$arity$variadic = G__298022__delegate;
return G__298022;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__298028 = null;
if (arguments.length > 2) {
var G__298029__i = 0, G__298029__a = new Array(arguments.length -  2);
while (G__298029__i < G__298029__a.length) {G__298029__a[G__298029__i] = arguments[G__298029__i + 2]; ++G__298029__i;}
G__298028 = new cljs.core.IndexedSeq(G__298029__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
});
var max__3 = (function() { 
var G__298030__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})(),more);
};
var G__298030 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298031__i = 0, G__298031__a = new Array(arguments.length -  2);
while (G__298031__i < G__298031__a.length) {G__298031__a[G__298031__i] = arguments[G__298031__i + 2]; ++G__298031__i;}
  more = new cljs.core.IndexedSeq(G__298031__a,0);
} 
return G__298030__delegate.call(this,x,y,more);};
G__298030.cljs$lang$maxFixedArity = 2;
G__298030.cljs$lang$applyTo = (function (arglist__298032){
var x = cljs.core.first(arglist__298032);
arglist__298032 = cljs.core.next(arglist__298032);
var y = cljs.core.first(arglist__298032);
var more = cljs.core.rest(arglist__298032);
return G__298030__delegate(x,y,more);
});
G__298030.cljs$core$IFn$_invoke$arity$variadic = G__298030__delegate;
return G__298030;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__298033 = null;
if (arguments.length > 2) {
var G__298034__i = 0, G__298034__a = new Array(arguments.length -  2);
while (G__298034__i < G__298034__a.length) {G__298034__a[G__298034__i] = arguments[G__298034__i + 2]; ++G__298034__i;}
G__298033 = new cljs.core.IndexedSeq(G__298034__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
});
var min__3 = (function() { 
var G__298035__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
})(),more);
};
var G__298035 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298036__i = 0, G__298036__a = new Array(arguments.length -  2);
while (G__298036__i < G__298036__a.length) {G__298036__a[G__298036__i] = arguments[G__298036__i + 2]; ++G__298036__i;}
  more = new cljs.core.IndexedSeq(G__298036__a,0);
} 
return G__298035__delegate.call(this,x,y,more);};
G__298035.cljs$lang$maxFixedArity = 2;
G__298035.cljs$lang$applyTo = (function (arglist__298037){
var x = cljs.core.first(arglist__298037);
arglist__298037 = cljs.core.next(arglist__298037);
var y = cljs.core.first(arglist__298037);
var more = cljs.core.rest(arglist__298037);
return G__298035__delegate(x,y,more);
});
G__298035.cljs$core$IFn$_invoke$arity$variadic = G__298035__delegate;
return G__298035;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__298038 = null;
if (arguments.length > 2) {
var G__298039__i = 0, G__298039__a = new Array(arguments.length -  2);
while (G__298039__i < G__298039__a.length) {G__298039__a[G__298039__i] = arguments[G__298039__i + 2]; ++G__298039__i;}
G__298038 = new cljs.core.IndexedSeq(G__298039__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__298040__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__298040 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298041__i = 0, G__298041__a = new Array(arguments.length -  2);
while (G__298041__i < G__298041__a.length) {G__298041__a[G__298041__i] = arguments[G__298041__i + 2]; ++G__298041__i;}
  more = new cljs.core.IndexedSeq(G__298041__a,0);
} 
return G__298040__delegate.call(this,x,y,more);};
G__298040.cljs$lang$maxFixedArity = 2;
G__298040.cljs$lang$applyTo = (function (arglist__298042){
var x = cljs.core.first(arglist__298042);
arglist__298042 = cljs.core.next(arglist__298042);
var y = cljs.core.first(arglist__298042);
var more = cljs.core.rest(arglist__298042);
return G__298040__delegate(x,y,more);
});
G__298040.cljs$core$IFn$_invoke$arity$variadic = G__298040__delegate;
return G__298040;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__298043 = null;
if (arguments.length > 2) {
var G__298044__i = 0, G__298044__a = new Array(arguments.length -  2);
while (G__298044__i < G__298044__a.length) {G__298044__a[G__298044__i] = arguments[G__298044__i + 2]; ++G__298044__i;}
G__298043 = new cljs.core.IndexedSeq(G__298044__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__298045__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__298045 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298046__i = 0, G__298046__a = new Array(arguments.length -  2);
while (G__298046__i < G__298046__a.length) {G__298046__a[G__298046__i] = arguments[G__298046__i + 2]; ++G__298046__i;}
  more = new cljs.core.IndexedSeq(G__298046__a,0);
} 
return G__298045__delegate.call(this,x,y,more);};
G__298045.cljs$lang$maxFixedArity = 2;
G__298045.cljs$lang$applyTo = (function (arglist__298047){
var x = cljs.core.first(arglist__298047);
arglist__298047 = cljs.core.next(arglist__298047);
var y = cljs.core.first(arglist__298047);
var more = cljs.core.rest(arglist__298047);
return G__298045__delegate(x,y,more);
});
G__298045.cljs$core$IFn$_invoke$arity$variadic = G__298045__delegate;
return G__298045;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__298048 = null;
if (arguments.length > 2) {
var G__298049__i = 0, G__298049__a = new Array(arguments.length -  2);
while (G__298049__i < G__298049__a.length) {G__298049__a[G__298049__i] = arguments[G__298049__i + 2]; ++G__298049__i;}
G__298048 = new cljs.core.IndexedSeq(G__298049__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__298054__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__298054 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298055__i = 0, G__298055__a = new Array(arguments.length -  2);
while (G__298055__i < G__298055__a.length) {G__298055__a[G__298055__i] = arguments[G__298055__i + 2]; ++G__298055__i;}
  more = new cljs.core.IndexedSeq(G__298055__a,0);
} 
return G__298054__delegate.call(this,x,y,more);};
G__298054.cljs$lang$maxFixedArity = 2;
G__298054.cljs$lang$applyTo = (function (arglist__298056){
var x = cljs.core.first(arglist__298056);
arglist__298056 = cljs.core.next(arglist__298056);
var y = cljs.core.first(arglist__298056);
var more = cljs.core.rest(arglist__298056);
return G__298054__delegate(x,y,more);
});
G__298054.cljs$core$IFn$_invoke$arity$variadic = G__298054__delegate;
return G__298054;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__298057 = null;
if (arguments.length > 2) {
var G__298058__i = 0, G__298058__a = new Array(arguments.length -  2);
while (G__298058__i < G__298058__a.length) {G__298058__a[G__298058__i] = arguments[G__298058__i + 2]; ++G__298058__i;}
G__298057 = new cljs.core.IndexedSeq(G__298058__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__298059__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__298059 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298060__i = 0, G__298060__a = new Array(arguments.length -  2);
while (G__298060__i < G__298060__a.length) {G__298060__a[G__298060__i] = arguments[G__298060__i + 2]; ++G__298060__i;}
  more = new cljs.core.IndexedSeq(G__298060__a,0);
} 
return G__298059__delegate.call(this,x,y,more);};
G__298059.cljs$lang$maxFixedArity = 2;
G__298059.cljs$lang$applyTo = (function (arglist__298061){
var x = cljs.core.first(arglist__298061);
arglist__298061 = cljs.core.next(arglist__298061);
var y = cljs.core.first(arglist__298061);
var more = cljs.core.rest(arglist__298061);
return G__298059__delegate(x,y,more);
});
G__298059.cljs$core$IFn$_invoke$arity$variadic = G__298059__delegate;
return G__298059;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__298062 = null;
if (arguments.length > 2) {
var G__298063__i = 0, G__298063__a = new Array(arguments.length -  2);
while (G__298063__i < G__298063__a.length) {G__298063__a[G__298063__i] = arguments[G__298063__i + 2]; ++G__298063__i;}
G__298062 = new cljs.core.IndexedSeq(G__298063__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__298064__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__298064 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298065__i = 0, G__298065__a = new Array(arguments.length -  2);
while (G__298065__i < G__298065__a.length) {G__298065__a[G__298065__i] = arguments[G__298065__i + 2]; ++G__298065__i;}
  more = new cljs.core.IndexedSeq(G__298065__a,0);
} 
return G__298064__delegate.call(this,x,y,more);};
G__298064.cljs$lang$maxFixedArity = 2;
G__298064.cljs$lang$applyTo = (function (arglist__298066){
var x = cljs.core.first(arglist__298066);
arglist__298066 = cljs.core.next(arglist__298066);
var y = cljs.core.first(arglist__298066);
var more = cljs.core.rest(arglist__298066);
return G__298064__delegate(x,y,more);
});
G__298064.cljs$core$IFn$_invoke$arity$variadic = G__298064__delegate;
return G__298064;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__298067 = null;
if (arguments.length > 2) {
var G__298068__i = 0, G__298068__a = new Array(arguments.length -  2);
while (G__298068__i < G__298068__a.length) {G__298068__a[G__298068__i] = arguments[G__298068__i + 2]; ++G__298068__i;}
G__298067 = new cljs.core.IndexedSeq(G__298068__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__298071 = x;
var G__298072 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__298071,G__298072) : cljs.core.mod.call(null,G__298071,G__298072));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__298073__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__298073 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298074__i = 0, G__298074__a = new Array(arguments.length -  2);
while (G__298074__i < G__298074__a.length) {G__298074__a[G__298074__i] = arguments[G__298074__i + 2]; ++G__298074__i;}
  more = new cljs.core.IndexedSeq(G__298074__a,0);
} 
return G__298073__delegate.call(this,x,y,more);};
G__298073.cljs$lang$maxFixedArity = 2;
G__298073.cljs$lang$applyTo = (function (arglist__298075){
var x = cljs.core.first(arglist__298075);
arglist__298075 = cljs.core.next(arglist__298075);
var y = cljs.core.first(arglist__298075);
var more = cljs.core.rest(arglist__298075);
return G__298073__delegate(x,y,more);
});
G__298073.cljs$core$IFn$_invoke$arity$variadic = G__298073__delegate;
return G__298073;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__298076 = null;
if (arguments.length > 2) {
var G__298077__i = 0, G__298077__a = new Array(arguments.length -  2);
while (G__298077__i < G__298077__a.length) {G__298077__a[G__298077__i] = arguments[G__298077__i + 2]; ++G__298077__i;}
G__298076 = new cljs.core.IndexedSeq(G__298077__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__298078__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__298078 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298079__i = 0, G__298079__a = new Array(arguments.length -  2);
while (G__298079__i < G__298079__a.length) {G__298079__a[G__298079__i] = arguments[G__298079__i + 2]; ++G__298079__i;}
  more = new cljs.core.IndexedSeq(G__298079__a,0);
} 
return G__298078__delegate.call(this,x,y,more);};
G__298078.cljs$lang$maxFixedArity = 2;
G__298078.cljs$lang$applyTo = (function (arglist__298080){
var x = cljs.core.first(arglist__298080);
arglist__298080 = cljs.core.next(arglist__298080);
var y = cljs.core.first(arglist__298080);
var more = cljs.core.rest(arglist__298080);
return G__298078__delegate(x,y,more);
});
G__298078.cljs$core$IFn$_invoke$arity$variadic = G__298078__delegate;
return G__298078;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__298081 = null;
if (arguments.length > 2) {
var G__298082__i = 0, G__298082__a = new Array(arguments.length -  2);
while (G__298082__i < G__298082__a.length) {G__298082__a[G__298082__i] = arguments[G__298082__i + 2]; ++G__298082__i;}
G__298081 = new cljs.core.IndexedSeq(G__298082__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__298085 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__298085) : Math.floor.call(null,G__298085));
} else {
var G__298086 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__298086) : Math.ceil.call(null,G__298086));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__298087__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__298087 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298088__i = 0, G__298088__a = new Array(arguments.length -  2);
while (G__298088__i < G__298088__a.length) {G__298088__a[G__298088__i] = arguments[G__298088__i + 2]; ++G__298088__i;}
  more = new cljs.core.IndexedSeq(G__298088__a,0);
} 
return G__298087__delegate.call(this,x,y,more);};
G__298087.cljs$lang$maxFixedArity = 2;
G__298087.cljs$lang$applyTo = (function (arglist__298089){
var x = cljs.core.first(arglist__298089);
arglist__298089 = cljs.core.next(arglist__298089);
var y = cljs.core.first(arglist__298089);
var more = cljs.core.rest(arglist__298089);
return G__298087__delegate(x,y,more);
});
G__298087.cljs$core$IFn$_invoke$arity$variadic = G__298087__delegate;
return G__298087;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__298090 = null;
if (arguments.length > 2) {
var G__298091__i = 0, G__298091__a = new Array(arguments.length -  2);
while (G__298091__i < G__298091__a.length) {G__298091__a[G__298091__i] = arguments[G__298091__i + 2]; ++G__298091__i;}
G__298090 = new cljs.core.IndexedSeq(G__298091__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__298092__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__298092 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298093__i = 0, G__298093__a = new Array(arguments.length -  2);
while (G__298093__i < G__298093__a.length) {G__298093__a[G__298093__i] = arguments[G__298093__i + 2]; ++G__298093__i;}
  more = new cljs.core.IndexedSeq(G__298093__a,0);
} 
return G__298092__delegate.call(this,x,y,more);};
G__298092.cljs$lang$maxFixedArity = 2;
G__298092.cljs$lang$applyTo = (function (arglist__298094){
var x = cljs.core.first(arglist__298094);
arglist__298094 = cljs.core.next(arglist__298094);
var y = cljs.core.first(arglist__298094);
var more = cljs.core.rest(arglist__298094);
return G__298092__delegate(x,y,more);
});
G__298092.cljs$core$IFn$_invoke$arity$variadic = G__298092__delegate;
return G__298092;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__298095 = null;
if (arguments.length > 2) {
var G__298096__i = 0, G__298096__a = new Array(arguments.length -  2);
while (G__298096__i < G__298096__a.length) {G__298096__a[G__298096__i] = arguments[G__298096__i + 2]; ++G__298096__i;}
G__298095 = new cljs.core.IndexedSeq(G__298096__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__298097__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__298097 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298098__i = 0, G__298098__a = new Array(arguments.length -  2);
while (G__298098__i < G__298098__a.length) {G__298098__a[G__298098__i] = arguments[G__298098__i + 2]; ++G__298098__i;}
  more = new cljs.core.IndexedSeq(G__298098__a,0);
} 
return G__298097__delegate.call(this,x,y,more);};
G__298097.cljs$lang$maxFixedArity = 2;
G__298097.cljs$lang$applyTo = (function (arglist__298099){
var x = cljs.core.first(arglist__298099);
arglist__298099 = cljs.core.next(arglist__298099);
var y = cljs.core.first(arglist__298099);
var more = cljs.core.rest(arglist__298099);
return G__298097__delegate(x,y,more);
});
G__298097.cljs$core$IFn$_invoke$arity$variadic = G__298097__delegate;
return G__298097;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__298100 = null;
if (arguments.length > 2) {
var G__298101__i = 0, G__298101__a = new Array(arguments.length -  2);
while (G__298101__i < G__298101__a.length) {G__298101__a[G__298101__i] = arguments[G__298101__i + 2]; ++G__298101__i;}
G__298100 = new cljs.core.IndexedSeq(G__298101__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__298102__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__298102 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298103__i = 0, G__298103__a = new Array(arguments.length -  2);
while (G__298103__i < G__298103__a.length) {G__298103__a[G__298103__i] = arguments[G__298103__i + 2]; ++G__298103__i;}
  more = new cljs.core.IndexedSeq(G__298103__a,0);
} 
return G__298102__delegate.call(this,x,y,more);};
G__298102.cljs$lang$maxFixedArity = 2;
G__298102.cljs$lang$applyTo = (function (arglist__298104){
var x = cljs.core.first(arglist__298104);
arglist__298104 = cljs.core.next(arglist__298104);
var y = cljs.core.first(arglist__298104);
var more = cljs.core.rest(arglist__298104);
return G__298102__delegate(x,y,more);
});
G__298102.cljs$core$IFn$_invoke$arity$variadic = G__298102__delegate;
return G__298102;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__298105 = null;
if (arguments.length > 2) {
var G__298106__i = 0, G__298106__a = new Array(arguments.length -  2);
while (G__298106__i < G__298106__a.length) {G__298106__a[G__298106__i] = arguments[G__298106__i + 2]; ++G__298106__i;}
G__298105 = new cljs.core.IndexedSeq(G__298106__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__298111__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__298112 = y;
var G__298113 = cljs.core.first(more);
var G__298114 = cljs.core.next(more);
x = G__298112;
y = G__298113;
more = G__298114;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__298111 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298115__i = 0, G__298115__a = new Array(arguments.length -  2);
while (G__298115__i < G__298115__a.length) {G__298115__a[G__298115__i] = arguments[G__298115__i + 2]; ++G__298115__i;}
  more = new cljs.core.IndexedSeq(G__298115__a,0);
} 
return G__298111__delegate.call(this,x,y,more);};
G__298111.cljs$lang$maxFixedArity = 2;
G__298111.cljs$lang$applyTo = (function (arglist__298116){
var x = cljs.core.first(arglist__298116);
arglist__298116 = cljs.core.next(arglist__298116);
var y = cljs.core.first(arglist__298116);
var more = cljs.core.rest(arglist__298116);
return G__298111__delegate(x,y,more);
});
G__298111.cljs$core$IFn$_invoke$arity$variadic = G__298111__delegate;
return G__298111;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__298117 = null;
if (arguments.length > 2) {
var G__298118__i = 0, G__298118__a = new Array(arguments.length -  2);
while (G__298118__i < G__298118__a.length) {G__298118__a[G__298118__i] = arguments[G__298118__i + 2]; ++G__298118__i;}
G__298117 = new cljs.core.IndexedSeq(G__298118__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__298119 = (n__$1 - (1));
var G__298120 = cljs.core.next(xs);
n__$1 = G__298119;
xs = G__298120;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__298124 = x;
return goog.string.buildString(G__298124);
}
});
var str__2 = (function() { 
var G__298125__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__298126 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__298127 = cljs.core.next(more);
sb = G__298126;
more = G__298127;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__298125 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__298128__i = 0, G__298128__a = new Array(arguments.length -  1);
while (G__298128__i < G__298128__a.length) {G__298128__a[G__298128__i] = arguments[G__298128__i + 1]; ++G__298128__i;}
  ys = new cljs.core.IndexedSeq(G__298128__a,0);
} 
return G__298125__delegate.call(this,x,ys);};
G__298125.cljs$lang$maxFixedArity = 1;
G__298125.cljs$lang$applyTo = (function (arglist__298129){
var x = cljs.core.first(arglist__298129);
var ys = cljs.core.rest(arglist__298129);
return G__298125__delegate(x,ys);
});
G__298125.cljs$core$IFn$_invoke$arity$variadic = G__298125__delegate;
return G__298125;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__298130 = null;
if (arguments.length > 1) {
var G__298131__i = 0, G__298131__a = new Array(arguments.length -  1);
while (G__298131__i < G__298131__a.length) {G__298131__a[G__298131__i] = arguments[G__298131__i + 1]; ++G__298131__i;}
G__298130 = new cljs.core.IndexedSeq(G__298131__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__298130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__298132 = cljs.core.next(xs);
var G__298133 = cljs.core.next(ys);
xs = G__298132;
ys = G__298133;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__298134 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__298135 = cljs.core.next(s);
res = G__298134;
s = G__298135;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__298140 = ((h + (cljs.core.hash((function (){var G__298138 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__298138) : cljs.core.key.call(null,G__298138));
})()) ^ cljs.core.hash((function (){var G__298139 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__298139) : cljs.core.val.call(null,G__298139));
})()))) % (4503599627370496));
var G__298141 = cljs.core.next(s);
h = G__298140;
s = G__298141;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__298142 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__298143 = cljs.core.next(s__$1);
h = G__298142;
s__$1 = G__298143;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__298154_298164 = cljs.core.seq(fn_map);
var chunk__298155_298165 = null;
var count__298156_298166 = (0);
var i__298157_298167 = (0);
while(true){
if((i__298157_298167 < count__298156_298166)){
var vec__298158_298168 = chunk__298155_298165.cljs$core$IIndexed$_nth$arity$2(null,i__298157_298167);
var key_name_298169 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298158_298168,(0),null);
var f_298170 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298158_298168,(1),null);
var str_name_298171 = (function (){var G__298159 = key_name_298169;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__298159) : cljs.core.name.call(null,G__298159));
})();
(obj[str_name_298171] = f_298170);

var G__298172 = seq__298154_298164;
var G__298173 = chunk__298155_298165;
var G__298174 = count__298156_298166;
var G__298175 = (i__298157_298167 + (1));
seq__298154_298164 = G__298172;
chunk__298155_298165 = G__298173;
count__298156_298166 = G__298174;
i__298157_298167 = G__298175;
continue;
} else {
var temp__4126__auto___298176 = cljs.core.seq(seq__298154_298164);
if(temp__4126__auto___298176){
var seq__298154_298177__$1 = temp__4126__auto___298176;
if(cljs.core.chunked_seq_QMARK_(seq__298154_298177__$1)){
var c__4768__auto___298178 = (function (){var G__298160 = seq__298154_298177__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__298160) : cljs.core.chunk_first.call(null,G__298160));
})();
var G__298179 = (function (){var G__298161 = seq__298154_298177__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__298161) : cljs.core.chunk_rest.call(null,G__298161));
})();
var G__298180 = c__4768__auto___298178;
var G__298181 = cljs.core.count(c__4768__auto___298178);
var G__298182 = (0);
seq__298154_298164 = G__298179;
chunk__298155_298165 = G__298180;
count__298156_298166 = G__298181;
i__298157_298167 = G__298182;
continue;
} else {
var vec__298162_298183 = cljs.core.first(seq__298154_298177__$1);
var key_name_298184 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298162_298183,(0),null);
var f_298185 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298162_298183,(1),null);
var str_name_298186 = (function (){var G__298163 = key_name_298184;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__298163) : cljs.core.name.call(null,G__298163));
})();
(obj[str_name_298186] = f_298185);

var G__298187 = cljs.core.next(seq__298154_298177__$1);
var G__298188 = null;
var G__298189 = (0);
var G__298190 = (0);
seq__298154_298164 = G__298187;
chunk__298155_298165 = G__298188;
count__298156_298166 = G__298189;
i__298157_298167 = G__298190;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__298192 = coll;
if(G__298192){
var bit__4662__auto__ = (G__298192.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4662__auto__) || (G__298192.cljs$core$IReversible$)){
return true;
} else {
if((!G__298192.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__298192);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__298192);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__298193 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__298193;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__298194 = (i - (1));
var G__298195 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__298194;
r = G__298195;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__298196__i = 0, G__298196__a = new Array(arguments.length -  0);
while (G__298196__i < G__298196__a.length) {G__298196__a[G__298196__i] = arguments[G__298196__i + 0]; ++G__298196__i;}
  xs = new cljs.core.IndexedSeq(G__298196__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__298197){
var xs = cljs.core.seq(arglist__298197);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3981__auto__ = (coll == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__298201 = coll;
if(G__298201){
var bit__4655__auto__ = (G__298201.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__298201.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__298203 = x;
if(G__298203){
var bit__4662__auto__ = (G__298203.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4662__auto__) || (G__298203.cljs$core$IList$)){
return true;
} else {
if((!G__298203.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__298203);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__298203);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__298210 = a.ns;
var G__298211 = b.ns;
return goog.array.defaultCompare(G__298210,G__298211);
})();
if(((0) === nsc)){
var G__298212 = a.name;
var G__298213 = b.name;
return goog.array.defaultCompare(G__298212,G__298213);
} else {
return nsc;
}
}
} else {
var G__298214 = a.name;
var G__298215 = b.name;
return goog.array.defaultCompare(G__298214,G__298215);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__298217 = null;
var G__298217__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__298217__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__298217 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__298217__2.call(this,self__,coll);
case 3:
return G__298217__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__298217.cljs$core$IFn$_invoke$arity$2 = G__298217__2;
G__298217.cljs$core$IFn$_invoke$arity$3 = G__298217__3;
return G__298217;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args298216){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args298216)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__298219 = x;
if(G__298219){
var bit__4655__auto__ = (G__298219.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__298219.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__298221 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__298221) : cljs.core.name.call(null,G__298221));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__298222 = ls.sval();
ls = G__298222;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__298224 = s;
if(G__298224){
var bit__4655__auto__ = (G__298224.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4655__auto__) || (G__298224.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__298225 = cljs.core.next(s__$1);
s__$1 = G__298225;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_298226 = (0);
var xs_298227 = cljs.core.seq(coll);
while(true){
if(xs_298227){
(ret[i_298226] = cljs.core.to_array(cljs.core.first(xs_298227)));

var G__298228 = (i_298226 + (1));
var G__298229 = cljs.core.next(xs_298227);
i_298226 = G__298228;
xs_298227 = G__298229;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__298232 = (i + (1));
var G__298233 = cljs.core.next(s__$1);
i = G__298232;
s__$1 = G__298233;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___298234 = size;
var i_298235 = (0);
while(true){
if((i_298235 < n__4868__auto___298234)){
(a[i_298235] = init_val_or_seq);

var G__298236 = (i_298235 + (1));
i_298235 = G__298236;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__298239 = (i + (1));
var G__298240 = cljs.core.next(s__$1);
i = G__298239;
s__$1 = G__298240;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___298241 = size;
var i_298242 = (0);
while(true){
if((i_298242 < n__4868__auto___298241)){
(a[i_298242] = init_val_or_seq);

var G__298243 = (i_298242 + (1));
i_298242 = G__298243;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__298246 = (i + (1));
var G__298247 = cljs.core.next(s__$1);
i = G__298246;
s__$1 = G__298247;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___298248 = size;
var i_298249 = (0);
while(true){
if((i_298249 < n__4868__auto___298248)){
(a[i_298249] = init_val_or_seq);

var G__298250 = (i_298249 + (1));
i_298249 = G__298250;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__298253 = (i + (1));
var G__298254 = cljs.core.next(s__$1);
i = G__298253;
s__$1 = G__298254;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___298255 = size;
var i_298256 = (0);
while(true){
if((i_298256 < n__4868__auto___298255)){
(a[i_298256] = init_val_or_seq);

var G__298257 = (i_298256 + (1));
i_298256 = G__298257;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__298258 = cljs.core.next(s__$1);
var G__298259 = (i - (1));
var G__298260 = (sum + (1));
s__$1 = G__298258;
i = G__298259;
sum = G__298260;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__298280__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__298280 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__298281__i = 0, G__298281__a = new Array(arguments.length -  2);
while (G__298281__i < G__298281__a.length) {G__298281__a[G__298281__i] = arguments[G__298281__i + 2]; ++G__298281__i;}
  zs = new cljs.core.IndexedSeq(G__298281__a,0);
} 
return G__298280__delegate.call(this,x,y,zs);};
G__298280.cljs$lang$maxFixedArity = 2;
G__298280.cljs$lang$applyTo = (function (arglist__298282){
var x = cljs.core.first(arglist__298282);
arglist__298282 = cljs.core.next(arglist__298282);
var y = cljs.core.first(arglist__298282);
var zs = cljs.core.rest(arglist__298282);
return G__298280__delegate(x,y,zs);
});
G__298280.cljs$core$IFn$_invoke$arity$variadic = G__298280__delegate;
return G__298280;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__298283 = null;
if (arguments.length > 2) {
var G__298284__i = 0, G__298284__a = new Array(arguments.length -  2);
while (G__298284__i < G__298284__a.length) {G__298284__a[G__298284__i] = arguments[G__298284__i + 2]; ++G__298284__i;}
G__298283 = new cljs.core.IndexedSeq(G__298284__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__298285__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__298285 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__298286__i = 0, G__298286__a = new Array(arguments.length -  4);
while (G__298286__i < G__298286__a.length) {G__298286__a[G__298286__i] = arguments[G__298286__i + 4]; ++G__298286__i;}
  more = new cljs.core.IndexedSeq(G__298286__a,0);
} 
return G__298285__delegate.call(this,a,b,c,d,more);};
G__298285.cljs$lang$maxFixedArity = 4;
G__298285.cljs$lang$applyTo = (function (arglist__298287){
var a = cljs.core.first(arglist__298287);
arglist__298287 = cljs.core.next(arglist__298287);
var b = cljs.core.first(arglist__298287);
arglist__298287 = cljs.core.next(arglist__298287);
var c = cljs.core.first(arglist__298287);
arglist__298287 = cljs.core.next(arglist__298287);
var d = cljs.core.first(arglist__298287);
var more = cljs.core.rest(arglist__298287);
return G__298285__delegate(a,b,c,d,more);
});
G__298285.cljs$core$IFn$_invoke$arity$variadic = G__298285__delegate;
return G__298285;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__298288 = null;
if (arguments.length > 4) {
var G__298289__i = 0, G__298289__a = new Array(arguments.length -  4);
while (G__298289__i < G__298289__a.length) {G__298289__a[G__298289__i] = arguments[G__298289__i + 4]; ++G__298289__i;}
G__298288 = new cljs.core.IndexedSeq(G__298289__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__298288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__298290__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__298291 = ntcoll;
var G__298292 = cljs.core.first(vals);
var G__298293 = cljs.core.next(vals);
tcoll = G__298291;
val = G__298292;
vals = G__298293;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__298290 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__298294__i = 0, G__298294__a = new Array(arguments.length -  2);
while (G__298294__i < G__298294__a.length) {G__298294__a[G__298294__i] = arguments[G__298294__i + 2]; ++G__298294__i;}
  vals = new cljs.core.IndexedSeq(G__298294__a,0);
} 
return G__298290__delegate.call(this,tcoll,val,vals);};
G__298290.cljs$lang$maxFixedArity = 2;
G__298290.cljs$lang$applyTo = (function (arglist__298295){
var tcoll = cljs.core.first(arglist__298295);
arglist__298295 = cljs.core.next(arglist__298295);
var val = cljs.core.first(arglist__298295);
var vals = cljs.core.rest(arglist__298295);
return G__298290__delegate(tcoll,val,vals);
});
G__298290.cljs$core$IFn$_invoke$arity$variadic = G__298290__delegate;
return G__298290;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__298296 = null;
if (arguments.length > 2) {
var G__298297__i = 0, G__298297__a = new Array(arguments.length -  2);
while (G__298297__i < G__298297__a.length) {G__298297__a[G__298297__i] = arguments[G__298297__i + 2]; ++G__298297__i;}
G__298296 = new cljs.core.IndexedSeq(G__298297__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__298296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__298298__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__298299 = ntcoll;
var G__298300 = cljs.core.first(kvs);
var G__298301 = cljs.core.second(kvs);
var G__298302 = cljs.core.nnext(kvs);
tcoll = G__298299;
key = G__298300;
val = G__298301;
kvs = G__298302;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__298298 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__298303__i = 0, G__298303__a = new Array(arguments.length -  3);
while (G__298303__i < G__298303__a.length) {G__298303__a[G__298303__i] = arguments[G__298303__i + 3]; ++G__298303__i;}
  kvs = new cljs.core.IndexedSeq(G__298303__a,0);
} 
return G__298298__delegate.call(this,tcoll,key,val,kvs);};
G__298298.cljs$lang$maxFixedArity = 3;
G__298298.cljs$lang$applyTo = (function (arglist__298304){
var tcoll = cljs.core.first(arglist__298304);
arglist__298304 = cljs.core.next(arglist__298304);
var key = cljs.core.first(arglist__298304);
arglist__298304 = cljs.core.next(arglist__298304);
var val = cljs.core.first(arglist__298304);
var kvs = cljs.core.rest(arglist__298304);
return G__298298__delegate(tcoll,key,val,kvs);
});
G__298298.cljs$core$IFn$_invoke$arity$variadic = G__298298__delegate;
return G__298298;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__298305 = null;
if (arguments.length > 3) {
var G__298306__i = 0, G__298306__a = new Array(arguments.length -  3);
while (G__298306__i < G__298306__a.length) {G__298306__a[G__298306__i] = arguments[G__298306__i + 3]; ++G__298306__i;}
G__298305 = new cljs.core.IndexedSeq(G__298306__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__298305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__298307__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__298308 = ntcoll;
var G__298309 = cljs.core.first(ks);
var G__298310 = cljs.core.next(ks);
tcoll = G__298308;
key = G__298309;
ks = G__298310;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__298307 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__298311__i = 0, G__298311__a = new Array(arguments.length -  2);
while (G__298311__i < G__298311__a.length) {G__298311__a[G__298311__i] = arguments[G__298311__i + 2]; ++G__298311__i;}
  ks = new cljs.core.IndexedSeq(G__298311__a,0);
} 
return G__298307__delegate.call(this,tcoll,key,ks);};
G__298307.cljs$lang$maxFixedArity = 2;
G__298307.cljs$lang$applyTo = (function (arglist__298312){
var tcoll = cljs.core.first(arglist__298312);
arglist__298312 = cljs.core.next(arglist__298312);
var key = cljs.core.first(arglist__298312);
var ks = cljs.core.rest(arglist__298312);
return G__298307__delegate(tcoll,key,ks);
});
G__298307.cljs$core$IFn$_invoke$arity$variadic = G__298307__delegate;
return G__298307;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__298313 = null;
if (arguments.length > 2) {
var G__298314__i = 0, G__298314__a = new Array(arguments.length -  2);
while (G__298314__i < G__298314__a.length) {G__298314__a[G__298314__i] = arguments[G__298314__i + 2]; ++G__298314__i;}
G__298313 = new cljs.core.IndexedSeq(G__298314__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__298313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__298315__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__298316 = ntcoll;
var G__298317 = cljs.core.first(vals);
var G__298318 = cljs.core.next(vals);
tcoll = G__298316;
val = G__298317;
vals = G__298318;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__298315 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__298319__i = 0, G__298319__a = new Array(arguments.length -  2);
while (G__298319__i < G__298319__a.length) {G__298319__a[G__298319__i] = arguments[G__298319__i + 2]; ++G__298319__i;}
  vals = new cljs.core.IndexedSeq(G__298319__a,0);
} 
return G__298315__delegate.call(this,tcoll,val,vals);};
G__298315.cljs$lang$maxFixedArity = 2;
G__298315.cljs$lang$applyTo = (function (arglist__298320){
var tcoll = cljs.core.first(arglist__298320);
arglist__298320 = cljs.core.next(arglist__298320);
var val = cljs.core.first(arglist__298320);
var vals = cljs.core.rest(arglist__298320);
return G__298315__delegate(tcoll,val,vals);
});
G__298315.cljs$core$IFn$_invoke$arity$variadic = G__298315__delegate;
return G__298315;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__298321 = null;
if (arguments.length > 2) {
var G__298322__i = 0, G__298322__a = new Array(arguments.length -  2);
while (G__298322__i < G__298322__a.length) {G__298322__a[G__298322__i] = arguments[G__298322__i + 2]; ++G__298322__i;}
G__298321 = new cljs.core.IndexedSeq(G__298322__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__298321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4912 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4912);
} else {
var G__298533 = a4912;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298533) : f.call(null,G__298533));
}
} else {
var b4913 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4912,b4913);
} else {
var G__298534 = a4912;
var G__298535 = b4913;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__298534,G__298535) : f.call(null,G__298534,G__298535));
}
} else {
var c4914 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4912,b4913,c4914);
} else {
var G__298536 = a4912;
var G__298537 = b4913;
var G__298538 = c4914;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__298536,G__298537,G__298538) : f.call(null,G__298536,G__298537,G__298538));
}
} else {
var d4915 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4912,b4913,c4914,d4915);
} else {
var G__298539 = a4912;
var G__298540 = b4913;
var G__298541 = c4914;
var G__298542 = d4915;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__298539,G__298540,G__298541,G__298542) : f.call(null,G__298539,G__298540,G__298541,G__298542));
}
} else {
var e4916 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4912,b4913,c4914,d4915,e4916);
} else {
var G__298543 = a4912;
var G__298544 = b4913;
var G__298545 = c4914;
var G__298546 = d4915;
var G__298547 = e4916;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__298543,G__298544,G__298545,G__298546,G__298547) : f.call(null,G__298543,G__298544,G__298545,G__298546,G__298547));
}
} else {
var f4917 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4912,b4913,c4914,d4915,e4916,f4917);
} else {
var G__298548 = a4912;
var G__298549 = b4913;
var G__298550 = c4914;
var G__298551 = d4915;
var G__298552 = e4916;
var G__298553 = f4917;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__298548,G__298549,G__298550,G__298551,G__298552,G__298553) : f.call(null,G__298548,G__298549,G__298550,G__298551,G__298552,G__298553));
}
} else {
var g4918 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4912,b4913,c4914,d4915,e4916,f4917,g4918);
} else {
var G__298554 = a4912;
var G__298555 = b4913;
var G__298556 = c4914;
var G__298557 = d4915;
var G__298558 = e4916;
var G__298559 = f4917;
var G__298560 = g4918;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__298554,G__298555,G__298556,G__298557,G__298558,G__298559,G__298560) : f.call(null,G__298554,G__298555,G__298556,G__298557,G__298558,G__298559,G__298560));
}
} else {
var h4919 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919);
} else {
var G__298561 = a4912;
var G__298562 = b4913;
var G__298563 = c4914;
var G__298564 = d4915;
var G__298565 = e4916;
var G__298566 = f4917;
var G__298567 = g4918;
var G__298568 = h4919;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__298561,G__298562,G__298563,G__298564,G__298565,G__298566,G__298567,G__298568) : f.call(null,G__298561,G__298562,G__298563,G__298564,G__298565,G__298566,G__298567,G__298568));
}
} else {
var i4920 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920);
} else {
var G__298569 = a4912;
var G__298570 = b4913;
var G__298571 = c4914;
var G__298572 = d4915;
var G__298573 = e4916;
var G__298574 = f4917;
var G__298575 = g4918;
var G__298576 = h4919;
var G__298577 = i4920;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__298569,G__298570,G__298571,G__298572,G__298573,G__298574,G__298575,G__298576,G__298577) : f.call(null,G__298569,G__298570,G__298571,G__298572,G__298573,G__298574,G__298575,G__298576,G__298577));
}
} else {
var j4921 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921);
} else {
var G__298578 = a4912;
var G__298579 = b4913;
var G__298580 = c4914;
var G__298581 = d4915;
var G__298582 = e4916;
var G__298583 = f4917;
var G__298584 = g4918;
var G__298585 = h4919;
var G__298586 = i4920;
var G__298587 = j4921;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__298578,G__298579,G__298580,G__298581,G__298582,G__298583,G__298584,G__298585,G__298586,G__298587) : f.call(null,G__298578,G__298579,G__298580,G__298581,G__298582,G__298583,G__298584,G__298585,G__298586,G__298587));
}
} else {
var k4922 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922);
} else {
var G__298588 = a4912;
var G__298589 = b4913;
var G__298590 = c4914;
var G__298591 = d4915;
var G__298592 = e4916;
var G__298593 = f4917;
var G__298594 = g4918;
var G__298595 = h4919;
var G__298596 = i4920;
var G__298597 = j4921;
var G__298598 = k4922;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__298588,G__298589,G__298590,G__298591,G__298592,G__298593,G__298594,G__298595,G__298596,G__298597,G__298598) : f.call(null,G__298588,G__298589,G__298590,G__298591,G__298592,G__298593,G__298594,G__298595,G__298596,G__298597,G__298598));
}
} else {
var l4923 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923);
} else {
var G__298599 = a4912;
var G__298600 = b4913;
var G__298601 = c4914;
var G__298602 = d4915;
var G__298603 = e4916;
var G__298604 = f4917;
var G__298605 = g4918;
var G__298606 = h4919;
var G__298607 = i4920;
var G__298608 = j4921;
var G__298609 = k4922;
var G__298610 = l4923;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__298599,G__298600,G__298601,G__298602,G__298603,G__298604,G__298605,G__298606,G__298607,G__298608,G__298609,G__298610) : f.call(null,G__298599,G__298600,G__298601,G__298602,G__298603,G__298604,G__298605,G__298606,G__298607,G__298608,G__298609,G__298610));
}
} else {
var m4924 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924);
} else {
var G__298611 = a4912;
var G__298612 = b4913;
var G__298613 = c4914;
var G__298614 = d4915;
var G__298615 = e4916;
var G__298616 = f4917;
var G__298617 = g4918;
var G__298618 = h4919;
var G__298619 = i4920;
var G__298620 = j4921;
var G__298621 = k4922;
var G__298622 = l4923;
var G__298623 = m4924;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__298611,G__298612,G__298613,G__298614,G__298615,G__298616,G__298617,G__298618,G__298619,G__298620,G__298621,G__298622,G__298623) : f.call(null,G__298611,G__298612,G__298613,G__298614,G__298615,G__298616,G__298617,G__298618,G__298619,G__298620,G__298621,G__298622,G__298623));
}
} else {
var n4925 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925);
} else {
var G__298624 = a4912;
var G__298625 = b4913;
var G__298626 = c4914;
var G__298627 = d4915;
var G__298628 = e4916;
var G__298629 = f4917;
var G__298630 = g4918;
var G__298631 = h4919;
var G__298632 = i4920;
var G__298633 = j4921;
var G__298634 = k4922;
var G__298635 = l4923;
var G__298636 = m4924;
var G__298637 = n4925;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__298624,G__298625,G__298626,G__298627,G__298628,G__298629,G__298630,G__298631,G__298632,G__298633,G__298634,G__298635,G__298636,G__298637) : f.call(null,G__298624,G__298625,G__298626,G__298627,G__298628,G__298629,G__298630,G__298631,G__298632,G__298633,G__298634,G__298635,G__298636,G__298637));
}
} else {
var o4926 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926);
} else {
var G__298638 = a4912;
var G__298639 = b4913;
var G__298640 = c4914;
var G__298641 = d4915;
var G__298642 = e4916;
var G__298643 = f4917;
var G__298644 = g4918;
var G__298645 = h4919;
var G__298646 = i4920;
var G__298647 = j4921;
var G__298648 = k4922;
var G__298649 = l4923;
var G__298650 = m4924;
var G__298651 = n4925;
var G__298652 = o4926;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__298638,G__298639,G__298640,G__298641,G__298642,G__298643,G__298644,G__298645,G__298646,G__298647,G__298648,G__298649,G__298650,G__298651,G__298652) : f.call(null,G__298638,G__298639,G__298640,G__298641,G__298642,G__298643,G__298644,G__298645,G__298646,G__298647,G__298648,G__298649,G__298650,G__298651,G__298652));
}
} else {
var p4927 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927);
} else {
var G__298653 = a4912;
var G__298654 = b4913;
var G__298655 = c4914;
var G__298656 = d4915;
var G__298657 = e4916;
var G__298658 = f4917;
var G__298659 = g4918;
var G__298660 = h4919;
var G__298661 = i4920;
var G__298662 = j4921;
var G__298663 = k4922;
var G__298664 = l4923;
var G__298665 = m4924;
var G__298666 = n4925;
var G__298667 = o4926;
var G__298668 = p4927;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__298653,G__298654,G__298655,G__298656,G__298657,G__298658,G__298659,G__298660,G__298661,G__298662,G__298663,G__298664,G__298665,G__298666,G__298667,G__298668) : f.call(null,G__298653,G__298654,G__298655,G__298656,G__298657,G__298658,G__298659,G__298660,G__298661,G__298662,G__298663,G__298664,G__298665,G__298666,G__298667,G__298668));
}
} else {
var q4928 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928);
} else {
var G__298669 = a4912;
var G__298670 = b4913;
var G__298671 = c4914;
var G__298672 = d4915;
var G__298673 = e4916;
var G__298674 = f4917;
var G__298675 = g4918;
var G__298676 = h4919;
var G__298677 = i4920;
var G__298678 = j4921;
var G__298679 = k4922;
var G__298680 = l4923;
var G__298681 = m4924;
var G__298682 = n4925;
var G__298683 = o4926;
var G__298684 = p4927;
var G__298685 = q4928;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__298669,G__298670,G__298671,G__298672,G__298673,G__298674,G__298675,G__298676,G__298677,G__298678,G__298679,G__298680,G__298681,G__298682,G__298683,G__298684,G__298685) : f.call(null,G__298669,G__298670,G__298671,G__298672,G__298673,G__298674,G__298675,G__298676,G__298677,G__298678,G__298679,G__298680,G__298681,G__298682,G__298683,G__298684,G__298685));
}
} else {
var r4929 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929);
} else {
var G__298686 = a4912;
var G__298687 = b4913;
var G__298688 = c4914;
var G__298689 = d4915;
var G__298690 = e4916;
var G__298691 = f4917;
var G__298692 = g4918;
var G__298693 = h4919;
var G__298694 = i4920;
var G__298695 = j4921;
var G__298696 = k4922;
var G__298697 = l4923;
var G__298698 = m4924;
var G__298699 = n4925;
var G__298700 = o4926;
var G__298701 = p4927;
var G__298702 = q4928;
var G__298703 = r4929;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__298686,G__298687,G__298688,G__298689,G__298690,G__298691,G__298692,G__298693,G__298694,G__298695,G__298696,G__298697,G__298698,G__298699,G__298700,G__298701,G__298702,G__298703) : f.call(null,G__298686,G__298687,G__298688,G__298689,G__298690,G__298691,G__298692,G__298693,G__298694,G__298695,G__298696,G__298697,G__298698,G__298699,G__298700,G__298701,G__298702,G__298703));
}
} else {
var s4930 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930);
} else {
var G__298704 = a4912;
var G__298705 = b4913;
var G__298706 = c4914;
var G__298707 = d4915;
var G__298708 = e4916;
var G__298709 = f4917;
var G__298710 = g4918;
var G__298711 = h4919;
var G__298712 = i4920;
var G__298713 = j4921;
var G__298714 = k4922;
var G__298715 = l4923;
var G__298716 = m4924;
var G__298717 = n4925;
var G__298718 = o4926;
var G__298719 = p4927;
var G__298720 = q4928;
var G__298721 = r4929;
var G__298722 = s4930;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__298704,G__298705,G__298706,G__298707,G__298708,G__298709,G__298710,G__298711,G__298712,G__298713,G__298714,G__298715,G__298716,G__298717,G__298718,G__298719,G__298720,G__298721,G__298722) : f.call(null,G__298704,G__298705,G__298706,G__298707,G__298708,G__298709,G__298710,G__298711,G__298712,G__298713,G__298714,G__298715,G__298716,G__298717,G__298718,G__298719,G__298720,G__298721,G__298722));
}
} else {
var t4931 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930,t4931);
} else {
var G__298723 = a4912;
var G__298724 = b4913;
var G__298725 = c4914;
var G__298726 = d4915;
var G__298727 = e4916;
var G__298728 = f4917;
var G__298729 = g4918;
var G__298730 = h4919;
var G__298731 = i4920;
var G__298732 = j4921;
var G__298733 = k4922;
var G__298734 = l4923;
var G__298735 = m4924;
var G__298736 = n4925;
var G__298737 = o4926;
var G__298738 = p4927;
var G__298739 = q4928;
var G__298740 = r4929;
var G__298741 = s4930;
var G__298742 = t4931;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__298723,G__298724,G__298725,G__298726,G__298727,G__298728,G__298729,G__298730,G__298731,G__298732,G__298733,G__298734,G__298735,G__298736,G__298737,G__298738,G__298739,G__298740,G__298741,G__298742) : f.call(null,G__298723,G__298724,G__298725,G__298726,G__298727,G__298728,G__298729,G__298730,G__298731,G__298732,G__298733,G__298734,G__298735,G__298736,G__298737,G__298738,G__298739,G__298740,G__298741,G__298742));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__298743__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__298743 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__298744__i = 0, G__298744__a = new Array(arguments.length -  5);
while (G__298744__i < G__298744__a.length) {G__298744__a[G__298744__i] = arguments[G__298744__i + 5]; ++G__298744__i;}
  args = new cljs.core.IndexedSeq(G__298744__a,0);
} 
return G__298743__delegate.call(this,f,a,b,c,d,args);};
G__298743.cljs$lang$maxFixedArity = 5;
G__298743.cljs$lang$applyTo = (function (arglist__298745){
var f = cljs.core.first(arglist__298745);
arglist__298745 = cljs.core.next(arglist__298745);
var a = cljs.core.first(arglist__298745);
arglist__298745 = cljs.core.next(arglist__298745);
var b = cljs.core.first(arglist__298745);
arglist__298745 = cljs.core.next(arglist__298745);
var c = cljs.core.first(arglist__298745);
arglist__298745 = cljs.core.next(arglist__298745);
var d = cljs.core.first(arglist__298745);
var args = cljs.core.rest(arglist__298745);
return G__298743__delegate(f,a,b,c,d,args);
});
G__298743.cljs$core$IFn$_invoke$arity$variadic = G__298743__delegate;
return G__298743;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__298746 = null;
if (arguments.length > 5) {
var G__298747__i = 0, G__298747__a = new Array(arguments.length -  5);
while (G__298747__i < G__298747__a.length) {G__298747__a[G__298747__i] = arguments[G__298747__i + 5]; ++G__298747__i;}
G__298746 = new cljs.core.IndexedSeq(G__298747__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__298746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__298763 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298763) : f.call(null,G__298763));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__298764 = cljs.core.meta(obj);
var G__298765 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__298764,G__298765) : f.call(null,G__298764,G__298765));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__298766 = cljs.core.meta(obj);
var G__298767 = a;
var G__298768 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__298766,G__298767,G__298768) : f.call(null,G__298766,G__298767,G__298768));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__298769 = cljs.core.meta(obj);
var G__298770 = a;
var G__298771 = b;
var G__298772 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__298769,G__298770,G__298771,G__298772) : f.call(null,G__298769,G__298770,G__298771,G__298772));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__298773 = cljs.core.meta(obj);
var G__298774 = a;
var G__298775 = b;
var G__298776 = c;
var G__298777 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__298773,G__298774,G__298775,G__298776,G__298777) : f.call(null,G__298773,G__298774,G__298775,G__298776,G__298777));
})());
});
var vary_meta__7 = (function() { 
var G__298778__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__298778 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__298779__i = 0, G__298779__a = new Array(arguments.length -  6);
while (G__298779__i < G__298779__a.length) {G__298779__a[G__298779__i] = arguments[G__298779__i + 6]; ++G__298779__i;}
  args = new cljs.core.IndexedSeq(G__298779__a,0);
} 
return G__298778__delegate.call(this,obj,f,a,b,c,d,args);};
G__298778.cljs$lang$maxFixedArity = 6;
G__298778.cljs$lang$applyTo = (function (arglist__298780){
var obj = cljs.core.first(arglist__298780);
arglist__298780 = cljs.core.next(arglist__298780);
var f = cljs.core.first(arglist__298780);
arglist__298780 = cljs.core.next(arglist__298780);
var a = cljs.core.first(arglist__298780);
arglist__298780 = cljs.core.next(arglist__298780);
var b = cljs.core.first(arglist__298780);
arglist__298780 = cljs.core.next(arglist__298780);
var c = cljs.core.first(arglist__298780);
arglist__298780 = cljs.core.next(arglist__298780);
var d = cljs.core.first(arglist__298780);
var args = cljs.core.rest(arglist__298780);
return G__298778__delegate(obj,f,a,b,c,d,args);
});
G__298778.cljs$core$IFn$_invoke$arity$variadic = G__298778__delegate;
return G__298778;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__298781 = null;
if (arguments.length > 6) {
var G__298782__i = 0, G__298782__a = new Array(arguments.length -  6);
while (G__298782__i < G__298782__a.length) {G__298782__a[G__298782__i] = arguments[G__298782__i + 6]; ++G__298782__i;}
G__298781 = new cljs.core.IndexedSeq(G__298782__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__298781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__298783__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__298783 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__298784__i = 0, G__298784__a = new Array(arguments.length -  2);
while (G__298784__i < G__298784__a.length) {G__298784__a[G__298784__i] = arguments[G__298784__i + 2]; ++G__298784__i;}
  more = new cljs.core.IndexedSeq(G__298784__a,0);
} 
return G__298783__delegate.call(this,x,y,more);};
G__298783.cljs$lang$maxFixedArity = 2;
G__298783.cljs$lang$applyTo = (function (arglist__298785){
var x = cljs.core.first(arglist__298785);
arglist__298785 = cljs.core.next(arglist__298785);
var y = cljs.core.first(arglist__298785);
var more = cljs.core.rest(arglist__298785);
return G__298783__delegate(x,y,more);
});
G__298783.cljs$core$IFn$_invoke$arity$variadic = G__298783__delegate;
return G__298783;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__298786 = null;
if (arguments.length > 2) {
var G__298787__i = 0, G__298787__a = new Array(arguments.length -  2);
while (G__298787__i < G__298787__a.length) {G__298787__a[G__298787__i] = arguments[G__298787__i + 2]; ++G__298787__i;}
G__298786 = new cljs.core.IndexedSeq(G__298787__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t298791 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t298791 = (function (nil_iter,meta298792){
this.nil_iter = nil_iter;
this.meta298792 = meta298792;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t298791.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t298791.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t298791.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t298791.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_298793){
var self__ = this;
var _298793__$1 = this;
return self__.meta298792;
});

cljs.core.t298791.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_298793,meta298792__$1){
var self__ = this;
var _298793__$1 = this;
return (new cljs.core.t298791(self__.nil_iter,meta298792__$1));
});

cljs.core.t298791.cljs$lang$type = true;

cljs.core.t298791.cljs$lang$ctorStr = "cljs.core/t298791";

cljs.core.t298791.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/t298791");
});

cljs.core.__GT_t298791 = (function __GT_t298791(nil_iter__$1,meta298792){
return (new cljs.core.t298791(nil_iter__$1,meta298792));
});

}

return (new cljs.core.t298791(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return self__.iter.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__298794 = lt;
var G__298795 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__298794,G__298795) : self__.xform.call(null,G__298794,G__298795));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__298796 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__298796) : self__.xform.call(null,G__298796));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__298798 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__298798) : xform.call(null,G__298798));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__298800 = cljs.core.next(iters__$1);
iters__$1 = G__298800;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4868__auto___298801 = self__.iters.length;
var i_298802 = (0);
while(true){
if((i_298802 < n__4868__auto___298801)){
(self__.nexts[i_298802] = (self__.iters[i_298802]).next());

var G__298803 = (i_298802 + (1));
i_298802 = G__298803;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return this$.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__298799 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__298799) : self__.xform.call(null,G__298799));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__298808 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__298808) : xform.call(null,G__298808));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__298809_298813 = cljs.core.seq(colls);
var chunk__298810_298814 = null;
var count__298811_298815 = (0);
var i__298812_298816 = (0);
while(true){
if((i__298812_298816 < count__298811_298815)){
var coll_298817 = chunk__298810_298814.cljs$core$IIndexed$_nth$arity$2(null,i__298812_298816);
iters.push(cljs.core.iter(coll_298817));

var G__298818 = seq__298809_298813;
var G__298819 = chunk__298810_298814;
var G__298820 = count__298811_298815;
var G__298821 = (i__298812_298816 + (1));
seq__298809_298813 = G__298818;
chunk__298810_298814 = G__298819;
count__298811_298815 = G__298820;
i__298812_298816 = G__298821;
continue;
} else {
var temp__4126__auto___298822 = cljs.core.seq(seq__298809_298813);
if(temp__4126__auto___298822){
var seq__298809_298823__$1 = temp__4126__auto___298822;
if(cljs.core.chunked_seq_QMARK_(seq__298809_298823__$1)){
var c__4768__auto___298824 = cljs.core.chunk_first(seq__298809_298823__$1);
var G__298825 = cljs.core.chunk_rest(seq__298809_298823__$1);
var G__298826 = c__4768__auto___298824;
var G__298827 = cljs.core.count(c__4768__auto___298824);
var G__298828 = (0);
seq__298809_298813 = G__298825;
chunk__298810_298814 = G__298826;
count__298811_298815 = G__298827;
i__298812_298816 = G__298828;
continue;
} else {
var coll_298829 = cljs.core.first(seq__298809_298823__$1);
iters.push(cljs.core.iter(coll_298829));

var G__298830 = cljs.core.next(seq__298809_298823__$1);
var G__298831 = null;
var G__298832 = (0);
var G__298833 = (0);
seq__298809_298813 = G__298830;
chunk__298810_298814 = G__298831;
count__298811_298815 = G__298832;
i__298812_298816 = G__298833;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3981__auto__ = cljs.core.seq(coll);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__298834__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__298834 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__298835__i = 0, G__298835__a = new Array(arguments.length -  2);
while (G__298835__i < G__298835__a.length) {G__298835__a[G__298835__i] = arguments[G__298835__i + 2]; ++G__298835__i;}
  colls = new cljs.core.IndexedSeq(G__298835__a,0);
} 
return G__298834__delegate.call(this,xform,coll,colls);};
G__298834.cljs$lang$maxFixedArity = 2;
G__298834.cljs$lang$applyTo = (function (arglist__298836){
var xform = cljs.core.first(arglist__298836);
arglist__298836 = cljs.core.next(arglist__298836);
var coll = cljs.core.first(arglist__298836);
var colls = cljs.core.rest(arglist__298836);
return G__298834__delegate(xform,coll,colls);
});
G__298834.cljs$core$IFn$_invoke$arity$variadic = G__298834__delegate;
return G__298834;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__298837 = null;
if (arguments.length > 2) {
var G__298838__i = 0, G__298838__a = new Array(arguments.length -  2);
while (G__298838__i < G__298838__a.length) {G__298838__a[G__298838__i] = arguments[G__298838__i + 2]; ++G__298838__i;}
G__298837 = new cljs.core.IndexedSeq(G__298838__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__298837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__298840 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__298840) : pred.call(null,G__298840));
})())){
var G__298841 = pred;
var G__298842 = cljs.core.next(coll);
pred = G__298841;
coll = G__298842;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3981__auto__ = (function (){var G__298846 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__298846) : pred.call(null,G__298846));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__298847 = pred;
var G__298848 = cljs.core.next(coll);
pred = G__298847;
coll = G__298848;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__298855 = null;
var G__298855__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__298855__1 = (function (x){
return cljs.core.not((function (){var G__298852 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298852) : f.call(null,G__298852));
})());
});
var G__298855__2 = (function (x,y){
return cljs.core.not((function (){var G__298853 = x;
var G__298854 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__298853,G__298854) : f.call(null,G__298853,G__298854));
})());
});
var G__298855__3 = (function() { 
var G__298856__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__298856 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__298857__i = 0, G__298857__a = new Array(arguments.length -  2);
while (G__298857__i < G__298857__a.length) {G__298857__a[G__298857__i] = arguments[G__298857__i + 2]; ++G__298857__i;}
  zs = new cljs.core.IndexedSeq(G__298857__a,0);
} 
return G__298856__delegate.call(this,x,y,zs);};
G__298856.cljs$lang$maxFixedArity = 2;
G__298856.cljs$lang$applyTo = (function (arglist__298858){
var x = cljs.core.first(arglist__298858);
arglist__298858 = cljs.core.next(arglist__298858);
var y = cljs.core.first(arglist__298858);
var zs = cljs.core.rest(arglist__298858);
return G__298856__delegate(x,y,zs);
});
G__298856.cljs$core$IFn$_invoke$arity$variadic = G__298856__delegate;
return G__298856;
})()
;
G__298855 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__298855__0.call(this);
case 1:
return G__298855__1.call(this,x);
case 2:
return G__298855__2.call(this,x,y);
default:
var G__298859 = null;
if (arguments.length > 2) {
var G__298860__i = 0, G__298860__a = new Array(arguments.length -  2);
while (G__298860__i < G__298860__a.length) {G__298860__a[G__298860__i] = arguments[G__298860__i + 2]; ++G__298860__i;}
G__298859 = new cljs.core.IndexedSeq(G__298860__a,0);
}
return G__298855__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__298859);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__298855.cljs$lang$maxFixedArity = 2;
G__298855.cljs$lang$applyTo = G__298855__3.cljs$lang$applyTo;
G__298855.cljs$core$IFn$_invoke$arity$0 = G__298855__0;
G__298855.cljs$core$IFn$_invoke$arity$1 = G__298855__1;
G__298855.cljs$core$IFn$_invoke$arity$2 = G__298855__2;
G__298855.cljs$core$IFn$_invoke$arity$variadic = G__298855__3.cljs$core$IFn$_invoke$arity$variadic;
return G__298855;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__298861__delegate = function (args){
return x;
};
var G__298861 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__298862__i = 0, G__298862__a = new Array(arguments.length -  0);
while (G__298862__i < G__298862__a.length) {G__298862__a[G__298862__i] = arguments[G__298862__i + 0]; ++G__298862__i;}
  args = new cljs.core.IndexedSeq(G__298862__a,0);
} 
return G__298861__delegate.call(this,args);};
G__298861.cljs$lang$maxFixedArity = 0;
G__298861.cljs$lang$applyTo = (function (arglist__298863){
var args = cljs.core.seq(arglist__298863);
return G__298861__delegate(args);
});
G__298861.cljs$core$IFn$_invoke$arity$variadic = G__298861__delegate;
return G__298861;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__298918 = null;
var G__298918__0 = (function (){
var G__298891 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298891) : f.call(null,G__298891));
});
var G__298918__1 = (function (x){
var G__298892 = (function (){var G__298893 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298893) : g.call(null,G__298893));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298892) : f.call(null,G__298892));
});
var G__298918__2 = (function (x,y){
var G__298894 = (function (){var G__298895 = x;
var G__298896 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__298895,G__298896) : g.call(null,G__298895,G__298896));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298894) : f.call(null,G__298894));
});
var G__298918__3 = (function (x,y,z){
var G__298897 = (function (){var G__298898 = x;
var G__298899 = y;
var G__298900 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__298898,G__298899,G__298900) : g.call(null,G__298898,G__298899,G__298900));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298897) : f.call(null,G__298897));
});
var G__298918__4 = (function() { 
var G__298919__delegate = function (x,y,z,args){
var G__298901 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298901) : f.call(null,G__298901));
};
var G__298919 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__298920__i = 0, G__298920__a = new Array(arguments.length -  3);
while (G__298920__i < G__298920__a.length) {G__298920__a[G__298920__i] = arguments[G__298920__i + 3]; ++G__298920__i;}
  args = new cljs.core.IndexedSeq(G__298920__a,0);
} 
return G__298919__delegate.call(this,x,y,z,args);};
G__298919.cljs$lang$maxFixedArity = 3;
G__298919.cljs$lang$applyTo = (function (arglist__298921){
var x = cljs.core.first(arglist__298921);
arglist__298921 = cljs.core.next(arglist__298921);
var y = cljs.core.first(arglist__298921);
arglist__298921 = cljs.core.next(arglist__298921);
var z = cljs.core.first(arglist__298921);
var args = cljs.core.rest(arglist__298921);
return G__298919__delegate(x,y,z,args);
});
G__298919.cljs$core$IFn$_invoke$arity$variadic = G__298919__delegate;
return G__298919;
})()
;
G__298918 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__298918__0.call(this);
case 1:
return G__298918__1.call(this,x);
case 2:
return G__298918__2.call(this,x,y);
case 3:
return G__298918__3.call(this,x,y,z);
default:
var G__298922 = null;
if (arguments.length > 3) {
var G__298923__i = 0, G__298923__a = new Array(arguments.length -  3);
while (G__298923__i < G__298923__a.length) {G__298923__a[G__298923__i] = arguments[G__298923__i + 3]; ++G__298923__i;}
G__298922 = new cljs.core.IndexedSeq(G__298923__a,0);
}
return G__298918__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__298922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__298918.cljs$lang$maxFixedArity = 3;
G__298918.cljs$lang$applyTo = G__298918__4.cljs$lang$applyTo;
G__298918.cljs$core$IFn$_invoke$arity$0 = G__298918__0;
G__298918.cljs$core$IFn$_invoke$arity$1 = G__298918__1;
G__298918.cljs$core$IFn$_invoke$arity$2 = G__298918__2;
G__298918.cljs$core$IFn$_invoke$arity$3 = G__298918__3;
G__298918.cljs$core$IFn$_invoke$arity$variadic = G__298918__4.cljs$core$IFn$_invoke$arity$variadic;
return G__298918;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__298924 = null;
var G__298924__0 = (function (){
var G__298902 = (function (){var G__298903 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298903) : g.call(null,G__298903));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298902) : f.call(null,G__298902));
});
var G__298924__1 = (function (x){
var G__298904 = (function (){var G__298905 = (function (){var G__298906 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__298906) : h.call(null,G__298906));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298905) : g.call(null,G__298905));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298904) : f.call(null,G__298904));
});
var G__298924__2 = (function (x,y){
var G__298907 = (function (){var G__298908 = (function (){var G__298909 = x;
var G__298910 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__298909,G__298910) : h.call(null,G__298909,G__298910));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298908) : g.call(null,G__298908));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298907) : f.call(null,G__298907));
});
var G__298924__3 = (function (x,y,z){
var G__298911 = (function (){var G__298912 = (function (){var G__298913 = x;
var G__298914 = y;
var G__298915 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__298913,G__298914,G__298915) : h.call(null,G__298913,G__298914,G__298915));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298912) : g.call(null,G__298912));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298911) : f.call(null,G__298911));
});
var G__298924__4 = (function() { 
var G__298925__delegate = function (x,y,z,args){
var G__298916 = (function (){var G__298917 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__298917) : g.call(null,G__298917));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298916) : f.call(null,G__298916));
};
var G__298925 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__298926__i = 0, G__298926__a = new Array(arguments.length -  3);
while (G__298926__i < G__298926__a.length) {G__298926__a[G__298926__i] = arguments[G__298926__i + 3]; ++G__298926__i;}
  args = new cljs.core.IndexedSeq(G__298926__a,0);
} 
return G__298925__delegate.call(this,x,y,z,args);};
G__298925.cljs$lang$maxFixedArity = 3;
G__298925.cljs$lang$applyTo = (function (arglist__298927){
var x = cljs.core.first(arglist__298927);
arglist__298927 = cljs.core.next(arglist__298927);
var y = cljs.core.first(arglist__298927);
arglist__298927 = cljs.core.next(arglist__298927);
var z = cljs.core.first(arglist__298927);
var args = cljs.core.rest(arglist__298927);
return G__298925__delegate(x,y,z,args);
});
G__298925.cljs$core$IFn$_invoke$arity$variadic = G__298925__delegate;
return G__298925;
})()
;
G__298924 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__298924__0.call(this);
case 1:
return G__298924__1.call(this,x);
case 2:
return G__298924__2.call(this,x,y);
case 3:
return G__298924__3.call(this,x,y,z);
default:
var G__298928 = null;
if (arguments.length > 3) {
var G__298929__i = 0, G__298929__a = new Array(arguments.length -  3);
while (G__298929__i < G__298929__a.length) {G__298929__a[G__298929__i] = arguments[G__298929__i + 3]; ++G__298929__i;}
G__298928 = new cljs.core.IndexedSeq(G__298929__a,0);
}
return G__298924__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__298928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__298924.cljs$lang$maxFixedArity = 3;
G__298924.cljs$lang$applyTo = G__298924__4.cljs$lang$applyTo;
G__298924.cljs$core$IFn$_invoke$arity$0 = G__298924__0;
G__298924.cljs$core$IFn$_invoke$arity$1 = G__298924__1;
G__298924.cljs$core$IFn$_invoke$arity$2 = G__298924__2;
G__298924.cljs$core$IFn$_invoke$arity$3 = G__298924__3;
G__298924.cljs$core$IFn$_invoke$arity$variadic = G__298924__4.cljs$core$IFn$_invoke$arity$variadic;
return G__298924;
})()
});
var comp__4 = (function() { 
var G__298930__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__298931__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__298932 = cljs.core.first(fs__$2).call(null,ret);
var G__298933 = cljs.core.next(fs__$2);
ret = G__298932;
fs__$2 = G__298933;
continue;
} else {
return ret;
}
break;
}
};
var G__298931 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__298934__i = 0, G__298934__a = new Array(arguments.length -  0);
while (G__298934__i < G__298934__a.length) {G__298934__a[G__298934__i] = arguments[G__298934__i + 0]; ++G__298934__i;}
  args = new cljs.core.IndexedSeq(G__298934__a,0);
} 
return G__298931__delegate.call(this,args);};
G__298931.cljs$lang$maxFixedArity = 0;
G__298931.cljs$lang$applyTo = (function (arglist__298935){
var args = cljs.core.seq(arglist__298935);
return G__298931__delegate(args);
});
G__298931.cljs$core$IFn$_invoke$arity$variadic = G__298931__delegate;
return G__298931;
})()
;
;})(fs__$1))
};
var G__298930 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__298936__i = 0, G__298936__a = new Array(arguments.length -  3);
while (G__298936__i < G__298936__a.length) {G__298936__a[G__298936__i] = arguments[G__298936__i + 3]; ++G__298936__i;}
  fs = new cljs.core.IndexedSeq(G__298936__a,0);
} 
return G__298930__delegate.call(this,f1,f2,f3,fs);};
G__298930.cljs$lang$maxFixedArity = 3;
G__298930.cljs$lang$applyTo = (function (arglist__298937){
var f1 = cljs.core.first(arglist__298937);
arglist__298937 = cljs.core.next(arglist__298937);
var f2 = cljs.core.first(arglist__298937);
arglist__298937 = cljs.core.next(arglist__298937);
var f3 = cljs.core.first(arglist__298937);
var fs = cljs.core.rest(arglist__298937);
return G__298930__delegate(f1,f2,f3,fs);
});
G__298930.cljs$core$IFn$_invoke$arity$variadic = G__298930__delegate;
return G__298930;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__298938 = null;
if (arguments.length > 3) {
var G__298939__i = 0, G__298939__a = new Array(arguments.length -  3);
while (G__298939__i < G__298939__a.length) {G__298939__a[G__298939__i] = arguments[G__298939__i + 3]; ++G__298939__i;}
G__298938 = new cljs.core.IndexedSeq(G__298939__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__298938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__299024 = null;
var G__299024__0 = (function (){
var G__298982 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__298982) : f.call(null,G__298982));
});
var G__299024__1 = (function (x){
var G__298983 = arg1;
var G__298984 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__298983,G__298984) : f.call(null,G__298983,G__298984));
});
var G__299024__2 = (function (x,y){
var G__298985 = arg1;
var G__298986 = x;
var G__298987 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__298985,G__298986,G__298987) : f.call(null,G__298985,G__298986,G__298987));
});
var G__299024__3 = (function (x,y,z){
var G__298988 = arg1;
var G__298989 = x;
var G__298990 = y;
var G__298991 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__298988,G__298989,G__298990,G__298991) : f.call(null,G__298988,G__298989,G__298990,G__298991));
});
var G__299024__4 = (function() { 
var G__299025__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__299025 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299026__i = 0, G__299026__a = new Array(arguments.length -  3);
while (G__299026__i < G__299026__a.length) {G__299026__a[G__299026__i] = arguments[G__299026__i + 3]; ++G__299026__i;}
  args = new cljs.core.IndexedSeq(G__299026__a,0);
} 
return G__299025__delegate.call(this,x,y,z,args);};
G__299025.cljs$lang$maxFixedArity = 3;
G__299025.cljs$lang$applyTo = (function (arglist__299027){
var x = cljs.core.first(arglist__299027);
arglist__299027 = cljs.core.next(arglist__299027);
var y = cljs.core.first(arglist__299027);
arglist__299027 = cljs.core.next(arglist__299027);
var z = cljs.core.first(arglist__299027);
var args = cljs.core.rest(arglist__299027);
return G__299025__delegate(x,y,z,args);
});
G__299025.cljs$core$IFn$_invoke$arity$variadic = G__299025__delegate;
return G__299025;
})()
;
G__299024 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__299024__0.call(this);
case 1:
return G__299024__1.call(this,x);
case 2:
return G__299024__2.call(this,x,y);
case 3:
return G__299024__3.call(this,x,y,z);
default:
var G__299028 = null;
if (arguments.length > 3) {
var G__299029__i = 0, G__299029__a = new Array(arguments.length -  3);
while (G__299029__i < G__299029__a.length) {G__299029__a[G__299029__i] = arguments[G__299029__i + 3]; ++G__299029__i;}
G__299028 = new cljs.core.IndexedSeq(G__299029__a,0);
}
return G__299024__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299024.cljs$lang$maxFixedArity = 3;
G__299024.cljs$lang$applyTo = G__299024__4.cljs$lang$applyTo;
G__299024.cljs$core$IFn$_invoke$arity$0 = G__299024__0;
G__299024.cljs$core$IFn$_invoke$arity$1 = G__299024__1;
G__299024.cljs$core$IFn$_invoke$arity$2 = G__299024__2;
G__299024.cljs$core$IFn$_invoke$arity$3 = G__299024__3;
G__299024.cljs$core$IFn$_invoke$arity$variadic = G__299024__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299024;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__299030 = null;
var G__299030__0 = (function (){
var G__298992 = arg1;
var G__298993 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__298992,G__298993) : f.call(null,G__298992,G__298993));
});
var G__299030__1 = (function (x){
var G__298994 = arg1;
var G__298995 = arg2;
var G__298996 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__298994,G__298995,G__298996) : f.call(null,G__298994,G__298995,G__298996));
});
var G__299030__2 = (function (x,y){
var G__298997 = arg1;
var G__298998 = arg2;
var G__298999 = x;
var G__299000 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__298997,G__298998,G__298999,G__299000) : f.call(null,G__298997,G__298998,G__298999,G__299000));
});
var G__299030__3 = (function (x,y,z){
var G__299001 = arg1;
var G__299002 = arg2;
var G__299003 = x;
var G__299004 = y;
var G__299005 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__299001,G__299002,G__299003,G__299004,G__299005) : f.call(null,G__299001,G__299002,G__299003,G__299004,G__299005));
});
var G__299030__4 = (function() { 
var G__299031__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__299031 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299032__i = 0, G__299032__a = new Array(arguments.length -  3);
while (G__299032__i < G__299032__a.length) {G__299032__a[G__299032__i] = arguments[G__299032__i + 3]; ++G__299032__i;}
  args = new cljs.core.IndexedSeq(G__299032__a,0);
} 
return G__299031__delegate.call(this,x,y,z,args);};
G__299031.cljs$lang$maxFixedArity = 3;
G__299031.cljs$lang$applyTo = (function (arglist__299033){
var x = cljs.core.first(arglist__299033);
arglist__299033 = cljs.core.next(arglist__299033);
var y = cljs.core.first(arglist__299033);
arglist__299033 = cljs.core.next(arglist__299033);
var z = cljs.core.first(arglist__299033);
var args = cljs.core.rest(arglist__299033);
return G__299031__delegate(x,y,z,args);
});
G__299031.cljs$core$IFn$_invoke$arity$variadic = G__299031__delegate;
return G__299031;
})()
;
G__299030 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__299030__0.call(this);
case 1:
return G__299030__1.call(this,x);
case 2:
return G__299030__2.call(this,x,y);
case 3:
return G__299030__3.call(this,x,y,z);
default:
var G__299034 = null;
if (arguments.length > 3) {
var G__299035__i = 0, G__299035__a = new Array(arguments.length -  3);
while (G__299035__i < G__299035__a.length) {G__299035__a[G__299035__i] = arguments[G__299035__i + 3]; ++G__299035__i;}
G__299034 = new cljs.core.IndexedSeq(G__299035__a,0);
}
return G__299030__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299030.cljs$lang$maxFixedArity = 3;
G__299030.cljs$lang$applyTo = G__299030__4.cljs$lang$applyTo;
G__299030.cljs$core$IFn$_invoke$arity$0 = G__299030__0;
G__299030.cljs$core$IFn$_invoke$arity$1 = G__299030__1;
G__299030.cljs$core$IFn$_invoke$arity$2 = G__299030__2;
G__299030.cljs$core$IFn$_invoke$arity$3 = G__299030__3;
G__299030.cljs$core$IFn$_invoke$arity$variadic = G__299030__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299030;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__299036 = null;
var G__299036__0 = (function (){
var G__299006 = arg1;
var G__299007 = arg2;
var G__299008 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__299006,G__299007,G__299008) : f.call(null,G__299006,G__299007,G__299008));
});
var G__299036__1 = (function (x){
var G__299009 = arg1;
var G__299010 = arg2;
var G__299011 = arg3;
var G__299012 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__299009,G__299010,G__299011,G__299012) : f.call(null,G__299009,G__299010,G__299011,G__299012));
});
var G__299036__2 = (function (x,y){
var G__299013 = arg1;
var G__299014 = arg2;
var G__299015 = arg3;
var G__299016 = x;
var G__299017 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__299013,G__299014,G__299015,G__299016,G__299017) : f.call(null,G__299013,G__299014,G__299015,G__299016,G__299017));
});
var G__299036__3 = (function (x,y,z){
var G__299018 = arg1;
var G__299019 = arg2;
var G__299020 = arg3;
var G__299021 = x;
var G__299022 = y;
var G__299023 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__299018,G__299019,G__299020,G__299021,G__299022,G__299023) : f.call(null,G__299018,G__299019,G__299020,G__299021,G__299022,G__299023));
});
var G__299036__4 = (function() { 
var G__299037__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__299037 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299038__i = 0, G__299038__a = new Array(arguments.length -  3);
while (G__299038__i < G__299038__a.length) {G__299038__a[G__299038__i] = arguments[G__299038__i + 3]; ++G__299038__i;}
  args = new cljs.core.IndexedSeq(G__299038__a,0);
} 
return G__299037__delegate.call(this,x,y,z,args);};
G__299037.cljs$lang$maxFixedArity = 3;
G__299037.cljs$lang$applyTo = (function (arglist__299039){
var x = cljs.core.first(arglist__299039);
arglist__299039 = cljs.core.next(arglist__299039);
var y = cljs.core.first(arglist__299039);
arglist__299039 = cljs.core.next(arglist__299039);
var z = cljs.core.first(arglist__299039);
var args = cljs.core.rest(arglist__299039);
return G__299037__delegate(x,y,z,args);
});
G__299037.cljs$core$IFn$_invoke$arity$variadic = G__299037__delegate;
return G__299037;
})()
;
G__299036 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__299036__0.call(this);
case 1:
return G__299036__1.call(this,x);
case 2:
return G__299036__2.call(this,x,y);
case 3:
return G__299036__3.call(this,x,y,z);
default:
var G__299040 = null;
if (arguments.length > 3) {
var G__299041__i = 0, G__299041__a = new Array(arguments.length -  3);
while (G__299041__i < G__299041__a.length) {G__299041__a[G__299041__i] = arguments[G__299041__i + 3]; ++G__299041__i;}
G__299040 = new cljs.core.IndexedSeq(G__299041__a,0);
}
return G__299036__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299036.cljs$lang$maxFixedArity = 3;
G__299036.cljs$lang$applyTo = G__299036__4.cljs$lang$applyTo;
G__299036.cljs$core$IFn$_invoke$arity$0 = G__299036__0;
G__299036.cljs$core$IFn$_invoke$arity$1 = G__299036__1;
G__299036.cljs$core$IFn$_invoke$arity$2 = G__299036__2;
G__299036.cljs$core$IFn$_invoke$arity$3 = G__299036__3;
G__299036.cljs$core$IFn$_invoke$arity$variadic = G__299036__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299036;
})()
});
var partial__5 = (function() { 
var G__299042__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__299043__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__299043 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__299044__i = 0, G__299044__a = new Array(arguments.length -  0);
while (G__299044__i < G__299044__a.length) {G__299044__a[G__299044__i] = arguments[G__299044__i + 0]; ++G__299044__i;}
  args = new cljs.core.IndexedSeq(G__299044__a,0);
} 
return G__299043__delegate.call(this,args);};
G__299043.cljs$lang$maxFixedArity = 0;
G__299043.cljs$lang$applyTo = (function (arglist__299045){
var args = cljs.core.seq(arglist__299045);
return G__299043__delegate(args);
});
G__299043.cljs$core$IFn$_invoke$arity$variadic = G__299043__delegate;
return G__299043;
})()
;
};
var G__299042 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__299046__i = 0, G__299046__a = new Array(arguments.length -  4);
while (G__299046__i < G__299046__a.length) {G__299046__a[G__299046__i] = arguments[G__299046__i + 4]; ++G__299046__i;}
  more = new cljs.core.IndexedSeq(G__299046__a,0);
} 
return G__299042__delegate.call(this,f,arg1,arg2,arg3,more);};
G__299042.cljs$lang$maxFixedArity = 4;
G__299042.cljs$lang$applyTo = (function (arglist__299047){
var f = cljs.core.first(arglist__299047);
arglist__299047 = cljs.core.next(arglist__299047);
var arg1 = cljs.core.first(arglist__299047);
arglist__299047 = cljs.core.next(arglist__299047);
var arg2 = cljs.core.first(arglist__299047);
arglist__299047 = cljs.core.next(arglist__299047);
var arg3 = cljs.core.first(arglist__299047);
var more = cljs.core.rest(arglist__299047);
return G__299042__delegate(f,arg1,arg2,arg3,more);
});
G__299042.cljs$core$IFn$_invoke$arity$variadic = G__299042__delegate;
return G__299042;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__299048 = null;
if (arguments.length > 4) {
var G__299049__i = 0, G__299049__a = new Array(arguments.length -  4);
while (G__299049__i < G__299049__a.length) {G__299049__a[G__299049__i] = arguments[G__299049__i + 4]; ++G__299049__i;}
G__299048 = new cljs.core.IndexedSeq(G__299049__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__299048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__299082 = null;
var G__299082__1 = (function (a){
var G__299066 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__299066) : f.call(null,G__299066));
});
var G__299082__2 = (function (a,b){
var G__299067 = (((a == null))?x:a);
var G__299068 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299067,G__299068) : f.call(null,G__299067,G__299068));
});
var G__299082__3 = (function (a,b,c){
var G__299069 = (((a == null))?x:a);
var G__299070 = b;
var G__299071 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__299069,G__299070,G__299071) : f.call(null,G__299069,G__299070,G__299071));
});
var G__299082__4 = (function() { 
var G__299083__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__299083 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__299084__i = 0, G__299084__a = new Array(arguments.length -  3);
while (G__299084__i < G__299084__a.length) {G__299084__a[G__299084__i] = arguments[G__299084__i + 3]; ++G__299084__i;}
  ds = new cljs.core.IndexedSeq(G__299084__a,0);
} 
return G__299083__delegate.call(this,a,b,c,ds);};
G__299083.cljs$lang$maxFixedArity = 3;
G__299083.cljs$lang$applyTo = (function (arglist__299085){
var a = cljs.core.first(arglist__299085);
arglist__299085 = cljs.core.next(arglist__299085);
var b = cljs.core.first(arglist__299085);
arglist__299085 = cljs.core.next(arglist__299085);
var c = cljs.core.first(arglist__299085);
var ds = cljs.core.rest(arglist__299085);
return G__299083__delegate(a,b,c,ds);
});
G__299083.cljs$core$IFn$_invoke$arity$variadic = G__299083__delegate;
return G__299083;
})()
;
G__299082 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__299082__1.call(this,a);
case 2:
return G__299082__2.call(this,a,b);
case 3:
return G__299082__3.call(this,a,b,c);
default:
var G__299086 = null;
if (arguments.length > 3) {
var G__299087__i = 0, G__299087__a = new Array(arguments.length -  3);
while (G__299087__i < G__299087__a.length) {G__299087__a[G__299087__i] = arguments[G__299087__i + 3]; ++G__299087__i;}
G__299086 = new cljs.core.IndexedSeq(G__299087__a,0);
}
return G__299082__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__299086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299082.cljs$lang$maxFixedArity = 3;
G__299082.cljs$lang$applyTo = G__299082__4.cljs$lang$applyTo;
G__299082.cljs$core$IFn$_invoke$arity$1 = G__299082__1;
G__299082.cljs$core$IFn$_invoke$arity$2 = G__299082__2;
G__299082.cljs$core$IFn$_invoke$arity$3 = G__299082__3;
G__299082.cljs$core$IFn$_invoke$arity$variadic = G__299082__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299082;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__299088 = null;
var G__299088__2 = (function (a,b){
var G__299072 = (((a == null))?x:a);
var G__299073 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299072,G__299073) : f.call(null,G__299072,G__299073));
});
var G__299088__3 = (function (a,b,c){
var G__299074 = (((a == null))?x:a);
var G__299075 = (((b == null))?y:b);
var G__299076 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__299074,G__299075,G__299076) : f.call(null,G__299074,G__299075,G__299076));
});
var G__299088__4 = (function() { 
var G__299089__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__299089 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__299090__i = 0, G__299090__a = new Array(arguments.length -  3);
while (G__299090__i < G__299090__a.length) {G__299090__a[G__299090__i] = arguments[G__299090__i + 3]; ++G__299090__i;}
  ds = new cljs.core.IndexedSeq(G__299090__a,0);
} 
return G__299089__delegate.call(this,a,b,c,ds);};
G__299089.cljs$lang$maxFixedArity = 3;
G__299089.cljs$lang$applyTo = (function (arglist__299091){
var a = cljs.core.first(arglist__299091);
arglist__299091 = cljs.core.next(arglist__299091);
var b = cljs.core.first(arglist__299091);
arglist__299091 = cljs.core.next(arglist__299091);
var c = cljs.core.first(arglist__299091);
var ds = cljs.core.rest(arglist__299091);
return G__299089__delegate(a,b,c,ds);
});
G__299089.cljs$core$IFn$_invoke$arity$variadic = G__299089__delegate;
return G__299089;
})()
;
G__299088 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__299088__2.call(this,a,b);
case 3:
return G__299088__3.call(this,a,b,c);
default:
var G__299092 = null;
if (arguments.length > 3) {
var G__299093__i = 0, G__299093__a = new Array(arguments.length -  3);
while (G__299093__i < G__299093__a.length) {G__299093__a[G__299093__i] = arguments[G__299093__i + 3]; ++G__299093__i;}
G__299092 = new cljs.core.IndexedSeq(G__299093__a,0);
}
return G__299088__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__299092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299088.cljs$lang$maxFixedArity = 3;
G__299088.cljs$lang$applyTo = G__299088__4.cljs$lang$applyTo;
G__299088.cljs$core$IFn$_invoke$arity$2 = G__299088__2;
G__299088.cljs$core$IFn$_invoke$arity$3 = G__299088__3;
G__299088.cljs$core$IFn$_invoke$arity$variadic = G__299088__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299088;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__299094 = null;
var G__299094__2 = (function (a,b){
var G__299077 = (((a == null))?x:a);
var G__299078 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299077,G__299078) : f.call(null,G__299077,G__299078));
});
var G__299094__3 = (function (a,b,c){
var G__299079 = (((a == null))?x:a);
var G__299080 = (((b == null))?y:b);
var G__299081 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__299079,G__299080,G__299081) : f.call(null,G__299079,G__299080,G__299081));
});
var G__299094__4 = (function() { 
var G__299095__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__299095 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__299096__i = 0, G__299096__a = new Array(arguments.length -  3);
while (G__299096__i < G__299096__a.length) {G__299096__a[G__299096__i] = arguments[G__299096__i + 3]; ++G__299096__i;}
  ds = new cljs.core.IndexedSeq(G__299096__a,0);
} 
return G__299095__delegate.call(this,a,b,c,ds);};
G__299095.cljs$lang$maxFixedArity = 3;
G__299095.cljs$lang$applyTo = (function (arglist__299097){
var a = cljs.core.first(arglist__299097);
arglist__299097 = cljs.core.next(arglist__299097);
var b = cljs.core.first(arglist__299097);
arglist__299097 = cljs.core.next(arglist__299097);
var c = cljs.core.first(arglist__299097);
var ds = cljs.core.rest(arglist__299097);
return G__299095__delegate(a,b,c,ds);
});
G__299095.cljs$core$IFn$_invoke$arity$variadic = G__299095__delegate;
return G__299095;
})()
;
G__299094 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__299094__2.call(this,a,b);
case 3:
return G__299094__3.call(this,a,b,c);
default:
var G__299098 = null;
if (arguments.length > 3) {
var G__299099__i = 0, G__299099__a = new Array(arguments.length -  3);
while (G__299099__i < G__299099__a.length) {G__299099__a[G__299099__i] = arguments[G__299099__i + 3]; ++G__299099__i;}
G__299098 = new cljs.core.IndexedSeq(G__299099__a,0);
}
return G__299094__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__299098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299094.cljs$lang$maxFixedArity = 3;
G__299094.cljs$lang$applyTo = G__299094__4.cljs$lang$applyTo;
G__299094.cljs$core$IFn$_invoke$arity$2 = G__299094__2;
G__299094.cljs$core$IFn$_invoke$arity$3 = G__299094__3;
G__299094.cljs$core$IFn$_invoke$arity$variadic = G__299094__4.cljs$core$IFn$_invoke$arity$variadic;
return G__299094;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__299130 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__299130) : cljs.core.volatile_BANG_.call(null,G__299130));
})();
return ((function (i){
return (function() {
var G__299160 = null;
var G__299160__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__299160__1 = (function (result){
var G__299131 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__299131) : rf.call(null,G__299131));
});
var G__299160__2 = (function (result,input){
var G__299132 = result;
var G__299133 = (function (){var G__299134 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__299135 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299134,G__299135) : f.call(null,G__299134,G__299135));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__299132,G__299133) : rf.call(null,G__299132,G__299133));
});
G__299160 = function(result,input){
switch(arguments.length){
case 0:
return G__299160__0.call(this);
case 1:
return G__299160__1.call(this,result);
case 2:
return G__299160__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299160.cljs$core$IFn$_invoke$arity$0 = G__299160__0;
G__299160.cljs$core$IFn$_invoke$arity$1 = G__299160__1;
G__299160.cljs$core$IFn$_invoke$arity$2 = G__299160__2;
return G__299160;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___299161 = size;
var i_299162 = (0);
while(true){
if((i_299162 < n__4868__auto___299161)){
cljs.core.chunk_append(b,(function (){var G__299156 = (idx + i_299162);
var G__299157 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_299162);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299156,G__299157) : f.call(null,G__299156,G__299157));
})());

var G__299163 = (i_299162 + (1));
i_299162 = G__299163;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__299158 = idx;
var G__299159 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299158,G__299159) : f.call(null,G__299158,G__299159));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__299182 = null;
var G__299182__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__299182__1 = (function (result){
var G__299176 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__299176) : rf.call(null,G__299176));
});
var G__299182__2 = (function (result,input){
var v = (function (){var G__299177 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__299177) : f.call(null,G__299177));
})();
if((v == null)){
return result;
} else {
var G__299178 = result;
var G__299179 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__299178,G__299179) : rf.call(null,G__299178,G__299179));
}
});
G__299182 = function(result,input){
switch(arguments.length){
case 0:
return G__299182__0.call(this);
case 1:
return G__299182__1.call(this,result);
case 2:
return G__299182__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299182.cljs$core$IFn$_invoke$arity$0 = G__299182__0;
G__299182.cljs$core$IFn$_invoke$arity$1 = G__299182__1;
G__299182.cljs$core$IFn$_invoke$arity$2 = G__299182__2;
return G__299182;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___299183 = size;
var i_299184 = (0);
while(true){
if((i_299184 < n__4868__auto___299183)){
var x_299185 = (function (){var G__299180 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_299184);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__299180) : f.call(null,G__299180));
})();
if((x_299185 == null)){
} else {
cljs.core.chunk_append(b,x_299185);
}

var G__299186 = (i_299184 + (1));
i_299184 = G__299186;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__299181 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__299181) : f.call(null,G__299181));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__299187 = this$__$1;
return goog.getUid(G__299187);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__299188 = cljs.core.seq(self__.watches);
var chunk__299189 = null;
var count__299190 = (0);
var i__299191 = (0);
while(true){
if((i__299191 < count__299190)){
var vec__299192 = chunk__299189.cljs$core$IIndexed$_nth$arity$2(null,i__299191);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299192,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299192,(1),null);
var G__299193_299202 = key;
var G__299194_299203 = this$__$1;
var G__299195_299204 = oldval;
var G__299196_299205 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__299193_299202,G__299194_299203,G__299195_299204,G__299196_299205) : f.call(null,G__299193_299202,G__299194_299203,G__299195_299204,G__299196_299205));

var G__299206 = seq__299188;
var G__299207 = chunk__299189;
var G__299208 = count__299190;
var G__299209 = (i__299191 + (1));
seq__299188 = G__299206;
chunk__299189 = G__299207;
count__299190 = G__299208;
i__299191 = G__299209;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__299188);
if(temp__4126__auto__){
var seq__299188__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__299188__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__299188__$1);
var G__299210 = cljs.core.chunk_rest(seq__299188__$1);
var G__299211 = c__4768__auto__;
var G__299212 = cljs.core.count(c__4768__auto__);
var G__299213 = (0);
seq__299188 = G__299210;
chunk__299189 = G__299211;
count__299190 = G__299212;
i__299191 = G__299213;
continue;
} else {
var vec__299197 = cljs.core.first(seq__299188__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299197,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299197,(1),null);
var G__299198_299214 = key;
var G__299199_299215 = this$__$1;
var G__299200_299216 = oldval;
var G__299201_299217 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__299198_299214,G__299199_299215,G__299200_299216,G__299201_299217) : f.call(null,G__299198_299214,G__299199_299215,G__299200_299216,G__299201_299217));

var G__299218 = cljs.core.next(seq__299188__$1);
var G__299219 = null;
var G__299220 = (0);
var G__299221 = (0);
seq__299188 = G__299218;
chunk__299189 = G__299219;
count__299190 = G__299220;
i__299191 = G__299221;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__299225__delegate = function (x,p__299222){
var map__299224 = p__299222;
var map__299224__$1 = ((cljs.core.seq_QMARK_(map__299224))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__299224):map__299224);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__299224__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__299224__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__299225 = function (x,var_args){
var p__299222 = null;
if (arguments.length > 1) {
var G__299226__i = 0, G__299226__a = new Array(arguments.length -  1);
while (G__299226__i < G__299226__a.length) {G__299226__a[G__299226__i] = arguments[G__299226__i + 1]; ++G__299226__i;}
  p__299222 = new cljs.core.IndexedSeq(G__299226__a,0);
} 
return G__299225__delegate.call(this,x,p__299222);};
G__299225.cljs$lang$maxFixedArity = 1;
G__299225.cljs$lang$applyTo = (function (arglist__299227){
var x = cljs.core.first(arglist__299227);
var p__299222 = cljs.core.rest(arglist__299227);
return G__299225__delegate(x,p__299222);
});
G__299225.cljs$core$IFn$_invoke$arity$variadic = G__299225__delegate;
return G__299225;
})()
;
atom = function(x,var_args){
var p__299222 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__299228 = null;
if (arguments.length > 1) {
var G__299229__i = 0, G__299229__a = new Array(arguments.length -  1);
while (G__299229__i < G__299229__a.length) {G__299229__a[G__299229__i] = arguments[G__299229__i + 1]; ++G__299229__i;}
G__299228 = new cljs.core.IndexedSeq(G__299229__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__299228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__299232 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__299232) : validate.call(null,G__299232));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__299233 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__299233) : cljs.core.pr_str.call(null,G__299233));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__299240 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__299240) : f.call(null,G__299240));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__299241 = a.state;
var G__299242 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299241,G__299242) : f.call(null,G__299241,G__299242));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__299243 = a.state;
var G__299244 = x;
var G__299245 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__299243,G__299244,G__299245) : f.call(null,G__299243,G__299244,G__299245));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__299246__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__299246 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__299247__i = 0, G__299247__a = new Array(arguments.length -  4);
while (G__299247__i < G__299247__a.length) {G__299247__a[G__299247__i] = arguments[G__299247__i + 4]; ++G__299247__i;}
  more = new cljs.core.IndexedSeq(G__299247__a,0);
} 
return G__299246__delegate.call(this,a,f,x,y,more);};
G__299246.cljs$lang$maxFixedArity = 4;
G__299246.cljs$lang$applyTo = (function (arglist__299248){
var a = cljs.core.first(arglist__299248);
arglist__299248 = cljs.core.next(arglist__299248);
var f = cljs.core.first(arglist__299248);
arglist__299248 = cljs.core.next(arglist__299248);
var x = cljs.core.first(arglist__299248);
arglist__299248 = cljs.core.next(arglist__299248);
var y = cljs.core.first(arglist__299248);
var more = cljs.core.rest(arglist__299248);
return G__299246__delegate(a,f,x,y,more);
});
G__299246.cljs$core$IFn$_invoke$arity$variadic = G__299246__delegate;
return G__299246;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__299249 = null;
if (arguments.length > 4) {
var G__299250__i = 0, G__299250__a = new Array(arguments.length -  4);
while (G__299250__i < G__299250__a.length) {G__299250__a[G__299250__i] = arguments[G__299250__i + 4]; ++G__299250__i;}
G__299249 = new cljs.core.IndexedSeq(G__299250__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__299249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__299317 = null;
var G__299317__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__299317__1 = (function (result){
var G__299284 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__299284) : rf.call(null,G__299284));
});
var G__299317__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__299285 = i;
var G__299286 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299285,G__299286) : f.call(null,G__299285,G__299286));
})();
if((v == null)){
return result;
} else {
var G__299287 = result;
var G__299288 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__299287,G__299288) : rf.call(null,G__299287,G__299288));
}
});
G__299317 = function(result,input){
switch(arguments.length){
case 0:
return G__299317__0.call(this);
case 1:
return G__299317__1.call(this,result);
case 2:
return G__299317__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__299317.cljs$core$IFn$_invoke$arity$0 = G__299317__0;
G__299317.cljs$core$IFn$_invoke$arity$1 = G__299317__1;
G__299317.cljs$core$IFn$_invoke$arity$2 = G__299317__2;
return G__299317;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___299318 = size;
var i_299319 = (0);
while(true){
if((i_299319 < n__4868__auto___299318)){
var x_299320 = (function (){var G__299313 = (idx + i_299319);
var G__299314 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_299319);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299313,G__299314) : f.call(null,G__299313,G__299314));
})();
if((x_299320 == null)){
} else {
cljs.core.chunk_append(b,x_299320);
}

var G__299321 = (i_299319 + (1));
i_299319 = G__299321;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__299315 = idx;
var G__299316 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__299315,G__299316) : f.call(null,G__299315,G__299316));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__299535 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299535) : p.call(null,G__299535));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299537 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299537) : p.call(null,G__299537));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__299538 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299538) : p.call(null,G__299538));
} else {
return and__3969__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299540 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299540) : p.call(null,G__299540));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299542 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299542) : p.call(null,G__299542));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__299543 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299543) : p.call(null,G__299543));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__299712__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__299712 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299713__i = 0, G__299713__a = new Array(arguments.length -  3);
while (G__299713__i < G__299713__a.length) {G__299713__a[G__299713__i] = arguments[G__299713__i + 3]; ++G__299713__i;}
  args = new cljs.core.IndexedSeq(G__299713__a,0);
} 
return G__299712__delegate.call(this,x,y,z,args);};
G__299712.cljs$lang$maxFixedArity = 3;
G__299712.cljs$lang$applyTo = (function (arglist__299714){
var x = cljs.core.first(arglist__299714);
arglist__299714 = cljs.core.next(arglist__299714);
var y = cljs.core.first(arglist__299714);
arglist__299714 = cljs.core.next(arglist__299714);
var z = cljs.core.first(arglist__299714);
var args = cljs.core.rest(arglist__299714);
return G__299712__delegate(x,y,z,args);
});
G__299712.cljs$core$IFn$_invoke$arity$variadic = G__299712__delegate;
return G__299712;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__299715 = null;
if (arguments.length > 3) {
var G__299716__i = 0, G__299716__a = new Array(arguments.length -  3);
while (G__299716__i < G__299716__a.length) {G__299716__a[G__299716__i] = arguments[G__299716__i + 3]; ++G__299716__i;}
G__299715 = new cljs.core.IndexedSeq(G__299716__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299575 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299575) : p1.call(null,G__299575));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__299576 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299576) : p2.call(null,G__299576));
} else {
return and__3969__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299578 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299578) : p1.call(null,G__299578));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299580 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299580) : p1.call(null,G__299580));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__299582 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299582) : p2.call(null,G__299582));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var G__299583 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299583) : p2.call(null,G__299583));
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299585 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299585) : p1.call(null,G__299585));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299587 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299587) : p1.call(null,G__299587));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__299589 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299589) : p1.call(null,G__299589));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__299591 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299591) : p2.call(null,G__299591));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__299593 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299593) : p2.call(null,G__299593));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__299594 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299594) : p2.call(null,G__299594));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__299717__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__299322_SHARP_){
var and__3969__auto__ = (function (){var G__299599 = p1__299322_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299599) : p1.call(null,G__299599));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__299600 = p1__299322_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299600) : p2.call(null,G__299600));
} else {
return and__3969__auto__;
}
}),args)));
};
var G__299717 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299718__i = 0, G__299718__a = new Array(arguments.length -  3);
while (G__299718__i < G__299718__a.length) {G__299718__a[G__299718__i] = arguments[G__299718__i + 3]; ++G__299718__i;}
  args = new cljs.core.IndexedSeq(G__299718__a,0);
} 
return G__299717__delegate.call(this,x,y,z,args);};
G__299717.cljs$lang$maxFixedArity = 3;
G__299717.cljs$lang$applyTo = (function (arglist__299719){
var x = cljs.core.first(arglist__299719);
arglist__299719 = cljs.core.next(arglist__299719);
var y = cljs.core.first(arglist__299719);
arglist__299719 = cljs.core.next(arglist__299719);
var z = cljs.core.first(arglist__299719);
var args = cljs.core.rest(arglist__299719);
return G__299717__delegate(x,y,z,args);
});
G__299717.cljs$core$IFn$_invoke$arity$variadic = G__299717__delegate;
return G__299717;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__299720 = null;
if (arguments.length > 3) {
var G__299721__i = 0, G__299721__a = new Array(arguments.length -  3);
while (G__299721__i < G__299721__a.length) {G__299721__a[G__299721__i] = arguments[G__299721__i + 3]; ++G__299721__i;}
G__299720 = new cljs.core.IndexedSeq(G__299721__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299646 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299646) : p1.call(null,G__299646));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299648 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299648) : p2.call(null,G__299648));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__299649 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299649) : p3.call(null,G__299649));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299651 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299651) : p1.call(null,G__299651));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299653 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299653) : p2.call(null,G__299653));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__299655 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299655) : p3.call(null,G__299655));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__299657 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299657) : p1.call(null,G__299657));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__299659 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299659) : p2.call(null,G__299659));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__299660 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299660) : p3.call(null,G__299660));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__299662 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299662) : p1.call(null,G__299662));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299664 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299664) : p2.call(null,G__299664));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__299666 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299666) : p3.call(null,G__299666));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__299668 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299668) : p1.call(null,G__299668));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__299670 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299670) : p2.call(null,G__299670));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var and__3969__auto____$5 = (function (){var G__299672 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299672) : p3.call(null,G__299672));
})();
if(cljs.core.truth_(and__3969__auto____$5)){
var and__3969__auto____$6 = (function (){var G__299674 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299674) : p1.call(null,G__299674));
})();
if(cljs.core.truth_(and__3969__auto____$6)){
var and__3969__auto____$7 = (function (){var G__299676 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299676) : p2.call(null,G__299676));
})();
if(cljs.core.truth_(and__3969__auto____$7)){
var G__299677 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299677) : p3.call(null,G__299677));
} else {
return and__3969__auto____$7;
}
} else {
return and__3969__auto____$6;
}
} else {
return and__3969__auto____$5;
}
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__299722__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__299323_SHARP_){
var and__3969__auto__ = (function (){var G__299684 = p1__299323_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299684) : p1.call(null,G__299684));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299686 = p1__299323_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299686) : p2.call(null,G__299686));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__299687 = p1__299323_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__299687) : p3.call(null,G__299687));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}),args)));
};
var G__299722 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299723__i = 0, G__299723__a = new Array(arguments.length -  3);
while (G__299723__i < G__299723__a.length) {G__299723__a[G__299723__i] = arguments[G__299723__i + 3]; ++G__299723__i;}
  args = new cljs.core.IndexedSeq(G__299723__a,0);
} 
return G__299722__delegate.call(this,x,y,z,args);};
G__299722.cljs$lang$maxFixedArity = 3;
G__299722.cljs$lang$applyTo = (function (arglist__299724){
var x = cljs.core.first(arglist__299724);
arglist__299724 = cljs.core.next(arglist__299724);
var y = cljs.core.first(arglist__299724);
arglist__299724 = cljs.core.next(arglist__299724);
var z = cljs.core.first(arglist__299724);
var args = cljs.core.rest(arglist__299724);
return G__299722__delegate(x,y,z,args);
});
G__299722.cljs$core$IFn$_invoke$arity$variadic = G__299722__delegate;
return G__299722;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__299725 = null;
if (arguments.length > 3) {
var G__299726__i = 0, G__299726__a = new Array(arguments.length -  3);
while (G__299726__i < G__299726__a.length) {G__299726__a[G__299726__i] = arguments[G__299726__i + 3]; ++G__299726__i;}
G__299725 = new cljs.core.IndexedSeq(G__299726__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__299727__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__299324_SHARP_){
var G__299703 = x;
return (p1__299324_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299324_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299703) : p1__299324_SHARP_.call(null,G__299703));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__299325_SHARP_){
var and__3969__auto__ = (function (){var G__299705 = x;
return (p1__299325_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299325_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299705) : p1__299325_SHARP_.call(null,G__299705));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__299706 = y;
return (p1__299325_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299325_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299706) : p1__299325_SHARP_.call(null,G__299706));
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__299326_SHARP_){
var and__3969__auto__ = (function (){var G__299708 = x;
return (p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299708) : p1__299326_SHARP_.call(null,G__299708));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__299710 = y;
return (p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299710) : p1__299326_SHARP_.call(null,G__299710));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__299711 = z;
return (p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299326_SHARP_.cljs$core$IFn$_invoke$arity$1(G__299711) : p1__299326_SHARP_.call(null,G__299711));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__299728__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__299327_SHARP_){
return cljs.core.every_QMARK_(p1__299327_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__299728 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__299729__i = 0, G__299729__a = new Array(arguments.length -  3);
while (G__299729__i < G__299729__a.length) {G__299729__a[G__299729__i] = arguments[G__299729__i + 3]; ++G__299729__i;}
  args = new cljs.core.IndexedSeq(G__299729__a,0);
} 
return G__299728__delegate.call(this,x,y,z,args);};
G__299728.cljs$lang$maxFixedArity = 3;
G__299728.cljs$lang$applyTo = (function (arglist__299730){
var x = cljs.core.first(arglist__299730);
arglist__299730 = cljs.core.next(arglist__299730);
var y = cljs.core.first(arglist__299730);
arglist__299730 = cljs.core.next(arglist__299730);
var z = cljs.core.first(arglist__299730);
var args = cljs.core.rest(arglist__299730);
return G__299728__delegate(x,y,z,args);
});
G__299728.cljs$core$IFn$_invoke$arity$variadic = G__299728__delegate;
return G__299728;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__299731 = null;
if (arguments.length > 3) {
var G__299732__i = 0, G__299732__a = new Array(arguments.length -  3);
while (G__299732__i < G__299732__a.length) {G__299732__a[G__299732__i] = arguments[G__299732__i + 3]; ++G__299732__i;}
G__299731 = new cljs.core.IndexedSeq(G__299732__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__299731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__299727 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__299733__i = 0, G__299733__a = new Array(arguments.length -  3);
while (G__299733__i < G__299733__a.length) {G__299733__a[G__299733__i] = arguments[G__299733__i + 3]; ++G__299733__i;}
  ps = new cljs.core.IndexedSeq(G__299733__a,0);
} 
return G__299727__delegate.call(this,p1,p2,p3,ps);};
G__299727.cljs$lang$maxFixedArity = 3;
G__299727.cljs$lang$applyTo = (function (arglist__299734){
var p1 = cljs.core.first(arglist__299734);
arglist__299734 = cljs.core.next(arglist__299734);
var p2 = cljs.core.first(arglist__299734);
arglist__299734 = cljs.core.next(arglist__299734);
var p3 = cljs.core.first(arglist__299734);
var ps = cljs.core.rest(arglist__299734);
return G__299727__delegate(p1,p2,p3,ps);
});
G__299727.cljs$core$IFn$_invoke$arity$variadic = G__299727__delegate;
return G__299727;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__299735 = null;
if (arguments.length > 3) {
var G__299736__i = 0, G__299736__a = new Array(arguments.length -  3);
while (G__299736__i < G__299736__a.length) {G__299736__a[G__299736__i] = arguments[G__299736__i + 3]; ++G__299736__i;}
G__299735 = new cljs.core.IndexedSeq(G__299736__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__299735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__299942 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299942) : p.call(null,G__299942));
});
var sp1__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__299944 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299944) : p.call(null,G__299944));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__299945 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299945) : p.call(null,G__299945));
}
});
var sp1__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__299947 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299947) : p.call(null,G__299947));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__299949 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299949) : p.call(null,G__299949));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__299950 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__299950) : p.call(null,G__299950));
}
}
});
var sp1__4 = (function() { 
var G__300111__delegate = function (x,y,z,args){
var or__3981__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__300111 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__300112__i = 0, G__300112__a = new Array(arguments.length -  3);
while (G__300112__i < G__300112__a.length) {G__300112__a[G__300112__i] = arguments[G__300112__i + 3]; ++G__300112__i;}
  args = new cljs.core.IndexedSeq(G__300112__a,0);
} 
return G__300111__delegate.call(this,x,y,z,args);};
G__300111.cljs$lang$maxFixedArity = 3;
G__300111.cljs$lang$applyTo = (function (arglist__300113){
var x = cljs.core.first(arglist__300113);
arglist__300113 = cljs.core.next(arglist__300113);
var y = cljs.core.first(arglist__300113);
arglist__300113 = cljs.core.next(arglist__300113);
var z = cljs.core.first(arglist__300113);
var args = cljs.core.rest(arglist__300113);
return G__300111__delegate(x,y,z,args);
});
G__300111.cljs$core$IFn$_invoke$arity$variadic = G__300111__delegate;
return G__300111;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__300114 = null;
if (arguments.length > 3) {
var G__300115__i = 0, G__300115__a = new Array(arguments.length -  3);
while (G__300115__i < G__300115__a.length) {G__300115__a[G__300115__i] = arguments[G__300115__i + 3]; ++G__300115__i;}
G__300114 = new cljs.core.IndexedSeq(G__300115__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__300114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3981__auto__ = (function (){var G__299982 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299982) : p1.call(null,G__299982));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__299983 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299983) : p2.call(null,G__299983));
}
});
var sp2__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__299985 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299985) : p1.call(null,G__299985));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__299987 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299987) : p1.call(null,G__299987));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__299989 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299989) : p2.call(null,G__299989));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__299990 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299990) : p2.call(null,G__299990));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__299992 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299992) : p1.call(null,G__299992));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__299994 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299994) : p1.call(null,G__299994));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__299996 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__299996) : p1.call(null,G__299996));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__299998 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__299998) : p2.call(null,G__299998));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__300000 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300000) : p2.call(null,G__300000));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__300001 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300001) : p2.call(null,G__300001));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__300116__delegate = function (x,y,z,args){
var or__3981__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__299737_SHARP_){
var or__3981__auto____$1 = (function (){var G__300003 = p1__299737_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300003) : p1.call(null,G__300003));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__300004 = p1__299737_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300004) : p2.call(null,G__300004));
}
});})(or__3981__auto__))
,args);
}
};
var G__300116 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__300117__i = 0, G__300117__a = new Array(arguments.length -  3);
while (G__300117__i < G__300117__a.length) {G__300117__a[G__300117__i] = arguments[G__300117__i + 3]; ++G__300117__i;}
  args = new cljs.core.IndexedSeq(G__300117__a,0);
} 
return G__300116__delegate.call(this,x,y,z,args);};
G__300116.cljs$lang$maxFixedArity = 3;
G__300116.cljs$lang$applyTo = (function (arglist__300118){
var x = cljs.core.first(arglist__300118);
arglist__300118 = cljs.core.next(arglist__300118);
var y = cljs.core.first(arglist__300118);
arglist__300118 = cljs.core.next(arglist__300118);
var z = cljs.core.first(arglist__300118);
var args = cljs.core.rest(arglist__300118);
return G__300116__delegate(x,y,z,args);
});
G__300116.cljs$core$IFn$_invoke$arity$variadic = G__300116__delegate;
return G__300116;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__300119 = null;
if (arguments.length > 3) {
var G__300120__i = 0, G__300120__a = new Array(arguments.length -  3);
while (G__300120__i < G__300120__a.length) {G__300120__a[G__300120__i] = arguments[G__300120__i + 3]; ++G__300120__i;}
G__300119 = new cljs.core.IndexedSeq(G__300120__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__300119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3981__auto__ = (function (){var G__300050 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300050) : p1.call(null,G__300050));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__300052 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300052) : p2.call(null,G__300052));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__300053 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300053) : p3.call(null,G__300053));
}
}
});
var sp3__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__300055 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300055) : p1.call(null,G__300055));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__300057 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300057) : p2.call(null,G__300057));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__300059 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300059) : p3.call(null,G__300059));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__300061 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300061) : p1.call(null,G__300061));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__300063 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300063) : p2.call(null,G__300063));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__300064 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300064) : p3.call(null,G__300064));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__300066 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300066) : p1.call(null,G__300066));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__300068 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300068) : p2.call(null,G__300068));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__300070 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300070) : p3.call(null,G__300070));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__300072 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300072) : p1.call(null,G__300072));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__300074 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300074) : p2.call(null,G__300074));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var or__3981__auto____$5 = (function (){var G__300076 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300076) : p3.call(null,G__300076));
})();
if(cljs.core.truth_(or__3981__auto____$5)){
return or__3981__auto____$5;
} else {
var or__3981__auto____$6 = (function (){var G__300078 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300078) : p1.call(null,G__300078));
})();
if(cljs.core.truth_(or__3981__auto____$6)){
return or__3981__auto____$6;
} else {
var or__3981__auto____$7 = (function (){var G__300080 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300080) : p2.call(null,G__300080));
})();
if(cljs.core.truth_(or__3981__auto____$7)){
return or__3981__auto____$7;
} else {
var G__300081 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300081) : p3.call(null,G__300081));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__300121__delegate = function (x,y,z,args){
var or__3981__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__299738_SHARP_){
var or__3981__auto____$1 = (function (){var G__300083 = p1__299738_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__300083) : p1.call(null,G__300083));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__300085 = p1__299738_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__300085) : p2.call(null,G__300085));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__300086 = p1__299738_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__300086) : p3.call(null,G__300086));
}
}
});})(or__3981__auto__))
,args);
}
};
var G__300121 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__300122__i = 0, G__300122__a = new Array(arguments.length -  3);
while (G__300122__i < G__300122__a.length) {G__300122__a[G__300122__i] = arguments[G__300122__i + 3]; ++G__300122__i;}
  args = new cljs.core.IndexedSeq(G__300122__a,0);
} 
return G__300121__delegate.call(this,x,y,z,args);};
G__300121.cljs$lang$maxFixedArity = 3;
G__300121.cljs$lang$applyTo = (function (arglist__300123){
var x = cljs.core.first(arglist__300123);
arglist__300123 = cljs.core.next(arglist__300123);
var y = cljs.core.first(arglist__300123);
arglist__300123 = cljs.core.next(arglist__300123);
var z = cljs.core.first(arglist__300123);
var args = cljs.core.rest(arglist__300123);
return G__300121__delegate(x,y,z,args);
});
G__300121.cljs$core$IFn$_invoke$arity$variadic = G__300121__delegate;
return G__300121;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__300124 = null;
if (arguments.length > 3) {
var G__300125__i = 0, G__300125__a = new Array(arguments.length -  3);
while (G__300125__i < G__300125__a.length) {G__300125__a[G__300125__i] = arguments[G__300125__i + 3]; ++G__300125__i;}
G__300124 = new cljs.core.IndexedSeq(G__300125__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__300124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__300126__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__299739_SHARP_){
var G__300102 = x;
return (p1__299739_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299739_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300102) : p1__299739_SHARP_.call(null,G__300102));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__299740_SHARP_){
var or__3981__auto__ = (function (){var G__300104 = x;
return (p1__299740_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299740_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300104) : p1__299740_SHARP_.call(null,G__300104));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__300105 = y;
return (p1__299740_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299740_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300105) : p1__299740_SHARP_.call(null,G__300105));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__299741_SHARP_){
var or__3981__auto__ = (function (){var G__300107 = x;
return (p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300107) : p1__299741_SHARP_.call(null,G__300107));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__300109 = y;
return (p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300109) : p1__299741_SHARP_.call(null,G__300109));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__300110 = z;
return (p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__299741_SHARP_.cljs$core$IFn$_invoke$arity$1(G__300110) : p1__299741_SHARP_.call(null,G__300110));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__300127__delegate = function (x,y,z,args){
var or__3981__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__,ps__$1){
return (function (p1__299742_SHARP_){
return cljs.core.some(p1__299742_SHARP_,args);
});})(or__3981__auto__,ps__$1))
,ps__$1);
}
};
var G__300127 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__300128__i = 0, G__300128__a = new Array(arguments.length -  3);
while (G__300128__i < G__300128__a.length) {G__300128__a[G__300128__i] = arguments[G__300128__i + 3]; ++G__300128__i;}
  args = new cljs.core.IndexedSeq(G__300128__a,0);
} 
return G__300127__delegate.call(this,x,y,z,args);};
G__300127.cljs$lang$maxFixedArity = 3;
G__300127.cljs$lang$applyTo = (function (arglist__300129){
var x = cljs.core.first(arglist__300129);
arglist__300129 = cljs.core.next(arglist__300129);
var y = cljs.core.first(arglist__300129);
arglist__300129 = cljs.core.next(arglist__300129);
var z = cljs.core.first(arglist__300129);
var args = cljs.core.rest(arglist__300129);
return G__300127__delegate(x,y,z,args);
});
G__300127.cljs$core$IFn$_invoke$arity$variadic = G__300127__delegate;
return G__300127;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__300130 = null;
if (arguments.length > 3) {
var G__300131__i = 0, G__300131__a = new Array(arguments.length -  3);
while (G__300131__i < G__300131__a.length) {G__300131__a[G__300131__i] = arguments[G__300131__i + 3]; ++G__300131__i;}
G__300130 = new cljs.core.IndexedSeq(G__300131__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__300130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__300126 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__300132__i = 0, G__300132__a = new Array(arguments.length -  3);
while (G__300132__i < G__300132__a.length) {G__300132__a[G__300132__i] = arguments[G__300132__i + 3]; ++G__300132__i;}
  ps = new cljs.core.IndexedSeq(G__300132__a,0);
} 
return G__300126__delegate.call(this,p1,p2,p3,ps);};
G__300126.cljs$lang$maxFixedArity = 3;
G__300126.cljs$lang$applyTo = (function (arglist__300133){
var p1 = cljs.core.first(arglist__300133);
arglist__300133 = cljs.core.next(arglist__300133);
var p2 = cljs.core.first(arglist__300133);
arglist__300133 = cljs.core.next(arglist__300133);
var p3 = cljs.core.first(arglist__300133);
var ps = cljs.core.rest(arglist__300133);
return G__300126__delegate(p1,p2,p3,ps);
});
G__300126.cljs$core$IFn$_invoke$arity$variadic = G__300126__delegate;
return G__300126;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__300134 = null;
if (arguments.length > 3) {
var G__300135__i = 0, G__300135__a = new Array(arguments.length -  3);
while (G__300135__i < G__300135__a.length) {G__300135__a[G__300135__i] = arguments[G__300135__i + 3]; ++G__300135__i;}
G__300134 = new cljs.core.IndexedSeq(G__300135__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__300134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__300190 = null;
var G__300190__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300190__1 = (function (result){
var G__300176 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300176) : rf.call(null,G__300176));
});
var G__300190__2 = (function (result,input){
var G__300177 = result;
var G__300178 = (function (){var G__300179 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300179) : f.call(null,G__300179));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300177,G__300178) : rf.call(null,G__300177,G__300178));
});
var G__300190__3 = (function() { 
var G__300191__delegate = function (result,input,inputs){
var G__300180 = result;
var G__300181 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300180,G__300181) : rf.call(null,G__300180,G__300181));
};
var G__300191 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__300192__i = 0, G__300192__a = new Array(arguments.length -  2);
while (G__300192__i < G__300192__a.length) {G__300192__a[G__300192__i] = arguments[G__300192__i + 2]; ++G__300192__i;}
  inputs = new cljs.core.IndexedSeq(G__300192__a,0);
} 
return G__300191__delegate.call(this,result,input,inputs);};
G__300191.cljs$lang$maxFixedArity = 2;
G__300191.cljs$lang$applyTo = (function (arglist__300193){
var result = cljs.core.first(arglist__300193);
arglist__300193 = cljs.core.next(arglist__300193);
var input = cljs.core.first(arglist__300193);
var inputs = cljs.core.rest(arglist__300193);
return G__300191__delegate(result,input,inputs);
});
G__300191.cljs$core$IFn$_invoke$arity$variadic = G__300191__delegate;
return G__300191;
})()
;
G__300190 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__300190__0.call(this);
case 1:
return G__300190__1.call(this,result);
case 2:
return G__300190__2.call(this,result,input);
default:
var G__300194 = null;
if (arguments.length > 2) {
var G__300195__i = 0, G__300195__a = new Array(arguments.length -  2);
while (G__300195__i < G__300195__a.length) {G__300195__a[G__300195__i] = arguments[G__300195__i + 2]; ++G__300195__i;}
G__300194 = new cljs.core.IndexedSeq(G__300195__a,0);
}
return G__300190__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__300194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300190.cljs$lang$maxFixedArity = 2;
G__300190.cljs$lang$applyTo = G__300190__3.cljs$lang$applyTo;
G__300190.cljs$core$IFn$_invoke$arity$0 = G__300190__0;
G__300190.cljs$core$IFn$_invoke$arity$1 = G__300190__1;
G__300190.cljs$core$IFn$_invoke$arity$2 = G__300190__2;
G__300190.cljs$core$IFn$_invoke$arity$variadic = G__300190__3.cljs$core$IFn$_invoke$arity$variadic;
return G__300190;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___300196 = size;
var i_300197 = (0);
while(true){
if((i_300197 < n__4868__auto___300196)){
cljs.core.chunk_append(b,(function (){var G__300182 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_300197);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300182) : f.call(null,G__300182));
})());

var G__300198 = (i_300197 + (1));
i_300197 = G__300198;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__300183 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300183) : f.call(null,G__300183));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__300184 = cljs.core.first(s1);
var G__300185 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300184,G__300185) : f.call(null,G__300184,G__300185));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__300186 = cljs.core.first(s1);
var G__300187 = cljs.core.first(s2);
var G__300188 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300186,G__300187,G__300188) : f.call(null,G__300186,G__300187,G__300188));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__300199__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__300136_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__300136_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__300199 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__300200__i = 0, G__300200__a = new Array(arguments.length -  4);
while (G__300200__i < G__300200__a.length) {G__300200__a[G__300200__i] = arguments[G__300200__i + 4]; ++G__300200__i;}
  colls = new cljs.core.IndexedSeq(G__300200__a,0);
} 
return G__300199__delegate.call(this,f,c1,c2,c3,colls);};
G__300199.cljs$lang$maxFixedArity = 4;
G__300199.cljs$lang$applyTo = (function (arglist__300201){
var f = cljs.core.first(arglist__300201);
arglist__300201 = cljs.core.next(arglist__300201);
var c1 = cljs.core.first(arglist__300201);
arglist__300201 = cljs.core.next(arglist__300201);
var c2 = cljs.core.first(arglist__300201);
arglist__300201 = cljs.core.next(arglist__300201);
var c3 = cljs.core.first(arglist__300201);
var colls = cljs.core.rest(arglist__300201);
return G__300199__delegate(f,c1,c2,c3,colls);
});
G__300199.cljs$core$IFn$_invoke$arity$variadic = G__300199__delegate;
return G__300199;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__300202 = null;
if (arguments.length > 4) {
var G__300203__i = 0, G__300203__a = new Array(arguments.length -  4);
while (G__300203__i < G__300203__a.length) {G__300203__a[G__300203__i] = arguments[G__300203__i + 4]; ++G__300203__i;}
G__300202 = new cljs.core.IndexedSeq(G__300203__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__300202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__300212 = null;
var G__300212__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300212__1 = (function (result){
var G__300209 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300209) : rf.call(null,G__300209));
});
var G__300212__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__300210 = result;
var G__300211 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300210,G__300211) : rf.call(null,G__300210,G__300211));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__300212 = function(result,input){
switch(arguments.length){
case 0:
return G__300212__0.call(this);
case 1:
return G__300212__1.call(this,result);
case 2:
return G__300212__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300212.cljs$core$IFn$_invoke$arity$0 = G__300212__0;
G__300212.cljs$core$IFn$_invoke$arity$1 = G__300212__1;
G__300212.cljs$core$IFn$_invoke$arity$2 = G__300212__2;
return G__300212;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__300219 = null;
var G__300219__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300219__1 = (function (result){
var G__300216 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300216) : rf.call(null,G__300216));
});
var G__300219__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__300217 = result;
var G__300218 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300217,G__300218) : rf.call(null,G__300217,G__300218));
}
});
G__300219 = function(result,input){
switch(arguments.length){
case 0:
return G__300219__0.call(this);
case 1:
return G__300219__1.call(this,result);
case 2:
return G__300219__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300219.cljs$core$IFn$_invoke$arity$0 = G__300219__0;
G__300219.cljs$core$IFn$_invoke$arity$1 = G__300219__1;
G__300219.cljs$core$IFn$_invoke$arity$2 = G__300219__2;
return G__300219;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__300220 = (n__$1 - (1));
var G__300221 = cljs.core.rest(s);
n__$1 = G__300220;
coll__$1 = G__300221;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__300224 = cljs.core.next(s);
var G__300225 = cljs.core.next(lead);
s = G__300224;
lead = G__300225;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__300238 = null;
var G__300238__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300238__1 = (function (result){
var G__300232 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300232) : rf.call(null,G__300232));
});
var G__300238__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3969__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3969__auto__)){
var G__300233 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__300233) : pred.call(null,G__300233));
} else {
return and__3969__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__300234 = result;
var G__300235 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300234,G__300235) : rf.call(null,G__300234,G__300235));
}
});
G__300238 = function(result,input){
switch(arguments.length){
case 0:
return G__300238__0.call(this);
case 1:
return G__300238__1.call(this,result);
case 2:
return G__300238__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300238.cljs$core$IFn$_invoke$arity$0 = G__300238__0;
G__300238.cljs$core$IFn$_invoke$arity$1 = G__300238__1;
G__300238.cljs$core$IFn$_invoke$arity$2 = G__300238__2;
return G__300238;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3969__auto__ = s;
if(and__3969__auto__){
var G__300237 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__300237) : pred__$1.call(null,G__300237));
} else {
return and__3969__auto__;
}
})())){
var G__300239 = pred__$1;
var G__300240 = cljs.core.rest(s);
pred__$1 = G__300239;
coll__$1 = G__300240;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__300249 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300249) : f.call(null,G__300249));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__300252__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__300252 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__300253__i = 0, G__300253__a = new Array(arguments.length -  2);
while (G__300253__i < G__300253__a.length) {G__300253__a[G__300253__i] = arguments[G__300253__i + 2]; ++G__300253__i;}
  colls = new cljs.core.IndexedSeq(G__300253__a,0);
} 
return G__300252__delegate.call(this,c1,c2,colls);};
G__300252.cljs$lang$maxFixedArity = 2;
G__300252.cljs$lang$applyTo = (function (arglist__300254){
var c1 = cljs.core.first(arglist__300254);
arglist__300254 = cljs.core.next(arglist__300254);
var c2 = cljs.core.first(arglist__300254);
var colls = cljs.core.rest(arglist__300254);
return G__300252__delegate(c1,c2,colls);
});
G__300252.cljs$core$IFn$_invoke$arity$variadic = G__300252__delegate;
return G__300252;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__300255 = null;
if (arguments.length > 2) {
var G__300256__i = 0, G__300256__a = new Array(arguments.length -  2);
while (G__300256__i < G__300256__a.length) {G__300256__a[G__300256__i] = arguments[G__300256__i + 2]; ++G__300256__i;}
G__300255 = new cljs.core.IndexedSeq(G__300256__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__300255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__300271 = null;
var G__300271__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300271__1 = (function (result){
var G__300264 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300264) : rf.call(null,G__300264));
});
var G__300271__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__300265 = result;
var G__300266 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300265,G__300266) : rf.call(null,G__300265,G__300266));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__300267 = sepr;
var G__300268 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300267,G__300268) : rf.call(null,G__300267,G__300268));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__300269 = result;
var G__300270 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300269,G__300270) : rf.call(null,G__300269,G__300270));
}
});
G__300271 = function(result,input){
switch(arguments.length){
case 0:
return G__300271__0.call(this);
case 1:
return G__300271__1.call(this,result);
case 2:
return G__300271__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300271.cljs$core$IFn$_invoke$arity$0 = G__300271__0;
G__300271.cljs$core$IFn$_invoke$arity$1 = G__300271__1;
G__300271.cljs$core$IFn$_invoke$arity$2 = G__300271__2;
return G__300271;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__300280__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__300280 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__300281__i = 0, G__300281__a = new Array(arguments.length -  1);
while (G__300281__i < G__300281__a.length) {G__300281__a[G__300281__i] = arguments[G__300281__i + 1]; ++G__300281__i;}
  colls = new cljs.core.IndexedSeq(G__300281__a,0);
} 
return G__300280__delegate.call(this,f,colls);};
G__300280.cljs$lang$maxFixedArity = 1;
G__300280.cljs$lang$applyTo = (function (arglist__300282){
var f = cljs.core.first(arglist__300282);
var colls = cljs.core.rest(arglist__300282);
return G__300280__delegate(f,colls);
});
G__300280.cljs$core$IFn$_invoke$arity$variadic = G__300280__delegate;
return G__300280;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__300283 = null;
if (arguments.length > 1) {
var G__300284__i = 0, G__300284__a = new Array(arguments.length -  1);
while (G__300284__i < G__300284__a.length) {G__300284__a[G__300284__i] = arguments[G__300284__i + 1]; ++G__300284__i;}
G__300283 = new cljs.core.IndexedSeq(G__300284__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__300283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__300303 = null;
var G__300303__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__300303__1 = (function (result){
var G__300297 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__300297) : rf.call(null,G__300297));
});
var G__300303__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__300298 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__300298) : pred.call(null,G__300298));
})())){
var G__300299 = result;
var G__300300 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__300299,G__300300) : rf.call(null,G__300299,G__300300));
} else {
return result;
}
});
G__300303 = function(result,input){
switch(arguments.length){
case 0:
return G__300303__0.call(this);
case 1:
return G__300303__1.call(this,result);
case 2:
return G__300303__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300303.cljs$core$IFn$_invoke$arity$0 = G__300303__0;
G__300303.cljs$core$IFn$_invoke$arity$1 = G__300303__1;
G__300303.cljs$core$IFn$_invoke$arity$2 = G__300303__2;
return G__300303;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___300304 = size;
var i_300305 = (0);
while(true){
if((i_300305 < n__4868__auto___300304)){
if(cljs.core.truth_((function (){var G__300301 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_300305);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__300301) : pred.call(null,G__300301));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_300305));
} else {
}

var G__300306 = (i_300305 + (1));
i_300305 = G__300306;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__300302 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__300302) : pred.call(null,G__300302));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__300313 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__300313) : branch_QMARK_.call(null,G__300313));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__300314 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__300314) : children.call(null,G__300314));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__300315_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__300315_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__300318 = to;
if(G__300318){
var bit__4655__auto__ = (G__300318.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__300318.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__300319 = to;
if(G__300319){
var bit__4655__auto__ = (G__300319.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__300319.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__300321 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300321) : f.call(null,G__300321));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__300322__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__300322 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__300323__i = 0, G__300323__a = new Array(arguments.length -  4);
while (G__300323__i < G__300323__a.length) {G__300323__a[G__300323__i] = arguments[G__300323__i + 4]; ++G__300323__i;}
  colls = new cljs.core.IndexedSeq(G__300323__a,0);
} 
return G__300322__delegate.call(this,f,c1,c2,c3,colls);};
G__300322.cljs$lang$maxFixedArity = 4;
G__300322.cljs$lang$applyTo = (function (arglist__300324){
var f = cljs.core.first(arglist__300324);
arglist__300324 = cljs.core.next(arglist__300324);
var c1 = cljs.core.first(arglist__300324);
arglist__300324 = cljs.core.next(arglist__300324);
var c2 = cljs.core.first(arglist__300324);
arglist__300324 = cljs.core.next(arglist__300324);
var c3 = cljs.core.first(arglist__300324);
var colls = cljs.core.rest(arglist__300324);
return G__300322__delegate(f,c1,c2,c3,colls);
});
G__300322.cljs$core$IFn$_invoke$arity$variadic = G__300322__delegate;
return G__300322;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__300325 = null;
if (arguments.length > 4) {
var G__300326__i = 0, G__300326__a = new Array(arguments.length -  4);
while (G__300326__i < G__300326__a.length) {G__300326__a[G__300326__i] = arguments[G__300326__i + 4]; ++G__300326__i;}
G__300325 = new cljs.core.IndexedSeq(G__300326__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__300325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__300328 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__300328) : pred.call(null,G__300328));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__300343 = m__$1;
if(G__300343){
var bit__4662__auto__ = (G__300343.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4662__auto__) || (G__300343.cljs$core$ILookup$)){
return true;
} else {
if((!G__300343.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__300343);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__300343);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__300344 = sentinel;
var G__300345 = m__$2;
var G__300346 = cljs.core.next(ks__$1);
sentinel = G__300344;
m__$1 = G__300345;
ks__$1 = G__300346;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__300347,v){
var vec__300352 = p__300347;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300352,(0),null);
var ks = cljs.core.nthnext(vec__300352,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__300353,f){
var vec__300391 = p__300353;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300391,(0),null);
var ks = cljs.core.nthnext(vec__300391,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300392 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300392) : f.call(null,G__300392));
})());
}
});
var update_in__4 = (function (m,p__300354,f,a){
var vec__300393 = p__300354;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300393,(0),null);
var ks = cljs.core.nthnext(vec__300393,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300394 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300395 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300394,G__300395) : f.call(null,G__300394,G__300395));
})());
}
});
var update_in__5 = (function (m,p__300355,f,a,b){
var vec__300396 = p__300355;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300396,(0),null);
var ks = cljs.core.nthnext(vec__300396,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300397 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300398 = a;
var G__300399 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300397,G__300398,G__300399) : f.call(null,G__300397,G__300398,G__300399));
})());
}
});
var update_in__6 = (function (m,p__300356,f,a,b,c){
var vec__300400 = p__300356;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300400,(0),null);
var ks = cljs.core.nthnext(vec__300400,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300401 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300402 = a;
var G__300403 = b;
var G__300404 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__300401,G__300402,G__300403,G__300404) : f.call(null,G__300401,G__300402,G__300403,G__300404));
})());
}
});
var update_in__7 = (function() { 
var G__300406__delegate = function (m,p__300357,f,a,b,c,args){
var vec__300405 = p__300357;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300405,(0),null);
var ks = cljs.core.nthnext(vec__300405,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__300406 = function (m,p__300357,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__300407__i = 0, G__300407__a = new Array(arguments.length -  6);
while (G__300407__i < G__300407__a.length) {G__300407__a[G__300407__i] = arguments[G__300407__i + 6]; ++G__300407__i;}
  args = new cljs.core.IndexedSeq(G__300407__a,0);
} 
return G__300406__delegate.call(this,m,p__300357,f,a,b,c,args);};
G__300406.cljs$lang$maxFixedArity = 6;
G__300406.cljs$lang$applyTo = (function (arglist__300408){
var m = cljs.core.first(arglist__300408);
arglist__300408 = cljs.core.next(arglist__300408);
var p__300357 = cljs.core.first(arglist__300408);
arglist__300408 = cljs.core.next(arglist__300408);
var f = cljs.core.first(arglist__300408);
arglist__300408 = cljs.core.next(arglist__300408);
var a = cljs.core.first(arglist__300408);
arglist__300408 = cljs.core.next(arglist__300408);
var b = cljs.core.first(arglist__300408);
arglist__300408 = cljs.core.next(arglist__300408);
var c = cljs.core.first(arglist__300408);
var args = cljs.core.rest(arglist__300408);
return G__300406__delegate(m,p__300357,f,a,b,c,args);
});
G__300406.cljs$core$IFn$_invoke$arity$variadic = G__300406__delegate;
return G__300406;
})()
;
update_in = function(m,p__300357,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__300357,f);
case 4:
return update_in__4.call(this,m,p__300357,f,a);
case 5:
return update_in__5.call(this,m,p__300357,f,a,b);
case 6:
return update_in__6.call(this,m,p__300357,f,a,b,c);
default:
var G__300409 = null;
if (arguments.length > 6) {
var G__300410__i = 0, G__300410__a = new Array(arguments.length -  6);
while (G__300410__i < G__300410__a.length) {G__300410__a[G__300410__i] = arguments[G__300410__i + 6]; ++G__300410__i;}
G__300409 = new cljs.core.IndexedSeq(G__300410__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__300357,f,a,b,c, G__300409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300421 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__300421) : f.call(null,G__300421));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300422 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300423 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300422,G__300423) : f.call(null,G__300422,G__300423));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300424 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300425 = x;
var G__300426 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300424,G__300425,G__300426) : f.call(null,G__300424,G__300425,G__300426));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300427 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300428 = x;
var G__300429 = y;
var G__300430 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__300427,G__300428,G__300429,G__300430) : f.call(null,G__300427,G__300428,G__300429,G__300430));
})());
});
var update__7 = (function() { 
var G__300431__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__300431 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__300432__i = 0, G__300432__a = new Array(arguments.length -  6);
while (G__300432__i < G__300432__a.length) {G__300432__a[G__300432__i] = arguments[G__300432__i + 6]; ++G__300432__i;}
  more = new cljs.core.IndexedSeq(G__300432__a,0);
} 
return G__300431__delegate.call(this,m,k,f,x,y,z,more);};
G__300431.cljs$lang$maxFixedArity = 6;
G__300431.cljs$lang$applyTo = (function (arglist__300433){
var m = cljs.core.first(arglist__300433);
arglist__300433 = cljs.core.next(arglist__300433);
var k = cljs.core.first(arglist__300433);
arglist__300433 = cljs.core.next(arglist__300433);
var f = cljs.core.first(arglist__300433);
arglist__300433 = cljs.core.next(arglist__300433);
var x = cljs.core.first(arglist__300433);
arglist__300433 = cljs.core.next(arglist__300433);
var y = cljs.core.first(arglist__300433);
arglist__300433 = cljs.core.next(arglist__300433);
var z = cljs.core.first(arglist__300433);
var more = cljs.core.rest(arglist__300433);
return G__300431__delegate(m,k,f,x,y,z,more);
});
G__300431.cljs$core$IFn$_invoke$arity$variadic = G__300431__delegate;
return G__300431;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__300434 = null;
if (arguments.length > 6) {
var G__300435__i = 0, G__300435__a = new Array(arguments.length -  6);
while (G__300435__i < G__300435__a.length) {G__300435__a[G__300435__i] = arguments[G__300435__i + 6]; ++G__300435__i;}
G__300434 = new cljs.core.IndexedSeq(G__300435__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__300434);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__300436 = (ll - (5));
var G__300437 = r;
ll = G__300436;
ret = G__300437;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__300442 = cljs.core.pv_aget(node,(0));
var G__300443 = (level - (5));
node = G__300442;
level = G__300443;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__300444 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__300445 = (level - (5));
node = G__300444;
level = G__300445;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__300455 = init__$2;
var G__300456 = (j + i);
var G__300457 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300455,G__300456,G__300457) : f.call(null,G__300455,G__300456,G__300457));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__300468 = (j + (1));
var G__300469 = init__$3;
j = G__300468;
init__$2 = G__300469;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300458 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300458) : cljs.core.deref.call(null,G__300458));
} else {
var G__300470 = (i + len);
var G__300471 = init__$2;
i = G__300470;
init__$1 = G__300471;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__300459 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__300459) : cljs.core.tv_editable_root.call(null,G__300459));
})(),(function (){var G__300460 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__300460) : cljs.core.tv_editable_tail.call(null,G__300460));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__300461 = init__$2;
var G__300462 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300461,G__300462) : f.call(null,G__300461,G__300462));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__300472 = (j + (1));
var G__300473 = init__$3;
j = G__300472;
init__$2 = G__300473;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300463 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300463) : cljs.core.deref.call(null,G__300463));
} else {
var G__300474 = (i + len);
var G__300475 = init__$2;
i = G__300474;
init__$1 = G__300475;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__300464 = coll__$1;
var G__300465 = cljs.core.first_array_for_longvec(coll__$1);
var G__300466 = (0);
var G__300467 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__300464,G__300465,G__300466,G__300467) : cljs.core.chunked_seq.call(null,G__300464,G__300465,G__300466,G__300467));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4868__auto___300476 = len;
var i_300477 = (0);
while(true){
if((i_300477 < n__4868__auto___300476)){
(new_tail[i_300477] = (self__.tail[i_300477]));

var G__300478 = (i_300477 + (1));
i_300477 = G__300478;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__300479 = null;
var G__300479__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__300479__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__300479 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300479__2.call(this,self__,k);
case 3:
return G__300479__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300479.cljs$core$IFn$_invoke$arity$2 = G__300479__2;
G__300479.cljs$core$IFn$_invoke$arity$3 = G__300479__3;
return G__300479;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args300454){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300454)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__300480 = (i + (1));
var G__300481 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__300480;
out = G__300481;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__300482__i = 0, G__300482__a = new Array(arguments.length -  0);
while (G__300482__i < G__300482__a.length) {G__300482__a[G__300482__i] = arguments[G__300482__i + 0]; ++G__300482__i;}
  args = new cljs.core.IndexedSeq(G__300482__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__300483){
var args = cljs.core.seq(arglist__300483);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__300484 = self__.vec;
var G__300485 = self__.node;
var G__300486 = self__.i;
var G__300487 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__300484,G__300485,G__300486,G__300487) : cljs.core.chunked_seq.call(null,G__300484,G__300485,G__300486,G__300487));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__300488 = self__.vec;
var G__300489 = (self__.i + self__.off);
var G__300490 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__300488,G__300489,G__300490) : cljs.core.subvec.call(null,G__300488,G__300489,G__300490));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__300491 = self__.vec;
var G__300492 = (self__.i + self__.off);
var G__300493 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__300491,G__300492,G__300493) : cljs.core.subvec.call(null,G__300491,G__300492,G__300493));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__300494 = self__.vec;
var G__300495 = self__.node;
var G__300496 = self__.i;
var G__300497 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__300494,G__300495,G__300496,G__300497) : cljs.core.chunked_seq.call(null,G__300494,G__300495,G__300496,G__300497));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__300498 = self__.vec;
var G__300499 = cljs.core.unchecked_array_for(self__.vec,end);
var G__300500 = end;
var G__300501 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__300498,G__300499,G__300500,G__300501) : cljs.core.chunked_seq.call(null,G__300498,G__300499,G__300500,G__300501));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__300502 = self__.vec;
var G__300503 = self__.node;
var G__300504 = self__.i;
var G__300505 = self__.off;
var G__300506 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__300502,G__300503,G__300504,G__300505,G__300506) : cljs.core.chunked_seq.call(null,G__300502,G__300503,G__300504,G__300505,G__300506));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__300507 = self__.vec;
var G__300508 = cljs.core.unchecked_array_for(self__.vec,end);
var G__300509 = end;
var G__300510 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__300507,G__300508,G__300509,G__300510) : cljs.core.chunked_seq.call(null,G__300507,G__300508,G__300509,G__300510));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__300512 = self__.meta;
var G__300513 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__300514 = self__.start;
var G__300515 = (function (){var x__4298__auto__ = self__.end;
var y__4299__auto__ = (v_pos + (1));
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})();
var G__300516 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__300512,G__300513,G__300514,G__300515,G__300516) : cljs.core.build_subvec.call(null,G__300512,G__300513,G__300514,G__300515,G__300516));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__300517 = self__.meta;
var G__300518 = self__.v;
var G__300519 = self__.start;
var G__300520 = (self__.end - (1));
var G__300521 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__300517,G__300518,G__300519,G__300520,G__300521) : cljs.core.build_subvec.call(null,G__300517,G__300518,G__300519,G__300520,G__300521));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__300523 = meta__$1;
var G__300524 = self__.v;
var G__300525 = self__.start;
var G__300526 = self__.end;
var G__300527 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__300523,G__300524,G__300525,G__300526,G__300527) : cljs.core.build_subvec.call(null,G__300523,G__300524,G__300525,G__300526,G__300527));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__300528 = self__.meta;
var G__300529 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__300530 = self__.start;
var G__300531 = (self__.end + (1));
var G__300532 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__300528,G__300529,G__300530,G__300531,G__300532) : cljs.core.build_subvec.call(null,G__300528,G__300529,G__300530,G__300531,G__300532));
});

cljs.core.Subvec.prototype.call = (function() {
var G__300533 = null;
var G__300533__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__300533__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__300533 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300533__2.call(this,self__,k);
case 3:
return G__300533__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300533.cljs$core$IFn$_invoke$arity$2 = G__300533__2;
G__300533.cljs$core$IFn$_invoke$arity$3 = G__300533__3;
return G__300533;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args300511){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300511)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__300534 = meta;
var G__300535 = v.v;
var G__300536 = (v.start + start);
var G__300537 = (v.start + end);
var G__300538 = __hash;
meta = G__300534;
v = G__300535;
start = G__300536;
end = G__300537;
__hash = G__300538;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj300545 = {};
return obj300545;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__300553 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__300554 = (level - (5));
node = G__300553;
level = G__300554;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__300558 = null;
var G__300558__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300558__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300558 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300558__2.call(this,self__,k);
case 3:
return G__300558__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300558.cljs$core$IFn$_invoke$arity$2 = G__300558__2;
G__300558.cljs$core$IFn$_invoke$arity$3 = G__300558__3;
return G__300558;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args300555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300555)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3981__auto__ = self__.front;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = self__.rear;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__300559 = (i + incr);
i = G__300559;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__300560 = (i + (1));
var G__300561 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__300560;
out = G__300561;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj300565 = {};
return obj300565;
})();
var l = ks.length;
var i_300566 = (0);
while(true){
if((i_300566 < l)){
var k_300567 = (ks[i_300566]);
(new_obj[k_300567] = (obj[k_300567]));

var G__300568 = (i_300566 + (1));
i_300566 = G__300568;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__300572 = k;
return goog.isString(G__300572);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__300573 = init__$1;
var G__300574 = k;
var G__300575 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300573,G__300574,G__300575) : f.call(null,G__300573,G__300574,G__300575));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300576 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300576) : cljs.core.deref.call(null,G__300576));
} else {
var G__300582 = cljs.core.rest(keys__$1);
var G__300583 = init__$2;
keys__$1 = G__300582;
init__$1 = G__300583;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__300578 = k;
return goog.isString(G__300578);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__300579 = k;
return goog.isString(G__300579);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__300581 = k;
return goog.isString(G__300581);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__300569_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__300569_SHARP_,(self__.strobj[p1__300569_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__300584 = null;
var G__300584__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300584__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300584 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300584__2.call(this,self__,k);
case 3:
return G__300584__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300584.cljs$core$IFn$_invoke$arity$2 = G__300584__2;
G__300584.cljs$core$IFn$_invoke$arity$3 = G__300584__3;
return G__300584;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args300570){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300570)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj300586 = {};
return obj300586;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__300587 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300587,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300587,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__300588 = (i + (2));
i = G__300588;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__300589 = (i + (2));
i = G__300589;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__300590 = (i + (2));
i = G__300590;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__300591 = (i + (2));
i = G__300591;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__300592 = (i + (2));
i = G__300592;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3981__auto__ = (function (){var G__300596 = k;
return goog.isString(G__300596);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_300597 = (0);
while(true){
if((i_300597 < l)){
(narr[i_300597] = (arr[i_300597]));

var G__300598 = (i_300597 + (1));
i_300597 = G__300598;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300600 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__300600) : cljs.core.keys.call(null,G__300600));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300601 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__300601) : cljs.core.vals.call(null,G__300601));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__300602 = cljs.core.seq(coll);
var chunk__300603 = null;
var count__300604 = (0);
var i__300605 = (0);
while(true){
if((i__300605 < count__300604)){
var vec__300606 = chunk__300603.cljs$core$IIndexed$_nth$arity$2(null,i__300605);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300606,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300606,(1),null);
var G__300607_300620 = v;
var G__300608_300621 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300607_300620,G__300608_300621) : f.call(null,G__300607_300620,G__300608_300621));

var G__300622 = seq__300602;
var G__300623 = chunk__300603;
var G__300624 = count__300604;
var G__300625 = (i__300605 + (1));
seq__300602 = G__300622;
chunk__300603 = G__300623;
count__300604 = G__300624;
i__300605 = G__300625;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__300602);
if(temp__4126__auto__){
var seq__300602__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__300602__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__300602__$1);
var G__300626 = cljs.core.chunk_rest(seq__300602__$1);
var G__300627 = c__4768__auto__;
var G__300628 = cljs.core.count(c__4768__auto__);
var G__300629 = (0);
seq__300602 = G__300626;
chunk__300603 = G__300627;
count__300604 = G__300628;
i__300605 = G__300629;
continue;
} else {
var vec__300609 = cljs.core.first(seq__300602__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300609,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300609,(1),null);
var G__300610_300630 = v;
var G__300611_300631 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300610_300630,G__300611_300631) : f.call(null,G__300610_300630,G__300611_300631));

var G__300632 = cljs.core.next(seq__300602__$1);
var G__300633 = null;
var G__300634 = (0);
var G__300635 = (0);
seq__300602 = G__300632;
chunk__300603 = G__300633;
count__300604 = G__300634;
i__300605 = G__300635;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__300612 = init__$1;
var G__300613 = (self__.arr[i]);
var G__300614 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300612,G__300613,G__300614) : f.call(null,G__300612,G__300613,G__300614));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300615 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300615) : cljs.core.deref.call(null,G__300615));
} else {
var G__300636 = (i + (2));
var G__300637 = init__$2;
i = G__300636;
init__$1 = G__300637;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__300616 = other;
if(G__300616){
var bit__4655__auto__ = (G__300616.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4655__auto__) || (G__300616.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__300638 = (i + (2));
i = G__300638;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj300618 = {};
return obj300618;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__300639 = (s + (2));
var G__300640 = d;
s = G__300639;
d = G__300640;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__300641 = (s + (2));
var G__300642 = (d + (2));
s = G__300641;
d = G__300642;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__300619 = cljs.core.aclone(self__.arr);
(G__300619[(idx + (1))] = v);

return G__300619;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__300643 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__300644 = cljs.core.next(es);
ret = G__300643;
es = G__300644;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__300645 = null;
var G__300645__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300645__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300645 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300645__2.call(this,self__,k);
case 3:
return G__300645__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300645.cljs$core$IFn$_invoke$arity$2 = G__300645__2;
G__300645.cljs$core$IFn$_invoke$arity$3 = G__300645__3;
return G__300645;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args300599){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300599)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__300646 = (i + (2));
var G__300647 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__300646;
ret = G__300647;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__300648_300656 = self__.arr;
G__300648_300656.pop();

G__300648_300656.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__300649 = self__.len;
var G__300650 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__300649,G__300650) : cljs.core.array__GT_transient_hash_map.call(null,G__300649,G__300650));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__300651 = o;
if(G__300651){
var bit__4662__auto__ = (G__300651.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__300651.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__300651.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__300651);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__300651);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__300652 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__300652) : cljs.core.key.call(null,G__300652));
})(),(function (){var G__300653 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__300653) : cljs.core.val.call(null,G__300653));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__300657 = cljs.core.next(es);
var G__300658 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__300654 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__300654) : cljs.core.key.call(null,G__300654));
})(),(function (){var G__300655 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__300655) : cljs.core.val.call(null,G__300655));
})());
es = G__300657;
tcoll__$2 = G__300658;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__300659 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__300660 = (i + (2));
out = G__300659;
i = G__300660;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__300663 = cljs.core.aclone(arr);
(G__300663[i] = a);

return G__300663;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__300664 = cljs.core.aclone(arr);
(G__300664[i] = a);

(G__300664[j] = b);

return G__300664;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__300669 = init__$1;
var G__300670 = k;
var G__300671 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300669,G__300670,G__300671) : f.call(null,G__300669,G__300670,G__300671));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300672 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300672) : cljs.core.deref.call(null,G__300672));
} else {
var G__300673 = (i + (2));
var G__300674 = init__$2;
i = G__300673;
init__$1 = G__300674;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__300675 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__300675) : cljs.core.create_inode_seq.call(null,G__300675));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_300689 = (0);
var j_300690 = (0);
while(true){
if((i_300689 < (32))){
if((((self__.bitmap >>> i_300689) & (1)) === (0))){
var G__300691 = (i_300689 + (1));
var G__300692 = j_300690;
i_300689 = G__300691;
j_300690 = G__300692;
continue;
} else {
(nodes[i_300689] = ((!(((self__.arr[j_300690]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_300690])),(self__.arr[j_300690]),(self__.arr[(j_300690 + (1))]),added_leaf_QMARK_):(self__.arr[(j_300690 + (1))])));

var G__300693 = (i_300689 + (1));
var G__300694 = (j_300690 + (2));
i_300689 = G__300693;
j_300690 = G__300694;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__300676 = edit__$1;
var G__300677 = (shift + (5));
var G__300678 = key_or_nil;
var G__300679 = val_or_node;
var G__300680 = hash;
var G__300681 = key;
var G__300682 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__300676,G__300677,G__300678,G__300679,G__300680,G__300681,G__300682) : cljs.core.create_node.call(null,G__300676,G__300677,G__300678,G__300679,G__300680,G__300681,G__300682));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_300695 = (0);
var j_300696 = (0);
while(true){
if((i_300695 < (32))){
if((((self__.bitmap >>> i_300695) & (1)) === (0))){
var G__300697 = (i_300695 + (1));
var G__300698 = j_300696;
i_300695 = G__300697;
j_300696 = G__300698;
continue;
} else {
(nodes[i_300695] = ((!(((self__.arr[j_300696]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_300696])),(self__.arr[j_300696]),(self__.arr[(j_300696 + (1))]),added_leaf_QMARK_):(self__.arr[(j_300696 + (1))])));

var G__300699 = (i_300695 + (1));
var G__300700 = (j_300696 + (2));
i_300695 = G__300699;
j_300696 = G__300700;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__300683 = (shift + (5));
var G__300684 = key_or_nil;
var G__300685 = val_or_node;
var G__300686 = hash;
var G__300687 = key;
var G__300688 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__300683,G__300684,G__300685,G__300686,G__300687,G__300688) : cljs.core.create_node.call(null,G__300683,G__300684,G__300685,G__300686,G__300687,G__300688));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__300701 = (i + (1));
var G__300702 = (j + (2));
var G__300703 = (bitmap | ((1) << i));
i = G__300701;
j = G__300702;
bitmap = G__300703;
continue;
} else {
var G__300704 = (i + (1));
var G__300705 = j;
var G__300706 = bitmap;
i = G__300704;
j = G__300705;
bitmap = G__300706;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__300707 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__300707) : cljs.core.create_array_node_seq.call(null,G__300707));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300708 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300708) : cljs.core.deref.call(null,G__300708));
} else {
var G__300709 = (i + (1));
var G__300710 = init__$2;
i = G__300709;
init__$1 = G__300710;
continue;
}
} else {
var G__300711 = (i + (1));
var G__300712 = init__$1;
i = G__300711;
init__$1 = G__300712;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__300713 = (i + (2));
i = G__300713;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__300714 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__300714) : cljs.core.create_inode_seq.call(null,G__300714));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__300715 = self__.nodes;
var G__300716 = (self__.i + (2));
var G__300717 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__300715,G__300716,G__300717) : cljs.core.create_inode_seq.call(null,G__300715,G__300716,G__300717));
} else {
var G__300718 = self__.nodes;
var G__300719 = self__.i;
var G__300720 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__300718,G__300719,G__300720) : cljs.core.create_inode_seq.call(null,G__300718,G__300719,G__300720));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__300724 = (j + (2));
j = G__300724;
continue;
}
} else {
var G__300725 = (j + (2));
j = G__300725;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__300726 = null;
var G__300727 = self__.nodes;
var G__300728 = self__.i;
var G__300729 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__300726,G__300727,G__300728,G__300729) : cljs.core.create_array_node_seq.call(null,G__300726,G__300727,G__300728,G__300729));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__300734 = (j + (1));
j = G__300734;
continue;
}
} else {
var G__300735 = (j + (1));
j = G__300735;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300737 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__300737) : cljs.core.keys.call(null,G__300737));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300738 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__300738) : cljs.core.vals.call(null,G__300738));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__300739 = cljs.core.seq(coll);
var chunk__300740 = null;
var count__300741 = (0);
var i__300742 = (0);
while(true){
if((i__300742 < count__300741)){
var vec__300743 = chunk__300740.cljs$core$IIndexed$_nth$arity$2(null,i__300742);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300743,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300743,(1),null);
var G__300744_300755 = v;
var G__300745_300756 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300744_300755,G__300745_300756) : f.call(null,G__300744_300755,G__300745_300756));

var G__300757 = seq__300739;
var G__300758 = chunk__300740;
var G__300759 = count__300741;
var G__300760 = (i__300742 + (1));
seq__300739 = G__300757;
chunk__300740 = G__300758;
count__300741 = G__300759;
i__300742 = G__300760;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__300739);
if(temp__4126__auto__){
var seq__300739__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__300739__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__300739__$1);
var G__300761 = cljs.core.chunk_rest(seq__300739__$1);
var G__300762 = c__4768__auto__;
var G__300763 = cljs.core.count(c__4768__auto__);
var G__300764 = (0);
seq__300739 = G__300761;
chunk__300740 = G__300762;
count__300741 = G__300763;
i__300742 = G__300764;
continue;
} else {
var vec__300746 = cljs.core.first(seq__300739__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300746,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300746,(1),null);
var G__300747_300765 = v;
var G__300748_300766 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300747_300765,G__300748_300766) : f.call(null,G__300747_300765,G__300748_300766));

var G__300767 = cljs.core.next(seq__300739__$1);
var G__300768 = null;
var G__300769 = (0);
var G__300770 = (0);
seq__300739 = G__300767;
chunk__300740 = G__300768;
count__300741 = G__300769;
i__300742 = G__300770;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__300749 = init;
var G__300750 = null;
var G__300751 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300749,G__300750,G__300751) : f.call(null,G__300749,G__300750,G__300751));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__300752 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300752) : cljs.core.deref.call(null,G__300752));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj300754 = {};
return obj300754;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__300771 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__300772 = cljs.core.next(es);
ret = G__300771;
es = G__300772;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__300773 = null;
var G__300773__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300773__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300773 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300773__2.call(this,self__,k);
case 3:
return G__300773__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300773.cljs$core$IFn$_invoke$arity$2 = G__300773__2;
G__300773.cljs$core$IFn$_invoke$arity$3 = G__300773__3;
return G__300773;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args300736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300736)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__300774 = (i + (2));
var G__300775 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__300774;
ret = G__300775;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__300776 = (i + (1));
var G__300777 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__300776;
out = G__300777;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__300778 = o;
if(G__300778){
var bit__4662__auto__ = (G__300778.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__300778.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__300778.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__300778);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__300778);
}
})()){
return tcoll.assoc_BANG_((function (){var G__300779 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__300779) : cljs.core.key.call(null,G__300779));
})(),(function (){var G__300780 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__300780) : cljs.core.val.call(null,G__300780));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__300783 = cljs.core.next(es);
var G__300784 = tcoll__$1.assoc_BANG_((function (){var G__300781 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__300781) : cljs.core.key.call(null,G__300781));
})(),(function (){var G__300782 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__300782) : cljs.core.val.call(null,G__300782));
})());
es = G__300783;
tcoll__$1 = G__300784;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__300785 = ((ascending_QMARK_)?t.left:t.right);
var G__300786 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__300785;
stack__$1 = G__300786;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__300799 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300799) : cljs.core.deref.call(null,G__300799));
} else {
var init__$2 = (function (){var G__300800 = init__$1;
var G__300801 = node.key;
var G__300802 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__300800,G__300801,G__300802) : f.call(null,G__300800,G__300801,G__300802));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__300803 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300803) : cljs.core.deref.call(null,G__300803));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__300804 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__300804) : cljs.core.deref.call(null,G__300804));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__300806 = null;
var G__300806__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300806__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300806 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300806__2.call(this,self__,k);
case 3:
return G__300806__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300806.cljs$core$IFn$_invoke$arity$2 = G__300806__2;
G__300806.cljs$core$IFn$_invoke$arity$3 = G__300806__3;
return G__300806;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args300805){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300805)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__300808 = null;
var G__300808__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300808__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300808 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300808__2.call(this,self__,k);
case 3:
return G__300808__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300808.cljs$core$IFn$_invoke$arity$2 = G__300808__2;
G__300808.cljs$core$IFn$_invoke$arity$3 = G__300808__3;
return G__300808;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args300807){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300807)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__300821 = k;
var G__300822 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__300821,G__300822) : comp.call(null,G__300821,G__300822));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__300841 = k;
var G__300842 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__300841,G__300842) : comp.call(null,G__300841,G__300842));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__300853 = k;
var G__300854 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__300853,G__300854) : comp.call(null,G__300853,G__300854));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__300856 = cljs.core.seq(coll);
var chunk__300857 = null;
var count__300858 = (0);
var i__300859 = (0);
while(true){
if((i__300859 < count__300858)){
var vec__300860 = chunk__300857.cljs$core$IIndexed$_nth$arity$2(null,i__300859);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300860,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300860,(1),null);
var G__300861_300873 = v;
var G__300862_300874 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300861_300873,G__300862_300874) : f.call(null,G__300861_300873,G__300862_300874));

var G__300875 = seq__300856;
var G__300876 = chunk__300857;
var G__300877 = count__300858;
var G__300878 = (i__300859 + (1));
seq__300856 = G__300875;
chunk__300857 = G__300876;
count__300858 = G__300877;
i__300859 = G__300878;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__300856);
if(temp__4126__auto__){
var seq__300856__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__300856__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__300856__$1);
var G__300879 = cljs.core.chunk_rest(seq__300856__$1);
var G__300880 = c__4768__auto__;
var G__300881 = cljs.core.count(c__4768__auto__);
var G__300882 = (0);
seq__300856 = G__300879;
chunk__300857 = G__300880;
count__300858 = G__300881;
i__300859 = G__300882;
continue;
} else {
var vec__300863 = cljs.core.first(seq__300856__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300863,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300863,(1),null);
var G__300864_300883 = v;
var G__300865_300884 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300864_300883,G__300865_300884) : f.call(null,G__300864_300883,G__300865_300884));

var G__300885 = cljs.core.next(seq__300856__$1);
var G__300886 = null;
var G__300887 = (0);
var G__300888 = (0);
seq__300856 = G__300885;
chunk__300857 = G__300886;
count__300858 = G__300887;
i__300859 = G__300888;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300866 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__300866) : cljs.core.keys.call(null,G__300866));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__300867 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__300867) : cljs.core.vals.call(null,G__300867));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__300868 = k;
var G__300869 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__300868,G__300869) : self__.comp.call(null,G__300868,G__300869));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__300889 = t.left;
t = G__300889;
continue;
} else {
var G__300890 = t.right;
t = G__300890;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__300891 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__300892 = cljs.core.next(es);
ret = G__300891;
es = G__300892;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__300893 = null;
var G__300893__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300893__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300893 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300893__2.call(this,self__,k);
case 3:
return G__300893__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300893.cljs$core$IFn$_invoke$arity$2 = G__300893__2;
G__300893.cljs$core$IFn$_invoke$arity$3 = G__300893__3;
return G__300893;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args300855){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300855)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__300870 = k;
var G__300871 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__300870,G__300871) : self__.comp.call(null,G__300870,G__300871));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__300894 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__300895 = t.left;
stack = G__300894;
t = G__300895;
continue;
} else {
var G__300896 = stack;
var G__300897 = t.right;
stack = G__300896;
t = G__300897;
continue;
}
} else {
if((c > (0))){
var G__300898 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__300899 = t.right;
stack = G__300898;
t = G__300899;
continue;
} else {
var G__300900 = stack;
var G__300901 = t.left;
stack = G__300900;
t = G__300901;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__300872 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__300872) : cljs.core.key.call(null,G__300872));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__300902 = cljs.core.nnext(in$);
var G__300903 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__300902;
out = G__300903;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__300904__i = 0, G__300904__a = new Array(arguments.length -  0);
while (G__300904__i < G__300904__a.length) {G__300904__a[G__300904__i] = arguments[G__300904__i + 0]; ++G__300904__i;}
  keyvals = new cljs.core.IndexedSeq(G__300904__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__300905){
var keyvals = cljs.core.seq(arglist__300905);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__300906__i = 0, G__300906__a = new Array(arguments.length -  0);
while (G__300906__i < G__300906__a.length) {G__300906__a[G__300906__i] = arguments[G__300906__i + 0]; ++G__300906__i;}
  keyvals = new cljs.core.IndexedSeq(G__300906__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__300907){
var keyvals = cljs.core.seq(arglist__300907);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj300911 = {};
return obj300911;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__300912 = cljs.core.nnext(kvs);
kvs = G__300912;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__300913__i = 0, G__300913__a = new Array(arguments.length -  0);
while (G__300913__i < G__300913__a.length) {G__300913__a[G__300913__i] = arguments[G__300913__i + 0]; ++G__300913__i;}
  keyvals = new cljs.core.IndexedSeq(G__300913__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__300914){
var keyvals = cljs.core.seq(arglist__300914);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__300915 = cljs.core.nnext(in$);
var G__300916 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__300915;
out = G__300916;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__300917__i = 0, G__300917__a = new Array(arguments.length -  0);
while (G__300917__i < G__300917__a.length) {G__300917__a[G__300917__i] = arguments[G__300917__i + 0]; ++G__300917__i;}
  keyvals = new cljs.core.IndexedSeq(G__300917__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__300918){
var keyvals = cljs.core.seq(arglist__300918);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__300919 = cljs.core.nnext(in$);
var G__300920 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__300919;
out = G__300920;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__300921__i = 0, G__300921__a = new Array(arguments.length -  1);
while (G__300921__i < G__300921__a.length) {G__300921__a[G__300921__i] = arguments[G__300921__i + 1]; ++G__300921__i;}
  keyvals = new cljs.core.IndexedSeq(G__300921__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__300922){
var comparator = cljs.core.first(arglist__300922);
var keyvals = cljs.core.rest(arglist__300922);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__300923 = self__.mseq;
if(G__300923){
var bit__4662__auto__ = (G__300923.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__300923.cljs$core$INext$)){
return true;
} else {
if((!G__300923.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300923);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300923);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__300924 = self__.mseq;
if(G__300924){
var bit__4662__auto__ = (G__300924.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__300924.cljs$core$INext$)){
return true;
} else {
if((!G__300924.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300924);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300924);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__300925 = self__.mseq;
if(G__300925){
var bit__4662__auto__ = (G__300925.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__300925.cljs$core$INext$)){
return true;
} else {
if((!G__300925.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300925);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300925);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__300926 = self__.mseq;
if(G__300926){
var bit__4662__auto__ = (G__300926.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__300926.cljs$core$INext$)){
return true;
} else {
if((!G__300926.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300926);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__300926);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__300927_SHARP_,p2__300928_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = p1__300927_SHARP_;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__300928_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__300929__i = 0, G__300929__a = new Array(arguments.length -  0);
while (G__300929__i < G__300929__a.length) {G__300929__a[G__300929__i] = arguments[G__300929__i + 0]; ++G__300929__i;}
  maps = new cljs.core.IndexedSeq(G__300929__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__300930){
var maps = cljs.core.seq(arglist__300930);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__300933 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__300934 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300933,G__300934) : f.call(null,G__300933,G__300934));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3981__auto__ = m1;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__300935__i = 0, G__300935__a = new Array(arguments.length -  1);
while (G__300935__i < G__300935__a.length) {G__300935__a[G__300935__i] = arguments[G__300935__i + 1]; ++G__300935__i;}
  maps = new cljs.core.IndexedSeq(G__300935__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__300936){
var f = cljs.core.first(arglist__300936);
var maps = cljs.core.rest(arglist__300936);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__300937 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__300938 = cljs.core.next(keys);
ret = G__300937;
keys = G__300938;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__300941 = cljs.core.seq(coll);
var chunk__300942 = null;
var count__300943 = (0);
var i__300944 = (0);
while(true){
if((i__300944 < count__300943)){
var vec__300945 = chunk__300942.cljs$core$IIndexed$_nth$arity$2(null,i__300944);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300945,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300945,(1),null);
var G__300946_300951 = v;
var G__300947_300952 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300946_300951,G__300947_300952) : f.call(null,G__300946_300951,G__300947_300952));

var G__300953 = seq__300941;
var G__300954 = chunk__300942;
var G__300955 = count__300943;
var G__300956 = (i__300944 + (1));
seq__300941 = G__300953;
chunk__300942 = G__300954;
count__300943 = G__300955;
i__300944 = G__300956;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__300941);
if(temp__4126__auto__){
var seq__300941__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__300941__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__300941__$1);
var G__300957 = cljs.core.chunk_rest(seq__300941__$1);
var G__300958 = c__4768__auto__;
var G__300959 = cljs.core.count(c__4768__auto__);
var G__300960 = (0);
seq__300941 = G__300957;
chunk__300942 = G__300958;
count__300943 = G__300959;
i__300944 = G__300960;
continue;
} else {
var vec__300948 = cljs.core.first(seq__300941__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300948,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300948,(1),null);
var G__300949_300961 = v;
var G__300950_300962 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300949_300961,G__300950_300962) : f.call(null,G__300949_300961,G__300950_300962));

var G__300963 = cljs.core.next(seq__300941__$1);
var G__300964 = null;
var G__300965 = (0);
var G__300966 = (0);
seq__300941 = G__300963;
chunk__300942 = G__300964;
count__300943 = G__300965;
i__300944 = G__300966;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__300939_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__300939_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__300967 = null;
var G__300967__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__300967__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__300967 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300967__2.call(this,self__,k);
case 3:
return G__300967__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300967.cljs$core$IFn$_invoke$arity$2 = G__300967__2;
G__300967.cljs$core$IFn$_invoke$arity$3 = G__300967__3;
return G__300967;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args300940){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300940)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__300968 = (i + (1));
var G__300969 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__300968;
out = G__300969;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__300970 = (i + (1));
var G__300971 = cljs.core._conj_BANG_(out,(items[i]));
i = G__300970;
out = G__300971;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__300973 = null;
var G__300973__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__300973__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__300973 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__300973__2.call(this,self__,k);
case 3:
return G__300973__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__300973.cljs$core$IFn$_invoke$arity$2 = G__300973__2;
G__300973.cljs$core$IFn$_invoke$arity$3 = G__300973__3;
return G__300973;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args300972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300972)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__300976 = cljs.core.seq(coll);
var chunk__300977 = null;
var count__300978 = (0);
var i__300979 = (0);
while(true){
if((i__300979 < count__300978)){
var vec__300980 = chunk__300977.cljs$core$IIndexed$_nth$arity$2(null,i__300979);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300980,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300980,(1),null);
var G__300981_300986 = v;
var G__300982_300987 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300981_300986,G__300982_300987) : f.call(null,G__300981_300986,G__300982_300987));

var G__300988 = seq__300976;
var G__300989 = chunk__300977;
var G__300990 = count__300978;
var G__300991 = (i__300979 + (1));
seq__300976 = G__300988;
chunk__300977 = G__300989;
count__300978 = G__300990;
i__300979 = G__300991;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__300976);
if(temp__4126__auto__){
var seq__300976__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__300976__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__300976__$1);
var G__300992 = cljs.core.chunk_rest(seq__300976__$1);
var G__300993 = c__4768__auto__;
var G__300994 = cljs.core.count(c__4768__auto__);
var G__300995 = (0);
seq__300976 = G__300992;
chunk__300977 = G__300993;
count__300978 = G__300994;
i__300979 = G__300995;
continue;
} else {
var vec__300983 = cljs.core.first(seq__300976__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300983,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__300983,(1),null);
var G__300984_300996 = v;
var G__300985_300997 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__300984_300996,G__300985_300997) : f.call(null,G__300984_300996,G__300985_300997));

var G__300998 = cljs.core.next(seq__300976__$1);
var G__300999 = null;
var G__301000 = (0);
var G__301001 = (0);
seq__300976 = G__300998;
chunk__300977 = G__300999;
count__300978 = G__301000;
i__300979 = G__301001;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__300974_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__300974_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__301002 = null;
var G__301002__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__301002__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__301002 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__301002__2.call(this,self__,k);
case 3:
return G__301002__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301002.cljs$core$IFn$_invoke$arity$2 = G__301002__2;
G__301002.cljs$core$IFn$_invoke$arity$3 = G__301002__3;
return G__301002;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args300975){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args300975)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4862__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4862__auto__.length)){
var G__301003 = (i + (1));
var G__301004 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__301003;
res = G__301004;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__301005 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__301006 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__301005;
out = G__301006;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__301007__delegate = function (keys){
return cljs.core.set(keys);
};
var G__301007 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__301008__i = 0, G__301008__a = new Array(arguments.length -  0);
while (G__301008__i < G__301008__a.length) {G__301008__a[G__301008__i] = arguments[G__301008__i + 0]; ++G__301008__i;}
  keys = new cljs.core.IndexedSeq(G__301008__a,0);
} 
return G__301007__delegate.call(this,keys);};
G__301007.cljs$lang$maxFixedArity = 0;
G__301007.cljs$lang$applyTo = (function (arglist__301009){
var keys = cljs.core.seq(arglist__301009);
return G__301007__delegate(keys);
});
G__301007.cljs$core$IFn$_invoke$arity$variadic = G__301007__delegate;
return G__301007;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__301010 = null;
if (arguments.length > 0) {
var G__301011__i = 0, G__301011__a = new Array(arguments.length -  0);
while (G__301011__i < G__301011__a.length) {G__301011__a[G__301011__i] = arguments[G__301011__i + 0]; ++G__301011__i;}
G__301010 = new cljs.core.IndexedSeq(G__301011__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__301010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__301012__i = 0, G__301012__a = new Array(arguments.length -  0);
while (G__301012__i < G__301012__a.length) {G__301012__a[G__301012__i] = arguments[G__301012__i + 0]; ++G__301012__i;}
  keys = new cljs.core.IndexedSeq(G__301012__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__301013){
var keys = cljs.core.seq(arglist__301013);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__301014__i = 0, G__301014__a = new Array(arguments.length -  1);
while (G__301014__i < G__301014__a.length) {G__301014__a[G__301014__i] = arguments[G__301014__i + 1]; ++G__301014__i;}
  keys = new cljs.core.IndexedSeq(G__301014__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__301015){
var comparator = cljs.core.first(arglist__301015);
var keys = cljs.core.rest(arglist__301015);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__301016_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__301016_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__301016_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__301017_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__301017_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__301017_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__301038 = null;
var G__301038__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301038__1 = (function (result){
var G__301028 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301028) : rf.call(null,G__301028));
});
var G__301038__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__301029 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301029) : cljs.core.deref.call(null,G__301029));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__301030 = result;
var G__301031 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301030,G__301031) : rf.call(null,G__301030,G__301031));
}
});
G__301038 = function(result,input){
switch(arguments.length){
case 0:
return G__301038__0.call(this);
case 1:
return G__301038__1.call(this,result);
case 2:
return G__301038__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301038.cljs$core$IFn$_invoke$arity$0 = G__301038__0;
G__301038.cljs$core$IFn$_invoke$arity$1 = G__301038__1;
G__301038.cljs$core$IFn$_invoke$arity$2 = G__301038__2;
return G__301038;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__301036,seen__$1){
while(true){
var vec__301037 = p__301036;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301037,(0),null);
var xs__$1 = vec__301037;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__301039 = cljs.core.rest(s);
var G__301040 = seen__$1;
p__301036 = G__301039;
seen__$1 = G__301040;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__301041 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__301042 = cljs.core.next(s__$1);
ret = G__301041;
s__$1 = G__301042;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__301044 = x;
if(G__301044){
var bit__4655__auto__ = (G__301044.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__301044.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__301045 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__301046 = cljs.core.next(ks);
var G__301047 = cljs.core.next(vs);
map = G__301045;
ks = G__301046;
vs = G__301047;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__301058 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__301058) : k.call(null,G__301058));
})() > (function (){var G__301059 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__301059) : k.call(null,G__301059));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__301060__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__301048_SHARP_,p2__301049_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__301048_SHARP_,p2__301049_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__301060 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__301061__i = 0, G__301061__a = new Array(arguments.length -  3);
while (G__301061__i < G__301061__a.length) {G__301061__a[G__301061__i] = arguments[G__301061__i + 3]; ++G__301061__i;}
  more = new cljs.core.IndexedSeq(G__301061__a,0);
} 
return G__301060__delegate.call(this,k,x,y,more);};
G__301060.cljs$lang$maxFixedArity = 3;
G__301060.cljs$lang$applyTo = (function (arglist__301062){
var k = cljs.core.first(arglist__301062);
arglist__301062 = cljs.core.next(arglist__301062);
var x = cljs.core.first(arglist__301062);
arglist__301062 = cljs.core.next(arglist__301062);
var y = cljs.core.first(arglist__301062);
var more = cljs.core.rest(arglist__301062);
return G__301060__delegate(k,x,y,more);
});
G__301060.cljs$core$IFn$_invoke$arity$variadic = G__301060__delegate;
return G__301060;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__301063 = null;
if (arguments.length > 3) {
var G__301064__i = 0, G__301064__a = new Array(arguments.length -  3);
while (G__301064__i < G__301064__a.length) {G__301064__a[G__301064__i] = arguments[G__301064__i + 3]; ++G__301064__i;}
G__301063 = new cljs.core.IndexedSeq(G__301064__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__301063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__301075 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__301075) : k.call(null,G__301075));
})() < (function (){var G__301076 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__301076) : k.call(null,G__301076));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__301077__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__301065_SHARP_,p2__301066_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__301065_SHARP_,p2__301066_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__301077 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__301078__i = 0, G__301078__a = new Array(arguments.length -  3);
while (G__301078__i < G__301078__a.length) {G__301078__a[G__301078__i] = arguments[G__301078__i + 3]; ++G__301078__i;}
  more = new cljs.core.IndexedSeq(G__301078__a,0);
} 
return G__301077__delegate.call(this,k,x,y,more);};
G__301077.cljs$lang$maxFixedArity = 3;
G__301077.cljs$lang$applyTo = (function (arglist__301079){
var k = cljs.core.first(arglist__301079);
arglist__301079 = cljs.core.next(arglist__301079);
var x = cljs.core.first(arglist__301079);
arglist__301079 = cljs.core.next(arglist__301079);
var y = cljs.core.first(arglist__301079);
var more = cljs.core.rest(arglist__301079);
return G__301077__delegate(k,x,y,more);
});
G__301077.cljs$core$IFn$_invoke$arity$variadic = G__301077__delegate;
return G__301077;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__301080 = null;
if (arguments.length > 3) {
var G__301081__i = 0, G__301081__a = new Array(arguments.length -  3);
while (G__301081__i < G__301081__a.length) {G__301081__a[G__301081__i] = arguments[G__301081__i + 3]; ++G__301081__i;}
G__301080 = new cljs.core.IndexedSeq(G__301081__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__301080);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__301098 = null;
var G__301098__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301098__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__301093 = result;
var G__301094 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301093,G__301094) : rf.call(null,G__301093,G__301094));
})());
})());
var G__301095 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301095) : rf.call(null,G__301095));
});
var G__301098__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__301096 = result;
var G__301097 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301096,G__301097) : rf.call(null,G__301096,G__301097));
} else {
return result;
}
});
G__301098 = function(result,input){
switch(arguments.length){
case 0:
return G__301098__0.call(this);
case 1:
return G__301098__1.call(this,result);
case 2:
return G__301098__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301098.cljs$core$IFn$_invoke$arity$0 = G__301098__0;
G__301098.cljs$core$IFn$_invoke$arity$1 = G__301098__1;
G__301098.cljs$core$IFn$_invoke$arity$2 = G__301098__2;
return G__301098;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__301111 = null;
var G__301111__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301111__1 = (function (result){
var G__301106 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301106) : rf.call(null,G__301106));
});
var G__301111__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__301107 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__301107) : pred.call(null,G__301107));
})())){
var G__301108 = result;
var G__301109 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301108,G__301109) : rf.call(null,G__301108,G__301109));
} else {
return cljs.core.reduced(result);
}
});
G__301111 = function(result,input){
switch(arguments.length){
case 0:
return G__301111__0.call(this);
case 1:
return G__301111__1.call(this,result);
case 2:
return G__301111__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301111.cljs$core$IFn$_invoke$arity$0 = G__301111__0;
G__301111.cljs$core$IFn$_invoke$arity$1 = G__301111__1;
G__301111.cljs$core$IFn$_invoke$arity$2 = G__301111__2;
return G__301111;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__301110 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__301110) : pred.call(null,G__301110));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__301116 = (function (){var G__301118 = cljs.core._entry_key(sc,e);
var G__301119 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__301118,G__301119) : comp.call(null,G__301118,G__301119));
})();
var G__301117 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__301116,G__301117) : test.call(null,G__301116,G__301117));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__301123 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301123,(0),null);
var s = vec__301123;
if(cljs.core.truth_((function (){var G__301124 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__301124) : include.call(null,G__301124));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__301125 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301125,(0),null);
var s = vec__301125;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__301129 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301129,(0),null);
var s = vec__301129;
if(cljs.core.truth_((function (){var G__301130 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__301130) : include.call(null,G__301130));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__301131 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301131,(0),null);
var s = vec__301131;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__301132 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__301132) : Math.ceil.call(null,G__301132));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__301133 = ret;
var G__301134 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__301133,G__301134) : f.call(null,G__301133,G__301134));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__301135 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301135) : cljs.core.deref.call(null,G__301135));
} else {
var G__301136 = (i + self__.step);
var G__301137 = ret__$1;
i = G__301136;
ret = G__301137;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__301155 = null;
var G__301155__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301155__1 = (function (result){
var G__301152 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301152) : rf.call(null,G__301152));
});
var G__301155__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__301153 = result;
var G__301154 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301153,G__301154) : rf.call(null,G__301153,G__301154));
} else {
return result;
}
});
G__301155 = function(result,input){
switch(arguments.length){
case 0:
return G__301155__0.call(this);
case 1:
return G__301155__1.call(this,result);
case 2:
return G__301155__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301155.cljs$core$IFn$_invoke$arity$0 = G__301155__0;
G__301155.cljs$core$IFn$_invoke$arity$1 = G__301155__1;
G__301155.cljs$core$IFn$_invoke$arity$2 = G__301155__2;
return G__301155;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__301177 = null;
var G__301177__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301177__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__301168 = result;
var G__301169 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301168,G__301169) : rf.call(null,G__301168,G__301169));
})());
})());
var G__301170 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301170) : rf.call(null,G__301170));
});
var G__301177__2 = (function (result,input){
var pval = (function (){var G__301171 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301171) : cljs.core.deref.call(null,G__301171));
})();
var val = (function (){var G__301172 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301172) : f.call(null,G__301172));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__301173 = result;
var G__301174 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301173,G__301174) : rf.call(null,G__301173,G__301174));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__301177 = function(result,input){
switch(arguments.length){
case 0:
return G__301177__0.call(this);
case 1:
return G__301177__1.call(this,result);
case 2:
return G__301177__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301177.cljs$core$IFn$_invoke$arity$0 = G__301177__0;
G__301177.cljs$core$IFn$_invoke$arity$1 = G__301177__1;
G__301177.cljs$core$IFn$_invoke$arity$2 = G__301177__2;
return G__301177;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__301175 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301175) : f.call(null,G__301175));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__301156_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__301176 = p1__301156_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301176) : f.call(null,G__301176));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__301186 = init;
var G__301187 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__301186,G__301187) : f.call(null,G__301186,G__301187));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__301282 = null;
var G__301282__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__301282__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301240 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301240) : f.call(null,G__301240));
})()],null));
});
var G__301282__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301241 = x;
var G__301242 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__301241,G__301242) : f.call(null,G__301241,G__301242));
})()],null));
});
var G__301282__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301243 = x;
var G__301244 = y;
var G__301245 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__301243,G__301244,G__301245) : f.call(null,G__301243,G__301244,G__301245));
})()],null));
});
var G__301282__4 = (function() { 
var G__301283__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__301283 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__301284__i = 0, G__301284__a = new Array(arguments.length -  3);
while (G__301284__i < G__301284__a.length) {G__301284__a[G__301284__i] = arguments[G__301284__i + 3]; ++G__301284__i;}
  args = new cljs.core.IndexedSeq(G__301284__a,0);
} 
return G__301283__delegate.call(this,x,y,z,args);};
G__301283.cljs$lang$maxFixedArity = 3;
G__301283.cljs$lang$applyTo = (function (arglist__301285){
var x = cljs.core.first(arglist__301285);
arglist__301285 = cljs.core.next(arglist__301285);
var y = cljs.core.first(arglist__301285);
arglist__301285 = cljs.core.next(arglist__301285);
var z = cljs.core.first(arglist__301285);
var args = cljs.core.rest(arglist__301285);
return G__301283__delegate(x,y,z,args);
});
G__301283.cljs$core$IFn$_invoke$arity$variadic = G__301283__delegate;
return G__301283;
})()
;
G__301282 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__301282__0.call(this);
case 1:
return G__301282__1.call(this,x);
case 2:
return G__301282__2.call(this,x,y);
case 3:
return G__301282__3.call(this,x,y,z);
default:
var G__301286 = null;
if (arguments.length > 3) {
var G__301287__i = 0, G__301287__a = new Array(arguments.length -  3);
while (G__301287__i < G__301287__a.length) {G__301287__a[G__301287__i] = arguments[G__301287__i + 3]; ++G__301287__i;}
G__301286 = new cljs.core.IndexedSeq(G__301287__a,0);
}
return G__301282__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__301286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301282.cljs$lang$maxFixedArity = 3;
G__301282.cljs$lang$applyTo = G__301282__4.cljs$lang$applyTo;
G__301282.cljs$core$IFn$_invoke$arity$0 = G__301282__0;
G__301282.cljs$core$IFn$_invoke$arity$1 = G__301282__1;
G__301282.cljs$core$IFn$_invoke$arity$2 = G__301282__2;
G__301282.cljs$core$IFn$_invoke$arity$3 = G__301282__3;
G__301282.cljs$core$IFn$_invoke$arity$variadic = G__301282__4.cljs$core$IFn$_invoke$arity$variadic;
return G__301282;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__301288 = null;
var G__301288__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__301288__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301246 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301246) : f.call(null,G__301246));
})(),(function (){var G__301247 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__301247) : g.call(null,G__301247));
})()],null));
});
var G__301288__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301248 = x;
var G__301249 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__301248,G__301249) : f.call(null,G__301248,G__301249));
})(),(function (){var G__301250 = x;
var G__301251 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__301250,G__301251) : g.call(null,G__301250,G__301251));
})()],null));
});
var G__301288__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301252 = x;
var G__301253 = y;
var G__301254 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__301252,G__301253,G__301254) : f.call(null,G__301252,G__301253,G__301254));
})(),(function (){var G__301255 = x;
var G__301256 = y;
var G__301257 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__301255,G__301256,G__301257) : g.call(null,G__301255,G__301256,G__301257));
})()],null));
});
var G__301288__4 = (function() { 
var G__301289__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__301289 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__301290__i = 0, G__301290__a = new Array(arguments.length -  3);
while (G__301290__i < G__301290__a.length) {G__301290__a[G__301290__i] = arguments[G__301290__i + 3]; ++G__301290__i;}
  args = new cljs.core.IndexedSeq(G__301290__a,0);
} 
return G__301289__delegate.call(this,x,y,z,args);};
G__301289.cljs$lang$maxFixedArity = 3;
G__301289.cljs$lang$applyTo = (function (arglist__301291){
var x = cljs.core.first(arglist__301291);
arglist__301291 = cljs.core.next(arglist__301291);
var y = cljs.core.first(arglist__301291);
arglist__301291 = cljs.core.next(arglist__301291);
var z = cljs.core.first(arglist__301291);
var args = cljs.core.rest(arglist__301291);
return G__301289__delegate(x,y,z,args);
});
G__301289.cljs$core$IFn$_invoke$arity$variadic = G__301289__delegate;
return G__301289;
})()
;
G__301288 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__301288__0.call(this);
case 1:
return G__301288__1.call(this,x);
case 2:
return G__301288__2.call(this,x,y);
case 3:
return G__301288__3.call(this,x,y,z);
default:
var G__301292 = null;
if (arguments.length > 3) {
var G__301293__i = 0, G__301293__a = new Array(arguments.length -  3);
while (G__301293__i < G__301293__a.length) {G__301293__a[G__301293__i] = arguments[G__301293__i + 3]; ++G__301293__i;}
G__301292 = new cljs.core.IndexedSeq(G__301293__a,0);
}
return G__301288__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__301292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301288.cljs$lang$maxFixedArity = 3;
G__301288.cljs$lang$applyTo = G__301288__4.cljs$lang$applyTo;
G__301288.cljs$core$IFn$_invoke$arity$0 = G__301288__0;
G__301288.cljs$core$IFn$_invoke$arity$1 = G__301288__1;
G__301288.cljs$core$IFn$_invoke$arity$2 = G__301288__2;
G__301288.cljs$core$IFn$_invoke$arity$3 = G__301288__3;
G__301288.cljs$core$IFn$_invoke$arity$variadic = G__301288__4.cljs$core$IFn$_invoke$arity$variadic;
return G__301288;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__301294 = null;
var G__301294__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__301294__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301258 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301258) : f.call(null,G__301258));
})(),(function (){var G__301259 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__301259) : g.call(null,G__301259));
})(),(function (){var G__301260 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__301260) : h.call(null,G__301260));
})()],null));
});
var G__301294__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301261 = x;
var G__301262 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__301261,G__301262) : f.call(null,G__301261,G__301262));
})(),(function (){var G__301263 = x;
var G__301264 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__301263,G__301264) : g.call(null,G__301263,G__301264));
})(),(function (){var G__301265 = x;
var G__301266 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__301265,G__301266) : h.call(null,G__301265,G__301266));
})()],null));
});
var G__301294__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__301267 = x;
var G__301268 = y;
var G__301269 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__301267,G__301268,G__301269) : f.call(null,G__301267,G__301268,G__301269));
})(),(function (){var G__301270 = x;
var G__301271 = y;
var G__301272 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__301270,G__301271,G__301272) : g.call(null,G__301270,G__301271,G__301272));
})(),(function (){var G__301273 = x;
var G__301274 = y;
var G__301275 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__301273,G__301274,G__301275) : h.call(null,G__301273,G__301274,G__301275));
})()],null));
});
var G__301294__4 = (function() { 
var G__301295__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__301295 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__301296__i = 0, G__301296__a = new Array(arguments.length -  3);
while (G__301296__i < G__301296__a.length) {G__301296__a[G__301296__i] = arguments[G__301296__i + 3]; ++G__301296__i;}
  args = new cljs.core.IndexedSeq(G__301296__a,0);
} 
return G__301295__delegate.call(this,x,y,z,args);};
G__301295.cljs$lang$maxFixedArity = 3;
G__301295.cljs$lang$applyTo = (function (arglist__301297){
var x = cljs.core.first(arglist__301297);
arglist__301297 = cljs.core.next(arglist__301297);
var y = cljs.core.first(arglist__301297);
arglist__301297 = cljs.core.next(arglist__301297);
var z = cljs.core.first(arglist__301297);
var args = cljs.core.rest(arglist__301297);
return G__301295__delegate(x,y,z,args);
});
G__301295.cljs$core$IFn$_invoke$arity$variadic = G__301295__delegate;
return G__301295;
})()
;
G__301294 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__301294__0.call(this);
case 1:
return G__301294__1.call(this,x);
case 2:
return G__301294__2.call(this,x,y);
case 3:
return G__301294__3.call(this,x,y,z);
default:
var G__301298 = null;
if (arguments.length > 3) {
var G__301299__i = 0, G__301299__a = new Array(arguments.length -  3);
while (G__301299__i < G__301299__a.length) {G__301299__a[G__301299__i] = arguments[G__301299__i + 3]; ++G__301299__i;}
G__301298 = new cljs.core.IndexedSeq(G__301299__a,0);
}
return G__301294__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__301298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301294.cljs$lang$maxFixedArity = 3;
G__301294.cljs$lang$applyTo = G__301294__4.cljs$lang$applyTo;
G__301294.cljs$core$IFn$_invoke$arity$0 = G__301294__0;
G__301294.cljs$core$IFn$_invoke$arity$1 = G__301294__1;
G__301294.cljs$core$IFn$_invoke$arity$2 = G__301294__2;
G__301294.cljs$core$IFn$_invoke$arity$3 = G__301294__3;
G__301294.cljs$core$IFn$_invoke$arity$variadic = G__301294__4.cljs$core$IFn$_invoke$arity$variadic;
return G__301294;
})()
});
var juxt__4 = (function() { 
var G__301300__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__301301 = null;
var G__301301__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__301188_SHARP_,p2__301189_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__301188_SHARP_,(function (){return (p2__301189_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__301189_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__301189_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__301301__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__301190_SHARP_,p2__301191_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__301190_SHARP_,(function (){var G__301276 = x;
return (p2__301191_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__301191_SHARP_.cljs$core$IFn$_invoke$arity$1(G__301276) : p2__301191_SHARP_.call(null,G__301276));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__301301__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__301192_SHARP_,p2__301193_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__301192_SHARP_,(function (){var G__301277 = x;
var G__301278 = y;
return (p2__301193_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__301193_SHARP_.cljs$core$IFn$_invoke$arity$2(G__301277,G__301278) : p2__301193_SHARP_.call(null,G__301277,G__301278));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__301301__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__301194_SHARP_,p2__301195_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__301194_SHARP_,(function (){var G__301279 = x;
var G__301280 = y;
var G__301281 = z;
return (p2__301195_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__301195_SHARP_.cljs$core$IFn$_invoke$arity$3(G__301279,G__301280,G__301281) : p2__301195_SHARP_.call(null,G__301279,G__301280,G__301281));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__301301__4 = (function() { 
var G__301302__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__301196_SHARP_,p2__301197_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__301196_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__301197_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__301302 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__301303__i = 0, G__301303__a = new Array(arguments.length -  3);
while (G__301303__i < G__301303__a.length) {G__301303__a[G__301303__i] = arguments[G__301303__i + 3]; ++G__301303__i;}
  args = new cljs.core.IndexedSeq(G__301303__a,0);
} 
return G__301302__delegate.call(this,x,y,z,args);};
G__301302.cljs$lang$maxFixedArity = 3;
G__301302.cljs$lang$applyTo = (function (arglist__301304){
var x = cljs.core.first(arglist__301304);
arglist__301304 = cljs.core.next(arglist__301304);
var y = cljs.core.first(arglist__301304);
arglist__301304 = cljs.core.next(arglist__301304);
var z = cljs.core.first(arglist__301304);
var args = cljs.core.rest(arglist__301304);
return G__301302__delegate(x,y,z,args);
});
G__301302.cljs$core$IFn$_invoke$arity$variadic = G__301302__delegate;
return G__301302;
})()
;
G__301301 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__301301__0.call(this);
case 1:
return G__301301__1.call(this,x);
case 2:
return G__301301__2.call(this,x,y);
case 3:
return G__301301__3.call(this,x,y,z);
default:
var G__301305 = null;
if (arguments.length > 3) {
var G__301306__i = 0, G__301306__a = new Array(arguments.length -  3);
while (G__301306__i < G__301306__a.length) {G__301306__a[G__301306__i] = arguments[G__301306__i + 3]; ++G__301306__i;}
G__301305 = new cljs.core.IndexedSeq(G__301306__a,0);
}
return G__301301__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__301305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301301.cljs$lang$maxFixedArity = 3;
G__301301.cljs$lang$applyTo = G__301301__4.cljs$lang$applyTo;
G__301301.cljs$core$IFn$_invoke$arity$0 = G__301301__0;
G__301301.cljs$core$IFn$_invoke$arity$1 = G__301301__1;
G__301301.cljs$core$IFn$_invoke$arity$2 = G__301301__2;
G__301301.cljs$core$IFn$_invoke$arity$3 = G__301301__3;
G__301301.cljs$core$IFn$_invoke$arity$variadic = G__301301__4.cljs$core$IFn$_invoke$arity$variadic;
return G__301301;
})()
;})(fs__$1))
};
var G__301300 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__301307__i = 0, G__301307__a = new Array(arguments.length -  3);
while (G__301307__i < G__301307__a.length) {G__301307__a[G__301307__i] = arguments[G__301307__i + 3]; ++G__301307__i;}
  fs = new cljs.core.IndexedSeq(G__301307__a,0);
} 
return G__301300__delegate.call(this,f,g,h,fs);};
G__301300.cljs$lang$maxFixedArity = 3;
G__301300.cljs$lang$applyTo = (function (arglist__301308){
var f = cljs.core.first(arglist__301308);
arglist__301308 = cljs.core.next(arglist__301308);
var g = cljs.core.first(arglist__301308);
arglist__301308 = cljs.core.next(arglist__301308);
var h = cljs.core.first(arglist__301308);
var fs = cljs.core.rest(arglist__301308);
return G__301300__delegate(f,g,h,fs);
});
G__301300.cljs$core$IFn$_invoke$arity$variadic = G__301300__delegate;
return G__301300;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__301309 = null;
if (arguments.length > 3) {
var G__301310__i = 0, G__301310__a = new Array(arguments.length -  3);
while (G__301310__i < G__301310__a.length) {G__301310__a[G__301310__i] = arguments[G__301310__i + 3]; ++G__301310__i;}
G__301309 = new cljs.core.IndexedSeq(G__301310__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__301309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__301311 = cljs.core.next(coll);
coll = G__301311;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__301312 = (n - (1));
var G__301313 = cljs.core.next(coll);
n = G__301312;
coll = G__301313;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__301317 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301317,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301317,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301317,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_301325 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__301326_301332 = cljs.core.first(coll);
var G__301327_301333 = writer;
var G__301328_301334 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__301326_301332,G__301327_301333,G__301328_301334) : print_one.call(null,G__301326_301332,G__301327_301333,G__301328_301334));
} else {
}

var coll_301335__$1 = cljs.core.next(coll);
var n_301336 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_301335__$1) && (((n_301336 == null)) || (!((n_301336 === (0)))))){
cljs.core._write(writer,sep);

var G__301329_301337 = cljs.core.first(coll_301335__$1);
var G__301330_301338 = writer;
var G__301331_301339 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__301329_301337,G__301330_301338,G__301331_301339) : print_one.call(null,G__301329_301337,G__301330_301338,G__301331_301339));

var G__301340 = cljs.core.next(coll_301335__$1);
var G__301341 = (n_301336 - (1));
coll_301335__$1 = G__301340;
n_301336 = G__301341;
continue;
} else {
if((cljs.core.seq(coll_301335__$1)) && ((n_301336 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_301325;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__301346 = cljs.core.seq(ss);
var chunk__301347 = null;
var count__301348 = (0);
var i__301349 = (0);
while(true){
if((i__301349 < count__301348)){
var s = chunk__301347.cljs$core$IIndexed$_nth$arity$2(null,i__301349);
cljs.core._write(writer,s);

var G__301350 = seq__301346;
var G__301351 = chunk__301347;
var G__301352 = count__301348;
var G__301353 = (i__301349 + (1));
seq__301346 = G__301350;
chunk__301347 = G__301351;
count__301348 = G__301352;
i__301349 = G__301353;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__301346);
if(temp__4126__auto__){
var seq__301346__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__301346__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__301346__$1);
var G__301354 = cljs.core.chunk_rest(seq__301346__$1);
var G__301355 = c__4768__auto__;
var G__301356 = cljs.core.count(c__4768__auto__);
var G__301357 = (0);
seq__301346 = G__301354;
chunk__301347 = G__301355;
count__301348 = G__301356;
i__301349 = G__301357;
continue;
} else {
var s = cljs.core.first(seq__301346__$1);
cljs.core._write(writer,s);

var G__301358 = cljs.core.next(seq__301346__$1);
var G__301359 = null;
var G__301360 = (0);
var G__301361 = (0);
seq__301346 = G__301358;
chunk__301347 = G__301359;
count__301348 = G__301360;
i__301349 = G__301361;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__301362__i = 0, G__301362__a = new Array(arguments.length -  1);
while (G__301362__i < G__301362__a.length) {G__301362__a[G__301362__i] = arguments[G__301362__i + 1]; ++G__301362__i;}
  ss = new cljs.core.IndexedSeq(G__301362__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__301363){
var writer = cljs.core.first(arglist__301363);
var ss = cljs.core.rest(arglist__301363);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj301365 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj301365;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__301368 = "[\\\\\"\b\f\n\r\t]";
var G__301369 = "g";
return RegExp(G__301368,G__301369);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__301383 = obj;
if(G__301383){
var bit__4662__auto__ = (G__301383.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__301383.cljs$core$IMeta$)){
return true;
} else {
if((!G__301383.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__301383);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__301383);
}
})();
if(and__3969__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__301384_301394 = cljs.core.meta(obj);
var G__301385_301395 = writer;
var G__301386_301396 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__301384_301394,G__301385_301395,G__301386_301396) : cljs.core.pr_writer.call(null,G__301384_301394,G__301385_301395,G__301386_301396));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__301387 = obj;
if(G__301387){
var bit__4655__auto__ = (G__301387.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4655__auto__) || (G__301387.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__301388 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__301389 = cljs.core.pr_writer;
var G__301390 = writer;
var G__301391 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__301388,G__301389,G__301390,G__301391) : cljs.core.print_map.call(null,G__301388,G__301389,G__301390,G__301391));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__301392 = obj;
return goog.isString(G__301392);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__301397 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__301397;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__301393 = obj;
if(G__301393){
var bit__4662__auto__ = (G__301393.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4662__auto__) || (G__301393.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__301393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__301393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__301393);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__301401 = obj;
var G__301402 = writer;
var G__301403 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__301401,G__301402,G__301403) : alt_impl.call(null,G__301401,G__301402,G__301403));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__301408 = cljs.core.seq(cljs.core.next(objs));
var chunk__301409 = null;
var count__301410 = (0);
var i__301411 = (0);
while(true){
if((i__301411 < count__301410)){
var obj = chunk__301409.cljs$core$IIndexed$_nth$arity$2(null,i__301411);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__301412 = seq__301408;
var G__301413 = chunk__301409;
var G__301414 = count__301410;
var G__301415 = (i__301411 + (1));
seq__301408 = G__301412;
chunk__301409 = G__301413;
count__301410 = G__301414;
i__301411 = G__301415;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__301408);
if(temp__4126__auto__){
var seq__301408__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__301408__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__301408__$1);
var G__301416 = cljs.core.chunk_rest(seq__301408__$1);
var G__301417 = c__4768__auto__;
var G__301418 = cljs.core.count(c__4768__auto__);
var G__301419 = (0);
seq__301408 = G__301416;
chunk__301409 = G__301417;
count__301410 = G__301418;
i__301411 = G__301419;
continue;
} else {
var obj = cljs.core.first(seq__301408__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__301420 = cljs.core.next(seq__301408__$1);
var G__301421 = null;
var G__301422 = (0);
var G__301423 = (0);
seq__301408 = G__301420;
chunk__301409 = G__301421;
count__301410 = G__301422;
i__301411 = G__301423;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301424__i = 0, G__301424__a = new Array(arguments.length -  0);
while (G__301424__i < G__301424__a.length) {G__301424__a[G__301424__i] = arguments[G__301424__i + 0]; ++G__301424__i;}
  objs = new cljs.core.IndexedSeq(G__301424__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__301425){
var objs = cljs.core.seq(arglist__301425);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301426__i = 0, G__301426__a = new Array(arguments.length -  0);
while (G__301426__i < G__301426__a.length) {G__301426__a[G__301426__i] = arguments[G__301426__i + 0]; ++G__301426__i;}
  objs = new cljs.core.IndexedSeq(G__301426__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__301427){
var objs = cljs.core.seq(arglist__301427);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301428__i = 0, G__301428__a = new Array(arguments.length -  0);
while (G__301428__i < G__301428__a.length) {G__301428__a[G__301428__i] = arguments[G__301428__i + 0]; ++G__301428__i;}
  objs = new cljs.core.IndexedSeq(G__301428__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__301429){
var objs = cljs.core.seq(arglist__301429);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301430__i = 0, G__301430__a = new Array(arguments.length -  0);
while (G__301430__i < G__301430__a.length) {G__301430__a[G__301430__i] = arguments[G__301430__i + 0]; ++G__301430__i;}
  objs = new cljs.core.IndexedSeq(G__301430__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__301431){
var objs = cljs.core.seq(arglist__301431);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301432__i = 0, G__301432__a = new Array(arguments.length -  0);
while (G__301432__i < G__301432__a.length) {G__301432__a[G__301432__i] = arguments[G__301432__i + 0]; ++G__301432__i;}
  objs = new cljs.core.IndexedSeq(G__301432__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__301433){
var objs = cljs.core.seq(arglist__301433);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301434__i = 0, G__301434__a = new Array(arguments.length -  0);
while (G__301434__i < G__301434__a.length) {G__301434__a[G__301434__i] = arguments[G__301434__i + 0]; ++G__301434__i;}
  objs = new cljs.core.IndexedSeq(G__301434__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__301435){
var objs = cljs.core.seq(arglist__301435);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301436__i = 0, G__301436__a = new Array(arguments.length -  0);
while (G__301436__i < G__301436__a.length) {G__301436__a[G__301436__i] = arguments[G__301436__i + 0]; ++G__301436__i;}
  objs = new cljs.core.IndexedSeq(G__301436__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__301437){
var objs = cljs.core.seq(arglist__301437);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__301438__i = 0, G__301438__a = new Array(arguments.length -  0);
while (G__301438__i < G__301438__a.length) {G__301438__a[G__301438__i] = arguments[G__301438__i + 0]; ++G__301438__i;}
  objs = new cljs.core.IndexedSeq(G__301438__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__301439){
var objs = cljs.core.seq(arglist__301439);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__301446_301452 = cljs.core.key(e);
var G__301447_301453 = w;
var G__301448_301454 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__301446_301452,G__301447_301453,G__301448_301454) : print_one.call(null,G__301446_301452,G__301447_301453,G__301448_301454));

cljs.core._write(w," ");

var G__301449 = cljs.core.val(e);
var G__301450 = w;
var G__301451 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__301449,G__301450,G__301451) : print_one.call(null,G__301449,G__301450,G__301451));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__301455__i = 0, G__301455__a = new Array(arguments.length -  2);
while (G__301455__i < G__301455__a.length) {G__301455__a[G__301455__i] = arguments[G__301455__i + 2]; ++G__301455__i;}
  args = new cljs.core.IndexedSeq(G__301455__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__301456){
var iref = cljs.core.first(arglist__301456);
arglist__301456 = cljs.core.next(arglist__301456);
var f = cljs.core.first(arglist__301456);
var args = cljs.core.rest(arglist__301456);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__301459 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__301459) : cljs.core.atom.call(null,G__301459));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__301461 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301461) : cljs.core.deref.call(null,G__301461));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__301462_SHARP_,p2__301463_SHARP_){
var ret = (function (){var G__301466 = p1__301462_SHARP_;
var G__301467 = p2__301463_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301466,G__301467) : rf.call(null,G__301466,G__301467));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__301470 = null;
var G__301470__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301470__1 = (function (result){
var G__301469 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301469) : rf.call(null,G__301469));
});
var G__301470__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__301470 = function(result,input){
switch(arguments.length){
case 0:
return G__301470__0.call(this);
case 1:
return G__301470__1.call(this,result);
case 2:
return G__301470__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301470.cljs$core$IFn$_invoke$arity$0 = G__301470__0;
G__301470.cljs$core$IFn$_invoke$arity$1 = G__301470__1;
G__301470.cljs$core$IFn$_invoke$arity$2 = G__301470__2;
return G__301470;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__301479 = null;
var G__301479__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__301479__1 = (function (result){
var G__301475 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__301475) : rf.call(null,G__301475));
});
var G__301479__2 = (function (result,input){
var prior = (function (){var G__301476 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301476) : cljs.core.deref.call(null,G__301476));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__301477 = result;
var G__301478 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__301477,G__301478) : rf.call(null,G__301477,G__301478));
}
});
G__301479 = function(result,input){
switch(arguments.length){
case 0:
return G__301479__0.call(this);
case 1:
return G__301479__1.call(this,result);
case 2:
return G__301479__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__301479.cljs$core$IFn$_invoke$arity$0 = G__301479__0;
G__301479.cljs$core$IFn$_invoke$arity$1 = G__301479__1;
G__301479.cljs$core$IFn$_invoke$arity$2 = G__301479__2;
return G__301479;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__301481_SHARP_,p2__301480_SHARP_){
var G__301483 = p2__301480_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__301483) : proc.call(null,G__301483));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj301485 = {};
return obj301485;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._clj__GT_js[(function (){var G__301489 = x__4625__auto__;
return goog.typeOf(G__301489);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._key__GT_js[(function (){var G__301493 = x__4625__auto__;
return goog.typeOf(G__301493);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__301496 = k;
if(G__301496){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__301496.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__301496.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__301496);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__301496);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__301497 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__301497) : cljs.core.clj__GT_js.call(null,G__301497));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__301513 = x;
if(G__301513){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__301513.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__301513.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__301513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__301513);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj301515 = {};
return obj301515;
})();
var seq__301516_301526 = cljs.core.seq(x);
var chunk__301517_301527 = null;
var count__301518_301528 = (0);
var i__301519_301529 = (0);
while(true){
if((i__301519_301529 < count__301518_301528)){
var vec__301520_301530 = chunk__301517_301527.cljs$core$IIndexed$_nth$arity$2(null,i__301519_301529);
var k_301531 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301520_301530,(0),null);
var v_301532 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301520_301530,(1),null);
(m[cljs.core.key__GT_js(k_301531)] = clj__GT_js(v_301532));

var G__301533 = seq__301516_301526;
var G__301534 = chunk__301517_301527;
var G__301535 = count__301518_301528;
var G__301536 = (i__301519_301529 + (1));
seq__301516_301526 = G__301533;
chunk__301517_301527 = G__301534;
count__301518_301528 = G__301535;
i__301519_301529 = G__301536;
continue;
} else {
var temp__4126__auto___301537 = cljs.core.seq(seq__301516_301526);
if(temp__4126__auto___301537){
var seq__301516_301538__$1 = temp__4126__auto___301537;
if(cljs.core.chunked_seq_QMARK_(seq__301516_301538__$1)){
var c__4768__auto___301539 = cljs.core.chunk_first(seq__301516_301538__$1);
var G__301540 = cljs.core.chunk_rest(seq__301516_301538__$1);
var G__301541 = c__4768__auto___301539;
var G__301542 = cljs.core.count(c__4768__auto___301539);
var G__301543 = (0);
seq__301516_301526 = G__301540;
chunk__301517_301527 = G__301541;
count__301518_301528 = G__301542;
i__301519_301529 = G__301543;
continue;
} else {
var vec__301521_301544 = cljs.core.first(seq__301516_301538__$1);
var k_301545 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301521_301544,(0),null);
var v_301546 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301521_301544,(1),null);
(m[cljs.core.key__GT_js(k_301545)] = clj__GT_js(v_301546));

var G__301547 = cljs.core.next(seq__301516_301538__$1);
var G__301548 = null;
var G__301549 = (0);
var G__301550 = (0);
seq__301516_301526 = G__301547;
chunk__301517_301527 = G__301548;
count__301518_301528 = G__301549;
i__301519_301529 = G__301550;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__301522_301551 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__301523_301552 = null;
var count__301524_301553 = (0);
var i__301525_301554 = (0);
while(true){
if((i__301525_301554 < count__301524_301553)){
var x_301555__$1 = chunk__301523_301552.cljs$core$IIndexed$_nth$arity$2(null,i__301525_301554);
arr.push(x_301555__$1);

var G__301556 = seq__301522_301551;
var G__301557 = chunk__301523_301552;
var G__301558 = count__301524_301553;
var G__301559 = (i__301525_301554 + (1));
seq__301522_301551 = G__301556;
chunk__301523_301552 = G__301557;
count__301524_301553 = G__301558;
i__301525_301554 = G__301559;
continue;
} else {
var temp__4126__auto___301560 = cljs.core.seq(seq__301522_301551);
if(temp__4126__auto___301560){
var seq__301522_301561__$1 = temp__4126__auto___301560;
if(cljs.core.chunked_seq_QMARK_(seq__301522_301561__$1)){
var c__4768__auto___301562 = cljs.core.chunk_first(seq__301522_301561__$1);
var G__301563 = cljs.core.chunk_rest(seq__301522_301561__$1);
var G__301564 = c__4768__auto___301562;
var G__301565 = cljs.core.count(c__4768__auto___301562);
var G__301566 = (0);
seq__301522_301551 = G__301563;
chunk__301523_301552 = G__301564;
count__301524_301553 = G__301565;
i__301525_301554 = G__301566;
continue;
} else {
var x_301567__$1 = cljs.core.first(seq__301522_301561__$1);
arr.push(x_301567__$1);

var G__301568 = cljs.core.next(seq__301522_301561__$1);
var G__301569 = null;
var G__301570 = (0);
var G__301571 = (0);
seq__301522_301551 = G__301568;
chunk__301523_301552 = G__301569;
count__301524_301553 = G__301570;
i__301525_301554 = G__301571;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj301573 = {};
return obj301573;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._js__GT_clj[(function (){var G__301577 = x__4625__auto__;
return goog.typeOf(G__301577);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__301634__delegate = function (x,opts){
var map__301607 = opts;
var map__301607__$1 = ((cljs.core.seq_QMARK_(map__301607))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__301607):map__301607);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__301607__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__301607,map__301607__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__301623 = x__$1;
if(G__301623){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__301623.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__301623.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__301623);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__301623);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4737__auto__ = ((function (map__301607,map__301607__$1,keywordize_keys,keyfn){
return (function iter__301624(s__301625){
return (new cljs.core.LazySeq(null,((function (map__301607,map__301607__$1,keywordize_keys,keyfn){
return (function (){
var s__301625__$1 = s__301625;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__301625__$1);
if(temp__4126__auto__){
var s__301625__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__301625__$2)){
var c__4735__auto__ = cljs.core.chunk_first(s__301625__$2);
var size__4736__auto__ = cljs.core.count(c__4735__auto__);
var b__301627 = cljs.core.chunk_buffer(size__4736__auto__);
if((function (){var i__301626 = (0);
while(true){
if((i__301626 < size__4736__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4735__auto__,i__301626);
cljs.core.chunk_append(b__301627,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__301632 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__301632) : keyfn.call(null,G__301632));
})(),thisfn((x__$1[k]))], null));

var G__301635 = (i__301626 + (1));
i__301626 = G__301635;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__301627),iter__301624(cljs.core.chunk_rest(s__301625__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__301627),null);
}
} else {
var k = cljs.core.first(s__301625__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__301633 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__301633) : keyfn.call(null,G__301633));
})(),thisfn((x__$1[k]))], null),iter__301624(cljs.core.rest(s__301625__$2)));
}
} else {
return null;
}
break;
}
});})(map__301607,map__301607__$1,keywordize_keys,keyfn))
,null,null));
});})(map__301607,map__301607__$1,keywordize_keys,keyfn))
;
return iter__4737__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__301607,map__301607__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__301634 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__301636__i = 0, G__301636__a = new Array(arguments.length -  1);
while (G__301636__i < G__301636__a.length) {G__301636__a[G__301636__i] = arguments[G__301636__i + 1]; ++G__301636__i;}
  opts = new cljs.core.IndexedSeq(G__301636__a,0);
} 
return G__301634__delegate.call(this,x,opts);};
G__301634.cljs$lang$maxFixedArity = 1;
G__301634.cljs$lang$applyTo = (function (arglist__301637){
var x = cljs.core.first(arglist__301637);
var opts = cljs.core.rest(arglist__301637);
return G__301634__delegate(x,opts);
});
G__301634.cljs$core$IFn$_invoke$arity$variadic = G__301634__delegate;
return G__301634;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__301638 = null;
if (arguments.length > 1) {
var G__301639__i = 0, G__301639__a = new Array(arguments.length -  1);
while (G__301639__i < G__301639__a.length) {G__301639__a[G__301639__i] = arguments[G__301639__i + 1]; ++G__301639__i;}
G__301638 = new cljs.core.IndexedSeq(G__301639__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__301638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__301642 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__301642) : cljs.core.atom.call(null,G__301642));
})();
return ((function (mem){
return (function() { 
var G__301644__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__301643 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301643) : cljs.core.deref.call(null,G__301643));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__301644 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__301645__i = 0, G__301645__a = new Array(arguments.length -  0);
while (G__301645__i < G__301645__a.length) {G__301645__a[G__301645__i] = arguments[G__301645__i + 0]; ++G__301645__i;}
  args = new cljs.core.IndexedSeq(G__301645__a,0);
} 
return G__301644__delegate.call(this,args);};
G__301644.cljs$lang$maxFixedArity = 0;
G__301644.cljs$lang$applyTo = (function (arglist__301646){
var args = cljs.core.seq(arglist__301646);
return G__301644__delegate(args);
});
G__301644.cljs$core$IFn$_invoke$arity$variadic = G__301644__delegate;
return G__301644;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__301648 = ret;
f = G__301648;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__301649__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__301649 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__301650__i = 0, G__301650__a = new Array(arguments.length -  1);
while (G__301650__i < G__301650__a.length) {G__301650__a[G__301650__i] = arguments[G__301650__i + 1]; ++G__301650__i;}
  args = new cljs.core.IndexedSeq(G__301650__a,0);
} 
return G__301649__delegate.call(this,f,args);};
G__301649.cljs$lang$maxFixedArity = 1;
G__301649.cljs$lang$applyTo = (function (arglist__301651){
var f = cljs.core.first(arglist__301651);
var args = cljs.core.rest(arglist__301651);
return G__301649__delegate(f,args);
});
G__301649.cljs$core$IFn$_invoke$arity$variadic = G__301649__delegate;
return G__301649;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__301652 = null;
if (arguments.length > 1) {
var G__301653__i = 0, G__301653__a = new Array(arguments.length -  1);
while (G__301653__i < G__301653__a.length) {G__301653__a[G__301653__i] = arguments[G__301653__i + 1]; ++G__301653__i;}
G__301652 = new cljs.core.IndexedSeq(G__301653__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__301652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__301656 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__301656) : Math.floor.call(null,G__301656));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__301658 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__301658) : f.call(null,G__301658));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__301660 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__301660) : cljs.core.atom.call(null,G__301660));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__301661__i = 0, G__301661__a = new Array(arguments.length -  1);
while (G__301661__i < G__301661__a.length) {G__301661__a[G__301661__i] = arguments[G__301661__i + 1]; ++G__301661__i;}
  args = new cljs.core.IndexedSeq(G__301661__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__301662){
var f = cljs.core.first(arglist__301662);
var args = cljs.core.rest(arglist__301662);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__301727 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301727) : cljs.core.deref.call(null,G__301727));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3981__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
var and__3969__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3969__auto__){
var and__3969__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3969__auto____$1){
var and__3969__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3969__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__301752 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__301750 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__301750) : child.call(null,G__301750));
})(),(function (){var G__301751 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__301751) : parent.call(null,G__301751));
})());
var G__301753 = (i + (1));
ret = G__301752;
i = G__301753;
continue;
}
break;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__301757 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301757) : cljs.core.deref.call(null,G__301757));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__301761 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301761) : cljs.core.deref.call(null,G__301761));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__301765 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301765) : cljs.core.deref.call(null,G__301765));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__301774 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__301774) : targets.call(null,G__301774));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__301775 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__301775) : sources.call(null,G__301775));
})()));
});})(tp,td,ta))
;
var or__3981__auto__ = ((cljs.core.contains_QMARK_((function (){var G__301779 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__301779) : tp.call(null,G__301779));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__301780 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__301780) : ta.call(null,G__301780));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__301781 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__301781) : ta.call(null,G__301781));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__301788 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__301788) : parentMap.call(null,G__301788));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__301789 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__301789) : parentMap.call(null,G__301789));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__301782_SHARP_){
return cljs.core.cons(cljs.core.first(p1__301782_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__301782_SHARP_),cljs.core.second(p1__301782_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__301790 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__301790) : parentMap.call(null,G__301790));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__301783_SHARP_,p2__301784_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__301783_SHARP_,p2__301784_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__301793 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301793) : cljs.core.deref.call(null,G__301793));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__301794 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301794) : cljs.core.deref.call(null,G__301794));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__301810 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301810) : cljs.core.deref.call(null,G__301810));
})().call(null,x);
var or__3981__auto__ = (cljs.core.truth_((function (){var and__3969__auto__ = xprefs;
if(cljs.core.truth_(and__3969__auto__)){
var G__301812 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__301812) : xprefs.call(null,G__301812));
} else {
return and__3969__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__301813 = cljs.core.rest(ps);
ps = G__301813;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__301814 = cljs.core.rest(ps);
ps = G__301814;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3981__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__301828){
var vec__301829 = p__301828;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301829,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__301829,(1),null);
var e = vec__301829;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__301830 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301830) : cljs.core.deref.call(null,G__301830));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3981__auto__ = (be == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__301831 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301831) : cljs.core.deref.call(null,G__301831));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__301832 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301832) : cljs.core.deref.call(null,G__301832));
})(),(function (){var G__301833 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301833) : cljs.core.deref.call(null,G__301833));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj301835 = {};
return obj301835;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._reset[(function (){var G__301839 = x__4625__auto__;
return goog.typeOf(G__301839);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._add_method[(function (){var G__301843 = x__4625__auto__;
return goog.typeOf(G__301843);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._remove_method[(function (){var G__301847 = x__4625__auto__;
return goog.typeOf(G__301847);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefer_method[(function (){var G__301851 = x__4625__auto__;
return goog.typeOf(G__301851);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._get_method[(function (){var G__301855 = x__4625__auto__;
return goog.typeOf(G__301855);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._get_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._methods[(function (){var G__301859 = x__4625__auto__;
return goog.typeOf(G__301859);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._methods["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefers[(function (){var G__301863 = x__4625__auto__;
return goog.typeOf(G__301863);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefers["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__301865 = this$__$1;
return goog.getUid(G__301865);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__301866 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301866) : cljs.core.deref.call(null,G__301866));
})(),(function (){var G__301867 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301867) : cljs.core.deref.call(null,G__301867));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__301868 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301868) : cljs.core.deref.call(null,G__301868));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__301869 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301869) : cljs.core.deref.call(null,G__301869));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__301870 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301870) : cljs.core.deref.call(null,G__301870));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__301871 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__301871) : cljs.core.deref.call(null,G__301871));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__302712 = null;
var G__302712__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__302712__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301872 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__301872) : self__.dispatch_fn.call(null,G__301872));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301873 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__301873) : target_fn.call(null,G__301873));
});
var G__302712__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301874 = a;
var G__301875 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__301874,G__301875) : self__.dispatch_fn.call(null,G__301874,G__301875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301876 = a;
var G__301877 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__301876,G__301877) : target_fn.call(null,G__301876,G__301877));
});
var G__302712__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301878 = a;
var G__301879 = b;
var G__301880 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__301878,G__301879,G__301880) : self__.dispatch_fn.call(null,G__301878,G__301879,G__301880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301881 = a;
var G__301882 = b;
var G__301883 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__301881,G__301882,G__301883) : target_fn.call(null,G__301881,G__301882,G__301883));
});
var G__302712__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301884 = a;
var G__301885 = b;
var G__301886 = c;
var G__301887 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__301884,G__301885,G__301886,G__301887) : self__.dispatch_fn.call(null,G__301884,G__301885,G__301886,G__301887));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301888 = a;
var G__301889 = b;
var G__301890 = c;
var G__301891 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__301888,G__301889,G__301890,G__301891) : target_fn.call(null,G__301888,G__301889,G__301890,G__301891));
});
var G__302712__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301892 = a;
var G__301893 = b;
var G__301894 = c;
var G__301895 = d;
var G__301896 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__301892,G__301893,G__301894,G__301895,G__301896) : self__.dispatch_fn.call(null,G__301892,G__301893,G__301894,G__301895,G__301896));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301897 = a;
var G__301898 = b;
var G__301899 = c;
var G__301900 = d;
var G__301901 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__301897,G__301898,G__301899,G__301900,G__301901) : target_fn.call(null,G__301897,G__301898,G__301899,G__301900,G__301901));
});
var G__302712__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301902 = a;
var G__301903 = b;
var G__301904 = c;
var G__301905 = d;
var G__301906 = e;
var G__301907 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__301902,G__301903,G__301904,G__301905,G__301906,G__301907) : self__.dispatch_fn.call(null,G__301902,G__301903,G__301904,G__301905,G__301906,G__301907));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301908 = a;
var G__301909 = b;
var G__301910 = c;
var G__301911 = d;
var G__301912 = e;
var G__301913 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__301908,G__301909,G__301910,G__301911,G__301912,G__301913) : target_fn.call(null,G__301908,G__301909,G__301910,G__301911,G__301912,G__301913));
});
var G__302712__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301914 = a;
var G__301915 = b;
var G__301916 = c;
var G__301917 = d;
var G__301918 = e;
var G__301919 = f;
var G__301920 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__301914,G__301915,G__301916,G__301917,G__301918,G__301919,G__301920) : self__.dispatch_fn.call(null,G__301914,G__301915,G__301916,G__301917,G__301918,G__301919,G__301920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301921 = a;
var G__301922 = b;
var G__301923 = c;
var G__301924 = d;
var G__301925 = e;
var G__301926 = f;
var G__301927 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__301921,G__301922,G__301923,G__301924,G__301925,G__301926,G__301927) : target_fn.call(null,G__301921,G__301922,G__301923,G__301924,G__301925,G__301926,G__301927));
});
var G__302712__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301928 = a;
var G__301929 = b;
var G__301930 = c;
var G__301931 = d;
var G__301932 = e;
var G__301933 = f;
var G__301934 = g;
var G__301935 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__301928,G__301929,G__301930,G__301931,G__301932,G__301933,G__301934,G__301935) : self__.dispatch_fn.call(null,G__301928,G__301929,G__301930,G__301931,G__301932,G__301933,G__301934,G__301935));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301936 = a;
var G__301937 = b;
var G__301938 = c;
var G__301939 = d;
var G__301940 = e;
var G__301941 = f;
var G__301942 = g;
var G__301943 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__301936,G__301937,G__301938,G__301939,G__301940,G__301941,G__301942,G__301943) : target_fn.call(null,G__301936,G__301937,G__301938,G__301939,G__301940,G__301941,G__301942,G__301943));
});
var G__302712__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301944 = a;
var G__301945 = b;
var G__301946 = c;
var G__301947 = d;
var G__301948 = e;
var G__301949 = f;
var G__301950 = g;
var G__301951 = h;
var G__301952 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__301944,G__301945,G__301946,G__301947,G__301948,G__301949,G__301950,G__301951,G__301952) : self__.dispatch_fn.call(null,G__301944,G__301945,G__301946,G__301947,G__301948,G__301949,G__301950,G__301951,G__301952));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301953 = a;
var G__301954 = b;
var G__301955 = c;
var G__301956 = d;
var G__301957 = e;
var G__301958 = f;
var G__301959 = g;
var G__301960 = h;
var G__301961 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__301953,G__301954,G__301955,G__301956,G__301957,G__301958,G__301959,G__301960,G__301961) : target_fn.call(null,G__301953,G__301954,G__301955,G__301956,G__301957,G__301958,G__301959,G__301960,G__301961));
});
var G__302712__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301962 = a;
var G__301963 = b;
var G__301964 = c;
var G__301965 = d;
var G__301966 = e;
var G__301967 = f;
var G__301968 = g;
var G__301969 = h;
var G__301970 = i;
var G__301971 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__301962,G__301963,G__301964,G__301965,G__301966,G__301967,G__301968,G__301969,G__301970,G__301971) : self__.dispatch_fn.call(null,G__301962,G__301963,G__301964,G__301965,G__301966,G__301967,G__301968,G__301969,G__301970,G__301971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301972 = a;
var G__301973 = b;
var G__301974 = c;
var G__301975 = d;
var G__301976 = e;
var G__301977 = f;
var G__301978 = g;
var G__301979 = h;
var G__301980 = i;
var G__301981 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__301972,G__301973,G__301974,G__301975,G__301976,G__301977,G__301978,G__301979,G__301980,G__301981) : target_fn.call(null,G__301972,G__301973,G__301974,G__301975,G__301976,G__301977,G__301978,G__301979,G__301980,G__301981));
});
var G__302712__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__301982 = a;
var G__301983 = b;
var G__301984 = c;
var G__301985 = d;
var G__301986 = e;
var G__301987 = f;
var G__301988 = g;
var G__301989 = h;
var G__301990 = i;
var G__301991 = j;
var G__301992 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__301982,G__301983,G__301984,G__301985,G__301986,G__301987,G__301988,G__301989,G__301990,G__301991,G__301992) : self__.dispatch_fn.call(null,G__301982,G__301983,G__301984,G__301985,G__301986,G__301987,G__301988,G__301989,G__301990,G__301991,G__301992));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__301993 = a;
var G__301994 = b;
var G__301995 = c;
var G__301996 = d;
var G__301997 = e;
var G__301998 = f;
var G__301999 = g;
var G__302000 = h;
var G__302001 = i;
var G__302002 = j;
var G__302003 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__301993,G__301994,G__301995,G__301996,G__301997,G__301998,G__301999,G__302000,G__302001,G__302002,G__302003) : target_fn.call(null,G__301993,G__301994,G__301995,G__301996,G__301997,G__301998,G__301999,G__302000,G__302001,G__302002,G__302003));
});
var G__302712__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302004 = a;
var G__302005 = b;
var G__302006 = c;
var G__302007 = d;
var G__302008 = e;
var G__302009 = f;
var G__302010 = g;
var G__302011 = h;
var G__302012 = i;
var G__302013 = j;
var G__302014 = k;
var G__302015 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__302004,G__302005,G__302006,G__302007,G__302008,G__302009,G__302010,G__302011,G__302012,G__302013,G__302014,G__302015) : self__.dispatch_fn.call(null,G__302004,G__302005,G__302006,G__302007,G__302008,G__302009,G__302010,G__302011,G__302012,G__302013,G__302014,G__302015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302016 = a;
var G__302017 = b;
var G__302018 = c;
var G__302019 = d;
var G__302020 = e;
var G__302021 = f;
var G__302022 = g;
var G__302023 = h;
var G__302024 = i;
var G__302025 = j;
var G__302026 = k;
var G__302027 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__302016,G__302017,G__302018,G__302019,G__302020,G__302021,G__302022,G__302023,G__302024,G__302025,G__302026,G__302027) : target_fn.call(null,G__302016,G__302017,G__302018,G__302019,G__302020,G__302021,G__302022,G__302023,G__302024,G__302025,G__302026,G__302027));
});
var G__302712__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302028 = a;
var G__302029 = b;
var G__302030 = c;
var G__302031 = d;
var G__302032 = e;
var G__302033 = f;
var G__302034 = g;
var G__302035 = h;
var G__302036 = i;
var G__302037 = j;
var G__302038 = k;
var G__302039 = l;
var G__302040 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__302028,G__302029,G__302030,G__302031,G__302032,G__302033,G__302034,G__302035,G__302036,G__302037,G__302038,G__302039,G__302040) : self__.dispatch_fn.call(null,G__302028,G__302029,G__302030,G__302031,G__302032,G__302033,G__302034,G__302035,G__302036,G__302037,G__302038,G__302039,G__302040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302041 = a;
var G__302042 = b;
var G__302043 = c;
var G__302044 = d;
var G__302045 = e;
var G__302046 = f;
var G__302047 = g;
var G__302048 = h;
var G__302049 = i;
var G__302050 = j;
var G__302051 = k;
var G__302052 = l;
var G__302053 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__302041,G__302042,G__302043,G__302044,G__302045,G__302046,G__302047,G__302048,G__302049,G__302050,G__302051,G__302052,G__302053) : target_fn.call(null,G__302041,G__302042,G__302043,G__302044,G__302045,G__302046,G__302047,G__302048,G__302049,G__302050,G__302051,G__302052,G__302053));
});
var G__302712__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302054 = a;
var G__302055 = b;
var G__302056 = c;
var G__302057 = d;
var G__302058 = e;
var G__302059 = f;
var G__302060 = g;
var G__302061 = h;
var G__302062 = i;
var G__302063 = j;
var G__302064 = k;
var G__302065 = l;
var G__302066 = m;
var G__302067 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__302054,G__302055,G__302056,G__302057,G__302058,G__302059,G__302060,G__302061,G__302062,G__302063,G__302064,G__302065,G__302066,G__302067) : self__.dispatch_fn.call(null,G__302054,G__302055,G__302056,G__302057,G__302058,G__302059,G__302060,G__302061,G__302062,G__302063,G__302064,G__302065,G__302066,G__302067));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302068 = a;
var G__302069 = b;
var G__302070 = c;
var G__302071 = d;
var G__302072 = e;
var G__302073 = f;
var G__302074 = g;
var G__302075 = h;
var G__302076 = i;
var G__302077 = j;
var G__302078 = k;
var G__302079 = l;
var G__302080 = m;
var G__302081 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__302068,G__302069,G__302070,G__302071,G__302072,G__302073,G__302074,G__302075,G__302076,G__302077,G__302078,G__302079,G__302080,G__302081) : target_fn.call(null,G__302068,G__302069,G__302070,G__302071,G__302072,G__302073,G__302074,G__302075,G__302076,G__302077,G__302078,G__302079,G__302080,G__302081));
});
var G__302712__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302082 = a;
var G__302083 = b;
var G__302084 = c;
var G__302085 = d;
var G__302086 = e;
var G__302087 = f;
var G__302088 = g;
var G__302089 = h;
var G__302090 = i;
var G__302091 = j;
var G__302092 = k;
var G__302093 = l;
var G__302094 = m;
var G__302095 = n;
var G__302096 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__302082,G__302083,G__302084,G__302085,G__302086,G__302087,G__302088,G__302089,G__302090,G__302091,G__302092,G__302093,G__302094,G__302095,G__302096) : self__.dispatch_fn.call(null,G__302082,G__302083,G__302084,G__302085,G__302086,G__302087,G__302088,G__302089,G__302090,G__302091,G__302092,G__302093,G__302094,G__302095,G__302096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302097 = a;
var G__302098 = b;
var G__302099 = c;
var G__302100 = d;
var G__302101 = e;
var G__302102 = f;
var G__302103 = g;
var G__302104 = h;
var G__302105 = i;
var G__302106 = j;
var G__302107 = k;
var G__302108 = l;
var G__302109 = m;
var G__302110 = n;
var G__302111 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__302097,G__302098,G__302099,G__302100,G__302101,G__302102,G__302103,G__302104,G__302105,G__302106,G__302107,G__302108,G__302109,G__302110,G__302111) : target_fn.call(null,G__302097,G__302098,G__302099,G__302100,G__302101,G__302102,G__302103,G__302104,G__302105,G__302106,G__302107,G__302108,G__302109,G__302110,G__302111));
});
var G__302712__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302112 = a;
var G__302113 = b;
var G__302114 = c;
var G__302115 = d;
var G__302116 = e;
var G__302117 = f;
var G__302118 = g;
var G__302119 = h;
var G__302120 = i;
var G__302121 = j;
var G__302122 = k;
var G__302123 = l;
var G__302124 = m;
var G__302125 = n;
var G__302126 = o;
var G__302127 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__302112,G__302113,G__302114,G__302115,G__302116,G__302117,G__302118,G__302119,G__302120,G__302121,G__302122,G__302123,G__302124,G__302125,G__302126,G__302127) : self__.dispatch_fn.call(null,G__302112,G__302113,G__302114,G__302115,G__302116,G__302117,G__302118,G__302119,G__302120,G__302121,G__302122,G__302123,G__302124,G__302125,G__302126,G__302127));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302128 = a;
var G__302129 = b;
var G__302130 = c;
var G__302131 = d;
var G__302132 = e;
var G__302133 = f;
var G__302134 = g;
var G__302135 = h;
var G__302136 = i;
var G__302137 = j;
var G__302138 = k;
var G__302139 = l;
var G__302140 = m;
var G__302141 = n;
var G__302142 = o;
var G__302143 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__302128,G__302129,G__302130,G__302131,G__302132,G__302133,G__302134,G__302135,G__302136,G__302137,G__302138,G__302139,G__302140,G__302141,G__302142,G__302143) : target_fn.call(null,G__302128,G__302129,G__302130,G__302131,G__302132,G__302133,G__302134,G__302135,G__302136,G__302137,G__302138,G__302139,G__302140,G__302141,G__302142,G__302143));
});
var G__302712__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302144 = a;
var G__302145 = b;
var G__302146 = c;
var G__302147 = d;
var G__302148 = e;
var G__302149 = f;
var G__302150 = g;
var G__302151 = h;
var G__302152 = i;
var G__302153 = j;
var G__302154 = k;
var G__302155 = l;
var G__302156 = m;
var G__302157 = n;
var G__302158 = o;
var G__302159 = p;
var G__302160 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__302144,G__302145,G__302146,G__302147,G__302148,G__302149,G__302150,G__302151,G__302152,G__302153,G__302154,G__302155,G__302156,G__302157,G__302158,G__302159,G__302160) : self__.dispatch_fn.call(null,G__302144,G__302145,G__302146,G__302147,G__302148,G__302149,G__302150,G__302151,G__302152,G__302153,G__302154,G__302155,G__302156,G__302157,G__302158,G__302159,G__302160));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302161 = a;
var G__302162 = b;
var G__302163 = c;
var G__302164 = d;
var G__302165 = e;
var G__302166 = f;
var G__302167 = g;
var G__302168 = h;
var G__302169 = i;
var G__302170 = j;
var G__302171 = k;
var G__302172 = l;
var G__302173 = m;
var G__302174 = n;
var G__302175 = o;
var G__302176 = p;
var G__302177 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__302161,G__302162,G__302163,G__302164,G__302165,G__302166,G__302167,G__302168,G__302169,G__302170,G__302171,G__302172,G__302173,G__302174,G__302175,G__302176,G__302177) : target_fn.call(null,G__302161,G__302162,G__302163,G__302164,G__302165,G__302166,G__302167,G__302168,G__302169,G__302170,G__302171,G__302172,G__302173,G__302174,G__302175,G__302176,G__302177));
});
var G__302712__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302178 = a;
var G__302179 = b;
var G__302180 = c;
var G__302181 = d;
var G__302182 = e;
var G__302183 = f;
var G__302184 = g;
var G__302185 = h;
var G__302186 = i;
var G__302187 = j;
var G__302188 = k;
var G__302189 = l;
var G__302190 = m;
var G__302191 = n;
var G__302192 = o;
var G__302193 = p;
var G__302194 = q;
var G__302195 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__302178,G__302179,G__302180,G__302181,G__302182,G__302183,G__302184,G__302185,G__302186,G__302187,G__302188,G__302189,G__302190,G__302191,G__302192,G__302193,G__302194,G__302195) : self__.dispatch_fn.call(null,G__302178,G__302179,G__302180,G__302181,G__302182,G__302183,G__302184,G__302185,G__302186,G__302187,G__302188,G__302189,G__302190,G__302191,G__302192,G__302193,G__302194,G__302195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302196 = a;
var G__302197 = b;
var G__302198 = c;
var G__302199 = d;
var G__302200 = e;
var G__302201 = f;
var G__302202 = g;
var G__302203 = h;
var G__302204 = i;
var G__302205 = j;
var G__302206 = k;
var G__302207 = l;
var G__302208 = m;
var G__302209 = n;
var G__302210 = o;
var G__302211 = p;
var G__302212 = q;
var G__302213 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__302196,G__302197,G__302198,G__302199,G__302200,G__302201,G__302202,G__302203,G__302204,G__302205,G__302206,G__302207,G__302208,G__302209,G__302210,G__302211,G__302212,G__302213) : target_fn.call(null,G__302196,G__302197,G__302198,G__302199,G__302200,G__302201,G__302202,G__302203,G__302204,G__302205,G__302206,G__302207,G__302208,G__302209,G__302210,G__302211,G__302212,G__302213));
});
var G__302712__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302214 = a;
var G__302215 = b;
var G__302216 = c;
var G__302217 = d;
var G__302218 = e;
var G__302219 = f;
var G__302220 = g;
var G__302221 = h;
var G__302222 = i;
var G__302223 = j;
var G__302224 = k;
var G__302225 = l;
var G__302226 = m;
var G__302227 = n;
var G__302228 = o;
var G__302229 = p;
var G__302230 = q;
var G__302231 = r;
var G__302232 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__302214,G__302215,G__302216,G__302217,G__302218,G__302219,G__302220,G__302221,G__302222,G__302223,G__302224,G__302225,G__302226,G__302227,G__302228,G__302229,G__302230,G__302231,G__302232) : self__.dispatch_fn.call(null,G__302214,G__302215,G__302216,G__302217,G__302218,G__302219,G__302220,G__302221,G__302222,G__302223,G__302224,G__302225,G__302226,G__302227,G__302228,G__302229,G__302230,G__302231,G__302232));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302233 = a;
var G__302234 = b;
var G__302235 = c;
var G__302236 = d;
var G__302237 = e;
var G__302238 = f;
var G__302239 = g;
var G__302240 = h;
var G__302241 = i;
var G__302242 = j;
var G__302243 = k;
var G__302244 = l;
var G__302245 = m;
var G__302246 = n;
var G__302247 = o;
var G__302248 = p;
var G__302249 = q;
var G__302250 = r;
var G__302251 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__302233,G__302234,G__302235,G__302236,G__302237,G__302238,G__302239,G__302240,G__302241,G__302242,G__302243,G__302244,G__302245,G__302246,G__302247,G__302248,G__302249,G__302250,G__302251) : target_fn.call(null,G__302233,G__302234,G__302235,G__302236,G__302237,G__302238,G__302239,G__302240,G__302241,G__302242,G__302243,G__302244,G__302245,G__302246,G__302247,G__302248,G__302249,G__302250,G__302251));
});
var G__302712__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__302252 = a;
var G__302253 = b;
var G__302254 = c;
var G__302255 = d;
var G__302256 = e;
var G__302257 = f;
var G__302258 = g;
var G__302259 = h;
var G__302260 = i;
var G__302261 = j;
var G__302262 = k;
var G__302263 = l;
var G__302264 = m;
var G__302265 = n;
var G__302266 = o;
var G__302267 = p;
var G__302268 = q;
var G__302269 = r;
var G__302270 = s;
var G__302271 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__302252,G__302253,G__302254,G__302255,G__302256,G__302257,G__302258,G__302259,G__302260,G__302261,G__302262,G__302263,G__302264,G__302265,G__302266,G__302267,G__302268,G__302269,G__302270,G__302271) : self__.dispatch_fn.call(null,G__302252,G__302253,G__302254,G__302255,G__302256,G__302257,G__302258,G__302259,G__302260,G__302261,G__302262,G__302263,G__302264,G__302265,G__302266,G__302267,G__302268,G__302269,G__302270,G__302271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302272 = a;
var G__302273 = b;
var G__302274 = c;
var G__302275 = d;
var G__302276 = e;
var G__302277 = f;
var G__302278 = g;
var G__302279 = h;
var G__302280 = i;
var G__302281 = j;
var G__302282 = k;
var G__302283 = l;
var G__302284 = m;
var G__302285 = n;
var G__302286 = o;
var G__302287 = p;
var G__302288 = q;
var G__302289 = r;
var G__302290 = s;
var G__302291 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__302272,G__302273,G__302274,G__302275,G__302276,G__302277,G__302278,G__302279,G__302280,G__302281,G__302282,G__302283,G__302284,G__302285,G__302286,G__302287,G__302288,G__302289,G__302290,G__302291) : target_fn.call(null,G__302272,G__302273,G__302274,G__302275,G__302276,G__302277,G__302278,G__302279,G__302280,G__302281,G__302282,G__302283,G__302284,G__302285,G__302286,G__302287,G__302288,G__302289,G__302290,G__302291));
});
var G__302712__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__302712 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__302712__1.call(this,self__);
case 2:
return G__302712__2.call(this,self__,a);
case 3:
return G__302712__3.call(this,self__,a,b);
case 4:
return G__302712__4.call(this,self__,a,b,c);
case 5:
return G__302712__5.call(this,self__,a,b,c,d);
case 6:
return G__302712__6.call(this,self__,a,b,c,d,e);
case 7:
return G__302712__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__302712__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__302712__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__302712__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__302712__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__302712__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__302712__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__302712__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__302712__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__302712__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__302712__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__302712__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__302712__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__302712__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__302712__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__302712__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__302712.cljs$core$IFn$_invoke$arity$1 = G__302712__1;
G__302712.cljs$core$IFn$_invoke$arity$2 = G__302712__2;
G__302712.cljs$core$IFn$_invoke$arity$3 = G__302712__3;
G__302712.cljs$core$IFn$_invoke$arity$4 = G__302712__4;
G__302712.cljs$core$IFn$_invoke$arity$5 = G__302712__5;
G__302712.cljs$core$IFn$_invoke$arity$6 = G__302712__6;
G__302712.cljs$core$IFn$_invoke$arity$7 = G__302712__7;
G__302712.cljs$core$IFn$_invoke$arity$8 = G__302712__8;
G__302712.cljs$core$IFn$_invoke$arity$9 = G__302712__9;
G__302712.cljs$core$IFn$_invoke$arity$10 = G__302712__10;
G__302712.cljs$core$IFn$_invoke$arity$11 = G__302712__11;
G__302712.cljs$core$IFn$_invoke$arity$12 = G__302712__12;
G__302712.cljs$core$IFn$_invoke$arity$13 = G__302712__13;
G__302712.cljs$core$IFn$_invoke$arity$14 = G__302712__14;
G__302712.cljs$core$IFn$_invoke$arity$15 = G__302712__15;
G__302712.cljs$core$IFn$_invoke$arity$16 = G__302712__16;
G__302712.cljs$core$IFn$_invoke$arity$17 = G__302712__17;
G__302712.cljs$core$IFn$_invoke$arity$18 = G__302712__18;
G__302712.cljs$core$IFn$_invoke$arity$19 = G__302712__19;
G__302712.cljs$core$IFn$_invoke$arity$20 = G__302712__20;
G__302712.cljs$core$IFn$_invoke$arity$21 = G__302712__21;
G__302712.cljs$core$IFn$_invoke$arity$22 = G__302712__22;
return G__302712;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args301864){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args301864)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302292 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__302292) : self__.dispatch_fn.call(null,G__302292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302293 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__302293) : target_fn.call(null,G__302293));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302294 = a;
var G__302295 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__302294,G__302295) : self__.dispatch_fn.call(null,G__302294,G__302295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302296 = a;
var G__302297 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__302296,G__302297) : target_fn.call(null,G__302296,G__302297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302298 = a;
var G__302299 = b;
var G__302300 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__302298,G__302299,G__302300) : self__.dispatch_fn.call(null,G__302298,G__302299,G__302300));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302301 = a;
var G__302302 = b;
var G__302303 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__302301,G__302302,G__302303) : target_fn.call(null,G__302301,G__302302,G__302303));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302304 = a;
var G__302305 = b;
var G__302306 = c;
var G__302307 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__302304,G__302305,G__302306,G__302307) : self__.dispatch_fn.call(null,G__302304,G__302305,G__302306,G__302307));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302308 = a;
var G__302309 = b;
var G__302310 = c;
var G__302311 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__302308,G__302309,G__302310,G__302311) : target_fn.call(null,G__302308,G__302309,G__302310,G__302311));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302312 = a;
var G__302313 = b;
var G__302314 = c;
var G__302315 = d;
var G__302316 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__302312,G__302313,G__302314,G__302315,G__302316) : self__.dispatch_fn.call(null,G__302312,G__302313,G__302314,G__302315,G__302316));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302317 = a;
var G__302318 = b;
var G__302319 = c;
var G__302320 = d;
var G__302321 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__302317,G__302318,G__302319,G__302320,G__302321) : target_fn.call(null,G__302317,G__302318,G__302319,G__302320,G__302321));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302322 = a;
var G__302323 = b;
var G__302324 = c;
var G__302325 = d;
var G__302326 = e;
var G__302327 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__302322,G__302323,G__302324,G__302325,G__302326,G__302327) : self__.dispatch_fn.call(null,G__302322,G__302323,G__302324,G__302325,G__302326,G__302327));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302328 = a;
var G__302329 = b;
var G__302330 = c;
var G__302331 = d;
var G__302332 = e;
var G__302333 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__302328,G__302329,G__302330,G__302331,G__302332,G__302333) : target_fn.call(null,G__302328,G__302329,G__302330,G__302331,G__302332,G__302333));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302334 = a;
var G__302335 = b;
var G__302336 = c;
var G__302337 = d;
var G__302338 = e;
var G__302339 = f;
var G__302340 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__302334,G__302335,G__302336,G__302337,G__302338,G__302339,G__302340) : self__.dispatch_fn.call(null,G__302334,G__302335,G__302336,G__302337,G__302338,G__302339,G__302340));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302341 = a;
var G__302342 = b;
var G__302343 = c;
var G__302344 = d;
var G__302345 = e;
var G__302346 = f;
var G__302347 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__302341,G__302342,G__302343,G__302344,G__302345,G__302346,G__302347) : target_fn.call(null,G__302341,G__302342,G__302343,G__302344,G__302345,G__302346,G__302347));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302348 = a;
var G__302349 = b;
var G__302350 = c;
var G__302351 = d;
var G__302352 = e;
var G__302353 = f;
var G__302354 = g;
var G__302355 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__302348,G__302349,G__302350,G__302351,G__302352,G__302353,G__302354,G__302355) : self__.dispatch_fn.call(null,G__302348,G__302349,G__302350,G__302351,G__302352,G__302353,G__302354,G__302355));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302356 = a;
var G__302357 = b;
var G__302358 = c;
var G__302359 = d;
var G__302360 = e;
var G__302361 = f;
var G__302362 = g;
var G__302363 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__302356,G__302357,G__302358,G__302359,G__302360,G__302361,G__302362,G__302363) : target_fn.call(null,G__302356,G__302357,G__302358,G__302359,G__302360,G__302361,G__302362,G__302363));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302364 = a;
var G__302365 = b;
var G__302366 = c;
var G__302367 = d;
var G__302368 = e;
var G__302369 = f;
var G__302370 = g;
var G__302371 = h;
var G__302372 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__302364,G__302365,G__302366,G__302367,G__302368,G__302369,G__302370,G__302371,G__302372) : self__.dispatch_fn.call(null,G__302364,G__302365,G__302366,G__302367,G__302368,G__302369,G__302370,G__302371,G__302372));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302373 = a;
var G__302374 = b;
var G__302375 = c;
var G__302376 = d;
var G__302377 = e;
var G__302378 = f;
var G__302379 = g;
var G__302380 = h;
var G__302381 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__302373,G__302374,G__302375,G__302376,G__302377,G__302378,G__302379,G__302380,G__302381) : target_fn.call(null,G__302373,G__302374,G__302375,G__302376,G__302377,G__302378,G__302379,G__302380,G__302381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302382 = a;
var G__302383 = b;
var G__302384 = c;
var G__302385 = d;
var G__302386 = e;
var G__302387 = f;
var G__302388 = g;
var G__302389 = h;
var G__302390 = i;
var G__302391 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__302382,G__302383,G__302384,G__302385,G__302386,G__302387,G__302388,G__302389,G__302390,G__302391) : self__.dispatch_fn.call(null,G__302382,G__302383,G__302384,G__302385,G__302386,G__302387,G__302388,G__302389,G__302390,G__302391));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302392 = a;
var G__302393 = b;
var G__302394 = c;
var G__302395 = d;
var G__302396 = e;
var G__302397 = f;
var G__302398 = g;
var G__302399 = h;
var G__302400 = i;
var G__302401 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__302392,G__302393,G__302394,G__302395,G__302396,G__302397,G__302398,G__302399,G__302400,G__302401) : target_fn.call(null,G__302392,G__302393,G__302394,G__302395,G__302396,G__302397,G__302398,G__302399,G__302400,G__302401));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302402 = a;
var G__302403 = b;
var G__302404 = c;
var G__302405 = d;
var G__302406 = e;
var G__302407 = f;
var G__302408 = g;
var G__302409 = h;
var G__302410 = i;
var G__302411 = j;
var G__302412 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__302402,G__302403,G__302404,G__302405,G__302406,G__302407,G__302408,G__302409,G__302410,G__302411,G__302412) : self__.dispatch_fn.call(null,G__302402,G__302403,G__302404,G__302405,G__302406,G__302407,G__302408,G__302409,G__302410,G__302411,G__302412));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302413 = a;
var G__302414 = b;
var G__302415 = c;
var G__302416 = d;
var G__302417 = e;
var G__302418 = f;
var G__302419 = g;
var G__302420 = h;
var G__302421 = i;
var G__302422 = j;
var G__302423 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__302413,G__302414,G__302415,G__302416,G__302417,G__302418,G__302419,G__302420,G__302421,G__302422,G__302423) : target_fn.call(null,G__302413,G__302414,G__302415,G__302416,G__302417,G__302418,G__302419,G__302420,G__302421,G__302422,G__302423));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302424 = a;
var G__302425 = b;
var G__302426 = c;
var G__302427 = d;
var G__302428 = e;
var G__302429 = f;
var G__302430 = g;
var G__302431 = h;
var G__302432 = i;
var G__302433 = j;
var G__302434 = k;
var G__302435 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__302424,G__302425,G__302426,G__302427,G__302428,G__302429,G__302430,G__302431,G__302432,G__302433,G__302434,G__302435) : self__.dispatch_fn.call(null,G__302424,G__302425,G__302426,G__302427,G__302428,G__302429,G__302430,G__302431,G__302432,G__302433,G__302434,G__302435));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302436 = a;
var G__302437 = b;
var G__302438 = c;
var G__302439 = d;
var G__302440 = e;
var G__302441 = f;
var G__302442 = g;
var G__302443 = h;
var G__302444 = i;
var G__302445 = j;
var G__302446 = k;
var G__302447 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__302436,G__302437,G__302438,G__302439,G__302440,G__302441,G__302442,G__302443,G__302444,G__302445,G__302446,G__302447) : target_fn.call(null,G__302436,G__302437,G__302438,G__302439,G__302440,G__302441,G__302442,G__302443,G__302444,G__302445,G__302446,G__302447));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302448 = a;
var G__302449 = b;
var G__302450 = c;
var G__302451 = d;
var G__302452 = e;
var G__302453 = f;
var G__302454 = g;
var G__302455 = h;
var G__302456 = i;
var G__302457 = j;
var G__302458 = k;
var G__302459 = l;
var G__302460 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__302448,G__302449,G__302450,G__302451,G__302452,G__302453,G__302454,G__302455,G__302456,G__302457,G__302458,G__302459,G__302460) : self__.dispatch_fn.call(null,G__302448,G__302449,G__302450,G__302451,G__302452,G__302453,G__302454,G__302455,G__302456,G__302457,G__302458,G__302459,G__302460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302461 = a;
var G__302462 = b;
var G__302463 = c;
var G__302464 = d;
var G__302465 = e;
var G__302466 = f;
var G__302467 = g;
var G__302468 = h;
var G__302469 = i;
var G__302470 = j;
var G__302471 = k;
var G__302472 = l;
var G__302473 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__302461,G__302462,G__302463,G__302464,G__302465,G__302466,G__302467,G__302468,G__302469,G__302470,G__302471,G__302472,G__302473) : target_fn.call(null,G__302461,G__302462,G__302463,G__302464,G__302465,G__302466,G__302467,G__302468,G__302469,G__302470,G__302471,G__302472,G__302473));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302474 = a;
var G__302475 = b;
var G__302476 = c;
var G__302477 = d;
var G__302478 = e;
var G__302479 = f;
var G__302480 = g;
var G__302481 = h;
var G__302482 = i;
var G__302483 = j;
var G__302484 = k;
var G__302485 = l;
var G__302486 = m;
var G__302487 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__302474,G__302475,G__302476,G__302477,G__302478,G__302479,G__302480,G__302481,G__302482,G__302483,G__302484,G__302485,G__302486,G__302487) : self__.dispatch_fn.call(null,G__302474,G__302475,G__302476,G__302477,G__302478,G__302479,G__302480,G__302481,G__302482,G__302483,G__302484,G__302485,G__302486,G__302487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302488 = a;
var G__302489 = b;
var G__302490 = c;
var G__302491 = d;
var G__302492 = e;
var G__302493 = f;
var G__302494 = g;
var G__302495 = h;
var G__302496 = i;
var G__302497 = j;
var G__302498 = k;
var G__302499 = l;
var G__302500 = m;
var G__302501 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__302488,G__302489,G__302490,G__302491,G__302492,G__302493,G__302494,G__302495,G__302496,G__302497,G__302498,G__302499,G__302500,G__302501) : target_fn.call(null,G__302488,G__302489,G__302490,G__302491,G__302492,G__302493,G__302494,G__302495,G__302496,G__302497,G__302498,G__302499,G__302500,G__302501));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302502 = a;
var G__302503 = b;
var G__302504 = c;
var G__302505 = d;
var G__302506 = e;
var G__302507 = f;
var G__302508 = g;
var G__302509 = h;
var G__302510 = i;
var G__302511 = j;
var G__302512 = k;
var G__302513 = l;
var G__302514 = m;
var G__302515 = n;
var G__302516 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__302502,G__302503,G__302504,G__302505,G__302506,G__302507,G__302508,G__302509,G__302510,G__302511,G__302512,G__302513,G__302514,G__302515,G__302516) : self__.dispatch_fn.call(null,G__302502,G__302503,G__302504,G__302505,G__302506,G__302507,G__302508,G__302509,G__302510,G__302511,G__302512,G__302513,G__302514,G__302515,G__302516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302517 = a;
var G__302518 = b;
var G__302519 = c;
var G__302520 = d;
var G__302521 = e;
var G__302522 = f;
var G__302523 = g;
var G__302524 = h;
var G__302525 = i;
var G__302526 = j;
var G__302527 = k;
var G__302528 = l;
var G__302529 = m;
var G__302530 = n;
var G__302531 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__302517,G__302518,G__302519,G__302520,G__302521,G__302522,G__302523,G__302524,G__302525,G__302526,G__302527,G__302528,G__302529,G__302530,G__302531) : target_fn.call(null,G__302517,G__302518,G__302519,G__302520,G__302521,G__302522,G__302523,G__302524,G__302525,G__302526,G__302527,G__302528,G__302529,G__302530,G__302531));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302532 = a;
var G__302533 = b;
var G__302534 = c;
var G__302535 = d;
var G__302536 = e;
var G__302537 = f;
var G__302538 = g;
var G__302539 = h;
var G__302540 = i;
var G__302541 = j;
var G__302542 = k;
var G__302543 = l;
var G__302544 = m;
var G__302545 = n;
var G__302546 = o;
var G__302547 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__302532,G__302533,G__302534,G__302535,G__302536,G__302537,G__302538,G__302539,G__302540,G__302541,G__302542,G__302543,G__302544,G__302545,G__302546,G__302547) : self__.dispatch_fn.call(null,G__302532,G__302533,G__302534,G__302535,G__302536,G__302537,G__302538,G__302539,G__302540,G__302541,G__302542,G__302543,G__302544,G__302545,G__302546,G__302547));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302548 = a;
var G__302549 = b;
var G__302550 = c;
var G__302551 = d;
var G__302552 = e;
var G__302553 = f;
var G__302554 = g;
var G__302555 = h;
var G__302556 = i;
var G__302557 = j;
var G__302558 = k;
var G__302559 = l;
var G__302560 = m;
var G__302561 = n;
var G__302562 = o;
var G__302563 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__302548,G__302549,G__302550,G__302551,G__302552,G__302553,G__302554,G__302555,G__302556,G__302557,G__302558,G__302559,G__302560,G__302561,G__302562,G__302563) : target_fn.call(null,G__302548,G__302549,G__302550,G__302551,G__302552,G__302553,G__302554,G__302555,G__302556,G__302557,G__302558,G__302559,G__302560,G__302561,G__302562,G__302563));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302564 = a;
var G__302565 = b;
var G__302566 = c;
var G__302567 = d;
var G__302568 = e;
var G__302569 = f;
var G__302570 = g;
var G__302571 = h;
var G__302572 = i;
var G__302573 = j;
var G__302574 = k;
var G__302575 = l;
var G__302576 = m;
var G__302577 = n;
var G__302578 = o;
var G__302579 = p;
var G__302580 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__302564,G__302565,G__302566,G__302567,G__302568,G__302569,G__302570,G__302571,G__302572,G__302573,G__302574,G__302575,G__302576,G__302577,G__302578,G__302579,G__302580) : self__.dispatch_fn.call(null,G__302564,G__302565,G__302566,G__302567,G__302568,G__302569,G__302570,G__302571,G__302572,G__302573,G__302574,G__302575,G__302576,G__302577,G__302578,G__302579,G__302580));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302581 = a;
var G__302582 = b;
var G__302583 = c;
var G__302584 = d;
var G__302585 = e;
var G__302586 = f;
var G__302587 = g;
var G__302588 = h;
var G__302589 = i;
var G__302590 = j;
var G__302591 = k;
var G__302592 = l;
var G__302593 = m;
var G__302594 = n;
var G__302595 = o;
var G__302596 = p;
var G__302597 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__302581,G__302582,G__302583,G__302584,G__302585,G__302586,G__302587,G__302588,G__302589,G__302590,G__302591,G__302592,G__302593,G__302594,G__302595,G__302596,G__302597) : target_fn.call(null,G__302581,G__302582,G__302583,G__302584,G__302585,G__302586,G__302587,G__302588,G__302589,G__302590,G__302591,G__302592,G__302593,G__302594,G__302595,G__302596,G__302597));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302598 = a;
var G__302599 = b;
var G__302600 = c;
var G__302601 = d;
var G__302602 = e;
var G__302603 = f;
var G__302604 = g;
var G__302605 = h;
var G__302606 = i;
var G__302607 = j;
var G__302608 = k;
var G__302609 = l;
var G__302610 = m;
var G__302611 = n;
var G__302612 = o;
var G__302613 = p;
var G__302614 = q;
var G__302615 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__302598,G__302599,G__302600,G__302601,G__302602,G__302603,G__302604,G__302605,G__302606,G__302607,G__302608,G__302609,G__302610,G__302611,G__302612,G__302613,G__302614,G__302615) : self__.dispatch_fn.call(null,G__302598,G__302599,G__302600,G__302601,G__302602,G__302603,G__302604,G__302605,G__302606,G__302607,G__302608,G__302609,G__302610,G__302611,G__302612,G__302613,G__302614,G__302615));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302616 = a;
var G__302617 = b;
var G__302618 = c;
var G__302619 = d;
var G__302620 = e;
var G__302621 = f;
var G__302622 = g;
var G__302623 = h;
var G__302624 = i;
var G__302625 = j;
var G__302626 = k;
var G__302627 = l;
var G__302628 = m;
var G__302629 = n;
var G__302630 = o;
var G__302631 = p;
var G__302632 = q;
var G__302633 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__302616,G__302617,G__302618,G__302619,G__302620,G__302621,G__302622,G__302623,G__302624,G__302625,G__302626,G__302627,G__302628,G__302629,G__302630,G__302631,G__302632,G__302633) : target_fn.call(null,G__302616,G__302617,G__302618,G__302619,G__302620,G__302621,G__302622,G__302623,G__302624,G__302625,G__302626,G__302627,G__302628,G__302629,G__302630,G__302631,G__302632,G__302633));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302634 = a;
var G__302635 = b;
var G__302636 = c;
var G__302637 = d;
var G__302638 = e;
var G__302639 = f;
var G__302640 = g;
var G__302641 = h;
var G__302642 = i;
var G__302643 = j;
var G__302644 = k;
var G__302645 = l;
var G__302646 = m;
var G__302647 = n;
var G__302648 = o;
var G__302649 = p;
var G__302650 = q;
var G__302651 = r;
var G__302652 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__302634,G__302635,G__302636,G__302637,G__302638,G__302639,G__302640,G__302641,G__302642,G__302643,G__302644,G__302645,G__302646,G__302647,G__302648,G__302649,G__302650,G__302651,G__302652) : self__.dispatch_fn.call(null,G__302634,G__302635,G__302636,G__302637,G__302638,G__302639,G__302640,G__302641,G__302642,G__302643,G__302644,G__302645,G__302646,G__302647,G__302648,G__302649,G__302650,G__302651,G__302652));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302653 = a;
var G__302654 = b;
var G__302655 = c;
var G__302656 = d;
var G__302657 = e;
var G__302658 = f;
var G__302659 = g;
var G__302660 = h;
var G__302661 = i;
var G__302662 = j;
var G__302663 = k;
var G__302664 = l;
var G__302665 = m;
var G__302666 = n;
var G__302667 = o;
var G__302668 = p;
var G__302669 = q;
var G__302670 = r;
var G__302671 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__302653,G__302654,G__302655,G__302656,G__302657,G__302658,G__302659,G__302660,G__302661,G__302662,G__302663,G__302664,G__302665,G__302666,G__302667,G__302668,G__302669,G__302670,G__302671) : target_fn.call(null,G__302653,G__302654,G__302655,G__302656,G__302657,G__302658,G__302659,G__302660,G__302661,G__302662,G__302663,G__302664,G__302665,G__302666,G__302667,G__302668,G__302669,G__302670,G__302671));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__302672 = a;
var G__302673 = b;
var G__302674 = c;
var G__302675 = d;
var G__302676 = e;
var G__302677 = f;
var G__302678 = g;
var G__302679 = h;
var G__302680 = i;
var G__302681 = j;
var G__302682 = k;
var G__302683 = l;
var G__302684 = m;
var G__302685 = n;
var G__302686 = o;
var G__302687 = p;
var G__302688 = q;
var G__302689 = r;
var G__302690 = s;
var G__302691 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__302672,G__302673,G__302674,G__302675,G__302676,G__302677,G__302678,G__302679,G__302680,G__302681,G__302682,G__302683,G__302684,G__302685,G__302686,G__302687,G__302688,G__302689,G__302690,G__302691) : self__.dispatch_fn.call(null,G__302672,G__302673,G__302674,G__302675,G__302676,G__302677,G__302678,G__302679,G__302680,G__302681,G__302682,G__302683,G__302684,G__302685,G__302686,G__302687,G__302688,G__302689,G__302690,G__302691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__302692 = a;
var G__302693 = b;
var G__302694 = c;
var G__302695 = d;
var G__302696 = e;
var G__302697 = f;
var G__302698 = g;
var G__302699 = h;
var G__302700 = i;
var G__302701 = j;
var G__302702 = k;
var G__302703 = l;
var G__302704 = m;
var G__302705 = n;
var G__302706 = o;
var G__302707 = p;
var G__302708 = q;
var G__302709 = r;
var G__302710 = s;
var G__302711 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__302692,G__302693,G__302694,G__302695,G__302696,G__302697,G__302698,G__302699,G__302700,G__302701,G__302702,G__302703,G__302704,G__302705,G__302706,G__302707,G__302708,G__302709,G__302710,G__302711) : target_fn.call(null,G__302692,G__302693,G__302694,G__302695,G__302696,G__302697,G__302698,G__302699,G__302700,G__302701,G__302702,G__302703,G__302704,G__302705,G__302706,G__302707,G__302708,G__302709,G__302710,G__302711));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__302713 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__302713);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__302718 = msg;
return Error(G__302718);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__302723 = x;
var G__302724 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__302723,G__302724) : pred.call(null,G__302723,G__302724));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__302725 = y;
var G__302726 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__302725,G__302726) : pred.call(null,G__302725,G__302726));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
