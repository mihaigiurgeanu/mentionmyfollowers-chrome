// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__94200__delegate = function (args){
return console.log.apply(console,(function (){var G__94199 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__94199) : cljs.core.into_array.call(null,G__94199));
})());
};
var G__94200 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__94201__i = 0, G__94201__a = new Array(arguments.length -  0);
while (G__94201__i < G__94201__a.length) {G__94201__a[G__94201__i] = arguments[G__94201__i + 0]; ++G__94201__i;}
  args = new cljs.core.IndexedSeq(G__94201__a,0);
} 
return G__94200__delegate.call(this,args);};
G__94200.cljs$lang$maxFixedArity = 0;
G__94200.cljs$lang$applyTo = (function (arglist__94202){
var args = cljs.core.seq(arglist__94202);
return G__94200__delegate(args);
});
G__94200.cljs$core$IFn$_invoke$arity$variadic = G__94200__delegate;
return G__94200;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__94204 = x;
return goog.isString(G__94204);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__94206 = x__$1;
return goog.typeOf(G__94206);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3969__auto__ = ty;
if(cljs.core.truth_(and__3969__auto__)){
return ty.cljs$lang$type;
} else {
return and__3969__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__94208 = obj;
return goog.typeOf(G__94208);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__94210 = Symbol;
return goog.typeOf(G__94210);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4868__auto___94212 = len;
var i_94213 = (0);
while(true){
if((i_94213 < n__4868__auto___94212)){
(new_arr[i_94213] = (arr[i_94213]));

var G__94214 = (i_94213 + (1));
i_94213 = G__94214;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__94215 = (i + (1));
i = G__94215;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__94224__delegate = function (array,i,idxs){
var G__94221 = aget;
var G__94222 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__94223 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__94221,G__94222,G__94223) : cljs.core.apply.call(null,G__94221,G__94222,G__94223));
};
var G__94224 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__94225__i = 0, G__94225__a = new Array(arguments.length -  2);
while (G__94225__i < G__94225__a.length) {G__94225__a[G__94225__i] = arguments[G__94225__i + 2]; ++G__94225__i;}
  idxs = new cljs.core.IndexedSeq(G__94225__a,0);
} 
return G__94224__delegate.call(this,array,i,idxs);};
G__94224.cljs$lang$maxFixedArity = 2;
G__94224.cljs$lang$applyTo = (function (arglist__94226){
var array = cljs.core.first(arglist__94226);
arglist__94226 = cljs.core.next(arglist__94226);
var i = cljs.core.first(arglist__94226);
var idxs = cljs.core.rest(arglist__94226);
return G__94224__delegate(array,i,idxs);
});
G__94224.cljs$core$IFn$_invoke$arity$variadic = G__94224__delegate;
return G__94224;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__94227 = null;
if (arguments.length > 2) {
var G__94228__i = 0, G__94228__a = new Array(arguments.length -  2);
while (G__94228__i < G__94228__a.length) {G__94228__a[G__94228__i] = arguments[G__94228__i + 2]; ++G__94228__i;}
G__94227 = new cljs.core.IndexedSeq(G__94228__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__94227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__94237__delegate = function (array,idx,idx2,idxv){
var G__94233 = aset;
var G__94234 = (array[idx]);
var G__94235 = idx2;
var G__94236 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__94233,G__94234,G__94235,G__94236) : cljs.core.apply.call(null,G__94233,G__94234,G__94235,G__94236));
};
var G__94237 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__94238__i = 0, G__94238__a = new Array(arguments.length -  3);
while (G__94238__i < G__94238__a.length) {G__94238__a[G__94238__i] = arguments[G__94238__i + 3]; ++G__94238__i;}
  idxv = new cljs.core.IndexedSeq(G__94238__a,0);
} 
return G__94237__delegate.call(this,array,idx,idx2,idxv);};
G__94237.cljs$lang$maxFixedArity = 3;
G__94237.cljs$lang$applyTo = (function (arglist__94239){
var array = cljs.core.first(arglist__94239);
arglist__94239 = cljs.core.next(arglist__94239);
var idx = cljs.core.first(arglist__94239);
arglist__94239 = cljs.core.next(arglist__94239);
var idx2 = cljs.core.first(arglist__94239);
var idxv = cljs.core.rest(arglist__94239);
return G__94237__delegate(array,idx,idx2,idxv);
});
G__94237.cljs$core$IFn$_invoke$arity$variadic = G__94237__delegate;
return G__94237;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__94240 = null;
if (arguments.length > 3) {
var G__94241__i = 0, G__94241__a = new Array(arguments.length -  3);
while (G__94241__i < G__94241__a.length) {G__94241__a[G__94241__i] = arguments[G__94241__i + 3]; ++G__94241__i;}
G__94240 = new cljs.core.IndexedSeq(G__94241__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__94240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__94247 = (function (a,x){
a.push(x);

return a;
});
var G__94248 = [];
var G__94249 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__94247,G__94248,G__94249) : cljs.core.reduce.call(null,G__94247,G__94248,G__94249));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__94250__i = 0, G__94250__a = new Array(arguments.length -  2);
while (G__94250__i < G__94250__a.length) {G__94250__a[G__94250__i] = arguments[G__94250__i + 2]; ++G__94250__i;}
  args = new cljs.core.IndexedSeq(G__94250__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__94251){
var obj = cljs.core.first(arglist__94251);
arglist__94251 = cljs.core.next(arglist__94251);
var s = cljs.core.first(arglist__94251);
var args = cljs.core.rest(arglist__94251);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj94253 = {};
return obj94253;
})();


cljs.core.IFn = (function (){var obj94255 = {};
return obj94255;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94301 = x__4625__auto__;
return goog.typeOf(G__94301);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94303 = x__4625__auto__;
return goog.typeOf(G__94303);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94305 = x__4625__auto__;
return goog.typeOf(G__94305);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94307 = x__4625__auto__;
return goog.typeOf(G__94307);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94309 = x__4625__auto__;
return goog.typeOf(G__94309);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94311 = x__4625__auto__;
return goog.typeOf(G__94311);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94313 = x__4625__auto__;
return goog.typeOf(G__94313);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94315 = x__4625__auto__;
return goog.typeOf(G__94315);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94317 = x__4625__auto__;
return goog.typeOf(G__94317);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94319 = x__4625__auto__;
return goog.typeOf(G__94319);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94321 = x__4625__auto__;
return goog.typeOf(G__94321);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94323 = x__4625__auto__;
return goog.typeOf(G__94323);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94325 = x__4625__auto__;
return goog.typeOf(G__94325);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94327 = x__4625__auto__;
return goog.typeOf(G__94327);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94329 = x__4625__auto__;
return goog.typeOf(G__94329);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94331 = x__4625__auto__;
return goog.typeOf(G__94331);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94333 = x__4625__auto__;
return goog.typeOf(G__94333);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94335 = x__4625__auto__;
return goog.typeOf(G__94335);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94337 = x__4625__auto__;
return goog.typeOf(G__94337);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94339 = x__4625__auto__;
return goog.typeOf(G__94339);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94341 = x__4625__auto__;
return goog.typeOf(G__94341);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__94343 = x__4625__auto__;
return goog.typeOf(G__94343);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj94345 = {};
return obj94345;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3969__auto__ = value;
if(and__3969__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3969__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4625__auto__ = (((value == null))?null:value);
return (function (){var or__3981__auto__ = (cljs.core._clone[(function (){var G__94349 = x__4625__auto__;
return goog.typeOf(G__94349);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clone["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj94351 = {};
return obj94351;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._count[(function (){var G__94355 = x__4625__auto__;
return goog.typeOf(G__94355);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._count["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj94357 = {};
return obj94357;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._empty[(function (){var G__94361 = x__4625__auto__;
return goog.typeOf(G__94361);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._empty["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj94363 = {};
return obj94363;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._conj[(function (){var G__94367 = x__4625__auto__;
return goog.typeOf(G__94367);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj94369 = {};
return obj94369;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__94375 = x__4625__auto__;
return goog.typeOf(G__94375);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__94377 = x__4625__auto__;
return goog.typeOf(G__94377);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj94379 = {};
return obj94379;
})();


cljs.core.ISeq = (function (){var obj94381 = {};
return obj94381;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._first[(function (){var G__94385 = x__4625__auto__;
return goog.typeOf(G__94385);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rest[(function (){var G__94389 = x__4625__auto__;
return goog.typeOf(G__94389);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj94391 = {};
return obj94391;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._next[(function (){var G__94395 = x__4625__auto__;
return goog.typeOf(G__94395);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj94397 = {};
return obj94397;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__94403 = x__4625__auto__;
return goog.typeOf(G__94403);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__94405 = x__4625__auto__;
return goog.typeOf(G__94405);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj94407 = {};
return obj94407;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__94411 = x__4625__auto__;
return goog.typeOf(G__94411);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc[(function (){var G__94415 = x__4625__auto__;
return goog.typeOf(G__94415);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj94417 = {};
return obj94417;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc[(function (){var G__94421 = x__4625__auto__;
return goog.typeOf(G__94421);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj94423 = {};
return obj94423;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._key[(function (){var G__94427 = x__4625__auto__;
return goog.typeOf(G__94427);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._val[(function (){var G__94431 = x__4625__auto__;
return goog.typeOf(G__94431);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._val["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj94433 = {};
return obj94433;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin[(function (){var G__94437 = x__4625__auto__;
return goog.typeOf(G__94437);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj94439 = {};
return obj94439;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._peek[(function (){var G__94443 = x__4625__auto__;
return goog.typeOf(G__94443);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._peek["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._pop[(function (){var G__94447 = x__4625__auto__;
return goog.typeOf(G__94447);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj94449 = {};
return obj94449;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n[(function (){var G__94453 = x__4625__auto__;
return goog.typeOf(G__94453);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj94455 = {};
return obj94455;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref[(function (){var G__94459 = x__4625__auto__;
return goog.typeOf(G__94459);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj94461 = {};
return obj94461;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref_with_timeout[(function (){var G__94465 = x__4625__auto__;
return goog.typeOf(G__94465);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj94467 = {};
return obj94467;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._meta[(function (){var G__94471 = x__4625__auto__;
return goog.typeOf(G__94471);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj94473 = {};
return obj94473;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._with_meta[(function (){var G__94477 = x__4625__auto__;
return goog.typeOf(G__94477);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj94479 = {};
return obj94479;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__94485 = x__4625__auto__;
return goog.typeOf(G__94485);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__94487 = x__4625__auto__;
return goog.typeOf(G__94487);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj94489 = {};
return obj94489;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._kv_reduce[(function (){var G__94493 = x__4625__auto__;
return goog.typeOf(G__94493);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj94495 = {};
return obj94495;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._equiv[(function (){var G__94499 = x__4625__auto__;
return goog.typeOf(G__94499);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._equiv["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj94501 = {};
return obj94501;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._hash[(function (){var G__94505 = x__4625__auto__;
return goog.typeOf(G__94505);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._hash["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj94507 = {};
return obj94507;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._seq[(function (){var G__94511 = x__4625__auto__;
return goog.typeOf(G__94511);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj94513 = {};
return obj94513;
})();


cljs.core.IList = (function (){var obj94515 = {};
return obj94515;
})();


cljs.core.IRecord = (function (){var obj94517 = {};
return obj94517;
})();


cljs.core.IReversible = (function (){var obj94519 = {};
return obj94519;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rseq[(function (){var G__94523 = x__4625__auto__;
return goog.typeOf(G__94523);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rseq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj94525 = {};
return obj94525;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq[(function (){var G__94529 = x__4625__auto__;
return goog.typeOf(G__94529);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq_from[(function (){var G__94533 = x__4625__auto__;
return goog.typeOf(G__94533);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._entry_key[(function (){var G__94537 = x__4625__auto__;
return goog.typeOf(G__94537);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._comparator[(function (){var G__94541 = x__4625__auto__;
return goog.typeOf(G__94541);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._comparator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj94543 = {};
return obj94543;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._write[(function (){var G__94547 = x__4625__auto__;
return goog.typeOf(G__94547);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._write["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._flush[(function (){var G__94551 = x__4625__auto__;
return goog.typeOf(G__94551);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._flush["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj94553 = {};
return obj94553;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._pr_writer[(function (){var G__94557 = x__4625__auto__;
return goog.typeOf(G__94557);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj94559 = {};
return obj94559;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3969__auto__ = d;
if(and__3969__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4625__auto__ = (((d == null))?null:d);
return (function (){var or__3981__auto__ = (cljs.core._realized_QMARK_[(function (){var G__94563 = x__4625__auto__;
return goog.typeOf(G__94563);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj94565 = {};
return obj94565;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._notify_watches[(function (){var G__94569 = x__4625__auto__;
return goog.typeOf(G__94569);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._add_watch[(function (){var G__94573 = x__4625__auto__;
return goog.typeOf(G__94573);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._remove_watch[(function (){var G__94577 = x__4625__auto__;
return goog.typeOf(G__94577);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj94579 = {};
return obj94579;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._as_transient[(function (){var G__94583 = x__4625__auto__;
return goog.typeOf(G__94583);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj94585 = {};
return obj94585;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._conj_BANG_[(function (){var G__94589 = x__4625__auto__;
return goog.typeOf(G__94589);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._persistent_BANG_[(function (){var G__94593 = x__4625__auto__;
return goog.typeOf(G__94593);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj94595 = {};
return obj94595;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_BANG_[(function (){var G__94599 = x__4625__auto__;
return goog.typeOf(G__94599);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj94601 = {};
return obj94601;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__94605 = x__4625__auto__;
return goog.typeOf(G__94605);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj94607 = {};
return obj94607;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__94611 = x__4625__auto__;
return goog.typeOf(G__94611);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._pop_BANG_[(function (){var G__94615 = x__4625__auto__;
return goog.typeOf(G__94615);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj94617 = {};
return obj94617;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__94621 = x__4625__auto__;
return goog.typeOf(G__94621);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj94623 = {};
return obj94623;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._compare[(function (){var G__94627 = x__4625__auto__;
return goog.typeOf(G__94627);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._compare["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj94629 = {};
return obj94629;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._drop_first[(function (){var G__94633 = x__4625__auto__;
return goog.typeOf(G__94633);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj94635 = {};
return obj94635;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_first[(function (){var G__94639 = x__4625__auto__;
return goog.typeOf(G__94639);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_rest[(function (){var G__94643 = x__4625__auto__;
return goog.typeOf(G__94643);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj94645 = {};
return obj94645;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_next[(function (){var G__94649 = x__4625__auto__;
return goog.typeOf(G__94649);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj94651 = {};
return obj94651;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._name[(function (){var G__94655 = x__4625__auto__;
return goog.typeOf(G__94655);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._name["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._namespace[(function (){var G__94659 = x__4625__auto__;
return goog.typeOf(G__94659);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._namespace["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj94661 = {};
return obj94661;
})();


cljs.core.IReset = (function (){var obj94663 = {};
return obj94663;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._reset_BANG_[(function (){var G__94667 = x__4625__auto__;
return goog.typeOf(G__94667);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj94669 = {};
return obj94669;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__94679 = x__4625__auto__;
return goog.typeOf(G__94679);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__94681 = x__4625__auto__;
return goog.typeOf(G__94681);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__94683 = x__4625__auto__;
return goog.typeOf(G__94683);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__94685 = x__4625__auto__;
return goog.typeOf(G__94685);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj94687 = {};
return obj94687;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._vreset_BANG_[(function (){var G__94691 = x__4625__auto__;
return goog.typeOf(G__94691);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj94693 = {};
return obj94693;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._iterator[(function (){var G__94697 = x__4625__auto__;
return goog.typeOf(G__94697);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._iterator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__94700 = (4294967295);
var G__94701 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__94700,G__94701) : Math.imul.call(null,G__94700,G__94701));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__94704 = a;
var G__94705 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__94704,G__94705) : Math.imul.call(null,G__94704,G__94705));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__94706 = (i + (2));
var G__94707 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__94706;
h1 = G__94707;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj94709 = {};
return obj94709;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__94710 = (i + (1));
var G__94711 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__94710;
hash = G__94711;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj94715 = {};
return obj94715;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__94718 = o;
if(G__94718){
var bit__4655__auto__ = (G__94718.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4655__auto__) || (G__94718.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__94719 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__94719) : Math.floor.call(null,G__94719));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__94726 = a.ns;
var G__94727 = b.ns;
return goog.array.defaultCompare(G__94726,G__94727);
})();
if(((0) === nsc)){
var G__94728 = a.name;
var G__94729 = b.name;
return goog.array.defaultCompare(G__94728,G__94729);
} else {
return nsc;
}
}
} else {
var G__94730 = a.name;
var G__94731 = b.name;
return goog.array.defaultCompare(G__94730,G__94731);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__94733 = null;
var G__94733__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__94733__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__94733 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__94733__2.call(this,self__,coll);
case 3:
return G__94733__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__94733.cljs$core$IFn$_invoke$arity$2 = G__94733__2;
G__94733.cljs$core$IFn$_invoke$arity$3 = G__94733__3;
return G__94733;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args94732){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args94732)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__94781 = null;
var G__94781__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__94781__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__94781__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__94781__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__94781__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__94781__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__94781__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__94781__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__94781__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__94781__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__94781__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__94781__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__94781__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__94781__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__94781__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__94781__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__94781__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__94781__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__94781__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__94781__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__94781__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__94781__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94737 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__94738 = a;
var G__94739 = b;
var G__94740 = c;
var G__94741 = d;
var G__94742 = e;
var G__94743 = f;
var G__94744 = g;
var G__94745 = h;
var G__94746 = i;
var G__94747 = j;
var G__94748 = k;
var G__94749 = l;
var G__94750 = m;
var G__94751 = n;
var G__94752 = o;
var G__94753 = p;
var G__94754 = q;
var G__94755 = r;
var G__94756 = s;
var G__94757 = t;
var G__94758 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__94737,G__94738,G__94739,G__94740,G__94741,G__94742,G__94743,G__94744,G__94745,G__94746,G__94747,G__94748,G__94749,G__94750,G__94751,G__94752,G__94753,G__94754,G__94755,G__94756,G__94757,G__94758) : cljs.core.apply.call(null,G__94737,G__94738,G__94739,G__94740,G__94741,G__94742,G__94743,G__94744,G__94745,G__94746,G__94747,G__94748,G__94749,G__94750,G__94751,G__94752,G__94753,G__94754,G__94755,G__94756,G__94757,G__94758));
});
G__94781 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__94781__1.call(this,self__);
case 2:
return G__94781__2.call(this,self__,a);
case 3:
return G__94781__3.call(this,self__,a,b);
case 4:
return G__94781__4.call(this,self__,a,b,c);
case 5:
return G__94781__5.call(this,self__,a,b,c,d);
case 6:
return G__94781__6.call(this,self__,a,b,c,d,e);
case 7:
return G__94781__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__94781__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__94781__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__94781__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__94781__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__94781__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__94781__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__94781__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__94781__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__94781__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__94781__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__94781__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__94781__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__94781__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__94781__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__94781__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__94781.cljs$core$IFn$_invoke$arity$1 = G__94781__1;
G__94781.cljs$core$IFn$_invoke$arity$2 = G__94781__2;
G__94781.cljs$core$IFn$_invoke$arity$3 = G__94781__3;
G__94781.cljs$core$IFn$_invoke$arity$4 = G__94781__4;
G__94781.cljs$core$IFn$_invoke$arity$5 = G__94781__5;
G__94781.cljs$core$IFn$_invoke$arity$6 = G__94781__6;
G__94781.cljs$core$IFn$_invoke$arity$7 = G__94781__7;
G__94781.cljs$core$IFn$_invoke$arity$8 = G__94781__8;
G__94781.cljs$core$IFn$_invoke$arity$9 = G__94781__9;
G__94781.cljs$core$IFn$_invoke$arity$10 = G__94781__10;
G__94781.cljs$core$IFn$_invoke$arity$11 = G__94781__11;
G__94781.cljs$core$IFn$_invoke$arity$12 = G__94781__12;
G__94781.cljs$core$IFn$_invoke$arity$13 = G__94781__13;
G__94781.cljs$core$IFn$_invoke$arity$14 = G__94781__14;
G__94781.cljs$core$IFn$_invoke$arity$15 = G__94781__15;
G__94781.cljs$core$IFn$_invoke$arity$16 = G__94781__16;
G__94781.cljs$core$IFn$_invoke$arity$17 = G__94781__17;
G__94781.cljs$core$IFn$_invoke$arity$18 = G__94781__18;
G__94781.cljs$core$IFn$_invoke$arity$19 = G__94781__19;
G__94781.cljs$core$IFn$_invoke$arity$20 = G__94781__20;
G__94781.cljs$core$IFn$_invoke$arity$21 = G__94781__21;
G__94781.cljs$core$IFn$_invoke$arity$22 = G__94781__22;
return G__94781;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args94736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args94736)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__94759 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__94760 = a;
var G__94761 = b;
var G__94762 = c;
var G__94763 = d;
var G__94764 = e;
var G__94765 = f;
var G__94766 = g;
var G__94767 = h;
var G__94768 = i;
var G__94769 = j;
var G__94770 = k;
var G__94771 = l;
var G__94772 = m;
var G__94773 = n;
var G__94774 = o;
var G__94775 = p;
var G__94776 = q;
var G__94777 = r;
var G__94778 = s;
var G__94779 = t;
var G__94780 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__94759,G__94760,G__94761,G__94762,G__94763,G__94764,G__94765,G__94766,G__94767,G__94768,G__94769,G__94770,G__94771,G__94772,G__94773,G__94774,G__94775,G__94776,G__94777,G__94778,G__94779,G__94780) : cljs.core.apply.call(null,G__94759,G__94760,G__94761,G__94762,G__94763,G__94764,G__94765,G__94766,G__94767,G__94768,G__94769,G__94770,G__94771,G__94772,G__94773,G__94774,G__94775,G__94776,G__94777,G__94778,G__94779,G__94780));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__94783 = x;
if(G__94783){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__94783.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__94783.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__94783);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__94783);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__94785 = value;
if(G__94785){
var bit__4662__auto__ = (G__94785.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4662__auto__) || (G__94785.cljs$core$ICloneable$)){
return true;
} else {
if((!G__94785.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__94785);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__94785);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__94787 = coll;
if(G__94787){
var bit__4655__auto__ = (G__94787.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4655__auto__) || (G__94787.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__94789 = coll;
if(G__94789){
var bit__4655__auto__ = (G__94789.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__94789.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__94791 = coll;
if(G__94791){
var bit__4655__auto__ = (G__94791.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__94791.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__94793 = coll;
if(G__94793){
var bit__4655__auto__ = (G__94793.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4655__auto__) || (G__94793.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__94798__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__94799 = y;
var G__94800 = cljs.core.first(more);
var G__94801 = cljs.core.next(more);
x = G__94799;
y = G__94800;
more = G__94801;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__94798 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__94802__i = 0, G__94802__a = new Array(arguments.length -  2);
while (G__94802__i < G__94802__a.length) {G__94802__a[G__94802__i] = arguments[G__94802__i + 2]; ++G__94802__i;}
  more = new cljs.core.IndexedSeq(G__94802__a,0);
} 
return G__94798__delegate.call(this,x,y,more);};
G__94798.cljs$lang$maxFixedArity = 2;
G__94798.cljs$lang$applyTo = (function (arglist__94803){
var x = cljs.core.first(arglist__94803);
arglist__94803 = cljs.core.next(arglist__94803);
var y = cljs.core.first(arglist__94803);
var more = cljs.core.rest(arglist__94803);
return G__94798__delegate(x,y,more);
});
G__94798.cljs$core$IFn$_invoke$arity$variadic = G__94798__delegate;
return G__94798;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__94804 = null;
if (arguments.length > 2) {
var G__94805__i = 0, G__94805__a = new Array(arguments.length -  2);
while (G__94805__i < G__94805__a.length) {G__94805__a[G__94805__i] = arguments[G__94805__i + 2]; ++G__94805__i;}
G__94804 = new cljs.core.IndexedSeq(G__94805__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__94804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__94806 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__94806) : cljs.core.es6_iterator_seq.call(null,G__94806));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__94807 = (n + (1));
var G__94808 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__94809 = cljs.core.next(coll__$1);
n = G__94807;
hash_code = G__94808;
coll__$1 = G__94809;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__94810 = (n + (1));
var G__94811 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__94812 = cljs.core.next(coll__$1);
n = G__94810;
hash_code = G__94811;
coll__$1 = G__94812;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__94813 = o;
return goog.getUid(G__94813);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__94815 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__94815) : cljs.core.deref.call(null,G__94815));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__94822 = val;
var G__94823 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94822,G__94823) : f.call(null,G__94822,G__94823));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94828 = nval;
var G__94829 = (n + (1));
val = G__94828;
n = G__94829;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__94824 = val__$1;
var G__94825 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94824,G__94825) : f.call(null,G__94824,G__94825));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94830 = nval;
var G__94831 = (n + (1));
val__$1 = G__94830;
n = G__94831;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__94826 = val__$1;
var G__94827 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94826,G__94827) : f.call(null,G__94826,G__94827));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94832 = nval;
var G__94833 = (n + (1));
val__$1 = G__94832;
n = G__94833;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__94840 = val;
var G__94841 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94840,G__94841) : f.call(null,G__94840,G__94841));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94846 = nval;
var G__94847 = (n + (1));
val = G__94846;
n = G__94847;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__94842 = val__$1;
var G__94843 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94842,G__94843) : f.call(null,G__94842,G__94843));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94848 = nval;
var G__94849 = (n + (1));
val__$1 = G__94848;
n = G__94849;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__94844 = val__$1;
var G__94845 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__94844,G__94845) : f.call(null,G__94844,G__94845));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__94850 = nval;
var G__94851 = (n + (1));
val__$1 = G__94850;
n = G__94851;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__94853 = x;
if(G__94853){
var bit__4662__auto__ = (G__94853.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4662__auto__) || (G__94853.cljs$core$ICounted$)){
return true;
} else {
if((!G__94853.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__94853);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__94853);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__94855 = x;
if(G__94855){
var bit__4662__auto__ = (G__94855.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4662__auto__) || (G__94855.cljs$core$IIndexed$)){
return true;
} else {
if((!G__94855.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__94855);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__94855);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__94856 = coll__$1;
var G__94857 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__94856,G__94857) : cljs.core.equiv_sequential.call(null,G__94856,G__94857));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__94858 = o;
var G__94859 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__94858,G__94859) : cljs.core.cons.call(null,G__94858,G__94859));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__94862 = coll__$1;
var G__94863 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__94862,G__94863) : cljs.core.equiv_sequential.call(null,G__94862,G__94863));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__94864 = cljs.core.List.EMPTY;
var G__94865 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__94864,G__94865) : cljs.core.with_meta.call(null,G__94864,G__94865));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__94866 = f;
var G__94867 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__94866,G__94867) : cljs.core.seq_reduce.call(null,G__94866,G__94867));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__94868 = f;
var G__94869 = start;
var G__94870 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__94868,G__94869,G__94870) : cljs.core.seq_reduce.call(null,G__94868,G__94869,G__94870));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__94871 = o;
var G__94872 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__94871,G__94872) : cljs.core.cons.call(null,G__94871,G__94872));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__94873 = sn;
s = G__94873;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__94878__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__94879 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__94880 = cljs.core.first(xs);
var G__94881 = cljs.core.next(xs);
coll = G__94879;
x = G__94880;
xs = G__94881;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__94878 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__94882__i = 0, G__94882__a = new Array(arguments.length -  2);
while (G__94882__i < G__94882__a.length) {G__94882__a[G__94882__i] = arguments[G__94882__i + 2]; ++G__94882__i;}
  xs = new cljs.core.IndexedSeq(G__94882__a,0);
} 
return G__94878__delegate.call(this,coll,x,xs);};
G__94878.cljs$lang$maxFixedArity = 2;
G__94878.cljs$lang$applyTo = (function (arglist__94883){
var coll = cljs.core.first(arglist__94883);
arglist__94883 = cljs.core.next(arglist__94883);
var x = cljs.core.first(arglist__94883);
var xs = cljs.core.rest(arglist__94883);
return G__94878__delegate(coll,x,xs);
});
G__94878.cljs$core$IFn$_invoke$arity$variadic = G__94878__delegate;
return G__94878;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__94884 = null;
if (arguments.length > 2) {
var G__94885__i = 0, G__94885__a = new Array(arguments.length -  2);
while (G__94885__i < G__94885__a.length) {G__94885__a[G__94885__i] = arguments[G__94885__i + 2]; ++G__94885__i;}
G__94884 = new cljs.core.IndexedSeq(G__94885__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__94884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__94886 = cljs.core.next(s);
var G__94887 = (acc + (1));
s = G__94886;
acc = G__94887;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__94889 = coll;
if(G__94889){
var bit__4655__auto__ = (G__94889.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4655__auto__) || (G__94889.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__94890 = cljs.core.next(coll);
var G__94891 = (n - (1));
coll = G__94890;
n = G__94891;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__94892 = cljs.core.next(coll);
var G__94893 = (n - (1));
var G__94894 = not_found;
coll = G__94892;
n = G__94893;
not_found = G__94894;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__94899 = coll;
if(G__94899){
var bit__4655__auto__ = (G__94899.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__94899.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__94900 = coll;
if(G__94900){
var bit__4662__auto__ = (G__94900.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__94900.cljs$core$ISeq$)){
return true;
} else {
if((!G__94900.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__94900);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__94900);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__94901 = coll;
if(G__94901){
var bit__4655__auto__ = (G__94901.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__94901.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__94902 = coll;
if(G__94902){
var bit__4662__auto__ = (G__94902.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__94902.cljs$core$ISeq$)){
return true;
} else {
if((!G__94902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__94902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__94902);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__94903 = (n__$1 - (1));
var G__94904 = cljs.core.rest(xs);
n__$1 = G__94903;
xs = G__94904;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__94907 = o;
if(G__94907){
var bit__4655__auto__ = (G__94907.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__94907.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__94908 = o;
if(G__94908){
var bit__4655__auto__ = (G__94908.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__94908.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__94912__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__94913 = ret;
var G__94914 = cljs.core.first(kvs);
var G__94915 = cljs.core.second(kvs);
var G__94916 = cljs.core.nnext(kvs);
coll = G__94913;
k = G__94914;
v = G__94915;
kvs = G__94916;
continue;
} else {
return ret;
}
break;
}
};
var G__94912 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__94917__i = 0, G__94917__a = new Array(arguments.length -  3);
while (G__94917__i < G__94917__a.length) {G__94917__a[G__94917__i] = arguments[G__94917__i + 3]; ++G__94917__i;}
  kvs = new cljs.core.IndexedSeq(G__94917__a,0);
} 
return G__94912__delegate.call(this,coll,k,v,kvs);};
G__94912.cljs$lang$maxFixedArity = 3;
G__94912.cljs$lang$applyTo = (function (arglist__94918){
var coll = cljs.core.first(arglist__94918);
arglist__94918 = cljs.core.next(arglist__94918);
var k = cljs.core.first(arglist__94918);
arglist__94918 = cljs.core.next(arglist__94918);
var v = cljs.core.first(arglist__94918);
var kvs = cljs.core.rest(arglist__94918);
return G__94912__delegate(coll,k,v,kvs);
});
G__94912.cljs$core$IFn$_invoke$arity$variadic = G__94912__delegate;
return G__94912;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__94919 = null;
if (arguments.length > 3) {
var G__94920__i = 0, G__94920__a = new Array(arguments.length -  3);
while (G__94920__i < G__94920__a.length) {G__94920__a[G__94920__i] = arguments[G__94920__i + 3]; ++G__94920__i;}
G__94919 = new cljs.core.IndexedSeq(G__94920__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__94919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__94923__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__94924 = ret;
var G__94925 = cljs.core.first(ks);
var G__94926 = cljs.core.next(ks);
coll = G__94924;
k = G__94925;
ks = G__94926;
continue;
} else {
return ret;
}
}
break;
}
};
var G__94923 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__94927__i = 0, G__94927__a = new Array(arguments.length -  2);
while (G__94927__i < G__94927__a.length) {G__94927__a[G__94927__i] = arguments[G__94927__i + 2]; ++G__94927__i;}
  ks = new cljs.core.IndexedSeq(G__94927__a,0);
} 
return G__94923__delegate.call(this,coll,k,ks);};
G__94923.cljs$lang$maxFixedArity = 2;
G__94923.cljs$lang$applyTo = (function (arglist__94928){
var coll = cljs.core.first(arglist__94928);
arglist__94928 = cljs.core.next(arglist__94928);
var k = cljs.core.first(arglist__94928);
var ks = cljs.core.rest(arglist__94928);
return G__94923__delegate(coll,k,ks);
});
G__94923.cljs$core$IFn$_invoke$arity$variadic = G__94923__delegate;
return G__94923;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__94929 = null;
if (arguments.length > 2) {
var G__94930__i = 0, G__94930__a = new Array(arguments.length -  2);
while (G__94930__i < G__94930__a.length) {G__94930__a[G__94930__i] = arguments[G__94930__i + 2]; ++G__94930__i;}
G__94929 = new cljs.core.IndexedSeq(G__94930__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__94929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3981__auto__ = (function (){var G__94935 = f;
return goog.isFunction(G__94935);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__94936 = f;
if(G__94936){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto____$1 = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
return G__94936.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__94936.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__94936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__94936);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__95402 = null;
var G__95402__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__95402__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94938 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__94938) : self__.afn.call(null,G__94938));
});
var G__95402__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94939 = a;
var G__94940 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__94939,G__94940) : self__.afn.call(null,G__94939,G__94940));
});
var G__95402__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94941 = a;
var G__94942 = b;
var G__94943 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__94941,G__94942,G__94943) : self__.afn.call(null,G__94941,G__94942,G__94943));
});
var G__95402__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94944 = a;
var G__94945 = b;
var G__94946 = c;
var G__94947 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__94944,G__94945,G__94946,G__94947) : self__.afn.call(null,G__94944,G__94945,G__94946,G__94947));
});
var G__95402__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94948 = a;
var G__94949 = b;
var G__94950 = c;
var G__94951 = d;
var G__94952 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__94948,G__94949,G__94950,G__94951,G__94952) : self__.afn.call(null,G__94948,G__94949,G__94950,G__94951,G__94952));
});
var G__95402__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94953 = a;
var G__94954 = b;
var G__94955 = c;
var G__94956 = d;
var G__94957 = e;
var G__94958 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__94953,G__94954,G__94955,G__94956,G__94957,G__94958) : self__.afn.call(null,G__94953,G__94954,G__94955,G__94956,G__94957,G__94958));
});
var G__95402__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94959 = a;
var G__94960 = b;
var G__94961 = c;
var G__94962 = d;
var G__94963 = e;
var G__94964 = f;
var G__94965 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__94959,G__94960,G__94961,G__94962,G__94963,G__94964,G__94965) : self__.afn.call(null,G__94959,G__94960,G__94961,G__94962,G__94963,G__94964,G__94965));
});
var G__95402__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94966 = a;
var G__94967 = b;
var G__94968 = c;
var G__94969 = d;
var G__94970 = e;
var G__94971 = f;
var G__94972 = g;
var G__94973 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__94966,G__94967,G__94968,G__94969,G__94970,G__94971,G__94972,G__94973) : self__.afn.call(null,G__94966,G__94967,G__94968,G__94969,G__94970,G__94971,G__94972,G__94973));
});
var G__95402__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94974 = a;
var G__94975 = b;
var G__94976 = c;
var G__94977 = d;
var G__94978 = e;
var G__94979 = f;
var G__94980 = g;
var G__94981 = h;
var G__94982 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__94974,G__94975,G__94976,G__94977,G__94978,G__94979,G__94980,G__94981,G__94982) : self__.afn.call(null,G__94974,G__94975,G__94976,G__94977,G__94978,G__94979,G__94980,G__94981,G__94982));
});
var G__95402__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94983 = a;
var G__94984 = b;
var G__94985 = c;
var G__94986 = d;
var G__94987 = e;
var G__94988 = f;
var G__94989 = g;
var G__94990 = h;
var G__94991 = i;
var G__94992 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__94983,G__94984,G__94985,G__94986,G__94987,G__94988,G__94989,G__94990,G__94991,G__94992) : self__.afn.call(null,G__94983,G__94984,G__94985,G__94986,G__94987,G__94988,G__94989,G__94990,G__94991,G__94992));
});
var G__95402__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__94993 = a;
var G__94994 = b;
var G__94995 = c;
var G__94996 = d;
var G__94997 = e;
var G__94998 = f;
var G__94999 = g;
var G__95000 = h;
var G__95001 = i;
var G__95002 = j;
var G__95003 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__94993,G__94994,G__94995,G__94996,G__94997,G__94998,G__94999,G__95000,G__95001,G__95002,G__95003) : self__.afn.call(null,G__94993,G__94994,G__94995,G__94996,G__94997,G__94998,G__94999,G__95000,G__95001,G__95002,G__95003));
});
var G__95402__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95004 = a;
var G__95005 = b;
var G__95006 = c;
var G__95007 = d;
var G__95008 = e;
var G__95009 = f;
var G__95010 = g;
var G__95011 = h;
var G__95012 = i;
var G__95013 = j;
var G__95014 = k;
var G__95015 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__95004,G__95005,G__95006,G__95007,G__95008,G__95009,G__95010,G__95011,G__95012,G__95013,G__95014,G__95015) : self__.afn.call(null,G__95004,G__95005,G__95006,G__95007,G__95008,G__95009,G__95010,G__95011,G__95012,G__95013,G__95014,G__95015));
});
var G__95402__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95016 = a;
var G__95017 = b;
var G__95018 = c;
var G__95019 = d;
var G__95020 = e;
var G__95021 = f;
var G__95022 = g;
var G__95023 = h;
var G__95024 = i;
var G__95025 = j;
var G__95026 = k;
var G__95027 = l;
var G__95028 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__95016,G__95017,G__95018,G__95019,G__95020,G__95021,G__95022,G__95023,G__95024,G__95025,G__95026,G__95027,G__95028) : self__.afn.call(null,G__95016,G__95017,G__95018,G__95019,G__95020,G__95021,G__95022,G__95023,G__95024,G__95025,G__95026,G__95027,G__95028));
});
var G__95402__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95029 = a;
var G__95030 = b;
var G__95031 = c;
var G__95032 = d;
var G__95033 = e;
var G__95034 = f;
var G__95035 = g;
var G__95036 = h;
var G__95037 = i;
var G__95038 = j;
var G__95039 = k;
var G__95040 = l;
var G__95041 = m;
var G__95042 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__95029,G__95030,G__95031,G__95032,G__95033,G__95034,G__95035,G__95036,G__95037,G__95038,G__95039,G__95040,G__95041,G__95042) : self__.afn.call(null,G__95029,G__95030,G__95031,G__95032,G__95033,G__95034,G__95035,G__95036,G__95037,G__95038,G__95039,G__95040,G__95041,G__95042));
});
var G__95402__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95043 = a;
var G__95044 = b;
var G__95045 = c;
var G__95046 = d;
var G__95047 = e;
var G__95048 = f;
var G__95049 = g;
var G__95050 = h;
var G__95051 = i;
var G__95052 = j;
var G__95053 = k;
var G__95054 = l;
var G__95055 = m;
var G__95056 = n;
var G__95057 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__95043,G__95044,G__95045,G__95046,G__95047,G__95048,G__95049,G__95050,G__95051,G__95052,G__95053,G__95054,G__95055,G__95056,G__95057) : self__.afn.call(null,G__95043,G__95044,G__95045,G__95046,G__95047,G__95048,G__95049,G__95050,G__95051,G__95052,G__95053,G__95054,G__95055,G__95056,G__95057));
});
var G__95402__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95058 = a;
var G__95059 = b;
var G__95060 = c;
var G__95061 = d;
var G__95062 = e;
var G__95063 = f;
var G__95064 = g;
var G__95065 = h;
var G__95066 = i;
var G__95067 = j;
var G__95068 = k;
var G__95069 = l;
var G__95070 = m;
var G__95071 = n;
var G__95072 = o;
var G__95073 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__95058,G__95059,G__95060,G__95061,G__95062,G__95063,G__95064,G__95065,G__95066,G__95067,G__95068,G__95069,G__95070,G__95071,G__95072,G__95073) : self__.afn.call(null,G__95058,G__95059,G__95060,G__95061,G__95062,G__95063,G__95064,G__95065,G__95066,G__95067,G__95068,G__95069,G__95070,G__95071,G__95072,G__95073));
});
var G__95402__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95074 = a;
var G__95075 = b;
var G__95076 = c;
var G__95077 = d;
var G__95078 = e;
var G__95079 = f;
var G__95080 = g;
var G__95081 = h;
var G__95082 = i;
var G__95083 = j;
var G__95084 = k;
var G__95085 = l;
var G__95086 = m;
var G__95087 = n;
var G__95088 = o;
var G__95089 = p;
var G__95090 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__95074,G__95075,G__95076,G__95077,G__95078,G__95079,G__95080,G__95081,G__95082,G__95083,G__95084,G__95085,G__95086,G__95087,G__95088,G__95089,G__95090) : self__.afn.call(null,G__95074,G__95075,G__95076,G__95077,G__95078,G__95079,G__95080,G__95081,G__95082,G__95083,G__95084,G__95085,G__95086,G__95087,G__95088,G__95089,G__95090));
});
var G__95402__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95091 = a;
var G__95092 = b;
var G__95093 = c;
var G__95094 = d;
var G__95095 = e;
var G__95096 = f;
var G__95097 = g;
var G__95098 = h;
var G__95099 = i;
var G__95100 = j;
var G__95101 = k;
var G__95102 = l;
var G__95103 = m;
var G__95104 = n;
var G__95105 = o;
var G__95106 = p;
var G__95107 = q;
var G__95108 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__95091,G__95092,G__95093,G__95094,G__95095,G__95096,G__95097,G__95098,G__95099,G__95100,G__95101,G__95102,G__95103,G__95104,G__95105,G__95106,G__95107,G__95108) : self__.afn.call(null,G__95091,G__95092,G__95093,G__95094,G__95095,G__95096,G__95097,G__95098,G__95099,G__95100,G__95101,G__95102,G__95103,G__95104,G__95105,G__95106,G__95107,G__95108));
});
var G__95402__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95109 = a;
var G__95110 = b;
var G__95111 = c;
var G__95112 = d;
var G__95113 = e;
var G__95114 = f;
var G__95115 = g;
var G__95116 = h;
var G__95117 = i;
var G__95118 = j;
var G__95119 = k;
var G__95120 = l;
var G__95121 = m;
var G__95122 = n;
var G__95123 = o;
var G__95124 = p;
var G__95125 = q;
var G__95126 = r;
var G__95127 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__95109,G__95110,G__95111,G__95112,G__95113,G__95114,G__95115,G__95116,G__95117,G__95118,G__95119,G__95120,G__95121,G__95122,G__95123,G__95124,G__95125,G__95126,G__95127) : self__.afn.call(null,G__95109,G__95110,G__95111,G__95112,G__95113,G__95114,G__95115,G__95116,G__95117,G__95118,G__95119,G__95120,G__95121,G__95122,G__95123,G__95124,G__95125,G__95126,G__95127));
});
var G__95402__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95128 = a;
var G__95129 = b;
var G__95130 = c;
var G__95131 = d;
var G__95132 = e;
var G__95133 = f;
var G__95134 = g;
var G__95135 = h;
var G__95136 = i;
var G__95137 = j;
var G__95138 = k;
var G__95139 = l;
var G__95140 = m;
var G__95141 = n;
var G__95142 = o;
var G__95143 = p;
var G__95144 = q;
var G__95145 = r;
var G__95146 = s;
var G__95147 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__95128,G__95129,G__95130,G__95131,G__95132,G__95133,G__95134,G__95135,G__95136,G__95137,G__95138,G__95139,G__95140,G__95141,G__95142,G__95143,G__95144,G__95145,G__95146,G__95147) : self__.afn.call(null,G__95128,G__95129,G__95130,G__95131,G__95132,G__95133,G__95134,G__95135,G__95136,G__95137,G__95138,G__95139,G__95140,G__95141,G__95142,G__95143,G__95144,G__95145,G__95146,G__95147));
});
var G__95402__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__95148 = self__.afn;
var G__95149 = a;
var G__95150 = b;
var G__95151 = c;
var G__95152 = d;
var G__95153 = e;
var G__95154 = f;
var G__95155 = g;
var G__95156 = h;
var G__95157 = i;
var G__95158 = j;
var G__95159 = k;
var G__95160 = l;
var G__95161 = m;
var G__95162 = n;
var G__95163 = o;
var G__95164 = p;
var G__95165 = q;
var G__95166 = r;
var G__95167 = s;
var G__95168 = t;
var G__95169 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__95148,G__95149,G__95150,G__95151,G__95152,G__95153,G__95154,G__95155,G__95156,G__95157,G__95158,G__95159,G__95160,G__95161,G__95162,G__95163,G__95164,G__95165,G__95166,G__95167,G__95168,G__95169) : cljs.core.apply.call(null,G__95148,G__95149,G__95150,G__95151,G__95152,G__95153,G__95154,G__95155,G__95156,G__95157,G__95158,G__95159,G__95160,G__95161,G__95162,G__95163,G__95164,G__95165,G__95166,G__95167,G__95168,G__95169));
});
G__95402 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__95402__1.call(this,self__);
case 2:
return G__95402__2.call(this,self__,a);
case 3:
return G__95402__3.call(this,self__,a,b);
case 4:
return G__95402__4.call(this,self__,a,b,c);
case 5:
return G__95402__5.call(this,self__,a,b,c,d);
case 6:
return G__95402__6.call(this,self__,a,b,c,d,e);
case 7:
return G__95402__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__95402__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__95402__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__95402__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__95402__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__95402__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__95402__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__95402__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__95402__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__95402__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__95402__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__95402__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__95402__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__95402__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__95402__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__95402__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__95402.cljs$core$IFn$_invoke$arity$1 = G__95402__1;
G__95402.cljs$core$IFn$_invoke$arity$2 = G__95402__2;
G__95402.cljs$core$IFn$_invoke$arity$3 = G__95402__3;
G__95402.cljs$core$IFn$_invoke$arity$4 = G__95402__4;
G__95402.cljs$core$IFn$_invoke$arity$5 = G__95402__5;
G__95402.cljs$core$IFn$_invoke$arity$6 = G__95402__6;
G__95402.cljs$core$IFn$_invoke$arity$7 = G__95402__7;
G__95402.cljs$core$IFn$_invoke$arity$8 = G__95402__8;
G__95402.cljs$core$IFn$_invoke$arity$9 = G__95402__9;
G__95402.cljs$core$IFn$_invoke$arity$10 = G__95402__10;
G__95402.cljs$core$IFn$_invoke$arity$11 = G__95402__11;
G__95402.cljs$core$IFn$_invoke$arity$12 = G__95402__12;
G__95402.cljs$core$IFn$_invoke$arity$13 = G__95402__13;
G__95402.cljs$core$IFn$_invoke$arity$14 = G__95402__14;
G__95402.cljs$core$IFn$_invoke$arity$15 = G__95402__15;
G__95402.cljs$core$IFn$_invoke$arity$16 = G__95402__16;
G__95402.cljs$core$IFn$_invoke$arity$17 = G__95402__17;
G__95402.cljs$core$IFn$_invoke$arity$18 = G__95402__18;
G__95402.cljs$core$IFn$_invoke$arity$19 = G__95402__19;
G__95402.cljs$core$IFn$_invoke$arity$20 = G__95402__20;
G__95402.cljs$core$IFn$_invoke$arity$21 = G__95402__21;
G__95402.cljs$core$IFn$_invoke$arity$22 = G__95402__22;
return G__95402;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args94937){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args94937)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__95170 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__95170) : self__.afn.call(null,G__95170));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__95171 = a;
var G__95172 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__95171,G__95172) : self__.afn.call(null,G__95171,G__95172));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__95173 = a;
var G__95174 = b;
var G__95175 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__95173,G__95174,G__95175) : self__.afn.call(null,G__95173,G__95174,G__95175));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__95176 = a;
var G__95177 = b;
var G__95178 = c;
var G__95179 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__95176,G__95177,G__95178,G__95179) : self__.afn.call(null,G__95176,G__95177,G__95178,G__95179));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__95180 = a;
var G__95181 = b;
var G__95182 = c;
var G__95183 = d;
var G__95184 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__95180,G__95181,G__95182,G__95183,G__95184) : self__.afn.call(null,G__95180,G__95181,G__95182,G__95183,G__95184));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__95185 = a;
var G__95186 = b;
var G__95187 = c;
var G__95188 = d;
var G__95189 = e;
var G__95190 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__95185,G__95186,G__95187,G__95188,G__95189,G__95190) : self__.afn.call(null,G__95185,G__95186,G__95187,G__95188,G__95189,G__95190));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__95191 = a;
var G__95192 = b;
var G__95193 = c;
var G__95194 = d;
var G__95195 = e;
var G__95196 = f;
var G__95197 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__95191,G__95192,G__95193,G__95194,G__95195,G__95196,G__95197) : self__.afn.call(null,G__95191,G__95192,G__95193,G__95194,G__95195,G__95196,G__95197));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__95198 = a;
var G__95199 = b;
var G__95200 = c;
var G__95201 = d;
var G__95202 = e;
var G__95203 = f;
var G__95204 = g;
var G__95205 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__95198,G__95199,G__95200,G__95201,G__95202,G__95203,G__95204,G__95205) : self__.afn.call(null,G__95198,G__95199,G__95200,G__95201,G__95202,G__95203,G__95204,G__95205));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__95206 = a;
var G__95207 = b;
var G__95208 = c;
var G__95209 = d;
var G__95210 = e;
var G__95211 = f;
var G__95212 = g;
var G__95213 = h;
var G__95214 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__95206,G__95207,G__95208,G__95209,G__95210,G__95211,G__95212,G__95213,G__95214) : self__.afn.call(null,G__95206,G__95207,G__95208,G__95209,G__95210,G__95211,G__95212,G__95213,G__95214));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__95215 = a;
var G__95216 = b;
var G__95217 = c;
var G__95218 = d;
var G__95219 = e;
var G__95220 = f;
var G__95221 = g;
var G__95222 = h;
var G__95223 = i;
var G__95224 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__95215,G__95216,G__95217,G__95218,G__95219,G__95220,G__95221,G__95222,G__95223,G__95224) : self__.afn.call(null,G__95215,G__95216,G__95217,G__95218,G__95219,G__95220,G__95221,G__95222,G__95223,G__95224));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__95225 = a;
var G__95226 = b;
var G__95227 = c;
var G__95228 = d;
var G__95229 = e;
var G__95230 = f;
var G__95231 = g;
var G__95232 = h;
var G__95233 = i;
var G__95234 = j;
var G__95235 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__95225,G__95226,G__95227,G__95228,G__95229,G__95230,G__95231,G__95232,G__95233,G__95234,G__95235) : self__.afn.call(null,G__95225,G__95226,G__95227,G__95228,G__95229,G__95230,G__95231,G__95232,G__95233,G__95234,G__95235));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__95236 = a;
var G__95237 = b;
var G__95238 = c;
var G__95239 = d;
var G__95240 = e;
var G__95241 = f;
var G__95242 = g;
var G__95243 = h;
var G__95244 = i;
var G__95245 = j;
var G__95246 = k;
var G__95247 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__95236,G__95237,G__95238,G__95239,G__95240,G__95241,G__95242,G__95243,G__95244,G__95245,G__95246,G__95247) : self__.afn.call(null,G__95236,G__95237,G__95238,G__95239,G__95240,G__95241,G__95242,G__95243,G__95244,G__95245,G__95246,G__95247));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__95248 = a;
var G__95249 = b;
var G__95250 = c;
var G__95251 = d;
var G__95252 = e;
var G__95253 = f;
var G__95254 = g;
var G__95255 = h;
var G__95256 = i;
var G__95257 = j;
var G__95258 = k;
var G__95259 = l;
var G__95260 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__95248,G__95249,G__95250,G__95251,G__95252,G__95253,G__95254,G__95255,G__95256,G__95257,G__95258,G__95259,G__95260) : self__.afn.call(null,G__95248,G__95249,G__95250,G__95251,G__95252,G__95253,G__95254,G__95255,G__95256,G__95257,G__95258,G__95259,G__95260));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__95261 = a;
var G__95262 = b;
var G__95263 = c;
var G__95264 = d;
var G__95265 = e;
var G__95266 = f;
var G__95267 = g;
var G__95268 = h;
var G__95269 = i;
var G__95270 = j;
var G__95271 = k;
var G__95272 = l;
var G__95273 = m;
var G__95274 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__95261,G__95262,G__95263,G__95264,G__95265,G__95266,G__95267,G__95268,G__95269,G__95270,G__95271,G__95272,G__95273,G__95274) : self__.afn.call(null,G__95261,G__95262,G__95263,G__95264,G__95265,G__95266,G__95267,G__95268,G__95269,G__95270,G__95271,G__95272,G__95273,G__95274));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__95275 = a;
var G__95276 = b;
var G__95277 = c;
var G__95278 = d;
var G__95279 = e;
var G__95280 = f;
var G__95281 = g;
var G__95282 = h;
var G__95283 = i;
var G__95284 = j;
var G__95285 = k;
var G__95286 = l;
var G__95287 = m;
var G__95288 = n;
var G__95289 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__95275,G__95276,G__95277,G__95278,G__95279,G__95280,G__95281,G__95282,G__95283,G__95284,G__95285,G__95286,G__95287,G__95288,G__95289) : self__.afn.call(null,G__95275,G__95276,G__95277,G__95278,G__95279,G__95280,G__95281,G__95282,G__95283,G__95284,G__95285,G__95286,G__95287,G__95288,G__95289));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__95290 = a;
var G__95291 = b;
var G__95292 = c;
var G__95293 = d;
var G__95294 = e;
var G__95295 = f;
var G__95296 = g;
var G__95297 = h;
var G__95298 = i;
var G__95299 = j;
var G__95300 = k;
var G__95301 = l;
var G__95302 = m;
var G__95303 = n;
var G__95304 = o;
var G__95305 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__95290,G__95291,G__95292,G__95293,G__95294,G__95295,G__95296,G__95297,G__95298,G__95299,G__95300,G__95301,G__95302,G__95303,G__95304,G__95305) : self__.afn.call(null,G__95290,G__95291,G__95292,G__95293,G__95294,G__95295,G__95296,G__95297,G__95298,G__95299,G__95300,G__95301,G__95302,G__95303,G__95304,G__95305));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__95306 = a;
var G__95307 = b;
var G__95308 = c;
var G__95309 = d;
var G__95310 = e;
var G__95311 = f;
var G__95312 = g;
var G__95313 = h;
var G__95314 = i;
var G__95315 = j;
var G__95316 = k;
var G__95317 = l;
var G__95318 = m;
var G__95319 = n;
var G__95320 = o;
var G__95321 = p;
var G__95322 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__95306,G__95307,G__95308,G__95309,G__95310,G__95311,G__95312,G__95313,G__95314,G__95315,G__95316,G__95317,G__95318,G__95319,G__95320,G__95321,G__95322) : self__.afn.call(null,G__95306,G__95307,G__95308,G__95309,G__95310,G__95311,G__95312,G__95313,G__95314,G__95315,G__95316,G__95317,G__95318,G__95319,G__95320,G__95321,G__95322));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__95323 = a;
var G__95324 = b;
var G__95325 = c;
var G__95326 = d;
var G__95327 = e;
var G__95328 = f;
var G__95329 = g;
var G__95330 = h;
var G__95331 = i;
var G__95332 = j;
var G__95333 = k;
var G__95334 = l;
var G__95335 = m;
var G__95336 = n;
var G__95337 = o;
var G__95338 = p;
var G__95339 = q;
var G__95340 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__95323,G__95324,G__95325,G__95326,G__95327,G__95328,G__95329,G__95330,G__95331,G__95332,G__95333,G__95334,G__95335,G__95336,G__95337,G__95338,G__95339,G__95340) : self__.afn.call(null,G__95323,G__95324,G__95325,G__95326,G__95327,G__95328,G__95329,G__95330,G__95331,G__95332,G__95333,G__95334,G__95335,G__95336,G__95337,G__95338,G__95339,G__95340));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__95341 = a;
var G__95342 = b;
var G__95343 = c;
var G__95344 = d;
var G__95345 = e;
var G__95346 = f;
var G__95347 = g;
var G__95348 = h;
var G__95349 = i;
var G__95350 = j;
var G__95351 = k;
var G__95352 = l;
var G__95353 = m;
var G__95354 = n;
var G__95355 = o;
var G__95356 = p;
var G__95357 = q;
var G__95358 = r;
var G__95359 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__95341,G__95342,G__95343,G__95344,G__95345,G__95346,G__95347,G__95348,G__95349,G__95350,G__95351,G__95352,G__95353,G__95354,G__95355,G__95356,G__95357,G__95358,G__95359) : self__.afn.call(null,G__95341,G__95342,G__95343,G__95344,G__95345,G__95346,G__95347,G__95348,G__95349,G__95350,G__95351,G__95352,G__95353,G__95354,G__95355,G__95356,G__95357,G__95358,G__95359));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__95360 = a;
var G__95361 = b;
var G__95362 = c;
var G__95363 = d;
var G__95364 = e;
var G__95365 = f;
var G__95366 = g;
var G__95367 = h;
var G__95368 = i;
var G__95369 = j;
var G__95370 = k;
var G__95371 = l;
var G__95372 = m;
var G__95373 = n;
var G__95374 = o;
var G__95375 = p;
var G__95376 = q;
var G__95377 = r;
var G__95378 = s;
var G__95379 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__95360,G__95361,G__95362,G__95363,G__95364,G__95365,G__95366,G__95367,G__95368,G__95369,G__95370,G__95371,G__95372,G__95373,G__95374,G__95375,G__95376,G__95377,G__95378,G__95379) : self__.afn.call(null,G__95360,G__95361,G__95362,G__95363,G__95364,G__95365,G__95366,G__95367,G__95368,G__95369,G__95370,G__95371,G__95372,G__95373,G__95374,G__95375,G__95376,G__95377,G__95378,G__95379));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__95380 = self__.afn;
var G__95381 = a;
var G__95382 = b;
var G__95383 = c;
var G__95384 = d;
var G__95385 = e;
var G__95386 = f;
var G__95387 = g;
var G__95388 = h;
var G__95389 = i;
var G__95390 = j;
var G__95391 = k;
var G__95392 = l;
var G__95393 = m;
var G__95394 = n;
var G__95395 = o;
var G__95396 = p;
var G__95397 = q;
var G__95398 = r;
var G__95399 = s;
var G__95400 = t;
var G__95401 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__95380,G__95381,G__95382,G__95383,G__95384,G__95385,G__95386,G__95387,G__95388,G__95389,G__95390,G__95391,G__95392,G__95393,G__95394,G__95395,G__95396,G__95397,G__95398,G__95399,G__95400,G__95401) : cljs.core.apply.call(null,G__95380,G__95381,G__95382,G__95383,G__95384,G__95385,G__95386,G__95387,G__95388,G__95389,G__95390,G__95391,G__95392,G__95393,G__95394,G__95395,G__95396,G__95397,G__95398,G__95399,G__95400,G__95401));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__95406 = o;
if(G__95406){
var bit__4662__auto__ = (G__95406.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4662__auto__) || (G__95406.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__95406.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__95406);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__95406);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3969__auto__ = !((o == null));
if(and__3969__auto__){
var G__95410 = o;
if(G__95410){
var bit__4662__auto__ = (G__95410.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__95410.cljs$core$IMeta$)){
return true;
} else {
if((!G__95410.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__95410);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__95410);
}
} else {
return and__3969__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__95413__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__95414 = ret;
var G__95415 = cljs.core.first(ks);
var G__95416 = cljs.core.next(ks);
coll = G__95414;
k = G__95415;
ks = G__95416;
continue;
} else {
return ret;
}
}
break;
}
};
var G__95413 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__95417__i = 0, G__95417__a = new Array(arguments.length -  2);
while (G__95417__i < G__95417__a.length) {G__95417__a[G__95417__i] = arguments[G__95417__i + 2]; ++G__95417__i;}
  ks = new cljs.core.IndexedSeq(G__95417__a,0);
} 
return G__95413__delegate.call(this,coll,k,ks);};
G__95413.cljs$lang$maxFixedArity = 2;
G__95413.cljs$lang$applyTo = (function (arglist__95418){
var coll = cljs.core.first(arglist__95418);
arglist__95418 = cljs.core.next(arglist__95418);
var k = cljs.core.first(arglist__95418);
var ks = cljs.core.rest(arglist__95418);
return G__95413__delegate(coll,k,ks);
});
G__95413.cljs$core$IFn$_invoke$arity$variadic = G__95413__delegate;
return G__95413;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__95419 = null;
if (arguments.length > 2) {
var G__95420__i = 0, G__95420__a = new Array(arguments.length -  2);
while (G__95420__i < G__95420__a.length) {G__95420__a[G__95420__i] = arguments[G__95420__i + 2]; ++G__95420__i;}
G__95419 = new cljs.core.IndexedSeq(G__95420__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__95419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__95422 = x;
if(G__95422){
var bit__4662__auto__ = (G__95422.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4662__auto__) || (G__95422.cljs$core$ICollection$)){
return true;
} else {
if((!G__95422.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__95422);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__95422);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__95424 = x;
if(G__95424){
var bit__4662__auto__ = (G__95424.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4662__auto__) || (G__95424.cljs$core$ISet$)){
return true;
} else {
if((!G__95424.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__95424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__95424);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__95426 = x;
if(G__95426){
var bit__4662__auto__ = (G__95426.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4662__auto__) || (G__95426.cljs$core$IAssociative$)){
return true;
} else {
if((!G__95426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__95426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__95426);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__95428 = x;
if(G__95428){
var bit__4662__auto__ = (G__95428.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4662__auto__) || (G__95428.cljs$core$ISequential$)){
return true;
} else {
if((!G__95428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__95428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__95428);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__95430 = x;
if(G__95430){
var bit__4662__auto__ = (G__95430.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4662__auto__) || (G__95430.cljs$core$ISorted$)){
return true;
} else {
if((!G__95430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__95430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__95430);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__95432 = x;
if(G__95432){
var bit__4662__auto__ = (G__95432.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4662__auto__) || (G__95432.cljs$core$IReduce$)){
return true;
} else {
if((!G__95432.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__95432);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__95432);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__95434 = x;
if(G__95434){
var bit__4662__auto__ = (G__95434.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4662__auto__) || (G__95434.cljs$core$IMap$)){
return true;
} else {
if((!G__95434.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__95434);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__95434);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__95436 = x;
if(G__95436){
var bit__4662__auto__ = (G__95436.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4662__auto__) || (G__95436.cljs$core$IVector$)){
return true;
} else {
if((!G__95436.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__95436);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__95436);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__95438 = x;
if(G__95438){
var bit__4655__auto__ = (G__95438.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4655__auto__) || (G__95438.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj95444 = {};
return obj95444;
});
var js_obj__1 = (function() { 
var G__95447__delegate = function (keyvals){
var G__95445 = goog.object.create;
var G__95446 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__95445,G__95446) : cljs.core.apply.call(null,G__95445,G__95446));
};
var G__95447 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__95448__i = 0, G__95448__a = new Array(arguments.length -  0);
while (G__95448__i < G__95448__a.length) {G__95448__a[G__95448__i] = arguments[G__95448__i + 0]; ++G__95448__i;}
  keyvals = new cljs.core.IndexedSeq(G__95448__a,0);
} 
return G__95447__delegate.call(this,keyvals);};
G__95447.cljs$lang$maxFixedArity = 0;
G__95447.cljs$lang$applyTo = (function (arglist__95449){
var keyvals = cljs.core.seq(arglist__95449);
return G__95447__delegate(keyvals);
});
G__95447.cljs$core$IFn$_invoke$arity$variadic = G__95447__delegate;
return G__95447;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__95450 = null;
if (arguments.length > 0) {
var G__95451__i = 0, G__95451__a = new Array(arguments.length -  0);
while (G__95451__i < G__95451__a.length) {G__95451__a[G__95451__i] = arguments[G__95451__i + 0]; ++G__95451__i;}
G__95450 = new cljs.core.IndexedSeq(G__95451__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__95450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__95454_95456 = obj;
var G__95455_95457 = ((function (G__95454_95456,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__95454_95456,keys))
;
goog.object.forEach(G__95454_95456,G__95455_95457);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__95458 = (i__$1 + (1));
var G__95459 = (j__$1 + (1));
var G__95460 = (len__$1 - (1));
i__$1 = G__95458;
j__$1 = G__95459;
len__$1 = G__95460;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__95461 = (i__$1 - (1));
var G__95462 = (j__$1 - (1));
var G__95463 = (len__$1 - (1));
i__$1 = G__95461;
j__$1 = G__95462;
len__$1 = G__95463;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj95465 = {};
return obj95465;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__95467 = s;
if(G__95467){
var bit__4662__auto__ = (G__95467.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__95467.cljs$core$ISeq$)){
return true;
} else {
if((!G__95467.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__95467);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__95467);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__95469 = s;
if(G__95469){
var bit__4662__auto__ = (G__95469.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4662__auto__) || (G__95469.cljs$core$ISeqable$)){
return true;
} else {
if((!G__95469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__95469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__95469);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3981__auto__ = cljs.core.fn_QMARK_(f);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__95473 = f;
if(G__95473){
var bit__4662__auto__ = (G__95473.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4662__auto__) || (G__95473.cljs$core$IFn$)){
return true;
} else {
if((!G__95473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__95473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__95473);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__95486 = n;
return isNaN(G__95486);
})())) && (!((n === Infinity))) && (((function (){var G__95487 = n;
return parseFloat(G__95487);
})() === (function (){var G__95488 = n;
var G__95489 = (10);
return parseInt(G__95488,G__95489);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__95490__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__95491 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__95492 = etc;
s = G__95491;
xs = G__95492;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__95490 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95493__i = 0, G__95493__a = new Array(arguments.length -  2);
while (G__95493__i < G__95493__a.length) {G__95493__a[G__95493__i] = arguments[G__95493__i + 2]; ++G__95493__i;}
  more = new cljs.core.IndexedSeq(G__95493__a,0);
} 
return G__95490__delegate.call(this,x,y,more);};
G__95490.cljs$lang$maxFixedArity = 2;
G__95490.cljs$lang$applyTo = (function (arglist__95494){
var x = cljs.core.first(arglist__95494);
arglist__95494 = cljs.core.next(arglist__95494);
var y = cljs.core.first(arglist__95494);
var more = cljs.core.rest(arglist__95494);
return G__95490__delegate(x,y,more);
});
G__95490.cljs$core$IFn$_invoke$arity$variadic = G__95490__delegate;
return G__95490;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__95495 = null;
if (arguments.length > 2) {
var G__95496__i = 0, G__95496__a = new Array(arguments.length -  2);
while (G__95496__i < G__95496__a.length) {G__95496__a[G__95496__i] = arguments[G__95496__i + 2]; ++G__95496__i;}
G__95495 = new cljs.core.IndexedSeq(G__95496__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__95500 = x;
if(G__95500){
var bit__4655__auto__ = (G__95500.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4655__auto__) || (G__95500.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__95501 = x;
var G__95502 = y;
return goog.array.defaultCompare(G__95501,G__95502);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__95507 = xs;
var G__95508 = ys;
var G__95509 = len;
var G__95510 = (n + (1));
xs = G__95507;
ys = G__95508;
len = G__95509;
n = G__95510;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__95515 = x;
var G__95516 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__95515,G__95516) : f.call(null,G__95515,G__95516));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__95517 = y;
var G__95518 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__95517,G__95518) : f.call(null,G__95517,G__95518));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__95524 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__95524) : cljs.core.to_array.call(null,G__95524));
})();
var G__95525_95527 = a;
var G__95526_95528 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__95525_95527,G__95526_95528);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__95534 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__95534) : keyfn.call(null,G__95534));
})(),(function (){var G__95535 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__95535) : keyfn.call(null,G__95535));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__95541 = f;
var G__95542 = cljs.core.first(s);
var G__95543 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__95541,G__95542,G__95543) : cljs.core.reduce.call(null,G__95541,G__95542,G__95543));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__95544 = val__$1;
var G__95545 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__95544,G__95545) : f.call(null,G__95544,G__95545));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__95546 = nval;
var G__95547 = cljs.core.next(coll__$1);
val__$1 = G__95546;
coll__$1 = G__95547;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__95551 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__95551) : cljs.core.to_array.call(null,G__95551));
})();
var G__95552_95554 = a;
goog.array.shuffle(G__95552_95554);

var G__95553 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__95553) : cljs.core.vec.call(null,G__95553));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__95557 = coll;
if(G__95557){
var bit__4655__auto__ = (G__95557.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__95557.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__95558 = coll;
if(G__95558){
var bit__4655__auto__ = (G__95558.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__95558.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__95567 = null;
var G__95567__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__95567__1 = (function (x){
var G__95564 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__95564) : cf.call(null,G__95564));
});
var G__95567__2 = (function (x,y){
var G__95565 = x;
var G__95566 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__95565,G__95566) : f.call(null,G__95565,G__95566));
});
G__95567 = function(x,y){
switch(arguments.length){
case 0:
return G__95567__0.call(this);
case 1:
return G__95567__1.call(this,x);
case 2:
return G__95567__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__95567.cljs$core$IFn$_invoke$arity$0 = G__95567__0;
G__95567.cljs$core$IFn$_invoke$arity$1 = G__95567__1;
G__95567.cljs$core$IFn$_invoke$arity$2 = G__95567__2;
return G__95567;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__95574 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__95574) : xform.call(null,G__95574));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__95575 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__95575) : f__$1.call(null,G__95575));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__95576__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__95576 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95577__i = 0, G__95577__a = new Array(arguments.length -  2);
while (G__95577__i < G__95577__a.length) {G__95577__a[G__95577__i] = arguments[G__95577__i + 2]; ++G__95577__i;}
  more = new cljs.core.IndexedSeq(G__95577__a,0);
} 
return G__95576__delegate.call(this,x,y,more);};
G__95576.cljs$lang$maxFixedArity = 2;
G__95576.cljs$lang$applyTo = (function (arglist__95578){
var x = cljs.core.first(arglist__95578);
arglist__95578 = cljs.core.next(arglist__95578);
var y = cljs.core.first(arglist__95578);
var more = cljs.core.rest(arglist__95578);
return G__95576__delegate(x,y,more);
});
G__95576.cljs$core$IFn$_invoke$arity$variadic = G__95576__delegate;
return G__95576;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__95579 = null;
if (arguments.length > 2) {
var G__95580__i = 0, G__95580__a = new Array(arguments.length -  2);
while (G__95580__i < G__95580__a.length) {G__95580__a[G__95580__i] = arguments[G__95580__i + 2]; ++G__95580__i;}
G__95579 = new cljs.core.IndexedSeq(G__95580__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__95581__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__95581 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95582__i = 0, G__95582__a = new Array(arguments.length -  2);
while (G__95582__i < G__95582__a.length) {G__95582__a[G__95582__i] = arguments[G__95582__i + 2]; ++G__95582__i;}
  more = new cljs.core.IndexedSeq(G__95582__a,0);
} 
return G__95581__delegate.call(this,x,y,more);};
G__95581.cljs$lang$maxFixedArity = 2;
G__95581.cljs$lang$applyTo = (function (arglist__95583){
var x = cljs.core.first(arglist__95583);
arglist__95583 = cljs.core.next(arglist__95583);
var y = cljs.core.first(arglist__95583);
var more = cljs.core.rest(arglist__95583);
return G__95581__delegate(x,y,more);
});
G__95581.cljs$core$IFn$_invoke$arity$variadic = G__95581__delegate;
return G__95581;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__95584 = null;
if (arguments.length > 2) {
var G__95585__i = 0, G__95585__a = new Array(arguments.length -  2);
while (G__95585__i < G__95585__a.length) {G__95585__a[G__95585__i] = arguments[G__95585__i + 2]; ++G__95585__i;}
G__95584 = new cljs.core.IndexedSeq(G__95585__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__95586__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__95586 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95587__i = 0, G__95587__a = new Array(arguments.length -  2);
while (G__95587__i < G__95587__a.length) {G__95587__a[G__95587__i] = arguments[G__95587__i + 2]; ++G__95587__i;}
  more = new cljs.core.IndexedSeq(G__95587__a,0);
} 
return G__95586__delegate.call(this,x,y,more);};
G__95586.cljs$lang$maxFixedArity = 2;
G__95586.cljs$lang$applyTo = (function (arglist__95588){
var x = cljs.core.first(arglist__95588);
arglist__95588 = cljs.core.next(arglist__95588);
var y = cljs.core.first(arglist__95588);
var more = cljs.core.rest(arglist__95588);
return G__95586__delegate(x,y,more);
});
G__95586.cljs$core$IFn$_invoke$arity$variadic = G__95586__delegate;
return G__95586;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__95589 = null;
if (arguments.length > 2) {
var G__95590__i = 0, G__95590__a = new Array(arguments.length -  2);
while (G__95590__i < G__95590__a.length) {G__95590__a[G__95590__i] = arguments[G__95590__i + 2]; ++G__95590__i;}
G__95589 = new cljs.core.IndexedSeq(G__95590__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95589);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__95595__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__95595 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95596__i = 0, G__95596__a = new Array(arguments.length -  2);
while (G__95596__i < G__95596__a.length) {G__95596__a[G__95596__i] = arguments[G__95596__i + 2]; ++G__95596__i;}
  more = new cljs.core.IndexedSeq(G__95596__a,0);
} 
return G__95595__delegate.call(this,x,y,more);};
G__95595.cljs$lang$maxFixedArity = 2;
G__95595.cljs$lang$applyTo = (function (arglist__95597){
var x = cljs.core.first(arglist__95597);
arglist__95597 = cljs.core.next(arglist__95597);
var y = cljs.core.first(arglist__95597);
var more = cljs.core.rest(arglist__95597);
return G__95595__delegate(x,y,more);
});
G__95595.cljs$core$IFn$_invoke$arity$variadic = G__95595__delegate;
return G__95595;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__95598 = null;
if (arguments.length > 2) {
var G__95599__i = 0, G__95599__a = new Array(arguments.length -  2);
while (G__95599__i < G__95599__a.length) {G__95599__a[G__95599__i] = arguments[G__95599__i + 2]; ++G__95599__i;}
G__95598 = new cljs.core.IndexedSeq(G__95599__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__95600__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__95601 = y;
var G__95602 = cljs.core.first(more);
var G__95603 = cljs.core.next(more);
x = G__95601;
y = G__95602;
more = G__95603;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__95600 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95604__i = 0, G__95604__a = new Array(arguments.length -  2);
while (G__95604__i < G__95604__a.length) {G__95604__a[G__95604__i] = arguments[G__95604__i + 2]; ++G__95604__i;}
  more = new cljs.core.IndexedSeq(G__95604__a,0);
} 
return G__95600__delegate.call(this,x,y,more);};
G__95600.cljs$lang$maxFixedArity = 2;
G__95600.cljs$lang$applyTo = (function (arglist__95605){
var x = cljs.core.first(arglist__95605);
arglist__95605 = cljs.core.next(arglist__95605);
var y = cljs.core.first(arglist__95605);
var more = cljs.core.rest(arglist__95605);
return G__95600__delegate(x,y,more);
});
G__95600.cljs$core$IFn$_invoke$arity$variadic = G__95600__delegate;
return G__95600;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__95606 = null;
if (arguments.length > 2) {
var G__95607__i = 0, G__95607__a = new Array(arguments.length -  2);
while (G__95607__i < G__95607__a.length) {G__95607__a[G__95607__i] = arguments[G__95607__i + 2]; ++G__95607__i;}
G__95606 = new cljs.core.IndexedSeq(G__95607__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__95608__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__95609 = y;
var G__95610 = cljs.core.first(more);
var G__95611 = cljs.core.next(more);
x = G__95609;
y = G__95610;
more = G__95611;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__95608 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95612__i = 0, G__95612__a = new Array(arguments.length -  2);
while (G__95612__i < G__95612__a.length) {G__95612__a[G__95612__i] = arguments[G__95612__i + 2]; ++G__95612__i;}
  more = new cljs.core.IndexedSeq(G__95612__a,0);
} 
return G__95608__delegate.call(this,x,y,more);};
G__95608.cljs$lang$maxFixedArity = 2;
G__95608.cljs$lang$applyTo = (function (arglist__95613){
var x = cljs.core.first(arglist__95613);
arglist__95613 = cljs.core.next(arglist__95613);
var y = cljs.core.first(arglist__95613);
var more = cljs.core.rest(arglist__95613);
return G__95608__delegate(x,y,more);
});
G__95608.cljs$core$IFn$_invoke$arity$variadic = G__95608__delegate;
return G__95608;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__95614 = null;
if (arguments.length > 2) {
var G__95615__i = 0, G__95615__a = new Array(arguments.length -  2);
while (G__95615__i < G__95615__a.length) {G__95615__a[G__95615__i] = arguments[G__95615__i + 2]; ++G__95615__i;}
G__95614 = new cljs.core.IndexedSeq(G__95615__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__95616__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__95617 = y;
var G__95618 = cljs.core.first(more);
var G__95619 = cljs.core.next(more);
x = G__95617;
y = G__95618;
more = G__95619;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__95616 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95620__i = 0, G__95620__a = new Array(arguments.length -  2);
while (G__95620__i < G__95620__a.length) {G__95620__a[G__95620__i] = arguments[G__95620__i + 2]; ++G__95620__i;}
  more = new cljs.core.IndexedSeq(G__95620__a,0);
} 
return G__95616__delegate.call(this,x,y,more);};
G__95616.cljs$lang$maxFixedArity = 2;
G__95616.cljs$lang$applyTo = (function (arglist__95621){
var x = cljs.core.first(arglist__95621);
arglist__95621 = cljs.core.next(arglist__95621);
var y = cljs.core.first(arglist__95621);
var more = cljs.core.rest(arglist__95621);
return G__95616__delegate(x,y,more);
});
G__95616.cljs$core$IFn$_invoke$arity$variadic = G__95616__delegate;
return G__95616;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__95622 = null;
if (arguments.length > 2) {
var G__95623__i = 0, G__95623__a = new Array(arguments.length -  2);
while (G__95623__i < G__95623__a.length) {G__95623__a[G__95623__i] = arguments[G__95623__i + 2]; ++G__95623__i;}
G__95622 = new cljs.core.IndexedSeq(G__95623__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__95624__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__95625 = y;
var G__95626 = cljs.core.first(more);
var G__95627 = cljs.core.next(more);
x = G__95625;
y = G__95626;
more = G__95627;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__95624 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95628__i = 0, G__95628__a = new Array(arguments.length -  2);
while (G__95628__i < G__95628__a.length) {G__95628__a[G__95628__i] = arguments[G__95628__i + 2]; ++G__95628__i;}
  more = new cljs.core.IndexedSeq(G__95628__a,0);
} 
return G__95624__delegate.call(this,x,y,more);};
G__95624.cljs$lang$maxFixedArity = 2;
G__95624.cljs$lang$applyTo = (function (arglist__95629){
var x = cljs.core.first(arglist__95629);
arglist__95629 = cljs.core.next(arglist__95629);
var y = cljs.core.first(arglist__95629);
var more = cljs.core.rest(arglist__95629);
return G__95624__delegate(x,y,more);
});
G__95624.cljs$core$IFn$_invoke$arity$variadic = G__95624__delegate;
return G__95624;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__95630 = null;
if (arguments.length > 2) {
var G__95631__i = 0, G__95631__a = new Array(arguments.length -  2);
while (G__95631__i < G__95631__a.length) {G__95631__a[G__95631__i] = arguments[G__95631__i + 2]; ++G__95631__i;}
G__95630 = new cljs.core.IndexedSeq(G__95631__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
});
var max__3 = (function() { 
var G__95632__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})(),more);
};
var G__95632 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95633__i = 0, G__95633__a = new Array(arguments.length -  2);
while (G__95633__i < G__95633__a.length) {G__95633__a[G__95633__i] = arguments[G__95633__i + 2]; ++G__95633__i;}
  more = new cljs.core.IndexedSeq(G__95633__a,0);
} 
return G__95632__delegate.call(this,x,y,more);};
G__95632.cljs$lang$maxFixedArity = 2;
G__95632.cljs$lang$applyTo = (function (arglist__95634){
var x = cljs.core.first(arglist__95634);
arglist__95634 = cljs.core.next(arglist__95634);
var y = cljs.core.first(arglist__95634);
var more = cljs.core.rest(arglist__95634);
return G__95632__delegate(x,y,more);
});
G__95632.cljs$core$IFn$_invoke$arity$variadic = G__95632__delegate;
return G__95632;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__95635 = null;
if (arguments.length > 2) {
var G__95636__i = 0, G__95636__a = new Array(arguments.length -  2);
while (G__95636__i < G__95636__a.length) {G__95636__a[G__95636__i] = arguments[G__95636__i + 2]; ++G__95636__i;}
G__95635 = new cljs.core.IndexedSeq(G__95636__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
});
var min__3 = (function() { 
var G__95637__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
})(),more);
};
var G__95637 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95638__i = 0, G__95638__a = new Array(arguments.length -  2);
while (G__95638__i < G__95638__a.length) {G__95638__a[G__95638__i] = arguments[G__95638__i + 2]; ++G__95638__i;}
  more = new cljs.core.IndexedSeq(G__95638__a,0);
} 
return G__95637__delegate.call(this,x,y,more);};
G__95637.cljs$lang$maxFixedArity = 2;
G__95637.cljs$lang$applyTo = (function (arglist__95639){
var x = cljs.core.first(arglist__95639);
arglist__95639 = cljs.core.next(arglist__95639);
var y = cljs.core.first(arglist__95639);
var more = cljs.core.rest(arglist__95639);
return G__95637__delegate(x,y,more);
});
G__95637.cljs$core$IFn$_invoke$arity$variadic = G__95637__delegate;
return G__95637;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__95640 = null;
if (arguments.length > 2) {
var G__95641__i = 0, G__95641__a = new Array(arguments.length -  2);
while (G__95641__i < G__95641__a.length) {G__95641__a[G__95641__i] = arguments[G__95641__i + 2]; ++G__95641__i;}
G__95640 = new cljs.core.IndexedSeq(G__95641__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__95642__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__95642 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95643__i = 0, G__95643__a = new Array(arguments.length -  2);
while (G__95643__i < G__95643__a.length) {G__95643__a[G__95643__i] = arguments[G__95643__i + 2]; ++G__95643__i;}
  more = new cljs.core.IndexedSeq(G__95643__a,0);
} 
return G__95642__delegate.call(this,x,y,more);};
G__95642.cljs$lang$maxFixedArity = 2;
G__95642.cljs$lang$applyTo = (function (arglist__95644){
var x = cljs.core.first(arglist__95644);
arglist__95644 = cljs.core.next(arglist__95644);
var y = cljs.core.first(arglist__95644);
var more = cljs.core.rest(arglist__95644);
return G__95642__delegate(x,y,more);
});
G__95642.cljs$core$IFn$_invoke$arity$variadic = G__95642__delegate;
return G__95642;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__95645 = null;
if (arguments.length > 2) {
var G__95646__i = 0, G__95646__a = new Array(arguments.length -  2);
while (G__95646__i < G__95646__a.length) {G__95646__a[G__95646__i] = arguments[G__95646__i + 2]; ++G__95646__i;}
G__95645 = new cljs.core.IndexedSeq(G__95646__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__95647__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__95647 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95648__i = 0, G__95648__a = new Array(arguments.length -  2);
while (G__95648__i < G__95648__a.length) {G__95648__a[G__95648__i] = arguments[G__95648__i + 2]; ++G__95648__i;}
  more = new cljs.core.IndexedSeq(G__95648__a,0);
} 
return G__95647__delegate.call(this,x,y,more);};
G__95647.cljs$lang$maxFixedArity = 2;
G__95647.cljs$lang$applyTo = (function (arglist__95649){
var x = cljs.core.first(arglist__95649);
arglist__95649 = cljs.core.next(arglist__95649);
var y = cljs.core.first(arglist__95649);
var more = cljs.core.rest(arglist__95649);
return G__95647__delegate(x,y,more);
});
G__95647.cljs$core$IFn$_invoke$arity$variadic = G__95647__delegate;
return G__95647;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__95650 = null;
if (arguments.length > 2) {
var G__95651__i = 0, G__95651__a = new Array(arguments.length -  2);
while (G__95651__i < G__95651__a.length) {G__95651__a[G__95651__i] = arguments[G__95651__i + 2]; ++G__95651__i;}
G__95650 = new cljs.core.IndexedSeq(G__95651__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__95656__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__95656 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95657__i = 0, G__95657__a = new Array(arguments.length -  2);
while (G__95657__i < G__95657__a.length) {G__95657__a[G__95657__i] = arguments[G__95657__i + 2]; ++G__95657__i;}
  more = new cljs.core.IndexedSeq(G__95657__a,0);
} 
return G__95656__delegate.call(this,x,y,more);};
G__95656.cljs$lang$maxFixedArity = 2;
G__95656.cljs$lang$applyTo = (function (arglist__95658){
var x = cljs.core.first(arglist__95658);
arglist__95658 = cljs.core.next(arglist__95658);
var y = cljs.core.first(arglist__95658);
var more = cljs.core.rest(arglist__95658);
return G__95656__delegate(x,y,more);
});
G__95656.cljs$core$IFn$_invoke$arity$variadic = G__95656__delegate;
return G__95656;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__95659 = null;
if (arguments.length > 2) {
var G__95660__i = 0, G__95660__a = new Array(arguments.length -  2);
while (G__95660__i < G__95660__a.length) {G__95660__a[G__95660__i] = arguments[G__95660__i + 2]; ++G__95660__i;}
G__95659 = new cljs.core.IndexedSeq(G__95660__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__95661__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__95661 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95662__i = 0, G__95662__a = new Array(arguments.length -  2);
while (G__95662__i < G__95662__a.length) {G__95662__a[G__95662__i] = arguments[G__95662__i + 2]; ++G__95662__i;}
  more = new cljs.core.IndexedSeq(G__95662__a,0);
} 
return G__95661__delegate.call(this,x,y,more);};
G__95661.cljs$lang$maxFixedArity = 2;
G__95661.cljs$lang$applyTo = (function (arglist__95663){
var x = cljs.core.first(arglist__95663);
arglist__95663 = cljs.core.next(arglist__95663);
var y = cljs.core.first(arglist__95663);
var more = cljs.core.rest(arglist__95663);
return G__95661__delegate(x,y,more);
});
G__95661.cljs$core$IFn$_invoke$arity$variadic = G__95661__delegate;
return G__95661;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__95664 = null;
if (arguments.length > 2) {
var G__95665__i = 0, G__95665__a = new Array(arguments.length -  2);
while (G__95665__i < G__95665__a.length) {G__95665__a[G__95665__i] = arguments[G__95665__i + 2]; ++G__95665__i;}
G__95664 = new cljs.core.IndexedSeq(G__95665__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95664);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__95666__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__95666 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95667__i = 0, G__95667__a = new Array(arguments.length -  2);
while (G__95667__i < G__95667__a.length) {G__95667__a[G__95667__i] = arguments[G__95667__i + 2]; ++G__95667__i;}
  more = new cljs.core.IndexedSeq(G__95667__a,0);
} 
return G__95666__delegate.call(this,x,y,more);};
G__95666.cljs$lang$maxFixedArity = 2;
G__95666.cljs$lang$applyTo = (function (arglist__95668){
var x = cljs.core.first(arglist__95668);
arglist__95668 = cljs.core.next(arglist__95668);
var y = cljs.core.first(arglist__95668);
var more = cljs.core.rest(arglist__95668);
return G__95666__delegate(x,y,more);
});
G__95666.cljs$core$IFn$_invoke$arity$variadic = G__95666__delegate;
return G__95666;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__95669 = null;
if (arguments.length > 2) {
var G__95670__i = 0, G__95670__a = new Array(arguments.length -  2);
while (G__95670__i < G__95670__a.length) {G__95670__a[G__95670__i] = arguments[G__95670__i + 2]; ++G__95670__i;}
G__95669 = new cljs.core.IndexedSeq(G__95670__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__95673 = x;
var G__95674 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__95673,G__95674) : cljs.core.mod.call(null,G__95673,G__95674));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__95675__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__95675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95676__i = 0, G__95676__a = new Array(arguments.length -  2);
while (G__95676__i < G__95676__a.length) {G__95676__a[G__95676__i] = arguments[G__95676__i + 2]; ++G__95676__i;}
  more = new cljs.core.IndexedSeq(G__95676__a,0);
} 
return G__95675__delegate.call(this,x,y,more);};
G__95675.cljs$lang$maxFixedArity = 2;
G__95675.cljs$lang$applyTo = (function (arglist__95677){
var x = cljs.core.first(arglist__95677);
arglist__95677 = cljs.core.next(arglist__95677);
var y = cljs.core.first(arglist__95677);
var more = cljs.core.rest(arglist__95677);
return G__95675__delegate(x,y,more);
});
G__95675.cljs$core$IFn$_invoke$arity$variadic = G__95675__delegate;
return G__95675;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__95678 = null;
if (arguments.length > 2) {
var G__95679__i = 0, G__95679__a = new Array(arguments.length -  2);
while (G__95679__i < G__95679__a.length) {G__95679__a[G__95679__i] = arguments[G__95679__i + 2]; ++G__95679__i;}
G__95678 = new cljs.core.IndexedSeq(G__95679__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__95680__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__95680 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95681__i = 0, G__95681__a = new Array(arguments.length -  2);
while (G__95681__i < G__95681__a.length) {G__95681__a[G__95681__i] = arguments[G__95681__i + 2]; ++G__95681__i;}
  more = new cljs.core.IndexedSeq(G__95681__a,0);
} 
return G__95680__delegate.call(this,x,y,more);};
G__95680.cljs$lang$maxFixedArity = 2;
G__95680.cljs$lang$applyTo = (function (arglist__95682){
var x = cljs.core.first(arglist__95682);
arglist__95682 = cljs.core.next(arglist__95682);
var y = cljs.core.first(arglist__95682);
var more = cljs.core.rest(arglist__95682);
return G__95680__delegate(x,y,more);
});
G__95680.cljs$core$IFn$_invoke$arity$variadic = G__95680__delegate;
return G__95680;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__95683 = null;
if (arguments.length > 2) {
var G__95684__i = 0, G__95684__a = new Array(arguments.length -  2);
while (G__95684__i < G__95684__a.length) {G__95684__a[G__95684__i] = arguments[G__95684__i + 2]; ++G__95684__i;}
G__95683 = new cljs.core.IndexedSeq(G__95684__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__95687 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__95687) : Math.floor.call(null,G__95687));
} else {
var G__95688 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__95688) : Math.ceil.call(null,G__95688));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__95689__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__95689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95690__i = 0, G__95690__a = new Array(arguments.length -  2);
while (G__95690__i < G__95690__a.length) {G__95690__a[G__95690__i] = arguments[G__95690__i + 2]; ++G__95690__i;}
  more = new cljs.core.IndexedSeq(G__95690__a,0);
} 
return G__95689__delegate.call(this,x,y,more);};
G__95689.cljs$lang$maxFixedArity = 2;
G__95689.cljs$lang$applyTo = (function (arglist__95691){
var x = cljs.core.first(arglist__95691);
arglist__95691 = cljs.core.next(arglist__95691);
var y = cljs.core.first(arglist__95691);
var more = cljs.core.rest(arglist__95691);
return G__95689__delegate(x,y,more);
});
G__95689.cljs$core$IFn$_invoke$arity$variadic = G__95689__delegate;
return G__95689;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__95692 = null;
if (arguments.length > 2) {
var G__95693__i = 0, G__95693__a = new Array(arguments.length -  2);
while (G__95693__i < G__95693__a.length) {G__95693__a[G__95693__i] = arguments[G__95693__i + 2]; ++G__95693__i;}
G__95692 = new cljs.core.IndexedSeq(G__95693__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__95694__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__95694 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95695__i = 0, G__95695__a = new Array(arguments.length -  2);
while (G__95695__i < G__95695__a.length) {G__95695__a[G__95695__i] = arguments[G__95695__i + 2]; ++G__95695__i;}
  more = new cljs.core.IndexedSeq(G__95695__a,0);
} 
return G__95694__delegate.call(this,x,y,more);};
G__95694.cljs$lang$maxFixedArity = 2;
G__95694.cljs$lang$applyTo = (function (arglist__95696){
var x = cljs.core.first(arglist__95696);
arglist__95696 = cljs.core.next(arglist__95696);
var y = cljs.core.first(arglist__95696);
var more = cljs.core.rest(arglist__95696);
return G__95694__delegate(x,y,more);
});
G__95694.cljs$core$IFn$_invoke$arity$variadic = G__95694__delegate;
return G__95694;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__95697 = null;
if (arguments.length > 2) {
var G__95698__i = 0, G__95698__a = new Array(arguments.length -  2);
while (G__95698__i < G__95698__a.length) {G__95698__a[G__95698__i] = arguments[G__95698__i + 2]; ++G__95698__i;}
G__95697 = new cljs.core.IndexedSeq(G__95698__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__95699__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__95699 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95700__i = 0, G__95700__a = new Array(arguments.length -  2);
while (G__95700__i < G__95700__a.length) {G__95700__a[G__95700__i] = arguments[G__95700__i + 2]; ++G__95700__i;}
  more = new cljs.core.IndexedSeq(G__95700__a,0);
} 
return G__95699__delegate.call(this,x,y,more);};
G__95699.cljs$lang$maxFixedArity = 2;
G__95699.cljs$lang$applyTo = (function (arglist__95701){
var x = cljs.core.first(arglist__95701);
arglist__95701 = cljs.core.next(arglist__95701);
var y = cljs.core.first(arglist__95701);
var more = cljs.core.rest(arglist__95701);
return G__95699__delegate(x,y,more);
});
G__95699.cljs$core$IFn$_invoke$arity$variadic = G__95699__delegate;
return G__95699;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__95702 = null;
if (arguments.length > 2) {
var G__95703__i = 0, G__95703__a = new Array(arguments.length -  2);
while (G__95703__i < G__95703__a.length) {G__95703__a[G__95703__i] = arguments[G__95703__i + 2]; ++G__95703__i;}
G__95702 = new cljs.core.IndexedSeq(G__95703__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95702);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__95704__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__95704 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95705__i = 0, G__95705__a = new Array(arguments.length -  2);
while (G__95705__i < G__95705__a.length) {G__95705__a[G__95705__i] = arguments[G__95705__i + 2]; ++G__95705__i;}
  more = new cljs.core.IndexedSeq(G__95705__a,0);
} 
return G__95704__delegate.call(this,x,y,more);};
G__95704.cljs$lang$maxFixedArity = 2;
G__95704.cljs$lang$applyTo = (function (arglist__95706){
var x = cljs.core.first(arglist__95706);
arglist__95706 = cljs.core.next(arglist__95706);
var y = cljs.core.first(arglist__95706);
var more = cljs.core.rest(arglist__95706);
return G__95704__delegate(x,y,more);
});
G__95704.cljs$core$IFn$_invoke$arity$variadic = G__95704__delegate;
return G__95704;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__95707 = null;
if (arguments.length > 2) {
var G__95708__i = 0, G__95708__a = new Array(arguments.length -  2);
while (G__95708__i < G__95708__a.length) {G__95708__a[G__95708__i] = arguments[G__95708__i + 2]; ++G__95708__i;}
G__95707 = new cljs.core.IndexedSeq(G__95708__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__95713__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__95714 = y;
var G__95715 = cljs.core.first(more);
var G__95716 = cljs.core.next(more);
x = G__95714;
y = G__95715;
more = G__95716;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__95713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__95717__i = 0, G__95717__a = new Array(arguments.length -  2);
while (G__95717__i < G__95717__a.length) {G__95717__a[G__95717__i] = arguments[G__95717__i + 2]; ++G__95717__i;}
  more = new cljs.core.IndexedSeq(G__95717__a,0);
} 
return G__95713__delegate.call(this,x,y,more);};
G__95713.cljs$lang$maxFixedArity = 2;
G__95713.cljs$lang$applyTo = (function (arglist__95718){
var x = cljs.core.first(arglist__95718);
arglist__95718 = cljs.core.next(arglist__95718);
var y = cljs.core.first(arglist__95718);
var more = cljs.core.rest(arglist__95718);
return G__95713__delegate(x,y,more);
});
G__95713.cljs$core$IFn$_invoke$arity$variadic = G__95713__delegate;
return G__95713;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__95719 = null;
if (arguments.length > 2) {
var G__95720__i = 0, G__95720__a = new Array(arguments.length -  2);
while (G__95720__i < G__95720__a.length) {G__95720__a[G__95720__i] = arguments[G__95720__i + 2]; ++G__95720__i;}
G__95719 = new cljs.core.IndexedSeq(G__95720__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__95721 = (n__$1 - (1));
var G__95722 = cljs.core.next(xs);
n__$1 = G__95721;
xs = G__95722;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__95726 = x;
return goog.string.buildString(G__95726);
}
});
var str__2 = (function() { 
var G__95727__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__95728 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__95729 = cljs.core.next(more);
sb = G__95728;
more = G__95729;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__95727 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__95730__i = 0, G__95730__a = new Array(arguments.length -  1);
while (G__95730__i < G__95730__a.length) {G__95730__a[G__95730__i] = arguments[G__95730__i + 1]; ++G__95730__i;}
  ys = new cljs.core.IndexedSeq(G__95730__a,0);
} 
return G__95727__delegate.call(this,x,ys);};
G__95727.cljs$lang$maxFixedArity = 1;
G__95727.cljs$lang$applyTo = (function (arglist__95731){
var x = cljs.core.first(arglist__95731);
var ys = cljs.core.rest(arglist__95731);
return G__95727__delegate(x,ys);
});
G__95727.cljs$core$IFn$_invoke$arity$variadic = G__95727__delegate;
return G__95727;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__95732 = null;
if (arguments.length > 1) {
var G__95733__i = 0, G__95733__a = new Array(arguments.length -  1);
while (G__95733__i < G__95733__a.length) {G__95733__a[G__95733__i] = arguments[G__95733__i + 1]; ++G__95733__i;}
G__95732 = new cljs.core.IndexedSeq(G__95733__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__95732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__95734 = cljs.core.next(xs);
var G__95735 = cljs.core.next(ys);
xs = G__95734;
ys = G__95735;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__95736 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__95737 = cljs.core.next(s);
res = G__95736;
s = G__95737;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__95742 = ((h + (cljs.core.hash((function (){var G__95740 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__95740) : cljs.core.key.call(null,G__95740));
})()) ^ cljs.core.hash((function (){var G__95741 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__95741) : cljs.core.val.call(null,G__95741));
})()))) % (4503599627370496));
var G__95743 = cljs.core.next(s);
h = G__95742;
s = G__95743;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__95744 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__95745 = cljs.core.next(s__$1);
h = G__95744;
s__$1 = G__95745;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__95756_95766 = cljs.core.seq(fn_map);
var chunk__95757_95767 = null;
var count__95758_95768 = (0);
var i__95759_95769 = (0);
while(true){
if((i__95759_95769 < count__95758_95768)){
var vec__95760_95770 = chunk__95757_95767.cljs$core$IIndexed$_nth$arity$2(null,i__95759_95769);
var key_name_95771 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__95760_95770,(0),null);
var f_95772 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__95760_95770,(1),null);
var str_name_95773 = (function (){var G__95761 = key_name_95771;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__95761) : cljs.core.name.call(null,G__95761));
})();
(obj[str_name_95773] = f_95772);

var G__95774 = seq__95756_95766;
var G__95775 = chunk__95757_95767;
var G__95776 = count__95758_95768;
var G__95777 = (i__95759_95769 + (1));
seq__95756_95766 = G__95774;
chunk__95757_95767 = G__95775;
count__95758_95768 = G__95776;
i__95759_95769 = G__95777;
continue;
} else {
var temp__4126__auto___95778 = cljs.core.seq(seq__95756_95766);
if(temp__4126__auto___95778){
var seq__95756_95779__$1 = temp__4126__auto___95778;
if(cljs.core.chunked_seq_QMARK_(seq__95756_95779__$1)){
var c__4768__auto___95780 = (function (){var G__95762 = seq__95756_95779__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__95762) : cljs.core.chunk_first.call(null,G__95762));
})();
var G__95781 = (function (){var G__95763 = seq__95756_95779__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__95763) : cljs.core.chunk_rest.call(null,G__95763));
})();
var G__95782 = c__4768__auto___95780;
var G__95783 = cljs.core.count(c__4768__auto___95780);
var G__95784 = (0);
seq__95756_95766 = G__95781;
chunk__95757_95767 = G__95782;
count__95758_95768 = G__95783;
i__95759_95769 = G__95784;
continue;
} else {
var vec__95764_95785 = cljs.core.first(seq__95756_95779__$1);
var key_name_95786 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__95764_95785,(0),null);
var f_95787 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__95764_95785,(1),null);
var str_name_95788 = (function (){var G__95765 = key_name_95786;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__95765) : cljs.core.name.call(null,G__95765));
})();
(obj[str_name_95788] = f_95787);

var G__95789 = cljs.core.next(seq__95756_95779__$1);
var G__95790 = null;
var G__95791 = (0);
var G__95792 = (0);
seq__95756_95766 = G__95789;
chunk__95757_95767 = G__95790;
count__95758_95768 = G__95791;
i__95759_95769 = G__95792;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__95794 = coll;
if(G__95794){
var bit__4662__auto__ = (G__95794.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4662__auto__) || (G__95794.cljs$core$IReversible$)){
return true;
} else {
if((!G__95794.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__95794);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__95794);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__95795 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__95795;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__95796 = (i - (1));
var G__95797 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__95796;
r = G__95797;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__95798__i = 0, G__95798__a = new Array(arguments.length -  0);
while (G__95798__i < G__95798__a.length) {G__95798__a[G__95798__i] = arguments[G__95798__i + 0]; ++G__95798__i;}
  xs = new cljs.core.IndexedSeq(G__95798__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__95799){
var xs = cljs.core.seq(arglist__95799);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3981__auto__ = (coll == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__95803 = coll;
if(G__95803){
var bit__4655__auto__ = (G__95803.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__95803.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__95805 = x;
if(G__95805){
var bit__4662__auto__ = (G__95805.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4662__auto__) || (G__95805.cljs$core$IList$)){
return true;
} else {
if((!G__95805.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__95805);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__95805);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__95812 = a.ns;
var G__95813 = b.ns;
return goog.array.defaultCompare(G__95812,G__95813);
})();
if(((0) === nsc)){
var G__95814 = a.name;
var G__95815 = b.name;
return goog.array.defaultCompare(G__95814,G__95815);
} else {
return nsc;
}
}
} else {
var G__95816 = a.name;
var G__95817 = b.name;
return goog.array.defaultCompare(G__95816,G__95817);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__95819 = null;
var G__95819__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__95819__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__95819 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__95819__2.call(this,self__,coll);
case 3:
return G__95819__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__95819.cljs$core$IFn$_invoke$arity$2 = G__95819__2;
G__95819.cljs$core$IFn$_invoke$arity$3 = G__95819__3;
return G__95819;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args95818){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args95818)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__95821 = x;
if(G__95821){
var bit__4655__auto__ = (G__95821.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__95821.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__95823 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__95823) : cljs.core.name.call(null,G__95823));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__95824 = ls.sval();
ls = G__95824;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__95826 = s;
if(G__95826){
var bit__4655__auto__ = (G__95826.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4655__auto__) || (G__95826.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__95827 = cljs.core.next(s__$1);
s__$1 = G__95827;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_95828 = (0);
var xs_95829 = cljs.core.seq(coll);
while(true){
if(xs_95829){
(ret[i_95828] = cljs.core.to_array(cljs.core.first(xs_95829)));

var G__95830 = (i_95828 + (1));
var G__95831 = cljs.core.next(xs_95829);
i_95828 = G__95830;
xs_95829 = G__95831;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__95834 = (i + (1));
var G__95835 = cljs.core.next(s__$1);
i = G__95834;
s__$1 = G__95835;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___95836 = size;
var i_95837 = (0);
while(true){
if((i_95837 < n__4868__auto___95836)){
(a[i_95837] = init_val_or_seq);

var G__95838 = (i_95837 + (1));
i_95837 = G__95838;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__95841 = (i + (1));
var G__95842 = cljs.core.next(s__$1);
i = G__95841;
s__$1 = G__95842;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___95843 = size;
var i_95844 = (0);
while(true){
if((i_95844 < n__4868__auto___95843)){
(a[i_95844] = init_val_or_seq);

var G__95845 = (i_95844 + (1));
i_95844 = G__95845;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__95848 = (i + (1));
var G__95849 = cljs.core.next(s__$1);
i = G__95848;
s__$1 = G__95849;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___95850 = size;
var i_95851 = (0);
while(true){
if((i_95851 < n__4868__auto___95850)){
(a[i_95851] = init_val_or_seq);

var G__95852 = (i_95851 + (1));
i_95851 = G__95852;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__95855 = (i + (1));
var G__95856 = cljs.core.next(s__$1);
i = G__95855;
s__$1 = G__95856;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___95857 = size;
var i_95858 = (0);
while(true){
if((i_95858 < n__4868__auto___95857)){
(a[i_95858] = init_val_or_seq);

var G__95859 = (i_95858 + (1));
i_95858 = G__95859;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__95860 = cljs.core.next(s__$1);
var G__95861 = (i - (1));
var G__95862 = (sum + (1));
s__$1 = G__95860;
i = G__95861;
sum = G__95862;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__95882__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__95882 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__95883__i = 0, G__95883__a = new Array(arguments.length -  2);
while (G__95883__i < G__95883__a.length) {G__95883__a[G__95883__i] = arguments[G__95883__i + 2]; ++G__95883__i;}
  zs = new cljs.core.IndexedSeq(G__95883__a,0);
} 
return G__95882__delegate.call(this,x,y,zs);};
G__95882.cljs$lang$maxFixedArity = 2;
G__95882.cljs$lang$applyTo = (function (arglist__95884){
var x = cljs.core.first(arglist__95884);
arglist__95884 = cljs.core.next(arglist__95884);
var y = cljs.core.first(arglist__95884);
var zs = cljs.core.rest(arglist__95884);
return G__95882__delegate(x,y,zs);
});
G__95882.cljs$core$IFn$_invoke$arity$variadic = G__95882__delegate;
return G__95882;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__95885 = null;
if (arguments.length > 2) {
var G__95886__i = 0, G__95886__a = new Array(arguments.length -  2);
while (G__95886__i < G__95886__a.length) {G__95886__a[G__95886__i] = arguments[G__95886__i + 2]; ++G__95886__i;}
G__95885 = new cljs.core.IndexedSeq(G__95886__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__95885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__95887__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__95887 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__95888__i = 0, G__95888__a = new Array(arguments.length -  4);
while (G__95888__i < G__95888__a.length) {G__95888__a[G__95888__i] = arguments[G__95888__i + 4]; ++G__95888__i;}
  more = new cljs.core.IndexedSeq(G__95888__a,0);
} 
return G__95887__delegate.call(this,a,b,c,d,more);};
G__95887.cljs$lang$maxFixedArity = 4;
G__95887.cljs$lang$applyTo = (function (arglist__95889){
var a = cljs.core.first(arglist__95889);
arglist__95889 = cljs.core.next(arglist__95889);
var b = cljs.core.first(arglist__95889);
arglist__95889 = cljs.core.next(arglist__95889);
var c = cljs.core.first(arglist__95889);
arglist__95889 = cljs.core.next(arglist__95889);
var d = cljs.core.first(arglist__95889);
var more = cljs.core.rest(arglist__95889);
return G__95887__delegate(a,b,c,d,more);
});
G__95887.cljs$core$IFn$_invoke$arity$variadic = G__95887__delegate;
return G__95887;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__95890 = null;
if (arguments.length > 4) {
var G__95891__i = 0, G__95891__a = new Array(arguments.length -  4);
while (G__95891__i < G__95891__a.length) {G__95891__a[G__95891__i] = arguments[G__95891__i + 4]; ++G__95891__i;}
G__95890 = new cljs.core.IndexedSeq(G__95891__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__95890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__95892__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__95893 = ntcoll;
var G__95894 = cljs.core.first(vals);
var G__95895 = cljs.core.next(vals);
tcoll = G__95893;
val = G__95894;
vals = G__95895;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__95892 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__95896__i = 0, G__95896__a = new Array(arguments.length -  2);
while (G__95896__i < G__95896__a.length) {G__95896__a[G__95896__i] = arguments[G__95896__i + 2]; ++G__95896__i;}
  vals = new cljs.core.IndexedSeq(G__95896__a,0);
} 
return G__95892__delegate.call(this,tcoll,val,vals);};
G__95892.cljs$lang$maxFixedArity = 2;
G__95892.cljs$lang$applyTo = (function (arglist__95897){
var tcoll = cljs.core.first(arglist__95897);
arglist__95897 = cljs.core.next(arglist__95897);
var val = cljs.core.first(arglist__95897);
var vals = cljs.core.rest(arglist__95897);
return G__95892__delegate(tcoll,val,vals);
});
G__95892.cljs$core$IFn$_invoke$arity$variadic = G__95892__delegate;
return G__95892;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__95898 = null;
if (arguments.length > 2) {
var G__95899__i = 0, G__95899__a = new Array(arguments.length -  2);
while (G__95899__i < G__95899__a.length) {G__95899__a[G__95899__i] = arguments[G__95899__i + 2]; ++G__95899__i;}
G__95898 = new cljs.core.IndexedSeq(G__95899__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__95898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__95900__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__95901 = ntcoll;
var G__95902 = cljs.core.first(kvs);
var G__95903 = cljs.core.second(kvs);
var G__95904 = cljs.core.nnext(kvs);
tcoll = G__95901;
key = G__95902;
val = G__95903;
kvs = G__95904;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__95900 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__95905__i = 0, G__95905__a = new Array(arguments.length -  3);
while (G__95905__i < G__95905__a.length) {G__95905__a[G__95905__i] = arguments[G__95905__i + 3]; ++G__95905__i;}
  kvs = new cljs.core.IndexedSeq(G__95905__a,0);
} 
return G__95900__delegate.call(this,tcoll,key,val,kvs);};
G__95900.cljs$lang$maxFixedArity = 3;
G__95900.cljs$lang$applyTo = (function (arglist__95906){
var tcoll = cljs.core.first(arglist__95906);
arglist__95906 = cljs.core.next(arglist__95906);
var key = cljs.core.first(arglist__95906);
arglist__95906 = cljs.core.next(arglist__95906);
var val = cljs.core.first(arglist__95906);
var kvs = cljs.core.rest(arglist__95906);
return G__95900__delegate(tcoll,key,val,kvs);
});
G__95900.cljs$core$IFn$_invoke$arity$variadic = G__95900__delegate;
return G__95900;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__95907 = null;
if (arguments.length > 3) {
var G__95908__i = 0, G__95908__a = new Array(arguments.length -  3);
while (G__95908__i < G__95908__a.length) {G__95908__a[G__95908__i] = arguments[G__95908__i + 3]; ++G__95908__i;}
G__95907 = new cljs.core.IndexedSeq(G__95908__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__95907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__95909__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__95910 = ntcoll;
var G__95911 = cljs.core.first(ks);
var G__95912 = cljs.core.next(ks);
tcoll = G__95910;
key = G__95911;
ks = G__95912;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__95909 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__95913__i = 0, G__95913__a = new Array(arguments.length -  2);
while (G__95913__i < G__95913__a.length) {G__95913__a[G__95913__i] = arguments[G__95913__i + 2]; ++G__95913__i;}
  ks = new cljs.core.IndexedSeq(G__95913__a,0);
} 
return G__95909__delegate.call(this,tcoll,key,ks);};
G__95909.cljs$lang$maxFixedArity = 2;
G__95909.cljs$lang$applyTo = (function (arglist__95914){
var tcoll = cljs.core.first(arglist__95914);
arglist__95914 = cljs.core.next(arglist__95914);
var key = cljs.core.first(arglist__95914);
var ks = cljs.core.rest(arglist__95914);
return G__95909__delegate(tcoll,key,ks);
});
G__95909.cljs$core$IFn$_invoke$arity$variadic = G__95909__delegate;
return G__95909;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__95915 = null;
if (arguments.length > 2) {
var G__95916__i = 0, G__95916__a = new Array(arguments.length -  2);
while (G__95916__i < G__95916__a.length) {G__95916__a[G__95916__i] = arguments[G__95916__i + 2]; ++G__95916__i;}
G__95915 = new cljs.core.IndexedSeq(G__95916__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__95915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__95917__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__95918 = ntcoll;
var G__95919 = cljs.core.first(vals);
var G__95920 = cljs.core.next(vals);
tcoll = G__95918;
val = G__95919;
vals = G__95920;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__95917 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__95921__i = 0, G__95921__a = new Array(arguments.length -  2);
while (G__95921__i < G__95921__a.length) {G__95921__a[G__95921__i] = arguments[G__95921__i + 2]; ++G__95921__i;}
  vals = new cljs.core.IndexedSeq(G__95921__a,0);
} 
return G__95917__delegate.call(this,tcoll,val,vals);};
G__95917.cljs$lang$maxFixedArity = 2;
G__95917.cljs$lang$applyTo = (function (arglist__95922){
var tcoll = cljs.core.first(arglist__95922);
arglist__95922 = cljs.core.next(arglist__95922);
var val = cljs.core.first(arglist__95922);
var vals = cljs.core.rest(arglist__95922);
return G__95917__delegate(tcoll,val,vals);
});
G__95917.cljs$core$IFn$_invoke$arity$variadic = G__95917__delegate;
return G__95917;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__95923 = null;
if (arguments.length > 2) {
var G__95924__i = 0, G__95924__a = new Array(arguments.length -  2);
while (G__95924__i < G__95924__a.length) {G__95924__a[G__95924__i] = arguments[G__95924__i + 2]; ++G__95924__i;}
G__95923 = new cljs.core.IndexedSeq(G__95924__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__95923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4912 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4912);
} else {
var G__96135 = a4912;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96135) : f.call(null,G__96135));
}
} else {
var b4913 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4912,b4913);
} else {
var G__96136 = a4912;
var G__96137 = b4913;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96136,G__96137) : f.call(null,G__96136,G__96137));
}
} else {
var c4914 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4912,b4913,c4914);
} else {
var G__96138 = a4912;
var G__96139 = b4913;
var G__96140 = c4914;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96138,G__96139,G__96140) : f.call(null,G__96138,G__96139,G__96140));
}
} else {
var d4915 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4912,b4913,c4914,d4915);
} else {
var G__96141 = a4912;
var G__96142 = b4913;
var G__96143 = c4914;
var G__96144 = d4915;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96141,G__96142,G__96143,G__96144) : f.call(null,G__96141,G__96142,G__96143,G__96144));
}
} else {
var e4916 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4912,b4913,c4914,d4915,e4916);
} else {
var G__96145 = a4912;
var G__96146 = b4913;
var G__96147 = c4914;
var G__96148 = d4915;
var G__96149 = e4916;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__96145,G__96146,G__96147,G__96148,G__96149) : f.call(null,G__96145,G__96146,G__96147,G__96148,G__96149));
}
} else {
var f4917 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4912,b4913,c4914,d4915,e4916,f4917);
} else {
var G__96150 = a4912;
var G__96151 = b4913;
var G__96152 = c4914;
var G__96153 = d4915;
var G__96154 = e4916;
var G__96155 = f4917;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__96150,G__96151,G__96152,G__96153,G__96154,G__96155) : f.call(null,G__96150,G__96151,G__96152,G__96153,G__96154,G__96155));
}
} else {
var g4918 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4912,b4913,c4914,d4915,e4916,f4917,g4918);
} else {
var G__96156 = a4912;
var G__96157 = b4913;
var G__96158 = c4914;
var G__96159 = d4915;
var G__96160 = e4916;
var G__96161 = f4917;
var G__96162 = g4918;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__96156,G__96157,G__96158,G__96159,G__96160,G__96161,G__96162) : f.call(null,G__96156,G__96157,G__96158,G__96159,G__96160,G__96161,G__96162));
}
} else {
var h4919 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919);
} else {
var G__96163 = a4912;
var G__96164 = b4913;
var G__96165 = c4914;
var G__96166 = d4915;
var G__96167 = e4916;
var G__96168 = f4917;
var G__96169 = g4918;
var G__96170 = h4919;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__96163,G__96164,G__96165,G__96166,G__96167,G__96168,G__96169,G__96170) : f.call(null,G__96163,G__96164,G__96165,G__96166,G__96167,G__96168,G__96169,G__96170));
}
} else {
var i4920 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920);
} else {
var G__96171 = a4912;
var G__96172 = b4913;
var G__96173 = c4914;
var G__96174 = d4915;
var G__96175 = e4916;
var G__96176 = f4917;
var G__96177 = g4918;
var G__96178 = h4919;
var G__96179 = i4920;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__96171,G__96172,G__96173,G__96174,G__96175,G__96176,G__96177,G__96178,G__96179) : f.call(null,G__96171,G__96172,G__96173,G__96174,G__96175,G__96176,G__96177,G__96178,G__96179));
}
} else {
var j4921 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921);
} else {
var G__96180 = a4912;
var G__96181 = b4913;
var G__96182 = c4914;
var G__96183 = d4915;
var G__96184 = e4916;
var G__96185 = f4917;
var G__96186 = g4918;
var G__96187 = h4919;
var G__96188 = i4920;
var G__96189 = j4921;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__96180,G__96181,G__96182,G__96183,G__96184,G__96185,G__96186,G__96187,G__96188,G__96189) : f.call(null,G__96180,G__96181,G__96182,G__96183,G__96184,G__96185,G__96186,G__96187,G__96188,G__96189));
}
} else {
var k4922 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922);
} else {
var G__96190 = a4912;
var G__96191 = b4913;
var G__96192 = c4914;
var G__96193 = d4915;
var G__96194 = e4916;
var G__96195 = f4917;
var G__96196 = g4918;
var G__96197 = h4919;
var G__96198 = i4920;
var G__96199 = j4921;
var G__96200 = k4922;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__96190,G__96191,G__96192,G__96193,G__96194,G__96195,G__96196,G__96197,G__96198,G__96199,G__96200) : f.call(null,G__96190,G__96191,G__96192,G__96193,G__96194,G__96195,G__96196,G__96197,G__96198,G__96199,G__96200));
}
} else {
var l4923 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923);
} else {
var G__96201 = a4912;
var G__96202 = b4913;
var G__96203 = c4914;
var G__96204 = d4915;
var G__96205 = e4916;
var G__96206 = f4917;
var G__96207 = g4918;
var G__96208 = h4919;
var G__96209 = i4920;
var G__96210 = j4921;
var G__96211 = k4922;
var G__96212 = l4923;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__96201,G__96202,G__96203,G__96204,G__96205,G__96206,G__96207,G__96208,G__96209,G__96210,G__96211,G__96212) : f.call(null,G__96201,G__96202,G__96203,G__96204,G__96205,G__96206,G__96207,G__96208,G__96209,G__96210,G__96211,G__96212));
}
} else {
var m4924 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924);
} else {
var G__96213 = a4912;
var G__96214 = b4913;
var G__96215 = c4914;
var G__96216 = d4915;
var G__96217 = e4916;
var G__96218 = f4917;
var G__96219 = g4918;
var G__96220 = h4919;
var G__96221 = i4920;
var G__96222 = j4921;
var G__96223 = k4922;
var G__96224 = l4923;
var G__96225 = m4924;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__96213,G__96214,G__96215,G__96216,G__96217,G__96218,G__96219,G__96220,G__96221,G__96222,G__96223,G__96224,G__96225) : f.call(null,G__96213,G__96214,G__96215,G__96216,G__96217,G__96218,G__96219,G__96220,G__96221,G__96222,G__96223,G__96224,G__96225));
}
} else {
var n4925 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925);
} else {
var G__96226 = a4912;
var G__96227 = b4913;
var G__96228 = c4914;
var G__96229 = d4915;
var G__96230 = e4916;
var G__96231 = f4917;
var G__96232 = g4918;
var G__96233 = h4919;
var G__96234 = i4920;
var G__96235 = j4921;
var G__96236 = k4922;
var G__96237 = l4923;
var G__96238 = m4924;
var G__96239 = n4925;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__96226,G__96227,G__96228,G__96229,G__96230,G__96231,G__96232,G__96233,G__96234,G__96235,G__96236,G__96237,G__96238,G__96239) : f.call(null,G__96226,G__96227,G__96228,G__96229,G__96230,G__96231,G__96232,G__96233,G__96234,G__96235,G__96236,G__96237,G__96238,G__96239));
}
} else {
var o4926 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926);
} else {
var G__96240 = a4912;
var G__96241 = b4913;
var G__96242 = c4914;
var G__96243 = d4915;
var G__96244 = e4916;
var G__96245 = f4917;
var G__96246 = g4918;
var G__96247 = h4919;
var G__96248 = i4920;
var G__96249 = j4921;
var G__96250 = k4922;
var G__96251 = l4923;
var G__96252 = m4924;
var G__96253 = n4925;
var G__96254 = o4926;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__96240,G__96241,G__96242,G__96243,G__96244,G__96245,G__96246,G__96247,G__96248,G__96249,G__96250,G__96251,G__96252,G__96253,G__96254) : f.call(null,G__96240,G__96241,G__96242,G__96243,G__96244,G__96245,G__96246,G__96247,G__96248,G__96249,G__96250,G__96251,G__96252,G__96253,G__96254));
}
} else {
var p4927 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927);
} else {
var G__96255 = a4912;
var G__96256 = b4913;
var G__96257 = c4914;
var G__96258 = d4915;
var G__96259 = e4916;
var G__96260 = f4917;
var G__96261 = g4918;
var G__96262 = h4919;
var G__96263 = i4920;
var G__96264 = j4921;
var G__96265 = k4922;
var G__96266 = l4923;
var G__96267 = m4924;
var G__96268 = n4925;
var G__96269 = o4926;
var G__96270 = p4927;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__96255,G__96256,G__96257,G__96258,G__96259,G__96260,G__96261,G__96262,G__96263,G__96264,G__96265,G__96266,G__96267,G__96268,G__96269,G__96270) : f.call(null,G__96255,G__96256,G__96257,G__96258,G__96259,G__96260,G__96261,G__96262,G__96263,G__96264,G__96265,G__96266,G__96267,G__96268,G__96269,G__96270));
}
} else {
var q4928 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928);
} else {
var G__96271 = a4912;
var G__96272 = b4913;
var G__96273 = c4914;
var G__96274 = d4915;
var G__96275 = e4916;
var G__96276 = f4917;
var G__96277 = g4918;
var G__96278 = h4919;
var G__96279 = i4920;
var G__96280 = j4921;
var G__96281 = k4922;
var G__96282 = l4923;
var G__96283 = m4924;
var G__96284 = n4925;
var G__96285 = o4926;
var G__96286 = p4927;
var G__96287 = q4928;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__96271,G__96272,G__96273,G__96274,G__96275,G__96276,G__96277,G__96278,G__96279,G__96280,G__96281,G__96282,G__96283,G__96284,G__96285,G__96286,G__96287) : f.call(null,G__96271,G__96272,G__96273,G__96274,G__96275,G__96276,G__96277,G__96278,G__96279,G__96280,G__96281,G__96282,G__96283,G__96284,G__96285,G__96286,G__96287));
}
} else {
var r4929 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929);
} else {
var G__96288 = a4912;
var G__96289 = b4913;
var G__96290 = c4914;
var G__96291 = d4915;
var G__96292 = e4916;
var G__96293 = f4917;
var G__96294 = g4918;
var G__96295 = h4919;
var G__96296 = i4920;
var G__96297 = j4921;
var G__96298 = k4922;
var G__96299 = l4923;
var G__96300 = m4924;
var G__96301 = n4925;
var G__96302 = o4926;
var G__96303 = p4927;
var G__96304 = q4928;
var G__96305 = r4929;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__96288,G__96289,G__96290,G__96291,G__96292,G__96293,G__96294,G__96295,G__96296,G__96297,G__96298,G__96299,G__96300,G__96301,G__96302,G__96303,G__96304,G__96305) : f.call(null,G__96288,G__96289,G__96290,G__96291,G__96292,G__96293,G__96294,G__96295,G__96296,G__96297,G__96298,G__96299,G__96300,G__96301,G__96302,G__96303,G__96304,G__96305));
}
} else {
var s4930 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930);
} else {
var G__96306 = a4912;
var G__96307 = b4913;
var G__96308 = c4914;
var G__96309 = d4915;
var G__96310 = e4916;
var G__96311 = f4917;
var G__96312 = g4918;
var G__96313 = h4919;
var G__96314 = i4920;
var G__96315 = j4921;
var G__96316 = k4922;
var G__96317 = l4923;
var G__96318 = m4924;
var G__96319 = n4925;
var G__96320 = o4926;
var G__96321 = p4927;
var G__96322 = q4928;
var G__96323 = r4929;
var G__96324 = s4930;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__96306,G__96307,G__96308,G__96309,G__96310,G__96311,G__96312,G__96313,G__96314,G__96315,G__96316,G__96317,G__96318,G__96319,G__96320,G__96321,G__96322,G__96323,G__96324) : f.call(null,G__96306,G__96307,G__96308,G__96309,G__96310,G__96311,G__96312,G__96313,G__96314,G__96315,G__96316,G__96317,G__96318,G__96319,G__96320,G__96321,G__96322,G__96323,G__96324));
}
} else {
var t4931 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930,t4931);
} else {
var G__96325 = a4912;
var G__96326 = b4913;
var G__96327 = c4914;
var G__96328 = d4915;
var G__96329 = e4916;
var G__96330 = f4917;
var G__96331 = g4918;
var G__96332 = h4919;
var G__96333 = i4920;
var G__96334 = j4921;
var G__96335 = k4922;
var G__96336 = l4923;
var G__96337 = m4924;
var G__96338 = n4925;
var G__96339 = o4926;
var G__96340 = p4927;
var G__96341 = q4928;
var G__96342 = r4929;
var G__96343 = s4930;
var G__96344 = t4931;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__96325,G__96326,G__96327,G__96328,G__96329,G__96330,G__96331,G__96332,G__96333,G__96334,G__96335,G__96336,G__96337,G__96338,G__96339,G__96340,G__96341,G__96342,G__96343,G__96344) : f.call(null,G__96325,G__96326,G__96327,G__96328,G__96329,G__96330,G__96331,G__96332,G__96333,G__96334,G__96335,G__96336,G__96337,G__96338,G__96339,G__96340,G__96341,G__96342,G__96343,G__96344));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__96345__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__96345 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__96346__i = 0, G__96346__a = new Array(arguments.length -  5);
while (G__96346__i < G__96346__a.length) {G__96346__a[G__96346__i] = arguments[G__96346__i + 5]; ++G__96346__i;}
  args = new cljs.core.IndexedSeq(G__96346__a,0);
} 
return G__96345__delegate.call(this,f,a,b,c,d,args);};
G__96345.cljs$lang$maxFixedArity = 5;
G__96345.cljs$lang$applyTo = (function (arglist__96347){
var f = cljs.core.first(arglist__96347);
arglist__96347 = cljs.core.next(arglist__96347);
var a = cljs.core.first(arglist__96347);
arglist__96347 = cljs.core.next(arglist__96347);
var b = cljs.core.first(arglist__96347);
arglist__96347 = cljs.core.next(arglist__96347);
var c = cljs.core.first(arglist__96347);
arglist__96347 = cljs.core.next(arglist__96347);
var d = cljs.core.first(arglist__96347);
var args = cljs.core.rest(arglist__96347);
return G__96345__delegate(f,a,b,c,d,args);
});
G__96345.cljs$core$IFn$_invoke$arity$variadic = G__96345__delegate;
return G__96345;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__96348 = null;
if (arguments.length > 5) {
var G__96349__i = 0, G__96349__a = new Array(arguments.length -  5);
while (G__96349__i < G__96349__a.length) {G__96349__a[G__96349__i] = arguments[G__96349__i + 5]; ++G__96349__i;}
G__96348 = new cljs.core.IndexedSeq(G__96349__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__96348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__96365 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96365) : f.call(null,G__96365));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__96366 = cljs.core.meta(obj);
var G__96367 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96366,G__96367) : f.call(null,G__96366,G__96367));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__96368 = cljs.core.meta(obj);
var G__96369 = a;
var G__96370 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96368,G__96369,G__96370) : f.call(null,G__96368,G__96369,G__96370));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__96371 = cljs.core.meta(obj);
var G__96372 = a;
var G__96373 = b;
var G__96374 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96371,G__96372,G__96373,G__96374) : f.call(null,G__96371,G__96372,G__96373,G__96374));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__96375 = cljs.core.meta(obj);
var G__96376 = a;
var G__96377 = b;
var G__96378 = c;
var G__96379 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__96375,G__96376,G__96377,G__96378,G__96379) : f.call(null,G__96375,G__96376,G__96377,G__96378,G__96379));
})());
});
var vary_meta__7 = (function() { 
var G__96380__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__96380 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__96381__i = 0, G__96381__a = new Array(arguments.length -  6);
while (G__96381__i < G__96381__a.length) {G__96381__a[G__96381__i] = arguments[G__96381__i + 6]; ++G__96381__i;}
  args = new cljs.core.IndexedSeq(G__96381__a,0);
} 
return G__96380__delegate.call(this,obj,f,a,b,c,d,args);};
G__96380.cljs$lang$maxFixedArity = 6;
G__96380.cljs$lang$applyTo = (function (arglist__96382){
var obj = cljs.core.first(arglist__96382);
arglist__96382 = cljs.core.next(arglist__96382);
var f = cljs.core.first(arglist__96382);
arglist__96382 = cljs.core.next(arglist__96382);
var a = cljs.core.first(arglist__96382);
arglist__96382 = cljs.core.next(arglist__96382);
var b = cljs.core.first(arglist__96382);
arglist__96382 = cljs.core.next(arglist__96382);
var c = cljs.core.first(arglist__96382);
arglist__96382 = cljs.core.next(arglist__96382);
var d = cljs.core.first(arglist__96382);
var args = cljs.core.rest(arglist__96382);
return G__96380__delegate(obj,f,a,b,c,d,args);
});
G__96380.cljs$core$IFn$_invoke$arity$variadic = G__96380__delegate;
return G__96380;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__96383 = null;
if (arguments.length > 6) {
var G__96384__i = 0, G__96384__a = new Array(arguments.length -  6);
while (G__96384__i < G__96384__a.length) {G__96384__a[G__96384__i] = arguments[G__96384__i + 6]; ++G__96384__i;}
G__96383 = new cljs.core.IndexedSeq(G__96384__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__96383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__96385__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__96385 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__96386__i = 0, G__96386__a = new Array(arguments.length -  2);
while (G__96386__i < G__96386__a.length) {G__96386__a[G__96386__i] = arguments[G__96386__i + 2]; ++G__96386__i;}
  more = new cljs.core.IndexedSeq(G__96386__a,0);
} 
return G__96385__delegate.call(this,x,y,more);};
G__96385.cljs$lang$maxFixedArity = 2;
G__96385.cljs$lang$applyTo = (function (arglist__96387){
var x = cljs.core.first(arglist__96387);
arglist__96387 = cljs.core.next(arglist__96387);
var y = cljs.core.first(arglist__96387);
var more = cljs.core.rest(arglist__96387);
return G__96385__delegate(x,y,more);
});
G__96385.cljs$core$IFn$_invoke$arity$variadic = G__96385__delegate;
return G__96385;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__96388 = null;
if (arguments.length > 2) {
var G__96389__i = 0, G__96389__a = new Array(arguments.length -  2);
while (G__96389__i < G__96389__a.length) {G__96389__a[G__96389__i] = arguments[G__96389__i + 2]; ++G__96389__i;}
G__96388 = new cljs.core.IndexedSeq(G__96389__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__96388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t96393 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t96393 = (function (nil_iter,meta96394){
this.nil_iter = nil_iter;
this.meta96394 = meta96394;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t96393.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t96393.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t96393.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t96393.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_96395){
var self__ = this;
var _96395__$1 = this;
return self__.meta96394;
});

cljs.core.t96393.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_96395,meta96394__$1){
var self__ = this;
var _96395__$1 = this;
return (new cljs.core.t96393(self__.nil_iter,meta96394__$1));
});

cljs.core.t96393.cljs$lang$type = true;

cljs.core.t96393.cljs$lang$ctorStr = "cljs.core/t96393";

cljs.core.t96393.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/t96393");
});

cljs.core.__GT_t96393 = (function __GT_t96393(nil_iter__$1,meta96394){
return (new cljs.core.t96393(nil_iter__$1,meta96394));
});

}

return (new cljs.core.t96393(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return self__.iter.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__96396 = lt;
var G__96397 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__96396,G__96397) : self__.xform.call(null,G__96396,G__96397));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__96398 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__96398) : self__.xform.call(null,G__96398));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__96400 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__96400) : xform.call(null,G__96400));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__96402 = cljs.core.next(iters__$1);
iters__$1 = G__96402;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4868__auto___96403 = self__.iters.length;
var i_96404 = (0);
while(true){
if((i_96404 < n__4868__auto___96403)){
(self__.nexts[i_96404] = (self__.iters[i_96404]).next());

var G__96405 = (i_96404 + (1));
i_96404 = G__96405;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return this$.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__96401 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__96401) : self__.xform.call(null,G__96401));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__96410 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__96410) : xform.call(null,G__96410));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__96411_96415 = cljs.core.seq(colls);
var chunk__96412_96416 = null;
var count__96413_96417 = (0);
var i__96414_96418 = (0);
while(true){
if((i__96414_96418 < count__96413_96417)){
var coll_96419 = chunk__96412_96416.cljs$core$IIndexed$_nth$arity$2(null,i__96414_96418);
iters.push(cljs.core.iter(coll_96419));

var G__96420 = seq__96411_96415;
var G__96421 = chunk__96412_96416;
var G__96422 = count__96413_96417;
var G__96423 = (i__96414_96418 + (1));
seq__96411_96415 = G__96420;
chunk__96412_96416 = G__96421;
count__96413_96417 = G__96422;
i__96414_96418 = G__96423;
continue;
} else {
var temp__4126__auto___96424 = cljs.core.seq(seq__96411_96415);
if(temp__4126__auto___96424){
var seq__96411_96425__$1 = temp__4126__auto___96424;
if(cljs.core.chunked_seq_QMARK_(seq__96411_96425__$1)){
var c__4768__auto___96426 = cljs.core.chunk_first(seq__96411_96425__$1);
var G__96427 = cljs.core.chunk_rest(seq__96411_96425__$1);
var G__96428 = c__4768__auto___96426;
var G__96429 = cljs.core.count(c__4768__auto___96426);
var G__96430 = (0);
seq__96411_96415 = G__96427;
chunk__96412_96416 = G__96428;
count__96413_96417 = G__96429;
i__96414_96418 = G__96430;
continue;
} else {
var coll_96431 = cljs.core.first(seq__96411_96425__$1);
iters.push(cljs.core.iter(coll_96431));

var G__96432 = cljs.core.next(seq__96411_96425__$1);
var G__96433 = null;
var G__96434 = (0);
var G__96435 = (0);
seq__96411_96415 = G__96432;
chunk__96412_96416 = G__96433;
count__96413_96417 = G__96434;
i__96414_96418 = G__96435;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3981__auto__ = cljs.core.seq(coll);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__96436__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__96436 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__96437__i = 0, G__96437__a = new Array(arguments.length -  2);
while (G__96437__i < G__96437__a.length) {G__96437__a[G__96437__i] = arguments[G__96437__i + 2]; ++G__96437__i;}
  colls = new cljs.core.IndexedSeq(G__96437__a,0);
} 
return G__96436__delegate.call(this,xform,coll,colls);};
G__96436.cljs$lang$maxFixedArity = 2;
G__96436.cljs$lang$applyTo = (function (arglist__96438){
var xform = cljs.core.first(arglist__96438);
arglist__96438 = cljs.core.next(arglist__96438);
var coll = cljs.core.first(arglist__96438);
var colls = cljs.core.rest(arglist__96438);
return G__96436__delegate(xform,coll,colls);
});
G__96436.cljs$core$IFn$_invoke$arity$variadic = G__96436__delegate;
return G__96436;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__96439 = null;
if (arguments.length > 2) {
var G__96440__i = 0, G__96440__a = new Array(arguments.length -  2);
while (G__96440__i < G__96440__a.length) {G__96440__a[G__96440__i] = arguments[G__96440__i + 2]; ++G__96440__i;}
G__96439 = new cljs.core.IndexedSeq(G__96440__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__96439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__96442 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__96442) : pred.call(null,G__96442));
})())){
var G__96443 = pred;
var G__96444 = cljs.core.next(coll);
pred = G__96443;
coll = G__96444;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3981__auto__ = (function (){var G__96448 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__96448) : pred.call(null,G__96448));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__96449 = pred;
var G__96450 = cljs.core.next(coll);
pred = G__96449;
coll = G__96450;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__96457 = null;
var G__96457__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__96457__1 = (function (x){
return cljs.core.not((function (){var G__96454 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96454) : f.call(null,G__96454));
})());
});
var G__96457__2 = (function (x,y){
return cljs.core.not((function (){var G__96455 = x;
var G__96456 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96455,G__96456) : f.call(null,G__96455,G__96456));
})());
});
var G__96457__3 = (function() { 
var G__96458__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__96458 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__96459__i = 0, G__96459__a = new Array(arguments.length -  2);
while (G__96459__i < G__96459__a.length) {G__96459__a[G__96459__i] = arguments[G__96459__i + 2]; ++G__96459__i;}
  zs = new cljs.core.IndexedSeq(G__96459__a,0);
} 
return G__96458__delegate.call(this,x,y,zs);};
G__96458.cljs$lang$maxFixedArity = 2;
G__96458.cljs$lang$applyTo = (function (arglist__96460){
var x = cljs.core.first(arglist__96460);
arglist__96460 = cljs.core.next(arglist__96460);
var y = cljs.core.first(arglist__96460);
var zs = cljs.core.rest(arglist__96460);
return G__96458__delegate(x,y,zs);
});
G__96458.cljs$core$IFn$_invoke$arity$variadic = G__96458__delegate;
return G__96458;
})()
;
G__96457 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__96457__0.call(this);
case 1:
return G__96457__1.call(this,x);
case 2:
return G__96457__2.call(this,x,y);
default:
var G__96461 = null;
if (arguments.length > 2) {
var G__96462__i = 0, G__96462__a = new Array(arguments.length -  2);
while (G__96462__i < G__96462__a.length) {G__96462__a[G__96462__i] = arguments[G__96462__i + 2]; ++G__96462__i;}
G__96461 = new cljs.core.IndexedSeq(G__96462__a,0);
}
return G__96457__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__96461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96457.cljs$lang$maxFixedArity = 2;
G__96457.cljs$lang$applyTo = G__96457__3.cljs$lang$applyTo;
G__96457.cljs$core$IFn$_invoke$arity$0 = G__96457__0;
G__96457.cljs$core$IFn$_invoke$arity$1 = G__96457__1;
G__96457.cljs$core$IFn$_invoke$arity$2 = G__96457__2;
G__96457.cljs$core$IFn$_invoke$arity$variadic = G__96457__3.cljs$core$IFn$_invoke$arity$variadic;
return G__96457;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__96463__delegate = function (args){
return x;
};
var G__96463 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__96464__i = 0, G__96464__a = new Array(arguments.length -  0);
while (G__96464__i < G__96464__a.length) {G__96464__a[G__96464__i] = arguments[G__96464__i + 0]; ++G__96464__i;}
  args = new cljs.core.IndexedSeq(G__96464__a,0);
} 
return G__96463__delegate.call(this,args);};
G__96463.cljs$lang$maxFixedArity = 0;
G__96463.cljs$lang$applyTo = (function (arglist__96465){
var args = cljs.core.seq(arglist__96465);
return G__96463__delegate(args);
});
G__96463.cljs$core$IFn$_invoke$arity$variadic = G__96463__delegate;
return G__96463;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__96520 = null;
var G__96520__0 = (function (){
var G__96493 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96493) : f.call(null,G__96493));
});
var G__96520__1 = (function (x){
var G__96494 = (function (){var G__96495 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96495) : g.call(null,G__96495));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96494) : f.call(null,G__96494));
});
var G__96520__2 = (function (x,y){
var G__96496 = (function (){var G__96497 = x;
var G__96498 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__96497,G__96498) : g.call(null,G__96497,G__96498));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96496) : f.call(null,G__96496));
});
var G__96520__3 = (function (x,y,z){
var G__96499 = (function (){var G__96500 = x;
var G__96501 = y;
var G__96502 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__96500,G__96501,G__96502) : g.call(null,G__96500,G__96501,G__96502));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96499) : f.call(null,G__96499));
});
var G__96520__4 = (function() { 
var G__96521__delegate = function (x,y,z,args){
var G__96503 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96503) : f.call(null,G__96503));
};
var G__96521 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__96522__i = 0, G__96522__a = new Array(arguments.length -  3);
while (G__96522__i < G__96522__a.length) {G__96522__a[G__96522__i] = arguments[G__96522__i + 3]; ++G__96522__i;}
  args = new cljs.core.IndexedSeq(G__96522__a,0);
} 
return G__96521__delegate.call(this,x,y,z,args);};
G__96521.cljs$lang$maxFixedArity = 3;
G__96521.cljs$lang$applyTo = (function (arglist__96523){
var x = cljs.core.first(arglist__96523);
arglist__96523 = cljs.core.next(arglist__96523);
var y = cljs.core.first(arglist__96523);
arglist__96523 = cljs.core.next(arglist__96523);
var z = cljs.core.first(arglist__96523);
var args = cljs.core.rest(arglist__96523);
return G__96521__delegate(x,y,z,args);
});
G__96521.cljs$core$IFn$_invoke$arity$variadic = G__96521__delegate;
return G__96521;
})()
;
G__96520 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__96520__0.call(this);
case 1:
return G__96520__1.call(this,x);
case 2:
return G__96520__2.call(this,x,y);
case 3:
return G__96520__3.call(this,x,y,z);
default:
var G__96524 = null;
if (arguments.length > 3) {
var G__96525__i = 0, G__96525__a = new Array(arguments.length -  3);
while (G__96525__i < G__96525__a.length) {G__96525__a[G__96525__i] = arguments[G__96525__i + 3]; ++G__96525__i;}
G__96524 = new cljs.core.IndexedSeq(G__96525__a,0);
}
return G__96520__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__96524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96520.cljs$lang$maxFixedArity = 3;
G__96520.cljs$lang$applyTo = G__96520__4.cljs$lang$applyTo;
G__96520.cljs$core$IFn$_invoke$arity$0 = G__96520__0;
G__96520.cljs$core$IFn$_invoke$arity$1 = G__96520__1;
G__96520.cljs$core$IFn$_invoke$arity$2 = G__96520__2;
G__96520.cljs$core$IFn$_invoke$arity$3 = G__96520__3;
G__96520.cljs$core$IFn$_invoke$arity$variadic = G__96520__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96520;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__96526 = null;
var G__96526__0 = (function (){
var G__96504 = (function (){var G__96505 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96505) : g.call(null,G__96505));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96504) : f.call(null,G__96504));
});
var G__96526__1 = (function (x){
var G__96506 = (function (){var G__96507 = (function (){var G__96508 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__96508) : h.call(null,G__96508));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96507) : g.call(null,G__96507));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96506) : f.call(null,G__96506));
});
var G__96526__2 = (function (x,y){
var G__96509 = (function (){var G__96510 = (function (){var G__96511 = x;
var G__96512 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__96511,G__96512) : h.call(null,G__96511,G__96512));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96510) : g.call(null,G__96510));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96509) : f.call(null,G__96509));
});
var G__96526__3 = (function (x,y,z){
var G__96513 = (function (){var G__96514 = (function (){var G__96515 = x;
var G__96516 = y;
var G__96517 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__96515,G__96516,G__96517) : h.call(null,G__96515,G__96516,G__96517));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96514) : g.call(null,G__96514));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96513) : f.call(null,G__96513));
});
var G__96526__4 = (function() { 
var G__96527__delegate = function (x,y,z,args){
var G__96518 = (function (){var G__96519 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__96519) : g.call(null,G__96519));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96518) : f.call(null,G__96518));
};
var G__96527 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__96528__i = 0, G__96528__a = new Array(arguments.length -  3);
while (G__96528__i < G__96528__a.length) {G__96528__a[G__96528__i] = arguments[G__96528__i + 3]; ++G__96528__i;}
  args = new cljs.core.IndexedSeq(G__96528__a,0);
} 
return G__96527__delegate.call(this,x,y,z,args);};
G__96527.cljs$lang$maxFixedArity = 3;
G__96527.cljs$lang$applyTo = (function (arglist__96529){
var x = cljs.core.first(arglist__96529);
arglist__96529 = cljs.core.next(arglist__96529);
var y = cljs.core.first(arglist__96529);
arglist__96529 = cljs.core.next(arglist__96529);
var z = cljs.core.first(arglist__96529);
var args = cljs.core.rest(arglist__96529);
return G__96527__delegate(x,y,z,args);
});
G__96527.cljs$core$IFn$_invoke$arity$variadic = G__96527__delegate;
return G__96527;
})()
;
G__96526 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__96526__0.call(this);
case 1:
return G__96526__1.call(this,x);
case 2:
return G__96526__2.call(this,x,y);
case 3:
return G__96526__3.call(this,x,y,z);
default:
var G__96530 = null;
if (arguments.length > 3) {
var G__96531__i = 0, G__96531__a = new Array(arguments.length -  3);
while (G__96531__i < G__96531__a.length) {G__96531__a[G__96531__i] = arguments[G__96531__i + 3]; ++G__96531__i;}
G__96530 = new cljs.core.IndexedSeq(G__96531__a,0);
}
return G__96526__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__96530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96526.cljs$lang$maxFixedArity = 3;
G__96526.cljs$lang$applyTo = G__96526__4.cljs$lang$applyTo;
G__96526.cljs$core$IFn$_invoke$arity$0 = G__96526__0;
G__96526.cljs$core$IFn$_invoke$arity$1 = G__96526__1;
G__96526.cljs$core$IFn$_invoke$arity$2 = G__96526__2;
G__96526.cljs$core$IFn$_invoke$arity$3 = G__96526__3;
G__96526.cljs$core$IFn$_invoke$arity$variadic = G__96526__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96526;
})()
});
var comp__4 = (function() { 
var G__96532__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__96533__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__96534 = cljs.core.first(fs__$2).call(null,ret);
var G__96535 = cljs.core.next(fs__$2);
ret = G__96534;
fs__$2 = G__96535;
continue;
} else {
return ret;
}
break;
}
};
var G__96533 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__96536__i = 0, G__96536__a = new Array(arguments.length -  0);
while (G__96536__i < G__96536__a.length) {G__96536__a[G__96536__i] = arguments[G__96536__i + 0]; ++G__96536__i;}
  args = new cljs.core.IndexedSeq(G__96536__a,0);
} 
return G__96533__delegate.call(this,args);};
G__96533.cljs$lang$maxFixedArity = 0;
G__96533.cljs$lang$applyTo = (function (arglist__96537){
var args = cljs.core.seq(arglist__96537);
return G__96533__delegate(args);
});
G__96533.cljs$core$IFn$_invoke$arity$variadic = G__96533__delegate;
return G__96533;
})()
;
;})(fs__$1))
};
var G__96532 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__96538__i = 0, G__96538__a = new Array(arguments.length -  3);
while (G__96538__i < G__96538__a.length) {G__96538__a[G__96538__i] = arguments[G__96538__i + 3]; ++G__96538__i;}
  fs = new cljs.core.IndexedSeq(G__96538__a,0);
} 
return G__96532__delegate.call(this,f1,f2,f3,fs);};
G__96532.cljs$lang$maxFixedArity = 3;
G__96532.cljs$lang$applyTo = (function (arglist__96539){
var f1 = cljs.core.first(arglist__96539);
arglist__96539 = cljs.core.next(arglist__96539);
var f2 = cljs.core.first(arglist__96539);
arglist__96539 = cljs.core.next(arglist__96539);
var f3 = cljs.core.first(arglist__96539);
var fs = cljs.core.rest(arglist__96539);
return G__96532__delegate(f1,f2,f3,fs);
});
G__96532.cljs$core$IFn$_invoke$arity$variadic = G__96532__delegate;
return G__96532;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__96540 = null;
if (arguments.length > 3) {
var G__96541__i = 0, G__96541__a = new Array(arguments.length -  3);
while (G__96541__i < G__96541__a.length) {G__96541__a[G__96541__i] = arguments[G__96541__i + 3]; ++G__96541__i;}
G__96540 = new cljs.core.IndexedSeq(G__96541__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__96540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__96626 = null;
var G__96626__0 = (function (){
var G__96584 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96584) : f.call(null,G__96584));
});
var G__96626__1 = (function (x){
var G__96585 = arg1;
var G__96586 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96585,G__96586) : f.call(null,G__96585,G__96586));
});
var G__96626__2 = (function (x,y){
var G__96587 = arg1;
var G__96588 = x;
var G__96589 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96587,G__96588,G__96589) : f.call(null,G__96587,G__96588,G__96589));
});
var G__96626__3 = (function (x,y,z){
var G__96590 = arg1;
var G__96591 = x;
var G__96592 = y;
var G__96593 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96590,G__96591,G__96592,G__96593) : f.call(null,G__96590,G__96591,G__96592,G__96593));
});
var G__96626__4 = (function() { 
var G__96627__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__96627 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__96628__i = 0, G__96628__a = new Array(arguments.length -  3);
while (G__96628__i < G__96628__a.length) {G__96628__a[G__96628__i] = arguments[G__96628__i + 3]; ++G__96628__i;}
  args = new cljs.core.IndexedSeq(G__96628__a,0);
} 
return G__96627__delegate.call(this,x,y,z,args);};
G__96627.cljs$lang$maxFixedArity = 3;
G__96627.cljs$lang$applyTo = (function (arglist__96629){
var x = cljs.core.first(arglist__96629);
arglist__96629 = cljs.core.next(arglist__96629);
var y = cljs.core.first(arglist__96629);
arglist__96629 = cljs.core.next(arglist__96629);
var z = cljs.core.first(arglist__96629);
var args = cljs.core.rest(arglist__96629);
return G__96627__delegate(x,y,z,args);
});
G__96627.cljs$core$IFn$_invoke$arity$variadic = G__96627__delegate;
return G__96627;
})()
;
G__96626 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__96626__0.call(this);
case 1:
return G__96626__1.call(this,x);
case 2:
return G__96626__2.call(this,x,y);
case 3:
return G__96626__3.call(this,x,y,z);
default:
var G__96630 = null;
if (arguments.length > 3) {
var G__96631__i = 0, G__96631__a = new Array(arguments.length -  3);
while (G__96631__i < G__96631__a.length) {G__96631__a[G__96631__i] = arguments[G__96631__i + 3]; ++G__96631__i;}
G__96630 = new cljs.core.IndexedSeq(G__96631__a,0);
}
return G__96626__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__96630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96626.cljs$lang$maxFixedArity = 3;
G__96626.cljs$lang$applyTo = G__96626__4.cljs$lang$applyTo;
G__96626.cljs$core$IFn$_invoke$arity$0 = G__96626__0;
G__96626.cljs$core$IFn$_invoke$arity$1 = G__96626__1;
G__96626.cljs$core$IFn$_invoke$arity$2 = G__96626__2;
G__96626.cljs$core$IFn$_invoke$arity$3 = G__96626__3;
G__96626.cljs$core$IFn$_invoke$arity$variadic = G__96626__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96626;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__96632 = null;
var G__96632__0 = (function (){
var G__96594 = arg1;
var G__96595 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96594,G__96595) : f.call(null,G__96594,G__96595));
});
var G__96632__1 = (function (x){
var G__96596 = arg1;
var G__96597 = arg2;
var G__96598 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96596,G__96597,G__96598) : f.call(null,G__96596,G__96597,G__96598));
});
var G__96632__2 = (function (x,y){
var G__96599 = arg1;
var G__96600 = arg2;
var G__96601 = x;
var G__96602 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96599,G__96600,G__96601,G__96602) : f.call(null,G__96599,G__96600,G__96601,G__96602));
});
var G__96632__3 = (function (x,y,z){
var G__96603 = arg1;
var G__96604 = arg2;
var G__96605 = x;
var G__96606 = y;
var G__96607 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__96603,G__96604,G__96605,G__96606,G__96607) : f.call(null,G__96603,G__96604,G__96605,G__96606,G__96607));
});
var G__96632__4 = (function() { 
var G__96633__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__96633 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__96634__i = 0, G__96634__a = new Array(arguments.length -  3);
while (G__96634__i < G__96634__a.length) {G__96634__a[G__96634__i] = arguments[G__96634__i + 3]; ++G__96634__i;}
  args = new cljs.core.IndexedSeq(G__96634__a,0);
} 
return G__96633__delegate.call(this,x,y,z,args);};
G__96633.cljs$lang$maxFixedArity = 3;
G__96633.cljs$lang$applyTo = (function (arglist__96635){
var x = cljs.core.first(arglist__96635);
arglist__96635 = cljs.core.next(arglist__96635);
var y = cljs.core.first(arglist__96635);
arglist__96635 = cljs.core.next(arglist__96635);
var z = cljs.core.first(arglist__96635);
var args = cljs.core.rest(arglist__96635);
return G__96633__delegate(x,y,z,args);
});
G__96633.cljs$core$IFn$_invoke$arity$variadic = G__96633__delegate;
return G__96633;
})()
;
G__96632 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__96632__0.call(this);
case 1:
return G__96632__1.call(this,x);
case 2:
return G__96632__2.call(this,x,y);
case 3:
return G__96632__3.call(this,x,y,z);
default:
var G__96636 = null;
if (arguments.length > 3) {
var G__96637__i = 0, G__96637__a = new Array(arguments.length -  3);
while (G__96637__i < G__96637__a.length) {G__96637__a[G__96637__i] = arguments[G__96637__i + 3]; ++G__96637__i;}
G__96636 = new cljs.core.IndexedSeq(G__96637__a,0);
}
return G__96632__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__96636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96632.cljs$lang$maxFixedArity = 3;
G__96632.cljs$lang$applyTo = G__96632__4.cljs$lang$applyTo;
G__96632.cljs$core$IFn$_invoke$arity$0 = G__96632__0;
G__96632.cljs$core$IFn$_invoke$arity$1 = G__96632__1;
G__96632.cljs$core$IFn$_invoke$arity$2 = G__96632__2;
G__96632.cljs$core$IFn$_invoke$arity$3 = G__96632__3;
G__96632.cljs$core$IFn$_invoke$arity$variadic = G__96632__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96632;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__96638 = null;
var G__96638__0 = (function (){
var G__96608 = arg1;
var G__96609 = arg2;
var G__96610 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96608,G__96609,G__96610) : f.call(null,G__96608,G__96609,G__96610));
});
var G__96638__1 = (function (x){
var G__96611 = arg1;
var G__96612 = arg2;
var G__96613 = arg3;
var G__96614 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96611,G__96612,G__96613,G__96614) : f.call(null,G__96611,G__96612,G__96613,G__96614));
});
var G__96638__2 = (function (x,y){
var G__96615 = arg1;
var G__96616 = arg2;
var G__96617 = arg3;
var G__96618 = x;
var G__96619 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__96615,G__96616,G__96617,G__96618,G__96619) : f.call(null,G__96615,G__96616,G__96617,G__96618,G__96619));
});
var G__96638__3 = (function (x,y,z){
var G__96620 = arg1;
var G__96621 = arg2;
var G__96622 = arg3;
var G__96623 = x;
var G__96624 = y;
var G__96625 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__96620,G__96621,G__96622,G__96623,G__96624,G__96625) : f.call(null,G__96620,G__96621,G__96622,G__96623,G__96624,G__96625));
});
var G__96638__4 = (function() { 
var G__96639__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__96639 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__96640__i = 0, G__96640__a = new Array(arguments.length -  3);
while (G__96640__i < G__96640__a.length) {G__96640__a[G__96640__i] = arguments[G__96640__i + 3]; ++G__96640__i;}
  args = new cljs.core.IndexedSeq(G__96640__a,0);
} 
return G__96639__delegate.call(this,x,y,z,args);};
G__96639.cljs$lang$maxFixedArity = 3;
G__96639.cljs$lang$applyTo = (function (arglist__96641){
var x = cljs.core.first(arglist__96641);
arglist__96641 = cljs.core.next(arglist__96641);
var y = cljs.core.first(arglist__96641);
arglist__96641 = cljs.core.next(arglist__96641);
var z = cljs.core.first(arglist__96641);
var args = cljs.core.rest(arglist__96641);
return G__96639__delegate(x,y,z,args);
});
G__96639.cljs$core$IFn$_invoke$arity$variadic = G__96639__delegate;
return G__96639;
})()
;
G__96638 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__96638__0.call(this);
case 1:
return G__96638__1.call(this,x);
case 2:
return G__96638__2.call(this,x,y);
case 3:
return G__96638__3.call(this,x,y,z);
default:
var G__96642 = null;
if (arguments.length > 3) {
var G__96643__i = 0, G__96643__a = new Array(arguments.length -  3);
while (G__96643__i < G__96643__a.length) {G__96643__a[G__96643__i] = arguments[G__96643__i + 3]; ++G__96643__i;}
G__96642 = new cljs.core.IndexedSeq(G__96643__a,0);
}
return G__96638__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__96642);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96638.cljs$lang$maxFixedArity = 3;
G__96638.cljs$lang$applyTo = G__96638__4.cljs$lang$applyTo;
G__96638.cljs$core$IFn$_invoke$arity$0 = G__96638__0;
G__96638.cljs$core$IFn$_invoke$arity$1 = G__96638__1;
G__96638.cljs$core$IFn$_invoke$arity$2 = G__96638__2;
G__96638.cljs$core$IFn$_invoke$arity$3 = G__96638__3;
G__96638.cljs$core$IFn$_invoke$arity$variadic = G__96638__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96638;
})()
});
var partial__5 = (function() { 
var G__96644__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__96645__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__96645 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__96646__i = 0, G__96646__a = new Array(arguments.length -  0);
while (G__96646__i < G__96646__a.length) {G__96646__a[G__96646__i] = arguments[G__96646__i + 0]; ++G__96646__i;}
  args = new cljs.core.IndexedSeq(G__96646__a,0);
} 
return G__96645__delegate.call(this,args);};
G__96645.cljs$lang$maxFixedArity = 0;
G__96645.cljs$lang$applyTo = (function (arglist__96647){
var args = cljs.core.seq(arglist__96647);
return G__96645__delegate(args);
});
G__96645.cljs$core$IFn$_invoke$arity$variadic = G__96645__delegate;
return G__96645;
})()
;
};
var G__96644 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__96648__i = 0, G__96648__a = new Array(arguments.length -  4);
while (G__96648__i < G__96648__a.length) {G__96648__a[G__96648__i] = arguments[G__96648__i + 4]; ++G__96648__i;}
  more = new cljs.core.IndexedSeq(G__96648__a,0);
} 
return G__96644__delegate.call(this,f,arg1,arg2,arg3,more);};
G__96644.cljs$lang$maxFixedArity = 4;
G__96644.cljs$lang$applyTo = (function (arglist__96649){
var f = cljs.core.first(arglist__96649);
arglist__96649 = cljs.core.next(arglist__96649);
var arg1 = cljs.core.first(arglist__96649);
arglist__96649 = cljs.core.next(arglist__96649);
var arg2 = cljs.core.first(arglist__96649);
arglist__96649 = cljs.core.next(arglist__96649);
var arg3 = cljs.core.first(arglist__96649);
var more = cljs.core.rest(arglist__96649);
return G__96644__delegate(f,arg1,arg2,arg3,more);
});
G__96644.cljs$core$IFn$_invoke$arity$variadic = G__96644__delegate;
return G__96644;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__96650 = null;
if (arguments.length > 4) {
var G__96651__i = 0, G__96651__a = new Array(arguments.length -  4);
while (G__96651__i < G__96651__a.length) {G__96651__a[G__96651__i] = arguments[G__96651__i + 4]; ++G__96651__i;}
G__96650 = new cljs.core.IndexedSeq(G__96651__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__96650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__96684 = null;
var G__96684__1 = (function (a){
var G__96668 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96668) : f.call(null,G__96668));
});
var G__96684__2 = (function (a,b){
var G__96669 = (((a == null))?x:a);
var G__96670 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96669,G__96670) : f.call(null,G__96669,G__96670));
});
var G__96684__3 = (function (a,b,c){
var G__96671 = (((a == null))?x:a);
var G__96672 = b;
var G__96673 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96671,G__96672,G__96673) : f.call(null,G__96671,G__96672,G__96673));
});
var G__96684__4 = (function() { 
var G__96685__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__96685 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__96686__i = 0, G__96686__a = new Array(arguments.length -  3);
while (G__96686__i < G__96686__a.length) {G__96686__a[G__96686__i] = arguments[G__96686__i + 3]; ++G__96686__i;}
  ds = new cljs.core.IndexedSeq(G__96686__a,0);
} 
return G__96685__delegate.call(this,a,b,c,ds);};
G__96685.cljs$lang$maxFixedArity = 3;
G__96685.cljs$lang$applyTo = (function (arglist__96687){
var a = cljs.core.first(arglist__96687);
arglist__96687 = cljs.core.next(arglist__96687);
var b = cljs.core.first(arglist__96687);
arglist__96687 = cljs.core.next(arglist__96687);
var c = cljs.core.first(arglist__96687);
var ds = cljs.core.rest(arglist__96687);
return G__96685__delegate(a,b,c,ds);
});
G__96685.cljs$core$IFn$_invoke$arity$variadic = G__96685__delegate;
return G__96685;
})()
;
G__96684 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__96684__1.call(this,a);
case 2:
return G__96684__2.call(this,a,b);
case 3:
return G__96684__3.call(this,a,b,c);
default:
var G__96688 = null;
if (arguments.length > 3) {
var G__96689__i = 0, G__96689__a = new Array(arguments.length -  3);
while (G__96689__i < G__96689__a.length) {G__96689__a[G__96689__i] = arguments[G__96689__i + 3]; ++G__96689__i;}
G__96688 = new cljs.core.IndexedSeq(G__96689__a,0);
}
return G__96684__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__96688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96684.cljs$lang$maxFixedArity = 3;
G__96684.cljs$lang$applyTo = G__96684__4.cljs$lang$applyTo;
G__96684.cljs$core$IFn$_invoke$arity$1 = G__96684__1;
G__96684.cljs$core$IFn$_invoke$arity$2 = G__96684__2;
G__96684.cljs$core$IFn$_invoke$arity$3 = G__96684__3;
G__96684.cljs$core$IFn$_invoke$arity$variadic = G__96684__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96684;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__96690 = null;
var G__96690__2 = (function (a,b){
var G__96674 = (((a == null))?x:a);
var G__96675 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96674,G__96675) : f.call(null,G__96674,G__96675));
});
var G__96690__3 = (function (a,b,c){
var G__96676 = (((a == null))?x:a);
var G__96677 = (((b == null))?y:b);
var G__96678 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96676,G__96677,G__96678) : f.call(null,G__96676,G__96677,G__96678));
});
var G__96690__4 = (function() { 
var G__96691__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__96691 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__96692__i = 0, G__96692__a = new Array(arguments.length -  3);
while (G__96692__i < G__96692__a.length) {G__96692__a[G__96692__i] = arguments[G__96692__i + 3]; ++G__96692__i;}
  ds = new cljs.core.IndexedSeq(G__96692__a,0);
} 
return G__96691__delegate.call(this,a,b,c,ds);};
G__96691.cljs$lang$maxFixedArity = 3;
G__96691.cljs$lang$applyTo = (function (arglist__96693){
var a = cljs.core.first(arglist__96693);
arglist__96693 = cljs.core.next(arglist__96693);
var b = cljs.core.first(arglist__96693);
arglist__96693 = cljs.core.next(arglist__96693);
var c = cljs.core.first(arglist__96693);
var ds = cljs.core.rest(arglist__96693);
return G__96691__delegate(a,b,c,ds);
});
G__96691.cljs$core$IFn$_invoke$arity$variadic = G__96691__delegate;
return G__96691;
})()
;
G__96690 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__96690__2.call(this,a,b);
case 3:
return G__96690__3.call(this,a,b,c);
default:
var G__96694 = null;
if (arguments.length > 3) {
var G__96695__i = 0, G__96695__a = new Array(arguments.length -  3);
while (G__96695__i < G__96695__a.length) {G__96695__a[G__96695__i] = arguments[G__96695__i + 3]; ++G__96695__i;}
G__96694 = new cljs.core.IndexedSeq(G__96695__a,0);
}
return G__96690__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__96694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96690.cljs$lang$maxFixedArity = 3;
G__96690.cljs$lang$applyTo = G__96690__4.cljs$lang$applyTo;
G__96690.cljs$core$IFn$_invoke$arity$2 = G__96690__2;
G__96690.cljs$core$IFn$_invoke$arity$3 = G__96690__3;
G__96690.cljs$core$IFn$_invoke$arity$variadic = G__96690__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96690;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__96696 = null;
var G__96696__2 = (function (a,b){
var G__96679 = (((a == null))?x:a);
var G__96680 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96679,G__96680) : f.call(null,G__96679,G__96680));
});
var G__96696__3 = (function (a,b,c){
var G__96681 = (((a == null))?x:a);
var G__96682 = (((b == null))?y:b);
var G__96683 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96681,G__96682,G__96683) : f.call(null,G__96681,G__96682,G__96683));
});
var G__96696__4 = (function() { 
var G__96697__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__96697 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__96698__i = 0, G__96698__a = new Array(arguments.length -  3);
while (G__96698__i < G__96698__a.length) {G__96698__a[G__96698__i] = arguments[G__96698__i + 3]; ++G__96698__i;}
  ds = new cljs.core.IndexedSeq(G__96698__a,0);
} 
return G__96697__delegate.call(this,a,b,c,ds);};
G__96697.cljs$lang$maxFixedArity = 3;
G__96697.cljs$lang$applyTo = (function (arglist__96699){
var a = cljs.core.first(arglist__96699);
arglist__96699 = cljs.core.next(arglist__96699);
var b = cljs.core.first(arglist__96699);
arglist__96699 = cljs.core.next(arglist__96699);
var c = cljs.core.first(arglist__96699);
var ds = cljs.core.rest(arglist__96699);
return G__96697__delegate(a,b,c,ds);
});
G__96697.cljs$core$IFn$_invoke$arity$variadic = G__96697__delegate;
return G__96697;
})()
;
G__96696 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__96696__2.call(this,a,b);
case 3:
return G__96696__3.call(this,a,b,c);
default:
var G__96700 = null;
if (arguments.length > 3) {
var G__96701__i = 0, G__96701__a = new Array(arguments.length -  3);
while (G__96701__i < G__96701__a.length) {G__96701__a[G__96701__i] = arguments[G__96701__i + 3]; ++G__96701__i;}
G__96700 = new cljs.core.IndexedSeq(G__96701__a,0);
}
return G__96696__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__96700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96696.cljs$lang$maxFixedArity = 3;
G__96696.cljs$lang$applyTo = G__96696__4.cljs$lang$applyTo;
G__96696.cljs$core$IFn$_invoke$arity$2 = G__96696__2;
G__96696.cljs$core$IFn$_invoke$arity$3 = G__96696__3;
G__96696.cljs$core$IFn$_invoke$arity$variadic = G__96696__4.cljs$core$IFn$_invoke$arity$variadic;
return G__96696;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__96732 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__96732) : cljs.core.volatile_BANG_.call(null,G__96732));
})();
return ((function (i){
return (function() {
var G__96762 = null;
var G__96762__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__96762__1 = (function (result){
var G__96733 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__96733) : rf.call(null,G__96733));
});
var G__96762__2 = (function (result,input){
var G__96734 = result;
var G__96735 = (function (){var G__96736 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__96737 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96736,G__96737) : f.call(null,G__96736,G__96737));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__96734,G__96735) : rf.call(null,G__96734,G__96735));
});
G__96762 = function(result,input){
switch(arguments.length){
case 0:
return G__96762__0.call(this);
case 1:
return G__96762__1.call(this,result);
case 2:
return G__96762__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96762.cljs$core$IFn$_invoke$arity$0 = G__96762__0;
G__96762.cljs$core$IFn$_invoke$arity$1 = G__96762__1;
G__96762.cljs$core$IFn$_invoke$arity$2 = G__96762__2;
return G__96762;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___96763 = size;
var i_96764 = (0);
while(true){
if((i_96764 < n__4868__auto___96763)){
cljs.core.chunk_append(b,(function (){var G__96758 = (idx + i_96764);
var G__96759 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_96764);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96758,G__96759) : f.call(null,G__96758,G__96759));
})());

var G__96765 = (i_96764 + (1));
i_96764 = G__96765;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__96760 = idx;
var G__96761 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96760,G__96761) : f.call(null,G__96760,G__96761));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__96784 = null;
var G__96784__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__96784__1 = (function (result){
var G__96778 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__96778) : rf.call(null,G__96778));
});
var G__96784__2 = (function (result,input){
var v = (function (){var G__96779 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96779) : f.call(null,G__96779));
})();
if((v == null)){
return result;
} else {
var G__96780 = result;
var G__96781 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__96780,G__96781) : rf.call(null,G__96780,G__96781));
}
});
G__96784 = function(result,input){
switch(arguments.length){
case 0:
return G__96784__0.call(this);
case 1:
return G__96784__1.call(this,result);
case 2:
return G__96784__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96784.cljs$core$IFn$_invoke$arity$0 = G__96784__0;
G__96784.cljs$core$IFn$_invoke$arity$1 = G__96784__1;
G__96784.cljs$core$IFn$_invoke$arity$2 = G__96784__2;
return G__96784;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___96785 = size;
var i_96786 = (0);
while(true){
if((i_96786 < n__4868__auto___96785)){
var x_96787 = (function (){var G__96782 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_96786);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96782) : f.call(null,G__96782));
})();
if((x_96787 == null)){
} else {
cljs.core.chunk_append(b,x_96787);
}

var G__96788 = (i_96786 + (1));
i_96786 = G__96788;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__96783 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96783) : f.call(null,G__96783));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__96789 = this$__$1;
return goog.getUid(G__96789);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__96790 = cljs.core.seq(self__.watches);
var chunk__96791 = null;
var count__96792 = (0);
var i__96793 = (0);
while(true){
if((i__96793 < count__96792)){
var vec__96794 = chunk__96791.cljs$core$IIndexed$_nth$arity$2(null,i__96793);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96794,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96794,(1),null);
var G__96795_96804 = key;
var G__96796_96805 = this$__$1;
var G__96797_96806 = oldval;
var G__96798_96807 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96795_96804,G__96796_96805,G__96797_96806,G__96798_96807) : f.call(null,G__96795_96804,G__96796_96805,G__96797_96806,G__96798_96807));

var G__96808 = seq__96790;
var G__96809 = chunk__96791;
var G__96810 = count__96792;
var G__96811 = (i__96793 + (1));
seq__96790 = G__96808;
chunk__96791 = G__96809;
count__96792 = G__96810;
i__96793 = G__96811;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__96790);
if(temp__4126__auto__){
var seq__96790__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__96790__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__96790__$1);
var G__96812 = cljs.core.chunk_rest(seq__96790__$1);
var G__96813 = c__4768__auto__;
var G__96814 = cljs.core.count(c__4768__auto__);
var G__96815 = (0);
seq__96790 = G__96812;
chunk__96791 = G__96813;
count__96792 = G__96814;
i__96793 = G__96815;
continue;
} else {
var vec__96799 = cljs.core.first(seq__96790__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96799,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96799,(1),null);
var G__96800_96816 = key;
var G__96801_96817 = this$__$1;
var G__96802_96818 = oldval;
var G__96803_96819 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__96800_96816,G__96801_96817,G__96802_96818,G__96803_96819) : f.call(null,G__96800_96816,G__96801_96817,G__96802_96818,G__96803_96819));

var G__96820 = cljs.core.next(seq__96790__$1);
var G__96821 = null;
var G__96822 = (0);
var G__96823 = (0);
seq__96790 = G__96820;
chunk__96791 = G__96821;
count__96792 = G__96822;
i__96793 = G__96823;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__96827__delegate = function (x,p__96824){
var map__96826 = p__96824;
var map__96826__$1 = ((cljs.core.seq_QMARK_(map__96826))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__96826):map__96826);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96826__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96826__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__96827 = function (x,var_args){
var p__96824 = null;
if (arguments.length > 1) {
var G__96828__i = 0, G__96828__a = new Array(arguments.length -  1);
while (G__96828__i < G__96828__a.length) {G__96828__a[G__96828__i] = arguments[G__96828__i + 1]; ++G__96828__i;}
  p__96824 = new cljs.core.IndexedSeq(G__96828__a,0);
} 
return G__96827__delegate.call(this,x,p__96824);};
G__96827.cljs$lang$maxFixedArity = 1;
G__96827.cljs$lang$applyTo = (function (arglist__96829){
var x = cljs.core.first(arglist__96829);
var p__96824 = cljs.core.rest(arglist__96829);
return G__96827__delegate(x,p__96824);
});
G__96827.cljs$core$IFn$_invoke$arity$variadic = G__96827__delegate;
return G__96827;
})()
;
atom = function(x,var_args){
var p__96824 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__96830 = null;
if (arguments.length > 1) {
var G__96831__i = 0, G__96831__a = new Array(arguments.length -  1);
while (G__96831__i < G__96831__a.length) {G__96831__a[G__96831__i] = arguments[G__96831__i + 1]; ++G__96831__i;}
G__96830 = new cljs.core.IndexedSeq(G__96831__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__96830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__96834 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__96834) : validate.call(null,G__96834));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__96835 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__96835) : cljs.core.pr_str.call(null,G__96835));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__96842 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__96842) : f.call(null,G__96842));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__96843 = a.state;
var G__96844 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96843,G__96844) : f.call(null,G__96843,G__96844));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__96845 = a.state;
var G__96846 = x;
var G__96847 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__96845,G__96846,G__96847) : f.call(null,G__96845,G__96846,G__96847));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__96848__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__96848 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__96849__i = 0, G__96849__a = new Array(arguments.length -  4);
while (G__96849__i < G__96849__a.length) {G__96849__a[G__96849__i] = arguments[G__96849__i + 4]; ++G__96849__i;}
  more = new cljs.core.IndexedSeq(G__96849__a,0);
} 
return G__96848__delegate.call(this,a,f,x,y,more);};
G__96848.cljs$lang$maxFixedArity = 4;
G__96848.cljs$lang$applyTo = (function (arglist__96850){
var a = cljs.core.first(arglist__96850);
arglist__96850 = cljs.core.next(arglist__96850);
var f = cljs.core.first(arglist__96850);
arglist__96850 = cljs.core.next(arglist__96850);
var x = cljs.core.first(arglist__96850);
arglist__96850 = cljs.core.next(arglist__96850);
var y = cljs.core.first(arglist__96850);
var more = cljs.core.rest(arglist__96850);
return G__96848__delegate(a,f,x,y,more);
});
G__96848.cljs$core$IFn$_invoke$arity$variadic = G__96848__delegate;
return G__96848;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__96851 = null;
if (arguments.length > 4) {
var G__96852__i = 0, G__96852__a = new Array(arguments.length -  4);
while (G__96852__i < G__96852__a.length) {G__96852__a[G__96852__i] = arguments[G__96852__i + 4]; ++G__96852__i;}
G__96851 = new cljs.core.IndexedSeq(G__96852__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__96851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__96919 = null;
var G__96919__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__96919__1 = (function (result){
var G__96886 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__96886) : rf.call(null,G__96886));
});
var G__96919__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__96887 = i;
var G__96888 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96887,G__96888) : f.call(null,G__96887,G__96888));
})();
if((v == null)){
return result;
} else {
var G__96889 = result;
var G__96890 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__96889,G__96890) : rf.call(null,G__96889,G__96890));
}
});
G__96919 = function(result,input){
switch(arguments.length){
case 0:
return G__96919__0.call(this);
case 1:
return G__96919__1.call(this,result);
case 2:
return G__96919__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__96919.cljs$core$IFn$_invoke$arity$0 = G__96919__0;
G__96919.cljs$core$IFn$_invoke$arity$1 = G__96919__1;
G__96919.cljs$core$IFn$_invoke$arity$2 = G__96919__2;
return G__96919;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___96920 = size;
var i_96921 = (0);
while(true){
if((i_96921 < n__4868__auto___96920)){
var x_96922 = (function (){var G__96915 = (idx + i_96921);
var G__96916 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_96921);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96915,G__96916) : f.call(null,G__96915,G__96916));
})();
if((x_96922 == null)){
} else {
cljs.core.chunk_append(b,x_96922);
}

var G__96923 = (i_96921 + (1));
i_96921 = G__96923;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__96917 = idx;
var G__96918 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__96917,G__96918) : f.call(null,G__96917,G__96918));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__97137 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97137) : p.call(null,G__97137));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97139 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97139) : p.call(null,G__97139));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__97140 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97140) : p.call(null,G__97140));
} else {
return and__3969__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97142 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97142) : p.call(null,G__97142));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97144 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97144) : p.call(null,G__97144));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__97145 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97145) : p.call(null,G__97145));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__97314__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__97314 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97315__i = 0, G__97315__a = new Array(arguments.length -  3);
while (G__97315__i < G__97315__a.length) {G__97315__a[G__97315__i] = arguments[G__97315__i + 3]; ++G__97315__i;}
  args = new cljs.core.IndexedSeq(G__97315__a,0);
} 
return G__97314__delegate.call(this,x,y,z,args);};
G__97314.cljs$lang$maxFixedArity = 3;
G__97314.cljs$lang$applyTo = (function (arglist__97316){
var x = cljs.core.first(arglist__97316);
arglist__97316 = cljs.core.next(arglist__97316);
var y = cljs.core.first(arglist__97316);
arglist__97316 = cljs.core.next(arglist__97316);
var z = cljs.core.first(arglist__97316);
var args = cljs.core.rest(arglist__97316);
return G__97314__delegate(x,y,z,args);
});
G__97314.cljs$core$IFn$_invoke$arity$variadic = G__97314__delegate;
return G__97314;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__97317 = null;
if (arguments.length > 3) {
var G__97318__i = 0, G__97318__a = new Array(arguments.length -  3);
while (G__97318__i < G__97318__a.length) {G__97318__a[G__97318__i] = arguments[G__97318__i + 3]; ++G__97318__i;}
G__97317 = new cljs.core.IndexedSeq(G__97318__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97177 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97177) : p1.call(null,G__97177));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__97178 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97178) : p2.call(null,G__97178));
} else {
return and__3969__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97180 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97180) : p1.call(null,G__97180));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97182 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97182) : p1.call(null,G__97182));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__97184 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97184) : p2.call(null,G__97184));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var G__97185 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97185) : p2.call(null,G__97185));
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97187 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97187) : p1.call(null,G__97187));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97189 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97189) : p1.call(null,G__97189));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__97191 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97191) : p1.call(null,G__97191));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__97193 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97193) : p2.call(null,G__97193));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__97195 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97195) : p2.call(null,G__97195));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__97196 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97196) : p2.call(null,G__97196));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__97319__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__96924_SHARP_){
var and__3969__auto__ = (function (){var G__97201 = p1__96924_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97201) : p1.call(null,G__97201));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__97202 = p1__96924_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97202) : p2.call(null,G__97202));
} else {
return and__3969__auto__;
}
}),args)));
};
var G__97319 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97320__i = 0, G__97320__a = new Array(arguments.length -  3);
while (G__97320__i < G__97320__a.length) {G__97320__a[G__97320__i] = arguments[G__97320__i + 3]; ++G__97320__i;}
  args = new cljs.core.IndexedSeq(G__97320__a,0);
} 
return G__97319__delegate.call(this,x,y,z,args);};
G__97319.cljs$lang$maxFixedArity = 3;
G__97319.cljs$lang$applyTo = (function (arglist__97321){
var x = cljs.core.first(arglist__97321);
arglist__97321 = cljs.core.next(arglist__97321);
var y = cljs.core.first(arglist__97321);
arglist__97321 = cljs.core.next(arglist__97321);
var z = cljs.core.first(arglist__97321);
var args = cljs.core.rest(arglist__97321);
return G__97319__delegate(x,y,z,args);
});
G__97319.cljs$core$IFn$_invoke$arity$variadic = G__97319__delegate;
return G__97319;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__97322 = null;
if (arguments.length > 3) {
var G__97323__i = 0, G__97323__a = new Array(arguments.length -  3);
while (G__97323__i < G__97323__a.length) {G__97323__a[G__97323__i] = arguments[G__97323__i + 3]; ++G__97323__i;}
G__97322 = new cljs.core.IndexedSeq(G__97323__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97248 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97248) : p1.call(null,G__97248));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97250 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97250) : p2.call(null,G__97250));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__97251 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97251) : p3.call(null,G__97251));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97253 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97253) : p1.call(null,G__97253));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97255 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97255) : p2.call(null,G__97255));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__97257 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97257) : p3.call(null,G__97257));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__97259 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97259) : p1.call(null,G__97259));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__97261 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97261) : p2.call(null,G__97261));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__97262 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97262) : p3.call(null,G__97262));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__97264 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97264) : p1.call(null,G__97264));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97266 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97266) : p2.call(null,G__97266));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__97268 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97268) : p3.call(null,G__97268));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__97270 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97270) : p1.call(null,G__97270));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__97272 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97272) : p2.call(null,G__97272));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var and__3969__auto____$5 = (function (){var G__97274 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97274) : p3.call(null,G__97274));
})();
if(cljs.core.truth_(and__3969__auto____$5)){
var and__3969__auto____$6 = (function (){var G__97276 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97276) : p1.call(null,G__97276));
})();
if(cljs.core.truth_(and__3969__auto____$6)){
var and__3969__auto____$7 = (function (){var G__97278 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97278) : p2.call(null,G__97278));
})();
if(cljs.core.truth_(and__3969__auto____$7)){
var G__97279 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97279) : p3.call(null,G__97279));
} else {
return and__3969__auto____$7;
}
} else {
return and__3969__auto____$6;
}
} else {
return and__3969__auto____$5;
}
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__97324__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__96925_SHARP_){
var and__3969__auto__ = (function (){var G__97286 = p1__96925_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97286) : p1.call(null,G__97286));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97288 = p1__96925_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97288) : p2.call(null,G__97288));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__97289 = p1__96925_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97289) : p3.call(null,G__97289));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}),args)));
};
var G__97324 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97325__i = 0, G__97325__a = new Array(arguments.length -  3);
while (G__97325__i < G__97325__a.length) {G__97325__a[G__97325__i] = arguments[G__97325__i + 3]; ++G__97325__i;}
  args = new cljs.core.IndexedSeq(G__97325__a,0);
} 
return G__97324__delegate.call(this,x,y,z,args);};
G__97324.cljs$lang$maxFixedArity = 3;
G__97324.cljs$lang$applyTo = (function (arglist__97326){
var x = cljs.core.first(arglist__97326);
arglist__97326 = cljs.core.next(arglist__97326);
var y = cljs.core.first(arglist__97326);
arglist__97326 = cljs.core.next(arglist__97326);
var z = cljs.core.first(arglist__97326);
var args = cljs.core.rest(arglist__97326);
return G__97324__delegate(x,y,z,args);
});
G__97324.cljs$core$IFn$_invoke$arity$variadic = G__97324__delegate;
return G__97324;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__97327 = null;
if (arguments.length > 3) {
var G__97328__i = 0, G__97328__a = new Array(arguments.length -  3);
while (G__97328__i < G__97328__a.length) {G__97328__a[G__97328__i] = arguments[G__97328__i + 3]; ++G__97328__i;}
G__97327 = new cljs.core.IndexedSeq(G__97328__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__97329__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__96926_SHARP_){
var G__97305 = x;
return (p1__96926_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96926_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97305) : p1__96926_SHARP_.call(null,G__97305));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__96927_SHARP_){
var and__3969__auto__ = (function (){var G__97307 = x;
return (p1__96927_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96927_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97307) : p1__96927_SHARP_.call(null,G__97307));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__97308 = y;
return (p1__96927_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96927_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97308) : p1__96927_SHARP_.call(null,G__97308));
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__96928_SHARP_){
var and__3969__auto__ = (function (){var G__97310 = x;
return (p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97310) : p1__96928_SHARP_.call(null,G__97310));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__97312 = y;
return (p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97312) : p1__96928_SHARP_.call(null,G__97312));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__97313 = z;
return (p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__96928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97313) : p1__96928_SHARP_.call(null,G__97313));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__97330__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__96929_SHARP_){
return cljs.core.every_QMARK_(p1__96929_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__97330 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97331__i = 0, G__97331__a = new Array(arguments.length -  3);
while (G__97331__i < G__97331__a.length) {G__97331__a[G__97331__i] = arguments[G__97331__i + 3]; ++G__97331__i;}
  args = new cljs.core.IndexedSeq(G__97331__a,0);
} 
return G__97330__delegate.call(this,x,y,z,args);};
G__97330.cljs$lang$maxFixedArity = 3;
G__97330.cljs$lang$applyTo = (function (arglist__97332){
var x = cljs.core.first(arglist__97332);
arglist__97332 = cljs.core.next(arglist__97332);
var y = cljs.core.first(arglist__97332);
arglist__97332 = cljs.core.next(arglist__97332);
var z = cljs.core.first(arglist__97332);
var args = cljs.core.rest(arglist__97332);
return G__97330__delegate(x,y,z,args);
});
G__97330.cljs$core$IFn$_invoke$arity$variadic = G__97330__delegate;
return G__97330;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__97333 = null;
if (arguments.length > 3) {
var G__97334__i = 0, G__97334__a = new Array(arguments.length -  3);
while (G__97334__i < G__97334__a.length) {G__97334__a[G__97334__i] = arguments[G__97334__i + 3]; ++G__97334__i;}
G__97333 = new cljs.core.IndexedSeq(G__97334__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__97329 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__97335__i = 0, G__97335__a = new Array(arguments.length -  3);
while (G__97335__i < G__97335__a.length) {G__97335__a[G__97335__i] = arguments[G__97335__i + 3]; ++G__97335__i;}
  ps = new cljs.core.IndexedSeq(G__97335__a,0);
} 
return G__97329__delegate.call(this,p1,p2,p3,ps);};
G__97329.cljs$lang$maxFixedArity = 3;
G__97329.cljs$lang$applyTo = (function (arglist__97336){
var p1 = cljs.core.first(arglist__97336);
arglist__97336 = cljs.core.next(arglist__97336);
var p2 = cljs.core.first(arglist__97336);
arglist__97336 = cljs.core.next(arglist__97336);
var p3 = cljs.core.first(arglist__97336);
var ps = cljs.core.rest(arglist__97336);
return G__97329__delegate(p1,p2,p3,ps);
});
G__97329.cljs$core$IFn$_invoke$arity$variadic = G__97329__delegate;
return G__97329;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__97337 = null;
if (arguments.length > 3) {
var G__97338__i = 0, G__97338__a = new Array(arguments.length -  3);
while (G__97338__i < G__97338__a.length) {G__97338__a[G__97338__i] = arguments[G__97338__i + 3]; ++G__97338__i;}
G__97337 = new cljs.core.IndexedSeq(G__97338__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__97337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__97544 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97544) : p.call(null,G__97544));
});
var sp1__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__97546 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97546) : p.call(null,G__97546));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__97547 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97547) : p.call(null,G__97547));
}
});
var sp1__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__97549 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97549) : p.call(null,G__97549));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97551 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97551) : p.call(null,G__97551));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__97552 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__97552) : p.call(null,G__97552));
}
}
});
var sp1__4 = (function() { 
var G__97713__delegate = function (x,y,z,args){
var or__3981__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__97713 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97714__i = 0, G__97714__a = new Array(arguments.length -  3);
while (G__97714__i < G__97714__a.length) {G__97714__a[G__97714__i] = arguments[G__97714__i + 3]; ++G__97714__i;}
  args = new cljs.core.IndexedSeq(G__97714__a,0);
} 
return G__97713__delegate.call(this,x,y,z,args);};
G__97713.cljs$lang$maxFixedArity = 3;
G__97713.cljs$lang$applyTo = (function (arglist__97715){
var x = cljs.core.first(arglist__97715);
arglist__97715 = cljs.core.next(arglist__97715);
var y = cljs.core.first(arglist__97715);
arglist__97715 = cljs.core.next(arglist__97715);
var z = cljs.core.first(arglist__97715);
var args = cljs.core.rest(arglist__97715);
return G__97713__delegate(x,y,z,args);
});
G__97713.cljs$core$IFn$_invoke$arity$variadic = G__97713__delegate;
return G__97713;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__97716 = null;
if (arguments.length > 3) {
var G__97717__i = 0, G__97717__a = new Array(arguments.length -  3);
while (G__97717__i < G__97717__a.length) {G__97717__a[G__97717__i] = arguments[G__97717__i + 3]; ++G__97717__i;}
G__97716 = new cljs.core.IndexedSeq(G__97717__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3981__auto__ = (function (){var G__97584 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97584) : p1.call(null,G__97584));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__97585 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97585) : p2.call(null,G__97585));
}
});
var sp2__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__97587 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97587) : p1.call(null,G__97587));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97589 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97589) : p1.call(null,G__97589));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__97591 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97591) : p2.call(null,G__97591));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__97592 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97592) : p2.call(null,G__97592));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__97594 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97594) : p1.call(null,G__97594));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97596 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97596) : p1.call(null,G__97596));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__97598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97598) : p1.call(null,G__97598));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__97600 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97600) : p2.call(null,G__97600));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__97602 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97602) : p2.call(null,G__97602));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__97603 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97603) : p2.call(null,G__97603));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__97718__delegate = function (x,y,z,args){
var or__3981__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__97339_SHARP_){
var or__3981__auto____$1 = (function (){var G__97605 = p1__97339_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97605) : p1.call(null,G__97605));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__97606 = p1__97339_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97606) : p2.call(null,G__97606));
}
});})(or__3981__auto__))
,args);
}
};
var G__97718 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97719__i = 0, G__97719__a = new Array(arguments.length -  3);
while (G__97719__i < G__97719__a.length) {G__97719__a[G__97719__i] = arguments[G__97719__i + 3]; ++G__97719__i;}
  args = new cljs.core.IndexedSeq(G__97719__a,0);
} 
return G__97718__delegate.call(this,x,y,z,args);};
G__97718.cljs$lang$maxFixedArity = 3;
G__97718.cljs$lang$applyTo = (function (arglist__97720){
var x = cljs.core.first(arglist__97720);
arglist__97720 = cljs.core.next(arglist__97720);
var y = cljs.core.first(arglist__97720);
arglist__97720 = cljs.core.next(arglist__97720);
var z = cljs.core.first(arglist__97720);
var args = cljs.core.rest(arglist__97720);
return G__97718__delegate(x,y,z,args);
});
G__97718.cljs$core$IFn$_invoke$arity$variadic = G__97718__delegate;
return G__97718;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__97721 = null;
if (arguments.length > 3) {
var G__97722__i = 0, G__97722__a = new Array(arguments.length -  3);
while (G__97722__i < G__97722__a.length) {G__97722__a[G__97722__i] = arguments[G__97722__i + 3]; ++G__97722__i;}
G__97721 = new cljs.core.IndexedSeq(G__97722__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3981__auto__ = (function (){var G__97652 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97652) : p1.call(null,G__97652));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97654 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97654) : p2.call(null,G__97654));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__97655 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97655) : p3.call(null,G__97655));
}
}
});
var sp3__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__97657 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97657) : p1.call(null,G__97657));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97659 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97659) : p2.call(null,G__97659));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__97661 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97661) : p3.call(null,G__97661));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__97663 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97663) : p1.call(null,G__97663));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__97665 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97665) : p2.call(null,G__97665));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__97666 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97666) : p3.call(null,G__97666));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__97668 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97668) : p1.call(null,G__97668));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97670 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97670) : p2.call(null,G__97670));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__97672 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97672) : p3.call(null,G__97672));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__97674 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97674) : p1.call(null,G__97674));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__97676 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97676) : p2.call(null,G__97676));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var or__3981__auto____$5 = (function (){var G__97678 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97678) : p3.call(null,G__97678));
})();
if(cljs.core.truth_(or__3981__auto____$5)){
return or__3981__auto____$5;
} else {
var or__3981__auto____$6 = (function (){var G__97680 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97680) : p1.call(null,G__97680));
})();
if(cljs.core.truth_(or__3981__auto____$6)){
return or__3981__auto____$6;
} else {
var or__3981__auto____$7 = (function (){var G__97682 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97682) : p2.call(null,G__97682));
})();
if(cljs.core.truth_(or__3981__auto____$7)){
return or__3981__auto____$7;
} else {
var G__97683 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97683) : p3.call(null,G__97683));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__97723__delegate = function (x,y,z,args){
var or__3981__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__97340_SHARP_){
var or__3981__auto____$1 = (function (){var G__97685 = p1__97340_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__97685) : p1.call(null,G__97685));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__97687 = p1__97340_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__97687) : p2.call(null,G__97687));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__97688 = p1__97340_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__97688) : p3.call(null,G__97688));
}
}
});})(or__3981__auto__))
,args);
}
};
var G__97723 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97724__i = 0, G__97724__a = new Array(arguments.length -  3);
while (G__97724__i < G__97724__a.length) {G__97724__a[G__97724__i] = arguments[G__97724__i + 3]; ++G__97724__i;}
  args = new cljs.core.IndexedSeq(G__97724__a,0);
} 
return G__97723__delegate.call(this,x,y,z,args);};
G__97723.cljs$lang$maxFixedArity = 3;
G__97723.cljs$lang$applyTo = (function (arglist__97725){
var x = cljs.core.first(arglist__97725);
arglist__97725 = cljs.core.next(arglist__97725);
var y = cljs.core.first(arglist__97725);
arglist__97725 = cljs.core.next(arglist__97725);
var z = cljs.core.first(arglist__97725);
var args = cljs.core.rest(arglist__97725);
return G__97723__delegate(x,y,z,args);
});
G__97723.cljs$core$IFn$_invoke$arity$variadic = G__97723__delegate;
return G__97723;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__97726 = null;
if (arguments.length > 3) {
var G__97727__i = 0, G__97727__a = new Array(arguments.length -  3);
while (G__97727__i < G__97727__a.length) {G__97727__a[G__97727__i] = arguments[G__97727__i + 3]; ++G__97727__i;}
G__97726 = new cljs.core.IndexedSeq(G__97727__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__97728__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__97341_SHARP_){
var G__97704 = x;
return (p1__97341_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97341_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97704) : p1__97341_SHARP_.call(null,G__97704));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__97342_SHARP_){
var or__3981__auto__ = (function (){var G__97706 = x;
return (p1__97342_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97342_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97706) : p1__97342_SHARP_.call(null,G__97706));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__97707 = y;
return (p1__97342_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97342_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97707) : p1__97342_SHARP_.call(null,G__97707));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__97343_SHARP_){
var or__3981__auto__ = (function (){var G__97709 = x;
return (p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97709) : p1__97343_SHARP_.call(null,G__97709));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__97711 = y;
return (p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97711) : p1__97343_SHARP_.call(null,G__97711));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__97712 = z;
return (p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__97343_SHARP_.cljs$core$IFn$_invoke$arity$1(G__97712) : p1__97343_SHARP_.call(null,G__97712));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__97729__delegate = function (x,y,z,args){
var or__3981__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__,ps__$1){
return (function (p1__97344_SHARP_){
return cljs.core.some(p1__97344_SHARP_,args);
});})(or__3981__auto__,ps__$1))
,ps__$1);
}
};
var G__97729 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__97730__i = 0, G__97730__a = new Array(arguments.length -  3);
while (G__97730__i < G__97730__a.length) {G__97730__a[G__97730__i] = arguments[G__97730__i + 3]; ++G__97730__i;}
  args = new cljs.core.IndexedSeq(G__97730__a,0);
} 
return G__97729__delegate.call(this,x,y,z,args);};
G__97729.cljs$lang$maxFixedArity = 3;
G__97729.cljs$lang$applyTo = (function (arglist__97731){
var x = cljs.core.first(arglist__97731);
arglist__97731 = cljs.core.next(arglist__97731);
var y = cljs.core.first(arglist__97731);
arglist__97731 = cljs.core.next(arglist__97731);
var z = cljs.core.first(arglist__97731);
var args = cljs.core.rest(arglist__97731);
return G__97729__delegate(x,y,z,args);
});
G__97729.cljs$core$IFn$_invoke$arity$variadic = G__97729__delegate;
return G__97729;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__97732 = null;
if (arguments.length > 3) {
var G__97733__i = 0, G__97733__a = new Array(arguments.length -  3);
while (G__97733__i < G__97733__a.length) {G__97733__a[G__97733__i] = arguments[G__97733__i + 3]; ++G__97733__i;}
G__97732 = new cljs.core.IndexedSeq(G__97733__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__97732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__97728 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__97734__i = 0, G__97734__a = new Array(arguments.length -  3);
while (G__97734__i < G__97734__a.length) {G__97734__a[G__97734__i] = arguments[G__97734__i + 3]; ++G__97734__i;}
  ps = new cljs.core.IndexedSeq(G__97734__a,0);
} 
return G__97728__delegate.call(this,p1,p2,p3,ps);};
G__97728.cljs$lang$maxFixedArity = 3;
G__97728.cljs$lang$applyTo = (function (arglist__97735){
var p1 = cljs.core.first(arglist__97735);
arglist__97735 = cljs.core.next(arglist__97735);
var p2 = cljs.core.first(arglist__97735);
arglist__97735 = cljs.core.next(arglist__97735);
var p3 = cljs.core.first(arglist__97735);
var ps = cljs.core.rest(arglist__97735);
return G__97728__delegate(p1,p2,p3,ps);
});
G__97728.cljs$core$IFn$_invoke$arity$variadic = G__97728__delegate;
return G__97728;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__97736 = null;
if (arguments.length > 3) {
var G__97737__i = 0, G__97737__a = new Array(arguments.length -  3);
while (G__97737__i < G__97737__a.length) {G__97737__a[G__97737__i] = arguments[G__97737__i + 3]; ++G__97737__i;}
G__97736 = new cljs.core.IndexedSeq(G__97737__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__97736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__97792 = null;
var G__97792__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97792__1 = (function (result){
var G__97778 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97778) : rf.call(null,G__97778));
});
var G__97792__2 = (function (result,input){
var G__97779 = result;
var G__97780 = (function (){var G__97781 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97781) : f.call(null,G__97781));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97779,G__97780) : rf.call(null,G__97779,G__97780));
});
var G__97792__3 = (function() { 
var G__97793__delegate = function (result,input,inputs){
var G__97782 = result;
var G__97783 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97782,G__97783) : rf.call(null,G__97782,G__97783));
};
var G__97793 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__97794__i = 0, G__97794__a = new Array(arguments.length -  2);
while (G__97794__i < G__97794__a.length) {G__97794__a[G__97794__i] = arguments[G__97794__i + 2]; ++G__97794__i;}
  inputs = new cljs.core.IndexedSeq(G__97794__a,0);
} 
return G__97793__delegate.call(this,result,input,inputs);};
G__97793.cljs$lang$maxFixedArity = 2;
G__97793.cljs$lang$applyTo = (function (arglist__97795){
var result = cljs.core.first(arglist__97795);
arglist__97795 = cljs.core.next(arglist__97795);
var input = cljs.core.first(arglist__97795);
var inputs = cljs.core.rest(arglist__97795);
return G__97793__delegate(result,input,inputs);
});
G__97793.cljs$core$IFn$_invoke$arity$variadic = G__97793__delegate;
return G__97793;
})()
;
G__97792 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__97792__0.call(this);
case 1:
return G__97792__1.call(this,result);
case 2:
return G__97792__2.call(this,result,input);
default:
var G__97796 = null;
if (arguments.length > 2) {
var G__97797__i = 0, G__97797__a = new Array(arguments.length -  2);
while (G__97797__i < G__97797__a.length) {G__97797__a[G__97797__i] = arguments[G__97797__i + 2]; ++G__97797__i;}
G__97796 = new cljs.core.IndexedSeq(G__97797__a,0);
}
return G__97792__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__97796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97792.cljs$lang$maxFixedArity = 2;
G__97792.cljs$lang$applyTo = G__97792__3.cljs$lang$applyTo;
G__97792.cljs$core$IFn$_invoke$arity$0 = G__97792__0;
G__97792.cljs$core$IFn$_invoke$arity$1 = G__97792__1;
G__97792.cljs$core$IFn$_invoke$arity$2 = G__97792__2;
G__97792.cljs$core$IFn$_invoke$arity$variadic = G__97792__3.cljs$core$IFn$_invoke$arity$variadic;
return G__97792;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___97798 = size;
var i_97799 = (0);
while(true){
if((i_97799 < n__4868__auto___97798)){
cljs.core.chunk_append(b,(function (){var G__97784 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_97799);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97784) : f.call(null,G__97784));
})());

var G__97800 = (i_97799 + (1));
i_97799 = G__97800;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__97785 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97785) : f.call(null,G__97785));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__97786 = cljs.core.first(s1);
var G__97787 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__97786,G__97787) : f.call(null,G__97786,G__97787));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__97788 = cljs.core.first(s1);
var G__97789 = cljs.core.first(s2);
var G__97790 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__97788,G__97789,G__97790) : f.call(null,G__97788,G__97789,G__97790));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__97801__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__97738_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__97738_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__97801 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__97802__i = 0, G__97802__a = new Array(arguments.length -  4);
while (G__97802__i < G__97802__a.length) {G__97802__a[G__97802__i] = arguments[G__97802__i + 4]; ++G__97802__i;}
  colls = new cljs.core.IndexedSeq(G__97802__a,0);
} 
return G__97801__delegate.call(this,f,c1,c2,c3,colls);};
G__97801.cljs$lang$maxFixedArity = 4;
G__97801.cljs$lang$applyTo = (function (arglist__97803){
var f = cljs.core.first(arglist__97803);
arglist__97803 = cljs.core.next(arglist__97803);
var c1 = cljs.core.first(arglist__97803);
arglist__97803 = cljs.core.next(arglist__97803);
var c2 = cljs.core.first(arglist__97803);
arglist__97803 = cljs.core.next(arglist__97803);
var c3 = cljs.core.first(arglist__97803);
var colls = cljs.core.rest(arglist__97803);
return G__97801__delegate(f,c1,c2,c3,colls);
});
G__97801.cljs$core$IFn$_invoke$arity$variadic = G__97801__delegate;
return G__97801;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__97804 = null;
if (arguments.length > 4) {
var G__97805__i = 0, G__97805__a = new Array(arguments.length -  4);
while (G__97805__i < G__97805__a.length) {G__97805__a[G__97805__i] = arguments[G__97805__i + 4]; ++G__97805__i;}
G__97804 = new cljs.core.IndexedSeq(G__97805__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__97804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__97814 = null;
var G__97814__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97814__1 = (function (result){
var G__97811 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97811) : rf.call(null,G__97811));
});
var G__97814__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__97812 = result;
var G__97813 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97812,G__97813) : rf.call(null,G__97812,G__97813));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__97814 = function(result,input){
switch(arguments.length){
case 0:
return G__97814__0.call(this);
case 1:
return G__97814__1.call(this,result);
case 2:
return G__97814__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97814.cljs$core$IFn$_invoke$arity$0 = G__97814__0;
G__97814.cljs$core$IFn$_invoke$arity$1 = G__97814__1;
G__97814.cljs$core$IFn$_invoke$arity$2 = G__97814__2;
return G__97814;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__97821 = null;
var G__97821__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97821__1 = (function (result){
var G__97818 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97818) : rf.call(null,G__97818));
});
var G__97821__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__97819 = result;
var G__97820 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97819,G__97820) : rf.call(null,G__97819,G__97820));
}
});
G__97821 = function(result,input){
switch(arguments.length){
case 0:
return G__97821__0.call(this);
case 1:
return G__97821__1.call(this,result);
case 2:
return G__97821__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97821.cljs$core$IFn$_invoke$arity$0 = G__97821__0;
G__97821.cljs$core$IFn$_invoke$arity$1 = G__97821__1;
G__97821.cljs$core$IFn$_invoke$arity$2 = G__97821__2;
return G__97821;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__97822 = (n__$1 - (1));
var G__97823 = cljs.core.rest(s);
n__$1 = G__97822;
coll__$1 = G__97823;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__97826 = cljs.core.next(s);
var G__97827 = cljs.core.next(lead);
s = G__97826;
lead = G__97827;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__97840 = null;
var G__97840__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97840__1 = (function (result){
var G__97834 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97834) : rf.call(null,G__97834));
});
var G__97840__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3969__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3969__auto__)){
var G__97835 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__97835) : pred.call(null,G__97835));
} else {
return and__3969__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__97836 = result;
var G__97837 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97836,G__97837) : rf.call(null,G__97836,G__97837));
}
});
G__97840 = function(result,input){
switch(arguments.length){
case 0:
return G__97840__0.call(this);
case 1:
return G__97840__1.call(this,result);
case 2:
return G__97840__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97840.cljs$core$IFn$_invoke$arity$0 = G__97840__0;
G__97840.cljs$core$IFn$_invoke$arity$1 = G__97840__1;
G__97840.cljs$core$IFn$_invoke$arity$2 = G__97840__2;
return G__97840;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3969__auto__ = s;
if(and__3969__auto__){
var G__97839 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__97839) : pred__$1.call(null,G__97839));
} else {
return and__3969__auto__;
}
})())){
var G__97841 = pred__$1;
var G__97842 = cljs.core.rest(s);
pred__$1 = G__97841;
coll__$1 = G__97842;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__97851 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97851) : f.call(null,G__97851));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__97854__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__97854 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__97855__i = 0, G__97855__a = new Array(arguments.length -  2);
while (G__97855__i < G__97855__a.length) {G__97855__a[G__97855__i] = arguments[G__97855__i + 2]; ++G__97855__i;}
  colls = new cljs.core.IndexedSeq(G__97855__a,0);
} 
return G__97854__delegate.call(this,c1,c2,colls);};
G__97854.cljs$lang$maxFixedArity = 2;
G__97854.cljs$lang$applyTo = (function (arglist__97856){
var c1 = cljs.core.first(arglist__97856);
arglist__97856 = cljs.core.next(arglist__97856);
var c2 = cljs.core.first(arglist__97856);
var colls = cljs.core.rest(arglist__97856);
return G__97854__delegate(c1,c2,colls);
});
G__97854.cljs$core$IFn$_invoke$arity$variadic = G__97854__delegate;
return G__97854;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__97857 = null;
if (arguments.length > 2) {
var G__97858__i = 0, G__97858__a = new Array(arguments.length -  2);
while (G__97858__i < G__97858__a.length) {G__97858__a[G__97858__i] = arguments[G__97858__i + 2]; ++G__97858__i;}
G__97857 = new cljs.core.IndexedSeq(G__97858__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__97857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__97873 = null;
var G__97873__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97873__1 = (function (result){
var G__97866 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97866) : rf.call(null,G__97866));
});
var G__97873__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__97867 = result;
var G__97868 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97867,G__97868) : rf.call(null,G__97867,G__97868));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__97869 = sepr;
var G__97870 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97869,G__97870) : rf.call(null,G__97869,G__97870));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__97871 = result;
var G__97872 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97871,G__97872) : rf.call(null,G__97871,G__97872));
}
});
G__97873 = function(result,input){
switch(arguments.length){
case 0:
return G__97873__0.call(this);
case 1:
return G__97873__1.call(this,result);
case 2:
return G__97873__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97873.cljs$core$IFn$_invoke$arity$0 = G__97873__0;
G__97873.cljs$core$IFn$_invoke$arity$1 = G__97873__1;
G__97873.cljs$core$IFn$_invoke$arity$2 = G__97873__2;
return G__97873;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__97882__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__97882 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__97883__i = 0, G__97883__a = new Array(arguments.length -  1);
while (G__97883__i < G__97883__a.length) {G__97883__a[G__97883__i] = arguments[G__97883__i + 1]; ++G__97883__i;}
  colls = new cljs.core.IndexedSeq(G__97883__a,0);
} 
return G__97882__delegate.call(this,f,colls);};
G__97882.cljs$lang$maxFixedArity = 1;
G__97882.cljs$lang$applyTo = (function (arglist__97884){
var f = cljs.core.first(arglist__97884);
var colls = cljs.core.rest(arglist__97884);
return G__97882__delegate(f,colls);
});
G__97882.cljs$core$IFn$_invoke$arity$variadic = G__97882__delegate;
return G__97882;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__97885 = null;
if (arguments.length > 1) {
var G__97886__i = 0, G__97886__a = new Array(arguments.length -  1);
while (G__97886__i < G__97886__a.length) {G__97886__a[G__97886__i] = arguments[G__97886__i + 1]; ++G__97886__i;}
G__97885 = new cljs.core.IndexedSeq(G__97886__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__97885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__97905 = null;
var G__97905__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__97905__1 = (function (result){
var G__97899 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__97899) : rf.call(null,G__97899));
});
var G__97905__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__97900 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__97900) : pred.call(null,G__97900));
})())){
var G__97901 = result;
var G__97902 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__97901,G__97902) : rf.call(null,G__97901,G__97902));
} else {
return result;
}
});
G__97905 = function(result,input){
switch(arguments.length){
case 0:
return G__97905__0.call(this);
case 1:
return G__97905__1.call(this,result);
case 2:
return G__97905__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__97905.cljs$core$IFn$_invoke$arity$0 = G__97905__0;
G__97905.cljs$core$IFn$_invoke$arity$1 = G__97905__1;
G__97905.cljs$core$IFn$_invoke$arity$2 = G__97905__2;
return G__97905;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___97906 = size;
var i_97907 = (0);
while(true){
if((i_97907 < n__4868__auto___97906)){
if(cljs.core.truth_((function (){var G__97903 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_97907);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__97903) : pred.call(null,G__97903));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_97907));
} else {
}

var G__97908 = (i_97907 + (1));
i_97907 = G__97908;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__97904 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__97904) : pred.call(null,G__97904));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__97915 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__97915) : branch_QMARK_.call(null,G__97915));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__97916 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__97916) : children.call(null,G__97916));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__97917_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__97917_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__97920 = to;
if(G__97920){
var bit__4655__auto__ = (G__97920.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__97920.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__97921 = to;
if(G__97921){
var bit__4655__auto__ = (G__97921.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__97921.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__97923 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97923) : f.call(null,G__97923));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__97924__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__97924 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__97925__i = 0, G__97925__a = new Array(arguments.length -  4);
while (G__97925__i < G__97925__a.length) {G__97925__a[G__97925__i] = arguments[G__97925__i + 4]; ++G__97925__i;}
  colls = new cljs.core.IndexedSeq(G__97925__a,0);
} 
return G__97924__delegate.call(this,f,c1,c2,c3,colls);};
G__97924.cljs$lang$maxFixedArity = 4;
G__97924.cljs$lang$applyTo = (function (arglist__97926){
var f = cljs.core.first(arglist__97926);
arglist__97926 = cljs.core.next(arglist__97926);
var c1 = cljs.core.first(arglist__97926);
arglist__97926 = cljs.core.next(arglist__97926);
var c2 = cljs.core.first(arglist__97926);
arglist__97926 = cljs.core.next(arglist__97926);
var c3 = cljs.core.first(arglist__97926);
var colls = cljs.core.rest(arglist__97926);
return G__97924__delegate(f,c1,c2,c3,colls);
});
G__97924.cljs$core$IFn$_invoke$arity$variadic = G__97924__delegate;
return G__97924;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__97927 = null;
if (arguments.length > 4) {
var G__97928__i = 0, G__97928__a = new Array(arguments.length -  4);
while (G__97928__i < G__97928__a.length) {G__97928__a[G__97928__i] = arguments[G__97928__i + 4]; ++G__97928__i;}
G__97927 = new cljs.core.IndexedSeq(G__97928__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__97927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__97930 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__97930) : pred.call(null,G__97930));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__97945 = m__$1;
if(G__97945){
var bit__4662__auto__ = (G__97945.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4662__auto__) || (G__97945.cljs$core$ILookup$)){
return true;
} else {
if((!G__97945.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__97945);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__97945);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__97946 = sentinel;
var G__97947 = m__$2;
var G__97948 = cljs.core.next(ks__$1);
sentinel = G__97946;
m__$1 = G__97947;
ks__$1 = G__97948;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__97949,v){
var vec__97954 = p__97949;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97954,(0),null);
var ks = cljs.core.nthnext(vec__97954,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__97955,f){
var vec__97993 = p__97955;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97993,(0),null);
var ks = cljs.core.nthnext(vec__97993,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__97994 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__97994) : f.call(null,G__97994));
})());
}
});
var update_in__4 = (function (m,p__97956,f,a){
var vec__97995 = p__97956;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97995,(0),null);
var ks = cljs.core.nthnext(vec__97995,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__97996 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__97997 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__97996,G__97997) : f.call(null,G__97996,G__97997));
})());
}
});
var update_in__5 = (function (m,p__97957,f,a,b){
var vec__97998 = p__97957;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97998,(0),null);
var ks = cljs.core.nthnext(vec__97998,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__97999 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98000 = a;
var G__98001 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__97999,G__98000,G__98001) : f.call(null,G__97999,G__98000,G__98001));
})());
}
});
var update_in__6 = (function (m,p__97958,f,a,b,c){
var vec__98002 = p__97958;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98002,(0),null);
var ks = cljs.core.nthnext(vec__98002,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98003 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98004 = a;
var G__98005 = b;
var G__98006 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__98003,G__98004,G__98005,G__98006) : f.call(null,G__98003,G__98004,G__98005,G__98006));
})());
}
});
var update_in__7 = (function() { 
var G__98008__delegate = function (m,p__97959,f,a,b,c,args){
var vec__98007 = p__97959;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98007,(0),null);
var ks = cljs.core.nthnext(vec__98007,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__98008 = function (m,p__97959,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__98009__i = 0, G__98009__a = new Array(arguments.length -  6);
while (G__98009__i < G__98009__a.length) {G__98009__a[G__98009__i] = arguments[G__98009__i + 6]; ++G__98009__i;}
  args = new cljs.core.IndexedSeq(G__98009__a,0);
} 
return G__98008__delegate.call(this,m,p__97959,f,a,b,c,args);};
G__98008.cljs$lang$maxFixedArity = 6;
G__98008.cljs$lang$applyTo = (function (arglist__98010){
var m = cljs.core.first(arglist__98010);
arglist__98010 = cljs.core.next(arglist__98010);
var p__97959 = cljs.core.first(arglist__98010);
arglist__98010 = cljs.core.next(arglist__98010);
var f = cljs.core.first(arglist__98010);
arglist__98010 = cljs.core.next(arglist__98010);
var a = cljs.core.first(arglist__98010);
arglist__98010 = cljs.core.next(arglist__98010);
var b = cljs.core.first(arglist__98010);
arglist__98010 = cljs.core.next(arglist__98010);
var c = cljs.core.first(arglist__98010);
var args = cljs.core.rest(arglist__98010);
return G__98008__delegate(m,p__97959,f,a,b,c,args);
});
G__98008.cljs$core$IFn$_invoke$arity$variadic = G__98008__delegate;
return G__98008;
})()
;
update_in = function(m,p__97959,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__97959,f);
case 4:
return update_in__4.call(this,m,p__97959,f,a);
case 5:
return update_in__5.call(this,m,p__97959,f,a,b);
case 6:
return update_in__6.call(this,m,p__97959,f,a,b,c);
default:
var G__98011 = null;
if (arguments.length > 6) {
var G__98012__i = 0, G__98012__a = new Array(arguments.length -  6);
while (G__98012__i < G__98012__a.length) {G__98012__a[G__98012__i] = arguments[G__98012__i + 6]; ++G__98012__i;}
G__98011 = new cljs.core.IndexedSeq(G__98012__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__97959,f,a,b,c, G__98011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98023) : f.call(null,G__98023));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98024 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98025 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98024,G__98025) : f.call(null,G__98024,G__98025));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98026 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98027 = x;
var G__98028 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98026,G__98027,G__98028) : f.call(null,G__98026,G__98027,G__98028));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98029 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98030 = x;
var G__98031 = y;
var G__98032 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__98029,G__98030,G__98031,G__98032) : f.call(null,G__98029,G__98030,G__98031,G__98032));
})());
});
var update__7 = (function() { 
var G__98033__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__98033 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__98034__i = 0, G__98034__a = new Array(arguments.length -  6);
while (G__98034__i < G__98034__a.length) {G__98034__a[G__98034__i] = arguments[G__98034__i + 6]; ++G__98034__i;}
  more = new cljs.core.IndexedSeq(G__98034__a,0);
} 
return G__98033__delegate.call(this,m,k,f,x,y,z,more);};
G__98033.cljs$lang$maxFixedArity = 6;
G__98033.cljs$lang$applyTo = (function (arglist__98035){
var m = cljs.core.first(arglist__98035);
arglist__98035 = cljs.core.next(arglist__98035);
var k = cljs.core.first(arglist__98035);
arglist__98035 = cljs.core.next(arglist__98035);
var f = cljs.core.first(arglist__98035);
arglist__98035 = cljs.core.next(arglist__98035);
var x = cljs.core.first(arglist__98035);
arglist__98035 = cljs.core.next(arglist__98035);
var y = cljs.core.first(arglist__98035);
arglist__98035 = cljs.core.next(arglist__98035);
var z = cljs.core.first(arglist__98035);
var more = cljs.core.rest(arglist__98035);
return G__98033__delegate(m,k,f,x,y,z,more);
});
G__98033.cljs$core$IFn$_invoke$arity$variadic = G__98033__delegate;
return G__98033;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__98036 = null;
if (arguments.length > 6) {
var G__98037__i = 0, G__98037__a = new Array(arguments.length -  6);
while (G__98037__i < G__98037__a.length) {G__98037__a[G__98037__i] = arguments[G__98037__i + 6]; ++G__98037__i;}
G__98036 = new cljs.core.IndexedSeq(G__98037__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__98036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__98038 = (ll - (5));
var G__98039 = r;
ll = G__98038;
ret = G__98039;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__98044 = cljs.core.pv_aget(node,(0));
var G__98045 = (level - (5));
node = G__98044;
level = G__98045;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__98046 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__98047 = (level - (5));
node = G__98046;
level = G__98047;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__98057 = init__$2;
var G__98058 = (j + i);
var G__98059 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98057,G__98058,G__98059) : f.call(null,G__98057,G__98058,G__98059));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__98070 = (j + (1));
var G__98071 = init__$3;
j = G__98070;
init__$2 = G__98071;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98060 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98060) : cljs.core.deref.call(null,G__98060));
} else {
var G__98072 = (i + len);
var G__98073 = init__$2;
i = G__98072;
init__$1 = G__98073;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__98061 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__98061) : cljs.core.tv_editable_root.call(null,G__98061));
})(),(function (){var G__98062 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__98062) : cljs.core.tv_editable_tail.call(null,G__98062));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__98063 = init__$2;
var G__98064 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98063,G__98064) : f.call(null,G__98063,G__98064));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__98074 = (j + (1));
var G__98075 = init__$3;
j = G__98074;
init__$2 = G__98075;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98065 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98065) : cljs.core.deref.call(null,G__98065));
} else {
var G__98076 = (i + len);
var G__98077 = init__$2;
i = G__98076;
init__$1 = G__98077;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__98066 = coll__$1;
var G__98067 = cljs.core.first_array_for_longvec(coll__$1);
var G__98068 = (0);
var G__98069 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__98066,G__98067,G__98068,G__98069) : cljs.core.chunked_seq.call(null,G__98066,G__98067,G__98068,G__98069));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4868__auto___98078 = len;
var i_98079 = (0);
while(true){
if((i_98079 < n__4868__auto___98078)){
(new_tail[i_98079] = (self__.tail[i_98079]));

var G__98080 = (i_98079 + (1));
i_98079 = G__98080;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__98081 = null;
var G__98081__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__98081__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__98081 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98081__2.call(this,self__,k);
case 3:
return G__98081__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98081.cljs$core$IFn$_invoke$arity$2 = G__98081__2;
G__98081.cljs$core$IFn$_invoke$arity$3 = G__98081__3;
return G__98081;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args98056){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98056)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__98082 = (i + (1));
var G__98083 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__98082;
out = G__98083;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__98084__i = 0, G__98084__a = new Array(arguments.length -  0);
while (G__98084__i < G__98084__a.length) {G__98084__a[G__98084__i] = arguments[G__98084__i + 0]; ++G__98084__i;}
  args = new cljs.core.IndexedSeq(G__98084__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__98085){
var args = cljs.core.seq(arglist__98085);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__98086 = self__.vec;
var G__98087 = self__.node;
var G__98088 = self__.i;
var G__98089 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__98086,G__98087,G__98088,G__98089) : cljs.core.chunked_seq.call(null,G__98086,G__98087,G__98088,G__98089));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__98090 = self__.vec;
var G__98091 = (self__.i + self__.off);
var G__98092 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__98090,G__98091,G__98092) : cljs.core.subvec.call(null,G__98090,G__98091,G__98092));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__98093 = self__.vec;
var G__98094 = (self__.i + self__.off);
var G__98095 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__98093,G__98094,G__98095) : cljs.core.subvec.call(null,G__98093,G__98094,G__98095));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__98096 = self__.vec;
var G__98097 = self__.node;
var G__98098 = self__.i;
var G__98099 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__98096,G__98097,G__98098,G__98099) : cljs.core.chunked_seq.call(null,G__98096,G__98097,G__98098,G__98099));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__98100 = self__.vec;
var G__98101 = cljs.core.unchecked_array_for(self__.vec,end);
var G__98102 = end;
var G__98103 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__98100,G__98101,G__98102,G__98103) : cljs.core.chunked_seq.call(null,G__98100,G__98101,G__98102,G__98103));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__98104 = self__.vec;
var G__98105 = self__.node;
var G__98106 = self__.i;
var G__98107 = self__.off;
var G__98108 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__98104,G__98105,G__98106,G__98107,G__98108) : cljs.core.chunked_seq.call(null,G__98104,G__98105,G__98106,G__98107,G__98108));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__98109 = self__.vec;
var G__98110 = cljs.core.unchecked_array_for(self__.vec,end);
var G__98111 = end;
var G__98112 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__98109,G__98110,G__98111,G__98112) : cljs.core.chunked_seq.call(null,G__98109,G__98110,G__98111,G__98112));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__98114 = self__.meta;
var G__98115 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__98116 = self__.start;
var G__98117 = (function (){var x__4298__auto__ = self__.end;
var y__4299__auto__ = (v_pos + (1));
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})();
var G__98118 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__98114,G__98115,G__98116,G__98117,G__98118) : cljs.core.build_subvec.call(null,G__98114,G__98115,G__98116,G__98117,G__98118));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__98119 = self__.meta;
var G__98120 = self__.v;
var G__98121 = self__.start;
var G__98122 = (self__.end - (1));
var G__98123 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__98119,G__98120,G__98121,G__98122,G__98123) : cljs.core.build_subvec.call(null,G__98119,G__98120,G__98121,G__98122,G__98123));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__98125 = meta__$1;
var G__98126 = self__.v;
var G__98127 = self__.start;
var G__98128 = self__.end;
var G__98129 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__98125,G__98126,G__98127,G__98128,G__98129) : cljs.core.build_subvec.call(null,G__98125,G__98126,G__98127,G__98128,G__98129));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__98130 = self__.meta;
var G__98131 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__98132 = self__.start;
var G__98133 = (self__.end + (1));
var G__98134 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__98130,G__98131,G__98132,G__98133,G__98134) : cljs.core.build_subvec.call(null,G__98130,G__98131,G__98132,G__98133,G__98134));
});

cljs.core.Subvec.prototype.call = (function() {
var G__98135 = null;
var G__98135__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__98135__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__98135 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98135__2.call(this,self__,k);
case 3:
return G__98135__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98135.cljs$core$IFn$_invoke$arity$2 = G__98135__2;
G__98135.cljs$core$IFn$_invoke$arity$3 = G__98135__3;
return G__98135;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args98113){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98113)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__98136 = meta;
var G__98137 = v.v;
var G__98138 = (v.start + start);
var G__98139 = (v.start + end);
var G__98140 = __hash;
meta = G__98136;
v = G__98137;
start = G__98138;
end = G__98139;
__hash = G__98140;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj98147 = {};
return obj98147;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__98155 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__98156 = (level - (5));
node = G__98155;
level = G__98156;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__98160 = null;
var G__98160__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98160__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98160 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98160__2.call(this,self__,k);
case 3:
return G__98160__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98160.cljs$core$IFn$_invoke$arity$2 = G__98160__2;
G__98160.cljs$core$IFn$_invoke$arity$3 = G__98160__3;
return G__98160;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args98157){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98157)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3981__auto__ = self__.front;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = self__.rear;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__98161 = (i + incr);
i = G__98161;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__98162 = (i + (1));
var G__98163 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__98162;
out = G__98163;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj98167 = {};
return obj98167;
})();
var l = ks.length;
var i_98168 = (0);
while(true){
if((i_98168 < l)){
var k_98169 = (ks[i_98168]);
(new_obj[k_98169] = (obj[k_98169]));

var G__98170 = (i_98168 + (1));
i_98168 = G__98170;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__98174 = k;
return goog.isString(G__98174);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__98175 = init__$1;
var G__98176 = k;
var G__98177 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98175,G__98176,G__98177) : f.call(null,G__98175,G__98176,G__98177));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98178 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98178) : cljs.core.deref.call(null,G__98178));
} else {
var G__98184 = cljs.core.rest(keys__$1);
var G__98185 = init__$2;
keys__$1 = G__98184;
init__$1 = G__98185;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__98180 = k;
return goog.isString(G__98180);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__98181 = k;
return goog.isString(G__98181);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__98183 = k;
return goog.isString(G__98183);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__98171_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__98171_SHARP_,(self__.strobj[p1__98171_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__98186 = null;
var G__98186__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98186__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98186 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98186__2.call(this,self__,k);
case 3:
return G__98186__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98186.cljs$core$IFn$_invoke$arity$2 = G__98186__2;
G__98186.cljs$core$IFn$_invoke$arity$3 = G__98186__3;
return G__98186;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args98172){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98172)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj98188 = {};
return obj98188;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__98189 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98189,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98189,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__98190 = (i + (2));
i = G__98190;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__98191 = (i + (2));
i = G__98191;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__98192 = (i + (2));
i = G__98192;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__98193 = (i + (2));
i = G__98193;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__98194 = (i + (2));
i = G__98194;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3981__auto__ = (function (){var G__98198 = k;
return goog.isString(G__98198);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_98199 = (0);
while(true){
if((i_98199 < l)){
(narr[i_98199] = (arr[i_98199]));

var G__98200 = (i_98199 + (1));
i_98199 = G__98200;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98202 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__98202) : cljs.core.keys.call(null,G__98202));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98203 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__98203) : cljs.core.vals.call(null,G__98203));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__98204 = cljs.core.seq(coll);
var chunk__98205 = null;
var count__98206 = (0);
var i__98207 = (0);
while(true){
if((i__98207 < count__98206)){
var vec__98208 = chunk__98205.cljs$core$IIndexed$_nth$arity$2(null,i__98207);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98208,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98208,(1),null);
var G__98209_98222 = v;
var G__98210_98223 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98209_98222,G__98210_98223) : f.call(null,G__98209_98222,G__98210_98223));

var G__98224 = seq__98204;
var G__98225 = chunk__98205;
var G__98226 = count__98206;
var G__98227 = (i__98207 + (1));
seq__98204 = G__98224;
chunk__98205 = G__98225;
count__98206 = G__98226;
i__98207 = G__98227;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98204);
if(temp__4126__auto__){
var seq__98204__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98204__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98204__$1);
var G__98228 = cljs.core.chunk_rest(seq__98204__$1);
var G__98229 = c__4768__auto__;
var G__98230 = cljs.core.count(c__4768__auto__);
var G__98231 = (0);
seq__98204 = G__98228;
chunk__98205 = G__98229;
count__98206 = G__98230;
i__98207 = G__98231;
continue;
} else {
var vec__98211 = cljs.core.first(seq__98204__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98211,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98211,(1),null);
var G__98212_98232 = v;
var G__98213_98233 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98212_98232,G__98213_98233) : f.call(null,G__98212_98232,G__98213_98233));

var G__98234 = cljs.core.next(seq__98204__$1);
var G__98235 = null;
var G__98236 = (0);
var G__98237 = (0);
seq__98204 = G__98234;
chunk__98205 = G__98235;
count__98206 = G__98236;
i__98207 = G__98237;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__98214 = init__$1;
var G__98215 = (self__.arr[i]);
var G__98216 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98214,G__98215,G__98216) : f.call(null,G__98214,G__98215,G__98216));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98217 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98217) : cljs.core.deref.call(null,G__98217));
} else {
var G__98238 = (i + (2));
var G__98239 = init__$2;
i = G__98238;
init__$1 = G__98239;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__98218 = other;
if(G__98218){
var bit__4655__auto__ = (G__98218.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4655__auto__) || (G__98218.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__98240 = (i + (2));
i = G__98240;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj98220 = {};
return obj98220;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__98241 = (s + (2));
var G__98242 = d;
s = G__98241;
d = G__98242;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__98243 = (s + (2));
var G__98244 = (d + (2));
s = G__98243;
d = G__98244;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__98221 = cljs.core.aclone(self__.arr);
(G__98221[(idx + (1))] = v);

return G__98221;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__98245 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__98246 = cljs.core.next(es);
ret = G__98245;
es = G__98246;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__98247 = null;
var G__98247__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98247__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98247 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98247__2.call(this,self__,k);
case 3:
return G__98247__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98247.cljs$core$IFn$_invoke$arity$2 = G__98247__2;
G__98247.cljs$core$IFn$_invoke$arity$3 = G__98247__3;
return G__98247;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args98201){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98201)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__98248 = (i + (2));
var G__98249 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__98248;
ret = G__98249;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__98250_98258 = self__.arr;
G__98250_98258.pop();

G__98250_98258.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__98251 = self__.len;
var G__98252 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__98251,G__98252) : cljs.core.array__GT_transient_hash_map.call(null,G__98251,G__98252));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__98253 = o;
if(G__98253){
var bit__4662__auto__ = (G__98253.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__98253.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__98253.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__98253);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__98253);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__98254 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__98254) : cljs.core.key.call(null,G__98254));
})(),(function (){var G__98255 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__98255) : cljs.core.val.call(null,G__98255));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__98259 = cljs.core.next(es);
var G__98260 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__98256 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__98256) : cljs.core.key.call(null,G__98256));
})(),(function (){var G__98257 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__98257) : cljs.core.val.call(null,G__98257));
})());
es = G__98259;
tcoll__$2 = G__98260;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__98261 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__98262 = (i + (2));
out = G__98261;
i = G__98262;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__98265 = cljs.core.aclone(arr);
(G__98265[i] = a);

return G__98265;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__98266 = cljs.core.aclone(arr);
(G__98266[i] = a);

(G__98266[j] = b);

return G__98266;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__98271 = init__$1;
var G__98272 = k;
var G__98273 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98271,G__98272,G__98273) : f.call(null,G__98271,G__98272,G__98273));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98274 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98274) : cljs.core.deref.call(null,G__98274));
} else {
var G__98275 = (i + (2));
var G__98276 = init__$2;
i = G__98275;
init__$1 = G__98276;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__98277 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__98277) : cljs.core.create_inode_seq.call(null,G__98277));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_98291 = (0);
var j_98292 = (0);
while(true){
if((i_98291 < (32))){
if((((self__.bitmap >>> i_98291) & (1)) === (0))){
var G__98293 = (i_98291 + (1));
var G__98294 = j_98292;
i_98291 = G__98293;
j_98292 = G__98294;
continue;
} else {
(nodes[i_98291] = ((!(((self__.arr[j_98292]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_98292])),(self__.arr[j_98292]),(self__.arr[(j_98292 + (1))]),added_leaf_QMARK_):(self__.arr[(j_98292 + (1))])));

var G__98295 = (i_98291 + (1));
var G__98296 = (j_98292 + (2));
i_98291 = G__98295;
j_98292 = G__98296;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__98278 = edit__$1;
var G__98279 = (shift + (5));
var G__98280 = key_or_nil;
var G__98281 = val_or_node;
var G__98282 = hash;
var G__98283 = key;
var G__98284 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__98278,G__98279,G__98280,G__98281,G__98282,G__98283,G__98284) : cljs.core.create_node.call(null,G__98278,G__98279,G__98280,G__98281,G__98282,G__98283,G__98284));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_98297 = (0);
var j_98298 = (0);
while(true){
if((i_98297 < (32))){
if((((self__.bitmap >>> i_98297) & (1)) === (0))){
var G__98299 = (i_98297 + (1));
var G__98300 = j_98298;
i_98297 = G__98299;
j_98298 = G__98300;
continue;
} else {
(nodes[i_98297] = ((!(((self__.arr[j_98298]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_98298])),(self__.arr[j_98298]),(self__.arr[(j_98298 + (1))]),added_leaf_QMARK_):(self__.arr[(j_98298 + (1))])));

var G__98301 = (i_98297 + (1));
var G__98302 = (j_98298 + (2));
i_98297 = G__98301;
j_98298 = G__98302;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__98285 = (shift + (5));
var G__98286 = key_or_nil;
var G__98287 = val_or_node;
var G__98288 = hash;
var G__98289 = key;
var G__98290 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__98285,G__98286,G__98287,G__98288,G__98289,G__98290) : cljs.core.create_node.call(null,G__98285,G__98286,G__98287,G__98288,G__98289,G__98290));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__98303 = (i + (1));
var G__98304 = (j + (2));
var G__98305 = (bitmap | ((1) << i));
i = G__98303;
j = G__98304;
bitmap = G__98305;
continue;
} else {
var G__98306 = (i + (1));
var G__98307 = j;
var G__98308 = bitmap;
i = G__98306;
j = G__98307;
bitmap = G__98308;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__98309 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__98309) : cljs.core.create_array_node_seq.call(null,G__98309));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98310 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98310) : cljs.core.deref.call(null,G__98310));
} else {
var G__98311 = (i + (1));
var G__98312 = init__$2;
i = G__98311;
init__$1 = G__98312;
continue;
}
} else {
var G__98313 = (i + (1));
var G__98314 = init__$1;
i = G__98313;
init__$1 = G__98314;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__98315 = (i + (2));
i = G__98315;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__98316 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__98316) : cljs.core.create_inode_seq.call(null,G__98316));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__98317 = self__.nodes;
var G__98318 = (self__.i + (2));
var G__98319 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__98317,G__98318,G__98319) : cljs.core.create_inode_seq.call(null,G__98317,G__98318,G__98319));
} else {
var G__98320 = self__.nodes;
var G__98321 = self__.i;
var G__98322 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__98320,G__98321,G__98322) : cljs.core.create_inode_seq.call(null,G__98320,G__98321,G__98322));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__98326 = (j + (2));
j = G__98326;
continue;
}
} else {
var G__98327 = (j + (2));
j = G__98327;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__98328 = null;
var G__98329 = self__.nodes;
var G__98330 = self__.i;
var G__98331 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__98328,G__98329,G__98330,G__98331) : cljs.core.create_array_node_seq.call(null,G__98328,G__98329,G__98330,G__98331));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__98336 = (j + (1));
j = G__98336;
continue;
}
} else {
var G__98337 = (j + (1));
j = G__98337;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98339 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__98339) : cljs.core.keys.call(null,G__98339));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98340 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__98340) : cljs.core.vals.call(null,G__98340));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__98341 = cljs.core.seq(coll);
var chunk__98342 = null;
var count__98343 = (0);
var i__98344 = (0);
while(true){
if((i__98344 < count__98343)){
var vec__98345 = chunk__98342.cljs$core$IIndexed$_nth$arity$2(null,i__98344);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98345,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98345,(1),null);
var G__98346_98357 = v;
var G__98347_98358 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98346_98357,G__98347_98358) : f.call(null,G__98346_98357,G__98347_98358));

var G__98359 = seq__98341;
var G__98360 = chunk__98342;
var G__98361 = count__98343;
var G__98362 = (i__98344 + (1));
seq__98341 = G__98359;
chunk__98342 = G__98360;
count__98343 = G__98361;
i__98344 = G__98362;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98341);
if(temp__4126__auto__){
var seq__98341__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98341__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98341__$1);
var G__98363 = cljs.core.chunk_rest(seq__98341__$1);
var G__98364 = c__4768__auto__;
var G__98365 = cljs.core.count(c__4768__auto__);
var G__98366 = (0);
seq__98341 = G__98363;
chunk__98342 = G__98364;
count__98343 = G__98365;
i__98344 = G__98366;
continue;
} else {
var vec__98348 = cljs.core.first(seq__98341__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98348,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98348,(1),null);
var G__98349_98367 = v;
var G__98350_98368 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98349_98367,G__98350_98368) : f.call(null,G__98349_98367,G__98350_98368));

var G__98369 = cljs.core.next(seq__98341__$1);
var G__98370 = null;
var G__98371 = (0);
var G__98372 = (0);
seq__98341 = G__98369;
chunk__98342 = G__98370;
count__98343 = G__98371;
i__98344 = G__98372;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__98351 = init;
var G__98352 = null;
var G__98353 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98351,G__98352,G__98353) : f.call(null,G__98351,G__98352,G__98353));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__98354 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98354) : cljs.core.deref.call(null,G__98354));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj98356 = {};
return obj98356;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__98373 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__98374 = cljs.core.next(es);
ret = G__98373;
es = G__98374;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__98375 = null;
var G__98375__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98375__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98375 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98375__2.call(this,self__,k);
case 3:
return G__98375__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98375.cljs$core$IFn$_invoke$arity$2 = G__98375__2;
G__98375.cljs$core$IFn$_invoke$arity$3 = G__98375__3;
return G__98375;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args98338){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98338)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__98376 = (i + (2));
var G__98377 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__98376;
ret = G__98377;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__98378 = (i + (1));
var G__98379 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__98378;
out = G__98379;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__98380 = o;
if(G__98380){
var bit__4662__auto__ = (G__98380.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__98380.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__98380.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__98380);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__98380);
}
})()){
return tcoll.assoc_BANG_((function (){var G__98381 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__98381) : cljs.core.key.call(null,G__98381));
})(),(function (){var G__98382 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__98382) : cljs.core.val.call(null,G__98382));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__98385 = cljs.core.next(es);
var G__98386 = tcoll__$1.assoc_BANG_((function (){var G__98383 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__98383) : cljs.core.key.call(null,G__98383));
})(),(function (){var G__98384 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__98384) : cljs.core.val.call(null,G__98384));
})());
es = G__98385;
tcoll__$1 = G__98386;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__98387 = ((ascending_QMARK_)?t.left:t.right);
var G__98388 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__98387;
stack__$1 = G__98388;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__98401 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98401) : cljs.core.deref.call(null,G__98401));
} else {
var init__$2 = (function (){var G__98402 = init__$1;
var G__98403 = node.key;
var G__98404 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98402,G__98403,G__98404) : f.call(null,G__98402,G__98403,G__98404));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__98405 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98405) : cljs.core.deref.call(null,G__98405));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__98406 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98406) : cljs.core.deref.call(null,G__98406));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__98408 = null;
var G__98408__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98408__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98408 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98408__2.call(this,self__,k);
case 3:
return G__98408__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98408.cljs$core$IFn$_invoke$arity$2 = G__98408__2;
G__98408.cljs$core$IFn$_invoke$arity$3 = G__98408__3;
return G__98408;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args98407){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98407)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__98410 = null;
var G__98410__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98410__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98410 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98410__2.call(this,self__,k);
case 3:
return G__98410__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98410.cljs$core$IFn$_invoke$arity$2 = G__98410__2;
G__98410.cljs$core$IFn$_invoke$arity$3 = G__98410__3;
return G__98410;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args98409){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98409)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__98423 = k;
var G__98424 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__98423,G__98424) : comp.call(null,G__98423,G__98424));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__98443 = k;
var G__98444 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__98443,G__98444) : comp.call(null,G__98443,G__98444));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__98455 = k;
var G__98456 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__98455,G__98456) : comp.call(null,G__98455,G__98456));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__98458 = cljs.core.seq(coll);
var chunk__98459 = null;
var count__98460 = (0);
var i__98461 = (0);
while(true){
if((i__98461 < count__98460)){
var vec__98462 = chunk__98459.cljs$core$IIndexed$_nth$arity$2(null,i__98461);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98462,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98462,(1),null);
var G__98463_98475 = v;
var G__98464_98476 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98463_98475,G__98464_98476) : f.call(null,G__98463_98475,G__98464_98476));

var G__98477 = seq__98458;
var G__98478 = chunk__98459;
var G__98479 = count__98460;
var G__98480 = (i__98461 + (1));
seq__98458 = G__98477;
chunk__98459 = G__98478;
count__98460 = G__98479;
i__98461 = G__98480;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98458);
if(temp__4126__auto__){
var seq__98458__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98458__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98458__$1);
var G__98481 = cljs.core.chunk_rest(seq__98458__$1);
var G__98482 = c__4768__auto__;
var G__98483 = cljs.core.count(c__4768__auto__);
var G__98484 = (0);
seq__98458 = G__98481;
chunk__98459 = G__98482;
count__98460 = G__98483;
i__98461 = G__98484;
continue;
} else {
var vec__98465 = cljs.core.first(seq__98458__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98465,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98465,(1),null);
var G__98466_98485 = v;
var G__98467_98486 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98466_98485,G__98467_98486) : f.call(null,G__98466_98485,G__98467_98486));

var G__98487 = cljs.core.next(seq__98458__$1);
var G__98488 = null;
var G__98489 = (0);
var G__98490 = (0);
seq__98458 = G__98487;
chunk__98459 = G__98488;
count__98460 = G__98489;
i__98461 = G__98490;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98468 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__98468) : cljs.core.keys.call(null,G__98468));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__98469 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__98469) : cljs.core.vals.call(null,G__98469));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__98470 = k;
var G__98471 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__98470,G__98471) : self__.comp.call(null,G__98470,G__98471));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__98491 = t.left;
t = G__98491;
continue;
} else {
var G__98492 = t.right;
t = G__98492;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__98493 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__98494 = cljs.core.next(es);
ret = G__98493;
es = G__98494;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__98495 = null;
var G__98495__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98495__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98495 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98495__2.call(this,self__,k);
case 3:
return G__98495__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98495.cljs$core$IFn$_invoke$arity$2 = G__98495__2;
G__98495.cljs$core$IFn$_invoke$arity$3 = G__98495__3;
return G__98495;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args98457){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98457)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__98472 = k;
var G__98473 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__98472,G__98473) : self__.comp.call(null,G__98472,G__98473));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__98496 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__98497 = t.left;
stack = G__98496;
t = G__98497;
continue;
} else {
var G__98498 = stack;
var G__98499 = t.right;
stack = G__98498;
t = G__98499;
continue;
}
} else {
if((c > (0))){
var G__98500 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__98501 = t.right;
stack = G__98500;
t = G__98501;
continue;
} else {
var G__98502 = stack;
var G__98503 = t.left;
stack = G__98502;
t = G__98503;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__98474 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__98474) : cljs.core.key.call(null,G__98474));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__98504 = cljs.core.nnext(in$);
var G__98505 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__98504;
out = G__98505;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__98506__i = 0, G__98506__a = new Array(arguments.length -  0);
while (G__98506__i < G__98506__a.length) {G__98506__a[G__98506__i] = arguments[G__98506__i + 0]; ++G__98506__i;}
  keyvals = new cljs.core.IndexedSeq(G__98506__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__98507){
var keyvals = cljs.core.seq(arglist__98507);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__98508__i = 0, G__98508__a = new Array(arguments.length -  0);
while (G__98508__i < G__98508__a.length) {G__98508__a[G__98508__i] = arguments[G__98508__i + 0]; ++G__98508__i;}
  keyvals = new cljs.core.IndexedSeq(G__98508__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__98509){
var keyvals = cljs.core.seq(arglist__98509);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj98513 = {};
return obj98513;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__98514 = cljs.core.nnext(kvs);
kvs = G__98514;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__98515__i = 0, G__98515__a = new Array(arguments.length -  0);
while (G__98515__i < G__98515__a.length) {G__98515__a[G__98515__i] = arguments[G__98515__i + 0]; ++G__98515__i;}
  keyvals = new cljs.core.IndexedSeq(G__98515__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__98516){
var keyvals = cljs.core.seq(arglist__98516);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__98517 = cljs.core.nnext(in$);
var G__98518 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__98517;
out = G__98518;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__98519__i = 0, G__98519__a = new Array(arguments.length -  0);
while (G__98519__i < G__98519__a.length) {G__98519__a[G__98519__i] = arguments[G__98519__i + 0]; ++G__98519__i;}
  keyvals = new cljs.core.IndexedSeq(G__98519__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__98520){
var keyvals = cljs.core.seq(arglist__98520);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__98521 = cljs.core.nnext(in$);
var G__98522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__98521;
out = G__98522;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__98523__i = 0, G__98523__a = new Array(arguments.length -  1);
while (G__98523__i < G__98523__a.length) {G__98523__a[G__98523__i] = arguments[G__98523__i + 1]; ++G__98523__i;}
  keyvals = new cljs.core.IndexedSeq(G__98523__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__98524){
var comparator = cljs.core.first(arglist__98524);
var keyvals = cljs.core.rest(arglist__98524);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__98525 = self__.mseq;
if(G__98525){
var bit__4662__auto__ = (G__98525.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__98525.cljs$core$INext$)){
return true;
} else {
if((!G__98525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98525);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__98526 = self__.mseq;
if(G__98526){
var bit__4662__auto__ = (G__98526.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__98526.cljs$core$INext$)){
return true;
} else {
if((!G__98526.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98526);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98526);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__98527 = self__.mseq;
if(G__98527){
var bit__4662__auto__ = (G__98527.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__98527.cljs$core$INext$)){
return true;
} else {
if((!G__98527.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98527);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98527);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__98528 = self__.mseq;
if(G__98528){
var bit__4662__auto__ = (G__98528.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__98528.cljs$core$INext$)){
return true;
} else {
if((!G__98528.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98528);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__98528);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__98529_SHARP_,p2__98530_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = p1__98529_SHARP_;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__98530_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__98531__i = 0, G__98531__a = new Array(arguments.length -  0);
while (G__98531__i < G__98531__a.length) {G__98531__a[G__98531__i] = arguments[G__98531__i + 0]; ++G__98531__i;}
  maps = new cljs.core.IndexedSeq(G__98531__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__98532){
var maps = cljs.core.seq(arglist__98532);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__98535 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__98536 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98535,G__98536) : f.call(null,G__98535,G__98536));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3981__auto__ = m1;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__98537__i = 0, G__98537__a = new Array(arguments.length -  1);
while (G__98537__i < G__98537__a.length) {G__98537__a[G__98537__i] = arguments[G__98537__i + 1]; ++G__98537__i;}
  maps = new cljs.core.IndexedSeq(G__98537__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__98538){
var f = cljs.core.first(arglist__98538);
var maps = cljs.core.rest(arglist__98538);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__98539 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__98540 = cljs.core.next(keys);
ret = G__98539;
keys = G__98540;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__98543 = cljs.core.seq(coll);
var chunk__98544 = null;
var count__98545 = (0);
var i__98546 = (0);
while(true){
if((i__98546 < count__98545)){
var vec__98547 = chunk__98544.cljs$core$IIndexed$_nth$arity$2(null,i__98546);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98547,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98547,(1),null);
var G__98548_98553 = v;
var G__98549_98554 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98548_98553,G__98549_98554) : f.call(null,G__98548_98553,G__98549_98554));

var G__98555 = seq__98543;
var G__98556 = chunk__98544;
var G__98557 = count__98545;
var G__98558 = (i__98546 + (1));
seq__98543 = G__98555;
chunk__98544 = G__98556;
count__98545 = G__98557;
i__98546 = G__98558;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98543);
if(temp__4126__auto__){
var seq__98543__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98543__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98543__$1);
var G__98559 = cljs.core.chunk_rest(seq__98543__$1);
var G__98560 = c__4768__auto__;
var G__98561 = cljs.core.count(c__4768__auto__);
var G__98562 = (0);
seq__98543 = G__98559;
chunk__98544 = G__98560;
count__98545 = G__98561;
i__98546 = G__98562;
continue;
} else {
var vec__98550 = cljs.core.first(seq__98543__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98550,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98550,(1),null);
var G__98551_98563 = v;
var G__98552_98564 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98551_98563,G__98552_98564) : f.call(null,G__98551_98563,G__98552_98564));

var G__98565 = cljs.core.next(seq__98543__$1);
var G__98566 = null;
var G__98567 = (0);
var G__98568 = (0);
seq__98543 = G__98565;
chunk__98544 = G__98566;
count__98545 = G__98567;
i__98546 = G__98568;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__98541_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__98541_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__98569 = null;
var G__98569__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98569__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98569 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98569__2.call(this,self__,k);
case 3:
return G__98569__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98569.cljs$core$IFn$_invoke$arity$2 = G__98569__2;
G__98569.cljs$core$IFn$_invoke$arity$3 = G__98569__3;
return G__98569;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args98542){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98542)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__98570 = (i + (1));
var G__98571 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__98570;
out = G__98571;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__98572 = (i + (1));
var G__98573 = cljs.core._conj_BANG_(out,(items[i]));
i = G__98572;
out = G__98573;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__98575 = null;
var G__98575__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__98575__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__98575 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98575__2.call(this,self__,k);
case 3:
return G__98575__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98575.cljs$core$IFn$_invoke$arity$2 = G__98575__2;
G__98575.cljs$core$IFn$_invoke$arity$3 = G__98575__3;
return G__98575;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args98574){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98574)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__98578 = cljs.core.seq(coll);
var chunk__98579 = null;
var count__98580 = (0);
var i__98581 = (0);
while(true){
if((i__98581 < count__98580)){
var vec__98582 = chunk__98579.cljs$core$IIndexed$_nth$arity$2(null,i__98581);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98582,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98582,(1),null);
var G__98583_98588 = v;
var G__98584_98589 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98583_98588,G__98584_98589) : f.call(null,G__98583_98588,G__98584_98589));

var G__98590 = seq__98578;
var G__98591 = chunk__98579;
var G__98592 = count__98580;
var G__98593 = (i__98581 + (1));
seq__98578 = G__98590;
chunk__98579 = G__98591;
count__98580 = G__98592;
i__98581 = G__98593;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98578);
if(temp__4126__auto__){
var seq__98578__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98578__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98578__$1);
var G__98594 = cljs.core.chunk_rest(seq__98578__$1);
var G__98595 = c__4768__auto__;
var G__98596 = cljs.core.count(c__4768__auto__);
var G__98597 = (0);
seq__98578 = G__98594;
chunk__98579 = G__98595;
count__98580 = G__98596;
i__98581 = G__98597;
continue;
} else {
var vec__98585 = cljs.core.first(seq__98578__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98585,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98585,(1),null);
var G__98586_98598 = v;
var G__98587_98599 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98586_98598,G__98587_98599) : f.call(null,G__98586_98598,G__98587_98599));

var G__98600 = cljs.core.next(seq__98578__$1);
var G__98601 = null;
var G__98602 = (0);
var G__98603 = (0);
seq__98578 = G__98600;
chunk__98579 = G__98601;
count__98580 = G__98602;
i__98581 = G__98603;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__98576_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__98576_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__98604 = null;
var G__98604__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__98604__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__98604 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__98604__2.call(this,self__,k);
case 3:
return G__98604__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98604.cljs$core$IFn$_invoke$arity$2 = G__98604__2;
G__98604.cljs$core$IFn$_invoke$arity$3 = G__98604__3;
return G__98604;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args98577){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args98577)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4862__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4862__auto__.length)){
var G__98605 = (i + (1));
var G__98606 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__98605;
res = G__98606;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__98607 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__98608 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__98607;
out = G__98608;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__98609__delegate = function (keys){
return cljs.core.set(keys);
};
var G__98609 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__98610__i = 0, G__98610__a = new Array(arguments.length -  0);
while (G__98610__i < G__98610__a.length) {G__98610__a[G__98610__i] = arguments[G__98610__i + 0]; ++G__98610__i;}
  keys = new cljs.core.IndexedSeq(G__98610__a,0);
} 
return G__98609__delegate.call(this,keys);};
G__98609.cljs$lang$maxFixedArity = 0;
G__98609.cljs$lang$applyTo = (function (arglist__98611){
var keys = cljs.core.seq(arglist__98611);
return G__98609__delegate(keys);
});
G__98609.cljs$core$IFn$_invoke$arity$variadic = G__98609__delegate;
return G__98609;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__98612 = null;
if (arguments.length > 0) {
var G__98613__i = 0, G__98613__a = new Array(arguments.length -  0);
while (G__98613__i < G__98613__a.length) {G__98613__a[G__98613__i] = arguments[G__98613__i + 0]; ++G__98613__i;}
G__98612 = new cljs.core.IndexedSeq(G__98613__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__98612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__98614__i = 0, G__98614__a = new Array(arguments.length -  0);
while (G__98614__i < G__98614__a.length) {G__98614__a[G__98614__i] = arguments[G__98614__i + 0]; ++G__98614__i;}
  keys = new cljs.core.IndexedSeq(G__98614__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__98615){
var keys = cljs.core.seq(arglist__98615);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__98616__i = 0, G__98616__a = new Array(arguments.length -  1);
while (G__98616__i < G__98616__a.length) {G__98616__a[G__98616__i] = arguments[G__98616__i + 1]; ++G__98616__i;}
  keys = new cljs.core.IndexedSeq(G__98616__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__98617){
var comparator = cljs.core.first(arglist__98617);
var keys = cljs.core.rest(arglist__98617);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__98618_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__98618_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__98618_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__98619_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__98619_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__98619_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__98640 = null;
var G__98640__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__98640__1 = (function (result){
var G__98630 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__98630) : rf.call(null,G__98630));
});
var G__98640__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__98631 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98631) : cljs.core.deref.call(null,G__98631));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__98632 = result;
var G__98633 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98632,G__98633) : rf.call(null,G__98632,G__98633));
}
});
G__98640 = function(result,input){
switch(arguments.length){
case 0:
return G__98640__0.call(this);
case 1:
return G__98640__1.call(this,result);
case 2:
return G__98640__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98640.cljs$core$IFn$_invoke$arity$0 = G__98640__0;
G__98640.cljs$core$IFn$_invoke$arity$1 = G__98640__1;
G__98640.cljs$core$IFn$_invoke$arity$2 = G__98640__2;
return G__98640;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__98638,seen__$1){
while(true){
var vec__98639 = p__98638;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98639,(0),null);
var xs__$1 = vec__98639;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__98641 = cljs.core.rest(s);
var G__98642 = seen__$1;
p__98638 = G__98641;
seen__$1 = G__98642;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__98643 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__98644 = cljs.core.next(s__$1);
ret = G__98643;
s__$1 = G__98644;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__98646 = x;
if(G__98646){
var bit__4655__auto__ = (G__98646.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__98646.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__98647 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__98648 = cljs.core.next(ks);
var G__98649 = cljs.core.next(vs);
map = G__98647;
ks = G__98648;
vs = G__98649;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__98660 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__98660) : k.call(null,G__98660));
})() > (function (){var G__98661 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__98661) : k.call(null,G__98661));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__98662__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__98650_SHARP_,p2__98651_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__98650_SHARP_,p2__98651_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__98662 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__98663__i = 0, G__98663__a = new Array(arguments.length -  3);
while (G__98663__i < G__98663__a.length) {G__98663__a[G__98663__i] = arguments[G__98663__i + 3]; ++G__98663__i;}
  more = new cljs.core.IndexedSeq(G__98663__a,0);
} 
return G__98662__delegate.call(this,k,x,y,more);};
G__98662.cljs$lang$maxFixedArity = 3;
G__98662.cljs$lang$applyTo = (function (arglist__98664){
var k = cljs.core.first(arglist__98664);
arglist__98664 = cljs.core.next(arglist__98664);
var x = cljs.core.first(arglist__98664);
arglist__98664 = cljs.core.next(arglist__98664);
var y = cljs.core.first(arglist__98664);
var more = cljs.core.rest(arglist__98664);
return G__98662__delegate(k,x,y,more);
});
G__98662.cljs$core$IFn$_invoke$arity$variadic = G__98662__delegate;
return G__98662;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__98665 = null;
if (arguments.length > 3) {
var G__98666__i = 0, G__98666__a = new Array(arguments.length -  3);
while (G__98666__i < G__98666__a.length) {G__98666__a[G__98666__i] = arguments[G__98666__i + 3]; ++G__98666__i;}
G__98665 = new cljs.core.IndexedSeq(G__98666__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__98665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__98677 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__98677) : k.call(null,G__98677));
})() < (function (){var G__98678 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__98678) : k.call(null,G__98678));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__98679__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__98667_SHARP_,p2__98668_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__98667_SHARP_,p2__98668_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__98679 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__98680__i = 0, G__98680__a = new Array(arguments.length -  3);
while (G__98680__i < G__98680__a.length) {G__98680__a[G__98680__i] = arguments[G__98680__i + 3]; ++G__98680__i;}
  more = new cljs.core.IndexedSeq(G__98680__a,0);
} 
return G__98679__delegate.call(this,k,x,y,more);};
G__98679.cljs$lang$maxFixedArity = 3;
G__98679.cljs$lang$applyTo = (function (arglist__98681){
var k = cljs.core.first(arglist__98681);
arglist__98681 = cljs.core.next(arglist__98681);
var x = cljs.core.first(arglist__98681);
arglist__98681 = cljs.core.next(arglist__98681);
var y = cljs.core.first(arglist__98681);
var more = cljs.core.rest(arglist__98681);
return G__98679__delegate(k,x,y,more);
});
G__98679.cljs$core$IFn$_invoke$arity$variadic = G__98679__delegate;
return G__98679;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__98682 = null;
if (arguments.length > 3) {
var G__98683__i = 0, G__98683__a = new Array(arguments.length -  3);
while (G__98683__i < G__98683__a.length) {G__98683__a[G__98683__i] = arguments[G__98683__i + 3]; ++G__98683__i;}
G__98682 = new cljs.core.IndexedSeq(G__98683__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__98682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__98700 = null;
var G__98700__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__98700__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__98695 = result;
var G__98696 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98695,G__98696) : rf.call(null,G__98695,G__98696));
})());
})());
var G__98697 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__98697) : rf.call(null,G__98697));
});
var G__98700__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__98698 = result;
var G__98699 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98698,G__98699) : rf.call(null,G__98698,G__98699));
} else {
return result;
}
});
G__98700 = function(result,input){
switch(arguments.length){
case 0:
return G__98700__0.call(this);
case 1:
return G__98700__1.call(this,result);
case 2:
return G__98700__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98700.cljs$core$IFn$_invoke$arity$0 = G__98700__0;
G__98700.cljs$core$IFn$_invoke$arity$1 = G__98700__1;
G__98700.cljs$core$IFn$_invoke$arity$2 = G__98700__2;
return G__98700;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__98713 = null;
var G__98713__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__98713__1 = (function (result){
var G__98708 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__98708) : rf.call(null,G__98708));
});
var G__98713__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__98709 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__98709) : pred.call(null,G__98709));
})())){
var G__98710 = result;
var G__98711 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98710,G__98711) : rf.call(null,G__98710,G__98711));
} else {
return cljs.core.reduced(result);
}
});
G__98713 = function(result,input){
switch(arguments.length){
case 0:
return G__98713__0.call(this);
case 1:
return G__98713__1.call(this,result);
case 2:
return G__98713__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98713.cljs$core$IFn$_invoke$arity$0 = G__98713__0;
G__98713.cljs$core$IFn$_invoke$arity$1 = G__98713__1;
G__98713.cljs$core$IFn$_invoke$arity$2 = G__98713__2;
return G__98713;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__98712 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__98712) : pred.call(null,G__98712));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__98718 = (function (){var G__98720 = cljs.core._entry_key(sc,e);
var G__98721 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__98720,G__98721) : comp.call(null,G__98720,G__98721));
})();
var G__98719 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__98718,G__98719) : test.call(null,G__98718,G__98719));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__98725 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98725,(0),null);
var s = vec__98725;
if(cljs.core.truth_((function (){var G__98726 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__98726) : include.call(null,G__98726));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__98727 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98727,(0),null);
var s = vec__98727;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__98731 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98731,(0),null);
var s = vec__98731;
if(cljs.core.truth_((function (){var G__98732 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__98732) : include.call(null,G__98732));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__98733 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98733,(0),null);
var s = vec__98733;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__98734 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__98734) : Math.ceil.call(null,G__98734));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__98735 = ret;
var G__98736 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98735,G__98736) : f.call(null,G__98735,G__98736));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__98737 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98737) : cljs.core.deref.call(null,G__98737));
} else {
var G__98738 = (i + self__.step);
var G__98739 = ret__$1;
i = G__98738;
ret = G__98739;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__98757 = null;
var G__98757__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__98757__1 = (function (result){
var G__98754 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__98754) : rf.call(null,G__98754));
});
var G__98757__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__98755 = result;
var G__98756 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98755,G__98756) : rf.call(null,G__98755,G__98756));
} else {
return result;
}
});
G__98757 = function(result,input){
switch(arguments.length){
case 0:
return G__98757__0.call(this);
case 1:
return G__98757__1.call(this,result);
case 2:
return G__98757__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98757.cljs$core$IFn$_invoke$arity$0 = G__98757__0;
G__98757.cljs$core$IFn$_invoke$arity$1 = G__98757__1;
G__98757.cljs$core$IFn$_invoke$arity$2 = G__98757__2;
return G__98757;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__98779 = null;
var G__98779__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__98779__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__98770 = result;
var G__98771 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98770,G__98771) : rf.call(null,G__98770,G__98771));
})());
})());
var G__98772 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__98772) : rf.call(null,G__98772));
});
var G__98779__2 = (function (result,input){
var pval = (function (){var G__98773 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__98773) : cljs.core.deref.call(null,G__98773));
})();
var val = (function (){var G__98774 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98774) : f.call(null,G__98774));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__98775 = result;
var G__98776 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__98775,G__98776) : rf.call(null,G__98775,G__98776));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__98779 = function(result,input){
switch(arguments.length){
case 0:
return G__98779__0.call(this);
case 1:
return G__98779__1.call(this,result);
case 2:
return G__98779__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98779.cljs$core$IFn$_invoke$arity$0 = G__98779__0;
G__98779.cljs$core$IFn$_invoke$arity$1 = G__98779__1;
G__98779.cljs$core$IFn$_invoke$arity$2 = G__98779__2;
return G__98779;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__98777 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98777) : f.call(null,G__98777));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__98758_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__98778 = p1__98758_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98778) : f.call(null,G__98778));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__98788 = init;
var G__98789 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98788,G__98789) : f.call(null,G__98788,G__98789));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__98884 = null;
var G__98884__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__98884__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98842 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98842) : f.call(null,G__98842));
})()],null));
});
var G__98884__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98843 = x;
var G__98844 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98843,G__98844) : f.call(null,G__98843,G__98844));
})()],null));
});
var G__98884__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98845 = x;
var G__98846 = y;
var G__98847 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98845,G__98846,G__98847) : f.call(null,G__98845,G__98846,G__98847));
})()],null));
});
var G__98884__4 = (function() { 
var G__98885__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__98885 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__98886__i = 0, G__98886__a = new Array(arguments.length -  3);
while (G__98886__i < G__98886__a.length) {G__98886__a[G__98886__i] = arguments[G__98886__i + 3]; ++G__98886__i;}
  args = new cljs.core.IndexedSeq(G__98886__a,0);
} 
return G__98885__delegate.call(this,x,y,z,args);};
G__98885.cljs$lang$maxFixedArity = 3;
G__98885.cljs$lang$applyTo = (function (arglist__98887){
var x = cljs.core.first(arglist__98887);
arglist__98887 = cljs.core.next(arglist__98887);
var y = cljs.core.first(arglist__98887);
arglist__98887 = cljs.core.next(arglist__98887);
var z = cljs.core.first(arglist__98887);
var args = cljs.core.rest(arglist__98887);
return G__98885__delegate(x,y,z,args);
});
G__98885.cljs$core$IFn$_invoke$arity$variadic = G__98885__delegate;
return G__98885;
})()
;
G__98884 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__98884__0.call(this);
case 1:
return G__98884__1.call(this,x);
case 2:
return G__98884__2.call(this,x,y);
case 3:
return G__98884__3.call(this,x,y,z);
default:
var G__98888 = null;
if (arguments.length > 3) {
var G__98889__i = 0, G__98889__a = new Array(arguments.length -  3);
while (G__98889__i < G__98889__a.length) {G__98889__a[G__98889__i] = arguments[G__98889__i + 3]; ++G__98889__i;}
G__98888 = new cljs.core.IndexedSeq(G__98889__a,0);
}
return G__98884__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__98888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98884.cljs$lang$maxFixedArity = 3;
G__98884.cljs$lang$applyTo = G__98884__4.cljs$lang$applyTo;
G__98884.cljs$core$IFn$_invoke$arity$0 = G__98884__0;
G__98884.cljs$core$IFn$_invoke$arity$1 = G__98884__1;
G__98884.cljs$core$IFn$_invoke$arity$2 = G__98884__2;
G__98884.cljs$core$IFn$_invoke$arity$3 = G__98884__3;
G__98884.cljs$core$IFn$_invoke$arity$variadic = G__98884__4.cljs$core$IFn$_invoke$arity$variadic;
return G__98884;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__98890 = null;
var G__98890__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__98890__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98848 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98848) : f.call(null,G__98848));
})(),(function (){var G__98849 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__98849) : g.call(null,G__98849));
})()],null));
});
var G__98890__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98850 = x;
var G__98851 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98850,G__98851) : f.call(null,G__98850,G__98851));
})(),(function (){var G__98852 = x;
var G__98853 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__98852,G__98853) : g.call(null,G__98852,G__98853));
})()],null));
});
var G__98890__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98854 = x;
var G__98855 = y;
var G__98856 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98854,G__98855,G__98856) : f.call(null,G__98854,G__98855,G__98856));
})(),(function (){var G__98857 = x;
var G__98858 = y;
var G__98859 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__98857,G__98858,G__98859) : g.call(null,G__98857,G__98858,G__98859));
})()],null));
});
var G__98890__4 = (function() { 
var G__98891__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__98891 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__98892__i = 0, G__98892__a = new Array(arguments.length -  3);
while (G__98892__i < G__98892__a.length) {G__98892__a[G__98892__i] = arguments[G__98892__i + 3]; ++G__98892__i;}
  args = new cljs.core.IndexedSeq(G__98892__a,0);
} 
return G__98891__delegate.call(this,x,y,z,args);};
G__98891.cljs$lang$maxFixedArity = 3;
G__98891.cljs$lang$applyTo = (function (arglist__98893){
var x = cljs.core.first(arglist__98893);
arglist__98893 = cljs.core.next(arglist__98893);
var y = cljs.core.first(arglist__98893);
arglist__98893 = cljs.core.next(arglist__98893);
var z = cljs.core.first(arglist__98893);
var args = cljs.core.rest(arglist__98893);
return G__98891__delegate(x,y,z,args);
});
G__98891.cljs$core$IFn$_invoke$arity$variadic = G__98891__delegate;
return G__98891;
})()
;
G__98890 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__98890__0.call(this);
case 1:
return G__98890__1.call(this,x);
case 2:
return G__98890__2.call(this,x,y);
case 3:
return G__98890__3.call(this,x,y,z);
default:
var G__98894 = null;
if (arguments.length > 3) {
var G__98895__i = 0, G__98895__a = new Array(arguments.length -  3);
while (G__98895__i < G__98895__a.length) {G__98895__a[G__98895__i] = arguments[G__98895__i + 3]; ++G__98895__i;}
G__98894 = new cljs.core.IndexedSeq(G__98895__a,0);
}
return G__98890__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__98894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98890.cljs$lang$maxFixedArity = 3;
G__98890.cljs$lang$applyTo = G__98890__4.cljs$lang$applyTo;
G__98890.cljs$core$IFn$_invoke$arity$0 = G__98890__0;
G__98890.cljs$core$IFn$_invoke$arity$1 = G__98890__1;
G__98890.cljs$core$IFn$_invoke$arity$2 = G__98890__2;
G__98890.cljs$core$IFn$_invoke$arity$3 = G__98890__3;
G__98890.cljs$core$IFn$_invoke$arity$variadic = G__98890__4.cljs$core$IFn$_invoke$arity$variadic;
return G__98890;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__98896 = null;
var G__98896__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__98896__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98860 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__98860) : f.call(null,G__98860));
})(),(function (){var G__98861 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__98861) : g.call(null,G__98861));
})(),(function (){var G__98862 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__98862) : h.call(null,G__98862));
})()],null));
});
var G__98896__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98863 = x;
var G__98864 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__98863,G__98864) : f.call(null,G__98863,G__98864));
})(),(function (){var G__98865 = x;
var G__98866 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__98865,G__98866) : g.call(null,G__98865,G__98866));
})(),(function (){var G__98867 = x;
var G__98868 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__98867,G__98868) : h.call(null,G__98867,G__98868));
})()],null));
});
var G__98896__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__98869 = x;
var G__98870 = y;
var G__98871 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__98869,G__98870,G__98871) : f.call(null,G__98869,G__98870,G__98871));
})(),(function (){var G__98872 = x;
var G__98873 = y;
var G__98874 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__98872,G__98873,G__98874) : g.call(null,G__98872,G__98873,G__98874));
})(),(function (){var G__98875 = x;
var G__98876 = y;
var G__98877 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__98875,G__98876,G__98877) : h.call(null,G__98875,G__98876,G__98877));
})()],null));
});
var G__98896__4 = (function() { 
var G__98897__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__98897 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__98898__i = 0, G__98898__a = new Array(arguments.length -  3);
while (G__98898__i < G__98898__a.length) {G__98898__a[G__98898__i] = arguments[G__98898__i + 3]; ++G__98898__i;}
  args = new cljs.core.IndexedSeq(G__98898__a,0);
} 
return G__98897__delegate.call(this,x,y,z,args);};
G__98897.cljs$lang$maxFixedArity = 3;
G__98897.cljs$lang$applyTo = (function (arglist__98899){
var x = cljs.core.first(arglist__98899);
arglist__98899 = cljs.core.next(arglist__98899);
var y = cljs.core.first(arglist__98899);
arglist__98899 = cljs.core.next(arglist__98899);
var z = cljs.core.first(arglist__98899);
var args = cljs.core.rest(arglist__98899);
return G__98897__delegate(x,y,z,args);
});
G__98897.cljs$core$IFn$_invoke$arity$variadic = G__98897__delegate;
return G__98897;
})()
;
G__98896 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__98896__0.call(this);
case 1:
return G__98896__1.call(this,x);
case 2:
return G__98896__2.call(this,x,y);
case 3:
return G__98896__3.call(this,x,y,z);
default:
var G__98900 = null;
if (arguments.length > 3) {
var G__98901__i = 0, G__98901__a = new Array(arguments.length -  3);
while (G__98901__i < G__98901__a.length) {G__98901__a[G__98901__i] = arguments[G__98901__i + 3]; ++G__98901__i;}
G__98900 = new cljs.core.IndexedSeq(G__98901__a,0);
}
return G__98896__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__98900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98896.cljs$lang$maxFixedArity = 3;
G__98896.cljs$lang$applyTo = G__98896__4.cljs$lang$applyTo;
G__98896.cljs$core$IFn$_invoke$arity$0 = G__98896__0;
G__98896.cljs$core$IFn$_invoke$arity$1 = G__98896__1;
G__98896.cljs$core$IFn$_invoke$arity$2 = G__98896__2;
G__98896.cljs$core$IFn$_invoke$arity$3 = G__98896__3;
G__98896.cljs$core$IFn$_invoke$arity$variadic = G__98896__4.cljs$core$IFn$_invoke$arity$variadic;
return G__98896;
})()
});
var juxt__4 = (function() { 
var G__98902__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__98903 = null;
var G__98903__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__98790_SHARP_,p2__98791_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__98790_SHARP_,(function (){return (p2__98791_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__98791_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__98791_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__98903__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__98792_SHARP_,p2__98793_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__98792_SHARP_,(function (){var G__98878 = x;
return (p2__98793_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__98793_SHARP_.cljs$core$IFn$_invoke$arity$1(G__98878) : p2__98793_SHARP_.call(null,G__98878));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__98903__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__98794_SHARP_,p2__98795_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__98794_SHARP_,(function (){var G__98879 = x;
var G__98880 = y;
return (p2__98795_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__98795_SHARP_.cljs$core$IFn$_invoke$arity$2(G__98879,G__98880) : p2__98795_SHARP_.call(null,G__98879,G__98880));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__98903__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__98796_SHARP_,p2__98797_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__98796_SHARP_,(function (){var G__98881 = x;
var G__98882 = y;
var G__98883 = z;
return (p2__98797_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__98797_SHARP_.cljs$core$IFn$_invoke$arity$3(G__98881,G__98882,G__98883) : p2__98797_SHARP_.call(null,G__98881,G__98882,G__98883));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__98903__4 = (function() { 
var G__98904__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__98798_SHARP_,p2__98799_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__98798_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__98799_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__98904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__98905__i = 0, G__98905__a = new Array(arguments.length -  3);
while (G__98905__i < G__98905__a.length) {G__98905__a[G__98905__i] = arguments[G__98905__i + 3]; ++G__98905__i;}
  args = new cljs.core.IndexedSeq(G__98905__a,0);
} 
return G__98904__delegate.call(this,x,y,z,args);};
G__98904.cljs$lang$maxFixedArity = 3;
G__98904.cljs$lang$applyTo = (function (arglist__98906){
var x = cljs.core.first(arglist__98906);
arglist__98906 = cljs.core.next(arglist__98906);
var y = cljs.core.first(arglist__98906);
arglist__98906 = cljs.core.next(arglist__98906);
var z = cljs.core.first(arglist__98906);
var args = cljs.core.rest(arglist__98906);
return G__98904__delegate(x,y,z,args);
});
G__98904.cljs$core$IFn$_invoke$arity$variadic = G__98904__delegate;
return G__98904;
})()
;
G__98903 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__98903__0.call(this);
case 1:
return G__98903__1.call(this,x);
case 2:
return G__98903__2.call(this,x,y);
case 3:
return G__98903__3.call(this,x,y,z);
default:
var G__98907 = null;
if (arguments.length > 3) {
var G__98908__i = 0, G__98908__a = new Array(arguments.length -  3);
while (G__98908__i < G__98908__a.length) {G__98908__a[G__98908__i] = arguments[G__98908__i + 3]; ++G__98908__i;}
G__98907 = new cljs.core.IndexedSeq(G__98908__a,0);
}
return G__98903__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__98907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__98903.cljs$lang$maxFixedArity = 3;
G__98903.cljs$lang$applyTo = G__98903__4.cljs$lang$applyTo;
G__98903.cljs$core$IFn$_invoke$arity$0 = G__98903__0;
G__98903.cljs$core$IFn$_invoke$arity$1 = G__98903__1;
G__98903.cljs$core$IFn$_invoke$arity$2 = G__98903__2;
G__98903.cljs$core$IFn$_invoke$arity$3 = G__98903__3;
G__98903.cljs$core$IFn$_invoke$arity$variadic = G__98903__4.cljs$core$IFn$_invoke$arity$variadic;
return G__98903;
})()
;})(fs__$1))
};
var G__98902 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__98909__i = 0, G__98909__a = new Array(arguments.length -  3);
while (G__98909__i < G__98909__a.length) {G__98909__a[G__98909__i] = arguments[G__98909__i + 3]; ++G__98909__i;}
  fs = new cljs.core.IndexedSeq(G__98909__a,0);
} 
return G__98902__delegate.call(this,f,g,h,fs);};
G__98902.cljs$lang$maxFixedArity = 3;
G__98902.cljs$lang$applyTo = (function (arglist__98910){
var f = cljs.core.first(arglist__98910);
arglist__98910 = cljs.core.next(arglist__98910);
var g = cljs.core.first(arglist__98910);
arglist__98910 = cljs.core.next(arglist__98910);
var h = cljs.core.first(arglist__98910);
var fs = cljs.core.rest(arglist__98910);
return G__98902__delegate(f,g,h,fs);
});
G__98902.cljs$core$IFn$_invoke$arity$variadic = G__98902__delegate;
return G__98902;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__98911 = null;
if (arguments.length > 3) {
var G__98912__i = 0, G__98912__a = new Array(arguments.length -  3);
while (G__98912__i < G__98912__a.length) {G__98912__a[G__98912__i] = arguments[G__98912__i + 3]; ++G__98912__i;}
G__98911 = new cljs.core.IndexedSeq(G__98912__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__98911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__98913 = cljs.core.next(coll);
coll = G__98913;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__98914 = (n - (1));
var G__98915 = cljs.core.next(coll);
n = G__98914;
coll = G__98915;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__98919 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98919,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98919,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__98919,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_98927 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__98928_98934 = cljs.core.first(coll);
var G__98929_98935 = writer;
var G__98930_98936 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__98928_98934,G__98929_98935,G__98930_98936) : print_one.call(null,G__98928_98934,G__98929_98935,G__98930_98936));
} else {
}

var coll_98937__$1 = cljs.core.next(coll);
var n_98938 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_98937__$1) && (((n_98938 == null)) || (!((n_98938 === (0)))))){
cljs.core._write(writer,sep);

var G__98931_98939 = cljs.core.first(coll_98937__$1);
var G__98932_98940 = writer;
var G__98933_98941 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__98931_98939,G__98932_98940,G__98933_98941) : print_one.call(null,G__98931_98939,G__98932_98940,G__98933_98941));

var G__98942 = cljs.core.next(coll_98937__$1);
var G__98943 = (n_98938 - (1));
coll_98937__$1 = G__98942;
n_98938 = G__98943;
continue;
} else {
if((cljs.core.seq(coll_98937__$1)) && ((n_98938 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_98927;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__98948 = cljs.core.seq(ss);
var chunk__98949 = null;
var count__98950 = (0);
var i__98951 = (0);
while(true){
if((i__98951 < count__98950)){
var s = chunk__98949.cljs$core$IIndexed$_nth$arity$2(null,i__98951);
cljs.core._write(writer,s);

var G__98952 = seq__98948;
var G__98953 = chunk__98949;
var G__98954 = count__98950;
var G__98955 = (i__98951 + (1));
seq__98948 = G__98952;
chunk__98949 = G__98953;
count__98950 = G__98954;
i__98951 = G__98955;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__98948);
if(temp__4126__auto__){
var seq__98948__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__98948__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__98948__$1);
var G__98956 = cljs.core.chunk_rest(seq__98948__$1);
var G__98957 = c__4768__auto__;
var G__98958 = cljs.core.count(c__4768__auto__);
var G__98959 = (0);
seq__98948 = G__98956;
chunk__98949 = G__98957;
count__98950 = G__98958;
i__98951 = G__98959;
continue;
} else {
var s = cljs.core.first(seq__98948__$1);
cljs.core._write(writer,s);

var G__98960 = cljs.core.next(seq__98948__$1);
var G__98961 = null;
var G__98962 = (0);
var G__98963 = (0);
seq__98948 = G__98960;
chunk__98949 = G__98961;
count__98950 = G__98962;
i__98951 = G__98963;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__98964__i = 0, G__98964__a = new Array(arguments.length -  1);
while (G__98964__i < G__98964__a.length) {G__98964__a[G__98964__i] = arguments[G__98964__i + 1]; ++G__98964__i;}
  ss = new cljs.core.IndexedSeq(G__98964__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__98965){
var writer = cljs.core.first(arglist__98965);
var ss = cljs.core.rest(arglist__98965);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj98967 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj98967;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__98970 = "[\\\\\"\b\f\n\r\t]";
var G__98971 = "g";
return RegExp(G__98970,G__98971);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__98985 = obj;
if(G__98985){
var bit__4662__auto__ = (G__98985.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__98985.cljs$core$IMeta$)){
return true;
} else {
if((!G__98985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__98985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__98985);
}
})();
if(and__3969__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__98986_98996 = cljs.core.meta(obj);
var G__98987_98997 = writer;
var G__98988_98998 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__98986_98996,G__98987_98997,G__98988_98998) : cljs.core.pr_writer.call(null,G__98986_98996,G__98987_98997,G__98988_98998));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__98989 = obj;
if(G__98989){
var bit__4655__auto__ = (G__98989.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4655__auto__) || (G__98989.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__98990 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__98991 = cljs.core.pr_writer;
var G__98992 = writer;
var G__98993 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__98990,G__98991,G__98992,G__98993) : cljs.core.print_map.call(null,G__98990,G__98991,G__98992,G__98993));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__98994 = obj;
return goog.isString(G__98994);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__98999 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__98999;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__98995 = obj;
if(G__98995){
var bit__4662__auto__ = (G__98995.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4662__auto__) || (G__98995.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__98995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__98995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__98995);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__99003 = obj;
var G__99004 = writer;
var G__99005 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__99003,G__99004,G__99005) : alt_impl.call(null,G__99003,G__99004,G__99005));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__99010 = cljs.core.seq(cljs.core.next(objs));
var chunk__99011 = null;
var count__99012 = (0);
var i__99013 = (0);
while(true){
if((i__99013 < count__99012)){
var obj = chunk__99011.cljs$core$IIndexed$_nth$arity$2(null,i__99013);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__99014 = seq__99010;
var G__99015 = chunk__99011;
var G__99016 = count__99012;
var G__99017 = (i__99013 + (1));
seq__99010 = G__99014;
chunk__99011 = G__99015;
count__99012 = G__99016;
i__99013 = G__99017;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__99010);
if(temp__4126__auto__){
var seq__99010__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__99010__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__99010__$1);
var G__99018 = cljs.core.chunk_rest(seq__99010__$1);
var G__99019 = c__4768__auto__;
var G__99020 = cljs.core.count(c__4768__auto__);
var G__99021 = (0);
seq__99010 = G__99018;
chunk__99011 = G__99019;
count__99012 = G__99020;
i__99013 = G__99021;
continue;
} else {
var obj = cljs.core.first(seq__99010__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__99022 = cljs.core.next(seq__99010__$1);
var G__99023 = null;
var G__99024 = (0);
var G__99025 = (0);
seq__99010 = G__99022;
chunk__99011 = G__99023;
count__99012 = G__99024;
i__99013 = G__99025;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99026__i = 0, G__99026__a = new Array(arguments.length -  0);
while (G__99026__i < G__99026__a.length) {G__99026__a[G__99026__i] = arguments[G__99026__i + 0]; ++G__99026__i;}
  objs = new cljs.core.IndexedSeq(G__99026__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__99027){
var objs = cljs.core.seq(arglist__99027);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99028__i = 0, G__99028__a = new Array(arguments.length -  0);
while (G__99028__i < G__99028__a.length) {G__99028__a[G__99028__i] = arguments[G__99028__i + 0]; ++G__99028__i;}
  objs = new cljs.core.IndexedSeq(G__99028__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__99029){
var objs = cljs.core.seq(arglist__99029);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99030__i = 0, G__99030__a = new Array(arguments.length -  0);
while (G__99030__i < G__99030__a.length) {G__99030__a[G__99030__i] = arguments[G__99030__i + 0]; ++G__99030__i;}
  objs = new cljs.core.IndexedSeq(G__99030__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__99031){
var objs = cljs.core.seq(arglist__99031);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99032__i = 0, G__99032__a = new Array(arguments.length -  0);
while (G__99032__i < G__99032__a.length) {G__99032__a[G__99032__i] = arguments[G__99032__i + 0]; ++G__99032__i;}
  objs = new cljs.core.IndexedSeq(G__99032__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__99033){
var objs = cljs.core.seq(arglist__99033);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99034__i = 0, G__99034__a = new Array(arguments.length -  0);
while (G__99034__i < G__99034__a.length) {G__99034__a[G__99034__i] = arguments[G__99034__i + 0]; ++G__99034__i;}
  objs = new cljs.core.IndexedSeq(G__99034__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__99035){
var objs = cljs.core.seq(arglist__99035);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99036__i = 0, G__99036__a = new Array(arguments.length -  0);
while (G__99036__i < G__99036__a.length) {G__99036__a[G__99036__i] = arguments[G__99036__i + 0]; ++G__99036__i;}
  objs = new cljs.core.IndexedSeq(G__99036__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__99037){
var objs = cljs.core.seq(arglist__99037);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99038__i = 0, G__99038__a = new Array(arguments.length -  0);
while (G__99038__i < G__99038__a.length) {G__99038__a[G__99038__i] = arguments[G__99038__i + 0]; ++G__99038__i;}
  objs = new cljs.core.IndexedSeq(G__99038__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__99039){
var objs = cljs.core.seq(arglist__99039);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__99040__i = 0, G__99040__a = new Array(arguments.length -  0);
while (G__99040__i < G__99040__a.length) {G__99040__a[G__99040__i] = arguments[G__99040__i + 0]; ++G__99040__i;}
  objs = new cljs.core.IndexedSeq(G__99040__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__99041){
var objs = cljs.core.seq(arglist__99041);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__99048_99054 = cljs.core.key(e);
var G__99049_99055 = w;
var G__99050_99056 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__99048_99054,G__99049_99055,G__99050_99056) : print_one.call(null,G__99048_99054,G__99049_99055,G__99050_99056));

cljs.core._write(w," ");

var G__99051 = cljs.core.val(e);
var G__99052 = w;
var G__99053 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__99051,G__99052,G__99053) : print_one.call(null,G__99051,G__99052,G__99053));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__99057__i = 0, G__99057__a = new Array(arguments.length -  2);
while (G__99057__i < G__99057__a.length) {G__99057__a[G__99057__i] = arguments[G__99057__i + 2]; ++G__99057__i;}
  args = new cljs.core.IndexedSeq(G__99057__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__99058){
var iref = cljs.core.first(arglist__99058);
arglist__99058 = cljs.core.next(arglist__99058);
var f = cljs.core.first(arglist__99058);
var args = cljs.core.rest(arglist__99058);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__99061 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__99061) : cljs.core.atom.call(null,G__99061));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__99063 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99063) : cljs.core.deref.call(null,G__99063));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__99064_SHARP_,p2__99065_SHARP_){
var ret = (function (){var G__99068 = p1__99064_SHARP_;
var G__99069 = p2__99065_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__99068,G__99069) : rf.call(null,G__99068,G__99069));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__99072 = null;
var G__99072__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__99072__1 = (function (result){
var G__99071 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__99071) : rf.call(null,G__99071));
});
var G__99072__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__99072 = function(result,input){
switch(arguments.length){
case 0:
return G__99072__0.call(this);
case 1:
return G__99072__1.call(this,result);
case 2:
return G__99072__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__99072.cljs$core$IFn$_invoke$arity$0 = G__99072__0;
G__99072.cljs$core$IFn$_invoke$arity$1 = G__99072__1;
G__99072.cljs$core$IFn$_invoke$arity$2 = G__99072__2;
return G__99072;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__99081 = null;
var G__99081__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__99081__1 = (function (result){
var G__99077 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__99077) : rf.call(null,G__99077));
});
var G__99081__2 = (function (result,input){
var prior = (function (){var G__99078 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99078) : cljs.core.deref.call(null,G__99078));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__99079 = result;
var G__99080 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__99079,G__99080) : rf.call(null,G__99079,G__99080));
}
});
G__99081 = function(result,input){
switch(arguments.length){
case 0:
return G__99081__0.call(this);
case 1:
return G__99081__1.call(this,result);
case 2:
return G__99081__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__99081.cljs$core$IFn$_invoke$arity$0 = G__99081__0;
G__99081.cljs$core$IFn$_invoke$arity$1 = G__99081__1;
G__99081.cljs$core$IFn$_invoke$arity$2 = G__99081__2;
return G__99081;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__99083_SHARP_,p2__99082_SHARP_){
var G__99085 = p2__99082_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__99085) : proc.call(null,G__99085));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj99087 = {};
return obj99087;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._clj__GT_js[(function (){var G__99091 = x__4625__auto__;
return goog.typeOf(G__99091);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._key__GT_js[(function (){var G__99095 = x__4625__auto__;
return goog.typeOf(G__99095);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__99098 = k;
if(G__99098){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__99098.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__99098.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__99098);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__99098);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__99099 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__99099) : cljs.core.clj__GT_js.call(null,G__99099));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__99115 = x;
if(G__99115){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__99115.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__99115.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__99115);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__99115);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj99117 = {};
return obj99117;
})();
var seq__99118_99128 = cljs.core.seq(x);
var chunk__99119_99129 = null;
var count__99120_99130 = (0);
var i__99121_99131 = (0);
while(true){
if((i__99121_99131 < count__99120_99130)){
var vec__99122_99132 = chunk__99119_99129.cljs$core$IIndexed$_nth$arity$2(null,i__99121_99131);
var k_99133 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99122_99132,(0),null);
var v_99134 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99122_99132,(1),null);
(m[cljs.core.key__GT_js(k_99133)] = clj__GT_js(v_99134));

var G__99135 = seq__99118_99128;
var G__99136 = chunk__99119_99129;
var G__99137 = count__99120_99130;
var G__99138 = (i__99121_99131 + (1));
seq__99118_99128 = G__99135;
chunk__99119_99129 = G__99136;
count__99120_99130 = G__99137;
i__99121_99131 = G__99138;
continue;
} else {
var temp__4126__auto___99139 = cljs.core.seq(seq__99118_99128);
if(temp__4126__auto___99139){
var seq__99118_99140__$1 = temp__4126__auto___99139;
if(cljs.core.chunked_seq_QMARK_(seq__99118_99140__$1)){
var c__4768__auto___99141 = cljs.core.chunk_first(seq__99118_99140__$1);
var G__99142 = cljs.core.chunk_rest(seq__99118_99140__$1);
var G__99143 = c__4768__auto___99141;
var G__99144 = cljs.core.count(c__4768__auto___99141);
var G__99145 = (0);
seq__99118_99128 = G__99142;
chunk__99119_99129 = G__99143;
count__99120_99130 = G__99144;
i__99121_99131 = G__99145;
continue;
} else {
var vec__99123_99146 = cljs.core.first(seq__99118_99140__$1);
var k_99147 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99123_99146,(0),null);
var v_99148 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99123_99146,(1),null);
(m[cljs.core.key__GT_js(k_99147)] = clj__GT_js(v_99148));

var G__99149 = cljs.core.next(seq__99118_99140__$1);
var G__99150 = null;
var G__99151 = (0);
var G__99152 = (0);
seq__99118_99128 = G__99149;
chunk__99119_99129 = G__99150;
count__99120_99130 = G__99151;
i__99121_99131 = G__99152;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__99124_99153 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__99125_99154 = null;
var count__99126_99155 = (0);
var i__99127_99156 = (0);
while(true){
if((i__99127_99156 < count__99126_99155)){
var x_99157__$1 = chunk__99125_99154.cljs$core$IIndexed$_nth$arity$2(null,i__99127_99156);
arr.push(x_99157__$1);

var G__99158 = seq__99124_99153;
var G__99159 = chunk__99125_99154;
var G__99160 = count__99126_99155;
var G__99161 = (i__99127_99156 + (1));
seq__99124_99153 = G__99158;
chunk__99125_99154 = G__99159;
count__99126_99155 = G__99160;
i__99127_99156 = G__99161;
continue;
} else {
var temp__4126__auto___99162 = cljs.core.seq(seq__99124_99153);
if(temp__4126__auto___99162){
var seq__99124_99163__$1 = temp__4126__auto___99162;
if(cljs.core.chunked_seq_QMARK_(seq__99124_99163__$1)){
var c__4768__auto___99164 = cljs.core.chunk_first(seq__99124_99163__$1);
var G__99165 = cljs.core.chunk_rest(seq__99124_99163__$1);
var G__99166 = c__4768__auto___99164;
var G__99167 = cljs.core.count(c__4768__auto___99164);
var G__99168 = (0);
seq__99124_99153 = G__99165;
chunk__99125_99154 = G__99166;
count__99126_99155 = G__99167;
i__99127_99156 = G__99168;
continue;
} else {
var x_99169__$1 = cljs.core.first(seq__99124_99163__$1);
arr.push(x_99169__$1);

var G__99170 = cljs.core.next(seq__99124_99163__$1);
var G__99171 = null;
var G__99172 = (0);
var G__99173 = (0);
seq__99124_99153 = G__99170;
chunk__99125_99154 = G__99171;
count__99126_99155 = G__99172;
i__99127_99156 = G__99173;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj99175 = {};
return obj99175;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._js__GT_clj[(function (){var G__99179 = x__4625__auto__;
return goog.typeOf(G__99179);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__99236__delegate = function (x,opts){
var map__99209 = opts;
var map__99209__$1 = ((cljs.core.seq_QMARK_(map__99209))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__99209):map__99209);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__99209__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__99209,map__99209__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__99225 = x__$1;
if(G__99225){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__99225.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__99225.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__99225);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__99225);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4737__auto__ = ((function (map__99209,map__99209__$1,keywordize_keys,keyfn){
return (function iter__99226(s__99227){
return (new cljs.core.LazySeq(null,((function (map__99209,map__99209__$1,keywordize_keys,keyfn){
return (function (){
var s__99227__$1 = s__99227;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__99227__$1);
if(temp__4126__auto__){
var s__99227__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__99227__$2)){
var c__4735__auto__ = cljs.core.chunk_first(s__99227__$2);
var size__4736__auto__ = cljs.core.count(c__4735__auto__);
var b__99229 = cljs.core.chunk_buffer(size__4736__auto__);
if((function (){var i__99228 = (0);
while(true){
if((i__99228 < size__4736__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4735__auto__,i__99228);
cljs.core.chunk_append(b__99229,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99234 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__99234) : keyfn.call(null,G__99234));
})(),thisfn((x__$1[k]))], null));

var G__99237 = (i__99228 + (1));
i__99228 = G__99237;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__99229),iter__99226(cljs.core.chunk_rest(s__99227__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__99229),null);
}
} else {
var k = cljs.core.first(s__99227__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__99235 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__99235) : keyfn.call(null,G__99235));
})(),thisfn((x__$1[k]))], null),iter__99226(cljs.core.rest(s__99227__$2)));
}
} else {
return null;
}
break;
}
});})(map__99209,map__99209__$1,keywordize_keys,keyfn))
,null,null));
});})(map__99209,map__99209__$1,keywordize_keys,keyfn))
;
return iter__4737__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__99209,map__99209__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__99236 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__99238__i = 0, G__99238__a = new Array(arguments.length -  1);
while (G__99238__i < G__99238__a.length) {G__99238__a[G__99238__i] = arguments[G__99238__i + 1]; ++G__99238__i;}
  opts = new cljs.core.IndexedSeq(G__99238__a,0);
} 
return G__99236__delegate.call(this,x,opts);};
G__99236.cljs$lang$maxFixedArity = 1;
G__99236.cljs$lang$applyTo = (function (arglist__99239){
var x = cljs.core.first(arglist__99239);
var opts = cljs.core.rest(arglist__99239);
return G__99236__delegate(x,opts);
});
G__99236.cljs$core$IFn$_invoke$arity$variadic = G__99236__delegate;
return G__99236;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__99240 = null;
if (arguments.length > 1) {
var G__99241__i = 0, G__99241__a = new Array(arguments.length -  1);
while (G__99241__i < G__99241__a.length) {G__99241__a[G__99241__i] = arguments[G__99241__i + 1]; ++G__99241__i;}
G__99240 = new cljs.core.IndexedSeq(G__99241__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__99240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__99244 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__99244) : cljs.core.atom.call(null,G__99244));
})();
return ((function (mem){
return (function() { 
var G__99246__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__99245 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99245) : cljs.core.deref.call(null,G__99245));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__99246 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__99247__i = 0, G__99247__a = new Array(arguments.length -  0);
while (G__99247__i < G__99247__a.length) {G__99247__a[G__99247__i] = arguments[G__99247__i + 0]; ++G__99247__i;}
  args = new cljs.core.IndexedSeq(G__99247__a,0);
} 
return G__99246__delegate.call(this,args);};
G__99246.cljs$lang$maxFixedArity = 0;
G__99246.cljs$lang$applyTo = (function (arglist__99248){
var args = cljs.core.seq(arglist__99248);
return G__99246__delegate(args);
});
G__99246.cljs$core$IFn$_invoke$arity$variadic = G__99246__delegate;
return G__99246;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__99250 = ret;
f = G__99250;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__99251__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__99251 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__99252__i = 0, G__99252__a = new Array(arguments.length -  1);
while (G__99252__i < G__99252__a.length) {G__99252__a[G__99252__i] = arguments[G__99252__i + 1]; ++G__99252__i;}
  args = new cljs.core.IndexedSeq(G__99252__a,0);
} 
return G__99251__delegate.call(this,f,args);};
G__99251.cljs$lang$maxFixedArity = 1;
G__99251.cljs$lang$applyTo = (function (arglist__99253){
var f = cljs.core.first(arglist__99253);
var args = cljs.core.rest(arglist__99253);
return G__99251__delegate(f,args);
});
G__99251.cljs$core$IFn$_invoke$arity$variadic = G__99251__delegate;
return G__99251;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__99254 = null;
if (arguments.length > 1) {
var G__99255__i = 0, G__99255__a = new Array(arguments.length -  1);
while (G__99255__i < G__99255__a.length) {G__99255__a[G__99255__i] = arguments[G__99255__i + 1]; ++G__99255__i;}
G__99254 = new cljs.core.IndexedSeq(G__99255__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__99254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__99258 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__99258) : Math.floor.call(null,G__99258));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__99260 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__99260) : f.call(null,G__99260));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__99262 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__99262) : cljs.core.atom.call(null,G__99262));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__99263__i = 0, G__99263__a = new Array(arguments.length -  1);
while (G__99263__i < G__99263__a.length) {G__99263__a[G__99263__i] = arguments[G__99263__i + 1]; ++G__99263__i;}
  args = new cljs.core.IndexedSeq(G__99263__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__99264){
var f = cljs.core.first(arglist__99264);
var args = cljs.core.rest(arglist__99264);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__99329 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99329) : cljs.core.deref.call(null,G__99329));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3981__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
var and__3969__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3969__auto__){
var and__3969__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3969__auto____$1){
var and__3969__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3969__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__99354 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__99352 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__99352) : child.call(null,G__99352));
})(),(function (){var G__99353 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__99353) : parent.call(null,G__99353));
})());
var G__99355 = (i + (1));
ret = G__99354;
i = G__99355;
continue;
}
break;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__99359 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99359) : cljs.core.deref.call(null,G__99359));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__99363 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99363) : cljs.core.deref.call(null,G__99363));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__99367 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99367) : cljs.core.deref.call(null,G__99367));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__99376 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__99376) : targets.call(null,G__99376));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__99377 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__99377) : sources.call(null,G__99377));
})()));
});})(tp,td,ta))
;
var or__3981__auto__ = ((cljs.core.contains_QMARK_((function (){var G__99381 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__99381) : tp.call(null,G__99381));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__99382 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__99382) : ta.call(null,G__99382));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__99383 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__99383) : ta.call(null,G__99383));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__99390 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__99390) : parentMap.call(null,G__99390));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__99391 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__99391) : parentMap.call(null,G__99391));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__99384_SHARP_){
return cljs.core.cons(cljs.core.first(p1__99384_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__99384_SHARP_),cljs.core.second(p1__99384_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__99392 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__99392) : parentMap.call(null,G__99392));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__99385_SHARP_,p2__99386_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__99385_SHARP_,p2__99386_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__99395 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99395) : cljs.core.deref.call(null,G__99395));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__99396 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99396) : cljs.core.deref.call(null,G__99396));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__99412 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99412) : cljs.core.deref.call(null,G__99412));
})().call(null,x);
var or__3981__auto__ = (cljs.core.truth_((function (){var and__3969__auto__ = xprefs;
if(cljs.core.truth_(and__3969__auto__)){
var G__99414 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__99414) : xprefs.call(null,G__99414));
} else {
return and__3969__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__99415 = cljs.core.rest(ps);
ps = G__99415;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__99416 = cljs.core.rest(ps);
ps = G__99416;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3981__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__99430){
var vec__99431 = p__99430;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99431,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__99431,(1),null);
var e = vec__99431;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__99432 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99432) : cljs.core.deref.call(null,G__99432));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3981__auto__ = (be == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__99433 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99433) : cljs.core.deref.call(null,G__99433));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__99434 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99434) : cljs.core.deref.call(null,G__99434));
})(),(function (){var G__99435 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99435) : cljs.core.deref.call(null,G__99435));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj99437 = {};
return obj99437;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._reset[(function (){var G__99441 = x__4625__auto__;
return goog.typeOf(G__99441);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._add_method[(function (){var G__99445 = x__4625__auto__;
return goog.typeOf(G__99445);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._remove_method[(function (){var G__99449 = x__4625__auto__;
return goog.typeOf(G__99449);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefer_method[(function (){var G__99453 = x__4625__auto__;
return goog.typeOf(G__99453);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._get_method[(function (){var G__99457 = x__4625__auto__;
return goog.typeOf(G__99457);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._get_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._methods[(function (){var G__99461 = x__4625__auto__;
return goog.typeOf(G__99461);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._methods["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefers[(function (){var G__99465 = x__4625__auto__;
return goog.typeOf(G__99465);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefers["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__99467 = this$__$1;
return goog.getUid(G__99467);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__99468 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99468) : cljs.core.deref.call(null,G__99468));
})(),(function (){var G__99469 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99469) : cljs.core.deref.call(null,G__99469));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__99470 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99470) : cljs.core.deref.call(null,G__99470));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__99471 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99471) : cljs.core.deref.call(null,G__99471));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__99472 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99472) : cljs.core.deref.call(null,G__99472));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__99473 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__99473) : cljs.core.deref.call(null,G__99473));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__100314 = null;
var G__100314__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__100314__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99474 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__99474) : self__.dispatch_fn.call(null,G__99474));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99475 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__99475) : target_fn.call(null,G__99475));
});
var G__100314__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99476 = a;
var G__99477 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__99476,G__99477) : self__.dispatch_fn.call(null,G__99476,G__99477));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99478 = a;
var G__99479 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__99478,G__99479) : target_fn.call(null,G__99478,G__99479));
});
var G__100314__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99480 = a;
var G__99481 = b;
var G__99482 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__99480,G__99481,G__99482) : self__.dispatch_fn.call(null,G__99480,G__99481,G__99482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99483 = a;
var G__99484 = b;
var G__99485 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__99483,G__99484,G__99485) : target_fn.call(null,G__99483,G__99484,G__99485));
});
var G__100314__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99486 = a;
var G__99487 = b;
var G__99488 = c;
var G__99489 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__99486,G__99487,G__99488,G__99489) : self__.dispatch_fn.call(null,G__99486,G__99487,G__99488,G__99489));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99490 = a;
var G__99491 = b;
var G__99492 = c;
var G__99493 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__99490,G__99491,G__99492,G__99493) : target_fn.call(null,G__99490,G__99491,G__99492,G__99493));
});
var G__100314__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99494 = a;
var G__99495 = b;
var G__99496 = c;
var G__99497 = d;
var G__99498 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__99494,G__99495,G__99496,G__99497,G__99498) : self__.dispatch_fn.call(null,G__99494,G__99495,G__99496,G__99497,G__99498));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99499 = a;
var G__99500 = b;
var G__99501 = c;
var G__99502 = d;
var G__99503 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__99499,G__99500,G__99501,G__99502,G__99503) : target_fn.call(null,G__99499,G__99500,G__99501,G__99502,G__99503));
});
var G__100314__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99504 = a;
var G__99505 = b;
var G__99506 = c;
var G__99507 = d;
var G__99508 = e;
var G__99509 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__99504,G__99505,G__99506,G__99507,G__99508,G__99509) : self__.dispatch_fn.call(null,G__99504,G__99505,G__99506,G__99507,G__99508,G__99509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99510 = a;
var G__99511 = b;
var G__99512 = c;
var G__99513 = d;
var G__99514 = e;
var G__99515 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__99510,G__99511,G__99512,G__99513,G__99514,G__99515) : target_fn.call(null,G__99510,G__99511,G__99512,G__99513,G__99514,G__99515));
});
var G__100314__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99516 = a;
var G__99517 = b;
var G__99518 = c;
var G__99519 = d;
var G__99520 = e;
var G__99521 = f;
var G__99522 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__99516,G__99517,G__99518,G__99519,G__99520,G__99521,G__99522) : self__.dispatch_fn.call(null,G__99516,G__99517,G__99518,G__99519,G__99520,G__99521,G__99522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99523 = a;
var G__99524 = b;
var G__99525 = c;
var G__99526 = d;
var G__99527 = e;
var G__99528 = f;
var G__99529 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__99523,G__99524,G__99525,G__99526,G__99527,G__99528,G__99529) : target_fn.call(null,G__99523,G__99524,G__99525,G__99526,G__99527,G__99528,G__99529));
});
var G__100314__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99530 = a;
var G__99531 = b;
var G__99532 = c;
var G__99533 = d;
var G__99534 = e;
var G__99535 = f;
var G__99536 = g;
var G__99537 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__99530,G__99531,G__99532,G__99533,G__99534,G__99535,G__99536,G__99537) : self__.dispatch_fn.call(null,G__99530,G__99531,G__99532,G__99533,G__99534,G__99535,G__99536,G__99537));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99538 = a;
var G__99539 = b;
var G__99540 = c;
var G__99541 = d;
var G__99542 = e;
var G__99543 = f;
var G__99544 = g;
var G__99545 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__99538,G__99539,G__99540,G__99541,G__99542,G__99543,G__99544,G__99545) : target_fn.call(null,G__99538,G__99539,G__99540,G__99541,G__99542,G__99543,G__99544,G__99545));
});
var G__100314__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99546 = a;
var G__99547 = b;
var G__99548 = c;
var G__99549 = d;
var G__99550 = e;
var G__99551 = f;
var G__99552 = g;
var G__99553 = h;
var G__99554 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__99546,G__99547,G__99548,G__99549,G__99550,G__99551,G__99552,G__99553,G__99554) : self__.dispatch_fn.call(null,G__99546,G__99547,G__99548,G__99549,G__99550,G__99551,G__99552,G__99553,G__99554));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99555 = a;
var G__99556 = b;
var G__99557 = c;
var G__99558 = d;
var G__99559 = e;
var G__99560 = f;
var G__99561 = g;
var G__99562 = h;
var G__99563 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__99555,G__99556,G__99557,G__99558,G__99559,G__99560,G__99561,G__99562,G__99563) : target_fn.call(null,G__99555,G__99556,G__99557,G__99558,G__99559,G__99560,G__99561,G__99562,G__99563));
});
var G__100314__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99564 = a;
var G__99565 = b;
var G__99566 = c;
var G__99567 = d;
var G__99568 = e;
var G__99569 = f;
var G__99570 = g;
var G__99571 = h;
var G__99572 = i;
var G__99573 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__99564,G__99565,G__99566,G__99567,G__99568,G__99569,G__99570,G__99571,G__99572,G__99573) : self__.dispatch_fn.call(null,G__99564,G__99565,G__99566,G__99567,G__99568,G__99569,G__99570,G__99571,G__99572,G__99573));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99574 = a;
var G__99575 = b;
var G__99576 = c;
var G__99577 = d;
var G__99578 = e;
var G__99579 = f;
var G__99580 = g;
var G__99581 = h;
var G__99582 = i;
var G__99583 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__99574,G__99575,G__99576,G__99577,G__99578,G__99579,G__99580,G__99581,G__99582,G__99583) : target_fn.call(null,G__99574,G__99575,G__99576,G__99577,G__99578,G__99579,G__99580,G__99581,G__99582,G__99583));
});
var G__100314__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99584 = a;
var G__99585 = b;
var G__99586 = c;
var G__99587 = d;
var G__99588 = e;
var G__99589 = f;
var G__99590 = g;
var G__99591 = h;
var G__99592 = i;
var G__99593 = j;
var G__99594 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__99584,G__99585,G__99586,G__99587,G__99588,G__99589,G__99590,G__99591,G__99592,G__99593,G__99594) : self__.dispatch_fn.call(null,G__99584,G__99585,G__99586,G__99587,G__99588,G__99589,G__99590,G__99591,G__99592,G__99593,G__99594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99595 = a;
var G__99596 = b;
var G__99597 = c;
var G__99598 = d;
var G__99599 = e;
var G__99600 = f;
var G__99601 = g;
var G__99602 = h;
var G__99603 = i;
var G__99604 = j;
var G__99605 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__99595,G__99596,G__99597,G__99598,G__99599,G__99600,G__99601,G__99602,G__99603,G__99604,G__99605) : target_fn.call(null,G__99595,G__99596,G__99597,G__99598,G__99599,G__99600,G__99601,G__99602,G__99603,G__99604,G__99605));
});
var G__100314__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99606 = a;
var G__99607 = b;
var G__99608 = c;
var G__99609 = d;
var G__99610 = e;
var G__99611 = f;
var G__99612 = g;
var G__99613 = h;
var G__99614 = i;
var G__99615 = j;
var G__99616 = k;
var G__99617 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__99606,G__99607,G__99608,G__99609,G__99610,G__99611,G__99612,G__99613,G__99614,G__99615,G__99616,G__99617) : self__.dispatch_fn.call(null,G__99606,G__99607,G__99608,G__99609,G__99610,G__99611,G__99612,G__99613,G__99614,G__99615,G__99616,G__99617));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99618 = a;
var G__99619 = b;
var G__99620 = c;
var G__99621 = d;
var G__99622 = e;
var G__99623 = f;
var G__99624 = g;
var G__99625 = h;
var G__99626 = i;
var G__99627 = j;
var G__99628 = k;
var G__99629 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__99618,G__99619,G__99620,G__99621,G__99622,G__99623,G__99624,G__99625,G__99626,G__99627,G__99628,G__99629) : target_fn.call(null,G__99618,G__99619,G__99620,G__99621,G__99622,G__99623,G__99624,G__99625,G__99626,G__99627,G__99628,G__99629));
});
var G__100314__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99630 = a;
var G__99631 = b;
var G__99632 = c;
var G__99633 = d;
var G__99634 = e;
var G__99635 = f;
var G__99636 = g;
var G__99637 = h;
var G__99638 = i;
var G__99639 = j;
var G__99640 = k;
var G__99641 = l;
var G__99642 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__99630,G__99631,G__99632,G__99633,G__99634,G__99635,G__99636,G__99637,G__99638,G__99639,G__99640,G__99641,G__99642) : self__.dispatch_fn.call(null,G__99630,G__99631,G__99632,G__99633,G__99634,G__99635,G__99636,G__99637,G__99638,G__99639,G__99640,G__99641,G__99642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99643 = a;
var G__99644 = b;
var G__99645 = c;
var G__99646 = d;
var G__99647 = e;
var G__99648 = f;
var G__99649 = g;
var G__99650 = h;
var G__99651 = i;
var G__99652 = j;
var G__99653 = k;
var G__99654 = l;
var G__99655 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__99643,G__99644,G__99645,G__99646,G__99647,G__99648,G__99649,G__99650,G__99651,G__99652,G__99653,G__99654,G__99655) : target_fn.call(null,G__99643,G__99644,G__99645,G__99646,G__99647,G__99648,G__99649,G__99650,G__99651,G__99652,G__99653,G__99654,G__99655));
});
var G__100314__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99656 = a;
var G__99657 = b;
var G__99658 = c;
var G__99659 = d;
var G__99660 = e;
var G__99661 = f;
var G__99662 = g;
var G__99663 = h;
var G__99664 = i;
var G__99665 = j;
var G__99666 = k;
var G__99667 = l;
var G__99668 = m;
var G__99669 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__99656,G__99657,G__99658,G__99659,G__99660,G__99661,G__99662,G__99663,G__99664,G__99665,G__99666,G__99667,G__99668,G__99669) : self__.dispatch_fn.call(null,G__99656,G__99657,G__99658,G__99659,G__99660,G__99661,G__99662,G__99663,G__99664,G__99665,G__99666,G__99667,G__99668,G__99669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99670 = a;
var G__99671 = b;
var G__99672 = c;
var G__99673 = d;
var G__99674 = e;
var G__99675 = f;
var G__99676 = g;
var G__99677 = h;
var G__99678 = i;
var G__99679 = j;
var G__99680 = k;
var G__99681 = l;
var G__99682 = m;
var G__99683 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__99670,G__99671,G__99672,G__99673,G__99674,G__99675,G__99676,G__99677,G__99678,G__99679,G__99680,G__99681,G__99682,G__99683) : target_fn.call(null,G__99670,G__99671,G__99672,G__99673,G__99674,G__99675,G__99676,G__99677,G__99678,G__99679,G__99680,G__99681,G__99682,G__99683));
});
var G__100314__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99684 = a;
var G__99685 = b;
var G__99686 = c;
var G__99687 = d;
var G__99688 = e;
var G__99689 = f;
var G__99690 = g;
var G__99691 = h;
var G__99692 = i;
var G__99693 = j;
var G__99694 = k;
var G__99695 = l;
var G__99696 = m;
var G__99697 = n;
var G__99698 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__99684,G__99685,G__99686,G__99687,G__99688,G__99689,G__99690,G__99691,G__99692,G__99693,G__99694,G__99695,G__99696,G__99697,G__99698) : self__.dispatch_fn.call(null,G__99684,G__99685,G__99686,G__99687,G__99688,G__99689,G__99690,G__99691,G__99692,G__99693,G__99694,G__99695,G__99696,G__99697,G__99698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99699 = a;
var G__99700 = b;
var G__99701 = c;
var G__99702 = d;
var G__99703 = e;
var G__99704 = f;
var G__99705 = g;
var G__99706 = h;
var G__99707 = i;
var G__99708 = j;
var G__99709 = k;
var G__99710 = l;
var G__99711 = m;
var G__99712 = n;
var G__99713 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__99699,G__99700,G__99701,G__99702,G__99703,G__99704,G__99705,G__99706,G__99707,G__99708,G__99709,G__99710,G__99711,G__99712,G__99713) : target_fn.call(null,G__99699,G__99700,G__99701,G__99702,G__99703,G__99704,G__99705,G__99706,G__99707,G__99708,G__99709,G__99710,G__99711,G__99712,G__99713));
});
var G__100314__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99714 = a;
var G__99715 = b;
var G__99716 = c;
var G__99717 = d;
var G__99718 = e;
var G__99719 = f;
var G__99720 = g;
var G__99721 = h;
var G__99722 = i;
var G__99723 = j;
var G__99724 = k;
var G__99725 = l;
var G__99726 = m;
var G__99727 = n;
var G__99728 = o;
var G__99729 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__99714,G__99715,G__99716,G__99717,G__99718,G__99719,G__99720,G__99721,G__99722,G__99723,G__99724,G__99725,G__99726,G__99727,G__99728,G__99729) : self__.dispatch_fn.call(null,G__99714,G__99715,G__99716,G__99717,G__99718,G__99719,G__99720,G__99721,G__99722,G__99723,G__99724,G__99725,G__99726,G__99727,G__99728,G__99729));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99730 = a;
var G__99731 = b;
var G__99732 = c;
var G__99733 = d;
var G__99734 = e;
var G__99735 = f;
var G__99736 = g;
var G__99737 = h;
var G__99738 = i;
var G__99739 = j;
var G__99740 = k;
var G__99741 = l;
var G__99742 = m;
var G__99743 = n;
var G__99744 = o;
var G__99745 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__99730,G__99731,G__99732,G__99733,G__99734,G__99735,G__99736,G__99737,G__99738,G__99739,G__99740,G__99741,G__99742,G__99743,G__99744,G__99745) : target_fn.call(null,G__99730,G__99731,G__99732,G__99733,G__99734,G__99735,G__99736,G__99737,G__99738,G__99739,G__99740,G__99741,G__99742,G__99743,G__99744,G__99745));
});
var G__100314__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99746 = a;
var G__99747 = b;
var G__99748 = c;
var G__99749 = d;
var G__99750 = e;
var G__99751 = f;
var G__99752 = g;
var G__99753 = h;
var G__99754 = i;
var G__99755 = j;
var G__99756 = k;
var G__99757 = l;
var G__99758 = m;
var G__99759 = n;
var G__99760 = o;
var G__99761 = p;
var G__99762 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__99746,G__99747,G__99748,G__99749,G__99750,G__99751,G__99752,G__99753,G__99754,G__99755,G__99756,G__99757,G__99758,G__99759,G__99760,G__99761,G__99762) : self__.dispatch_fn.call(null,G__99746,G__99747,G__99748,G__99749,G__99750,G__99751,G__99752,G__99753,G__99754,G__99755,G__99756,G__99757,G__99758,G__99759,G__99760,G__99761,G__99762));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99763 = a;
var G__99764 = b;
var G__99765 = c;
var G__99766 = d;
var G__99767 = e;
var G__99768 = f;
var G__99769 = g;
var G__99770 = h;
var G__99771 = i;
var G__99772 = j;
var G__99773 = k;
var G__99774 = l;
var G__99775 = m;
var G__99776 = n;
var G__99777 = o;
var G__99778 = p;
var G__99779 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__99763,G__99764,G__99765,G__99766,G__99767,G__99768,G__99769,G__99770,G__99771,G__99772,G__99773,G__99774,G__99775,G__99776,G__99777,G__99778,G__99779) : target_fn.call(null,G__99763,G__99764,G__99765,G__99766,G__99767,G__99768,G__99769,G__99770,G__99771,G__99772,G__99773,G__99774,G__99775,G__99776,G__99777,G__99778,G__99779));
});
var G__100314__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99780 = a;
var G__99781 = b;
var G__99782 = c;
var G__99783 = d;
var G__99784 = e;
var G__99785 = f;
var G__99786 = g;
var G__99787 = h;
var G__99788 = i;
var G__99789 = j;
var G__99790 = k;
var G__99791 = l;
var G__99792 = m;
var G__99793 = n;
var G__99794 = o;
var G__99795 = p;
var G__99796 = q;
var G__99797 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__99780,G__99781,G__99782,G__99783,G__99784,G__99785,G__99786,G__99787,G__99788,G__99789,G__99790,G__99791,G__99792,G__99793,G__99794,G__99795,G__99796,G__99797) : self__.dispatch_fn.call(null,G__99780,G__99781,G__99782,G__99783,G__99784,G__99785,G__99786,G__99787,G__99788,G__99789,G__99790,G__99791,G__99792,G__99793,G__99794,G__99795,G__99796,G__99797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99798 = a;
var G__99799 = b;
var G__99800 = c;
var G__99801 = d;
var G__99802 = e;
var G__99803 = f;
var G__99804 = g;
var G__99805 = h;
var G__99806 = i;
var G__99807 = j;
var G__99808 = k;
var G__99809 = l;
var G__99810 = m;
var G__99811 = n;
var G__99812 = o;
var G__99813 = p;
var G__99814 = q;
var G__99815 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__99798,G__99799,G__99800,G__99801,G__99802,G__99803,G__99804,G__99805,G__99806,G__99807,G__99808,G__99809,G__99810,G__99811,G__99812,G__99813,G__99814,G__99815) : target_fn.call(null,G__99798,G__99799,G__99800,G__99801,G__99802,G__99803,G__99804,G__99805,G__99806,G__99807,G__99808,G__99809,G__99810,G__99811,G__99812,G__99813,G__99814,G__99815));
});
var G__100314__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99816 = a;
var G__99817 = b;
var G__99818 = c;
var G__99819 = d;
var G__99820 = e;
var G__99821 = f;
var G__99822 = g;
var G__99823 = h;
var G__99824 = i;
var G__99825 = j;
var G__99826 = k;
var G__99827 = l;
var G__99828 = m;
var G__99829 = n;
var G__99830 = o;
var G__99831 = p;
var G__99832 = q;
var G__99833 = r;
var G__99834 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__99816,G__99817,G__99818,G__99819,G__99820,G__99821,G__99822,G__99823,G__99824,G__99825,G__99826,G__99827,G__99828,G__99829,G__99830,G__99831,G__99832,G__99833,G__99834) : self__.dispatch_fn.call(null,G__99816,G__99817,G__99818,G__99819,G__99820,G__99821,G__99822,G__99823,G__99824,G__99825,G__99826,G__99827,G__99828,G__99829,G__99830,G__99831,G__99832,G__99833,G__99834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99835 = a;
var G__99836 = b;
var G__99837 = c;
var G__99838 = d;
var G__99839 = e;
var G__99840 = f;
var G__99841 = g;
var G__99842 = h;
var G__99843 = i;
var G__99844 = j;
var G__99845 = k;
var G__99846 = l;
var G__99847 = m;
var G__99848 = n;
var G__99849 = o;
var G__99850 = p;
var G__99851 = q;
var G__99852 = r;
var G__99853 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__99835,G__99836,G__99837,G__99838,G__99839,G__99840,G__99841,G__99842,G__99843,G__99844,G__99845,G__99846,G__99847,G__99848,G__99849,G__99850,G__99851,G__99852,G__99853) : target_fn.call(null,G__99835,G__99836,G__99837,G__99838,G__99839,G__99840,G__99841,G__99842,G__99843,G__99844,G__99845,G__99846,G__99847,G__99848,G__99849,G__99850,G__99851,G__99852,G__99853));
});
var G__100314__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__99854 = a;
var G__99855 = b;
var G__99856 = c;
var G__99857 = d;
var G__99858 = e;
var G__99859 = f;
var G__99860 = g;
var G__99861 = h;
var G__99862 = i;
var G__99863 = j;
var G__99864 = k;
var G__99865 = l;
var G__99866 = m;
var G__99867 = n;
var G__99868 = o;
var G__99869 = p;
var G__99870 = q;
var G__99871 = r;
var G__99872 = s;
var G__99873 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__99854,G__99855,G__99856,G__99857,G__99858,G__99859,G__99860,G__99861,G__99862,G__99863,G__99864,G__99865,G__99866,G__99867,G__99868,G__99869,G__99870,G__99871,G__99872,G__99873) : self__.dispatch_fn.call(null,G__99854,G__99855,G__99856,G__99857,G__99858,G__99859,G__99860,G__99861,G__99862,G__99863,G__99864,G__99865,G__99866,G__99867,G__99868,G__99869,G__99870,G__99871,G__99872,G__99873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99874 = a;
var G__99875 = b;
var G__99876 = c;
var G__99877 = d;
var G__99878 = e;
var G__99879 = f;
var G__99880 = g;
var G__99881 = h;
var G__99882 = i;
var G__99883 = j;
var G__99884 = k;
var G__99885 = l;
var G__99886 = m;
var G__99887 = n;
var G__99888 = o;
var G__99889 = p;
var G__99890 = q;
var G__99891 = r;
var G__99892 = s;
var G__99893 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__99874,G__99875,G__99876,G__99877,G__99878,G__99879,G__99880,G__99881,G__99882,G__99883,G__99884,G__99885,G__99886,G__99887,G__99888,G__99889,G__99890,G__99891,G__99892,G__99893) : target_fn.call(null,G__99874,G__99875,G__99876,G__99877,G__99878,G__99879,G__99880,G__99881,G__99882,G__99883,G__99884,G__99885,G__99886,G__99887,G__99888,G__99889,G__99890,G__99891,G__99892,G__99893));
});
var G__100314__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__100314 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__100314__1.call(this,self__);
case 2:
return G__100314__2.call(this,self__,a);
case 3:
return G__100314__3.call(this,self__,a,b);
case 4:
return G__100314__4.call(this,self__,a,b,c);
case 5:
return G__100314__5.call(this,self__,a,b,c,d);
case 6:
return G__100314__6.call(this,self__,a,b,c,d,e);
case 7:
return G__100314__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__100314__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__100314__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__100314__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__100314__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__100314__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__100314__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__100314__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__100314__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__100314__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__100314__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__100314__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__100314__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__100314__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__100314__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__100314__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__100314.cljs$core$IFn$_invoke$arity$1 = G__100314__1;
G__100314.cljs$core$IFn$_invoke$arity$2 = G__100314__2;
G__100314.cljs$core$IFn$_invoke$arity$3 = G__100314__3;
G__100314.cljs$core$IFn$_invoke$arity$4 = G__100314__4;
G__100314.cljs$core$IFn$_invoke$arity$5 = G__100314__5;
G__100314.cljs$core$IFn$_invoke$arity$6 = G__100314__6;
G__100314.cljs$core$IFn$_invoke$arity$7 = G__100314__7;
G__100314.cljs$core$IFn$_invoke$arity$8 = G__100314__8;
G__100314.cljs$core$IFn$_invoke$arity$9 = G__100314__9;
G__100314.cljs$core$IFn$_invoke$arity$10 = G__100314__10;
G__100314.cljs$core$IFn$_invoke$arity$11 = G__100314__11;
G__100314.cljs$core$IFn$_invoke$arity$12 = G__100314__12;
G__100314.cljs$core$IFn$_invoke$arity$13 = G__100314__13;
G__100314.cljs$core$IFn$_invoke$arity$14 = G__100314__14;
G__100314.cljs$core$IFn$_invoke$arity$15 = G__100314__15;
G__100314.cljs$core$IFn$_invoke$arity$16 = G__100314__16;
G__100314.cljs$core$IFn$_invoke$arity$17 = G__100314__17;
G__100314.cljs$core$IFn$_invoke$arity$18 = G__100314__18;
G__100314.cljs$core$IFn$_invoke$arity$19 = G__100314__19;
G__100314.cljs$core$IFn$_invoke$arity$20 = G__100314__20;
G__100314.cljs$core$IFn$_invoke$arity$21 = G__100314__21;
G__100314.cljs$core$IFn$_invoke$arity$22 = G__100314__22;
return G__100314;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args99466){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args99466)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99894 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__99894) : self__.dispatch_fn.call(null,G__99894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99895 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__99895) : target_fn.call(null,G__99895));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99896 = a;
var G__99897 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__99896,G__99897) : self__.dispatch_fn.call(null,G__99896,G__99897));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99898 = a;
var G__99899 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__99898,G__99899) : target_fn.call(null,G__99898,G__99899));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99900 = a;
var G__99901 = b;
var G__99902 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__99900,G__99901,G__99902) : self__.dispatch_fn.call(null,G__99900,G__99901,G__99902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99903 = a;
var G__99904 = b;
var G__99905 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__99903,G__99904,G__99905) : target_fn.call(null,G__99903,G__99904,G__99905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99906 = a;
var G__99907 = b;
var G__99908 = c;
var G__99909 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__99906,G__99907,G__99908,G__99909) : self__.dispatch_fn.call(null,G__99906,G__99907,G__99908,G__99909));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99910 = a;
var G__99911 = b;
var G__99912 = c;
var G__99913 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__99910,G__99911,G__99912,G__99913) : target_fn.call(null,G__99910,G__99911,G__99912,G__99913));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99914 = a;
var G__99915 = b;
var G__99916 = c;
var G__99917 = d;
var G__99918 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__99914,G__99915,G__99916,G__99917,G__99918) : self__.dispatch_fn.call(null,G__99914,G__99915,G__99916,G__99917,G__99918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99919 = a;
var G__99920 = b;
var G__99921 = c;
var G__99922 = d;
var G__99923 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__99919,G__99920,G__99921,G__99922,G__99923) : target_fn.call(null,G__99919,G__99920,G__99921,G__99922,G__99923));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99924 = a;
var G__99925 = b;
var G__99926 = c;
var G__99927 = d;
var G__99928 = e;
var G__99929 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__99924,G__99925,G__99926,G__99927,G__99928,G__99929) : self__.dispatch_fn.call(null,G__99924,G__99925,G__99926,G__99927,G__99928,G__99929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99930 = a;
var G__99931 = b;
var G__99932 = c;
var G__99933 = d;
var G__99934 = e;
var G__99935 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__99930,G__99931,G__99932,G__99933,G__99934,G__99935) : target_fn.call(null,G__99930,G__99931,G__99932,G__99933,G__99934,G__99935));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99936 = a;
var G__99937 = b;
var G__99938 = c;
var G__99939 = d;
var G__99940 = e;
var G__99941 = f;
var G__99942 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__99936,G__99937,G__99938,G__99939,G__99940,G__99941,G__99942) : self__.dispatch_fn.call(null,G__99936,G__99937,G__99938,G__99939,G__99940,G__99941,G__99942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99943 = a;
var G__99944 = b;
var G__99945 = c;
var G__99946 = d;
var G__99947 = e;
var G__99948 = f;
var G__99949 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__99943,G__99944,G__99945,G__99946,G__99947,G__99948,G__99949) : target_fn.call(null,G__99943,G__99944,G__99945,G__99946,G__99947,G__99948,G__99949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99950 = a;
var G__99951 = b;
var G__99952 = c;
var G__99953 = d;
var G__99954 = e;
var G__99955 = f;
var G__99956 = g;
var G__99957 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__99950,G__99951,G__99952,G__99953,G__99954,G__99955,G__99956,G__99957) : self__.dispatch_fn.call(null,G__99950,G__99951,G__99952,G__99953,G__99954,G__99955,G__99956,G__99957));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99958 = a;
var G__99959 = b;
var G__99960 = c;
var G__99961 = d;
var G__99962 = e;
var G__99963 = f;
var G__99964 = g;
var G__99965 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__99958,G__99959,G__99960,G__99961,G__99962,G__99963,G__99964,G__99965) : target_fn.call(null,G__99958,G__99959,G__99960,G__99961,G__99962,G__99963,G__99964,G__99965));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99966 = a;
var G__99967 = b;
var G__99968 = c;
var G__99969 = d;
var G__99970 = e;
var G__99971 = f;
var G__99972 = g;
var G__99973 = h;
var G__99974 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__99966,G__99967,G__99968,G__99969,G__99970,G__99971,G__99972,G__99973,G__99974) : self__.dispatch_fn.call(null,G__99966,G__99967,G__99968,G__99969,G__99970,G__99971,G__99972,G__99973,G__99974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99975 = a;
var G__99976 = b;
var G__99977 = c;
var G__99978 = d;
var G__99979 = e;
var G__99980 = f;
var G__99981 = g;
var G__99982 = h;
var G__99983 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__99975,G__99976,G__99977,G__99978,G__99979,G__99980,G__99981,G__99982,G__99983) : target_fn.call(null,G__99975,G__99976,G__99977,G__99978,G__99979,G__99980,G__99981,G__99982,G__99983));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__99984 = a;
var G__99985 = b;
var G__99986 = c;
var G__99987 = d;
var G__99988 = e;
var G__99989 = f;
var G__99990 = g;
var G__99991 = h;
var G__99992 = i;
var G__99993 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__99984,G__99985,G__99986,G__99987,G__99988,G__99989,G__99990,G__99991,G__99992,G__99993) : self__.dispatch_fn.call(null,G__99984,G__99985,G__99986,G__99987,G__99988,G__99989,G__99990,G__99991,G__99992,G__99993));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__99994 = a;
var G__99995 = b;
var G__99996 = c;
var G__99997 = d;
var G__99998 = e;
var G__99999 = f;
var G__100000 = g;
var G__100001 = h;
var G__100002 = i;
var G__100003 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__99994,G__99995,G__99996,G__99997,G__99998,G__99999,G__100000,G__100001,G__100002,G__100003) : target_fn.call(null,G__99994,G__99995,G__99996,G__99997,G__99998,G__99999,G__100000,G__100001,G__100002,G__100003));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100004 = a;
var G__100005 = b;
var G__100006 = c;
var G__100007 = d;
var G__100008 = e;
var G__100009 = f;
var G__100010 = g;
var G__100011 = h;
var G__100012 = i;
var G__100013 = j;
var G__100014 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__100004,G__100005,G__100006,G__100007,G__100008,G__100009,G__100010,G__100011,G__100012,G__100013,G__100014) : self__.dispatch_fn.call(null,G__100004,G__100005,G__100006,G__100007,G__100008,G__100009,G__100010,G__100011,G__100012,G__100013,G__100014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100015 = a;
var G__100016 = b;
var G__100017 = c;
var G__100018 = d;
var G__100019 = e;
var G__100020 = f;
var G__100021 = g;
var G__100022 = h;
var G__100023 = i;
var G__100024 = j;
var G__100025 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__100015,G__100016,G__100017,G__100018,G__100019,G__100020,G__100021,G__100022,G__100023,G__100024,G__100025) : target_fn.call(null,G__100015,G__100016,G__100017,G__100018,G__100019,G__100020,G__100021,G__100022,G__100023,G__100024,G__100025));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100026 = a;
var G__100027 = b;
var G__100028 = c;
var G__100029 = d;
var G__100030 = e;
var G__100031 = f;
var G__100032 = g;
var G__100033 = h;
var G__100034 = i;
var G__100035 = j;
var G__100036 = k;
var G__100037 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__100026,G__100027,G__100028,G__100029,G__100030,G__100031,G__100032,G__100033,G__100034,G__100035,G__100036,G__100037) : self__.dispatch_fn.call(null,G__100026,G__100027,G__100028,G__100029,G__100030,G__100031,G__100032,G__100033,G__100034,G__100035,G__100036,G__100037));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100038 = a;
var G__100039 = b;
var G__100040 = c;
var G__100041 = d;
var G__100042 = e;
var G__100043 = f;
var G__100044 = g;
var G__100045 = h;
var G__100046 = i;
var G__100047 = j;
var G__100048 = k;
var G__100049 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__100038,G__100039,G__100040,G__100041,G__100042,G__100043,G__100044,G__100045,G__100046,G__100047,G__100048,G__100049) : target_fn.call(null,G__100038,G__100039,G__100040,G__100041,G__100042,G__100043,G__100044,G__100045,G__100046,G__100047,G__100048,G__100049));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100050 = a;
var G__100051 = b;
var G__100052 = c;
var G__100053 = d;
var G__100054 = e;
var G__100055 = f;
var G__100056 = g;
var G__100057 = h;
var G__100058 = i;
var G__100059 = j;
var G__100060 = k;
var G__100061 = l;
var G__100062 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__100050,G__100051,G__100052,G__100053,G__100054,G__100055,G__100056,G__100057,G__100058,G__100059,G__100060,G__100061,G__100062) : self__.dispatch_fn.call(null,G__100050,G__100051,G__100052,G__100053,G__100054,G__100055,G__100056,G__100057,G__100058,G__100059,G__100060,G__100061,G__100062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100063 = a;
var G__100064 = b;
var G__100065 = c;
var G__100066 = d;
var G__100067 = e;
var G__100068 = f;
var G__100069 = g;
var G__100070 = h;
var G__100071 = i;
var G__100072 = j;
var G__100073 = k;
var G__100074 = l;
var G__100075 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__100063,G__100064,G__100065,G__100066,G__100067,G__100068,G__100069,G__100070,G__100071,G__100072,G__100073,G__100074,G__100075) : target_fn.call(null,G__100063,G__100064,G__100065,G__100066,G__100067,G__100068,G__100069,G__100070,G__100071,G__100072,G__100073,G__100074,G__100075));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100076 = a;
var G__100077 = b;
var G__100078 = c;
var G__100079 = d;
var G__100080 = e;
var G__100081 = f;
var G__100082 = g;
var G__100083 = h;
var G__100084 = i;
var G__100085 = j;
var G__100086 = k;
var G__100087 = l;
var G__100088 = m;
var G__100089 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__100076,G__100077,G__100078,G__100079,G__100080,G__100081,G__100082,G__100083,G__100084,G__100085,G__100086,G__100087,G__100088,G__100089) : self__.dispatch_fn.call(null,G__100076,G__100077,G__100078,G__100079,G__100080,G__100081,G__100082,G__100083,G__100084,G__100085,G__100086,G__100087,G__100088,G__100089));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100090 = a;
var G__100091 = b;
var G__100092 = c;
var G__100093 = d;
var G__100094 = e;
var G__100095 = f;
var G__100096 = g;
var G__100097 = h;
var G__100098 = i;
var G__100099 = j;
var G__100100 = k;
var G__100101 = l;
var G__100102 = m;
var G__100103 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__100090,G__100091,G__100092,G__100093,G__100094,G__100095,G__100096,G__100097,G__100098,G__100099,G__100100,G__100101,G__100102,G__100103) : target_fn.call(null,G__100090,G__100091,G__100092,G__100093,G__100094,G__100095,G__100096,G__100097,G__100098,G__100099,G__100100,G__100101,G__100102,G__100103));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100104 = a;
var G__100105 = b;
var G__100106 = c;
var G__100107 = d;
var G__100108 = e;
var G__100109 = f;
var G__100110 = g;
var G__100111 = h;
var G__100112 = i;
var G__100113 = j;
var G__100114 = k;
var G__100115 = l;
var G__100116 = m;
var G__100117 = n;
var G__100118 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__100104,G__100105,G__100106,G__100107,G__100108,G__100109,G__100110,G__100111,G__100112,G__100113,G__100114,G__100115,G__100116,G__100117,G__100118) : self__.dispatch_fn.call(null,G__100104,G__100105,G__100106,G__100107,G__100108,G__100109,G__100110,G__100111,G__100112,G__100113,G__100114,G__100115,G__100116,G__100117,G__100118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100119 = a;
var G__100120 = b;
var G__100121 = c;
var G__100122 = d;
var G__100123 = e;
var G__100124 = f;
var G__100125 = g;
var G__100126 = h;
var G__100127 = i;
var G__100128 = j;
var G__100129 = k;
var G__100130 = l;
var G__100131 = m;
var G__100132 = n;
var G__100133 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__100119,G__100120,G__100121,G__100122,G__100123,G__100124,G__100125,G__100126,G__100127,G__100128,G__100129,G__100130,G__100131,G__100132,G__100133) : target_fn.call(null,G__100119,G__100120,G__100121,G__100122,G__100123,G__100124,G__100125,G__100126,G__100127,G__100128,G__100129,G__100130,G__100131,G__100132,G__100133));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100134 = a;
var G__100135 = b;
var G__100136 = c;
var G__100137 = d;
var G__100138 = e;
var G__100139 = f;
var G__100140 = g;
var G__100141 = h;
var G__100142 = i;
var G__100143 = j;
var G__100144 = k;
var G__100145 = l;
var G__100146 = m;
var G__100147 = n;
var G__100148 = o;
var G__100149 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__100134,G__100135,G__100136,G__100137,G__100138,G__100139,G__100140,G__100141,G__100142,G__100143,G__100144,G__100145,G__100146,G__100147,G__100148,G__100149) : self__.dispatch_fn.call(null,G__100134,G__100135,G__100136,G__100137,G__100138,G__100139,G__100140,G__100141,G__100142,G__100143,G__100144,G__100145,G__100146,G__100147,G__100148,G__100149));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100150 = a;
var G__100151 = b;
var G__100152 = c;
var G__100153 = d;
var G__100154 = e;
var G__100155 = f;
var G__100156 = g;
var G__100157 = h;
var G__100158 = i;
var G__100159 = j;
var G__100160 = k;
var G__100161 = l;
var G__100162 = m;
var G__100163 = n;
var G__100164 = o;
var G__100165 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__100150,G__100151,G__100152,G__100153,G__100154,G__100155,G__100156,G__100157,G__100158,G__100159,G__100160,G__100161,G__100162,G__100163,G__100164,G__100165) : target_fn.call(null,G__100150,G__100151,G__100152,G__100153,G__100154,G__100155,G__100156,G__100157,G__100158,G__100159,G__100160,G__100161,G__100162,G__100163,G__100164,G__100165));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100166 = a;
var G__100167 = b;
var G__100168 = c;
var G__100169 = d;
var G__100170 = e;
var G__100171 = f;
var G__100172 = g;
var G__100173 = h;
var G__100174 = i;
var G__100175 = j;
var G__100176 = k;
var G__100177 = l;
var G__100178 = m;
var G__100179 = n;
var G__100180 = o;
var G__100181 = p;
var G__100182 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__100166,G__100167,G__100168,G__100169,G__100170,G__100171,G__100172,G__100173,G__100174,G__100175,G__100176,G__100177,G__100178,G__100179,G__100180,G__100181,G__100182) : self__.dispatch_fn.call(null,G__100166,G__100167,G__100168,G__100169,G__100170,G__100171,G__100172,G__100173,G__100174,G__100175,G__100176,G__100177,G__100178,G__100179,G__100180,G__100181,G__100182));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100183 = a;
var G__100184 = b;
var G__100185 = c;
var G__100186 = d;
var G__100187 = e;
var G__100188 = f;
var G__100189 = g;
var G__100190 = h;
var G__100191 = i;
var G__100192 = j;
var G__100193 = k;
var G__100194 = l;
var G__100195 = m;
var G__100196 = n;
var G__100197 = o;
var G__100198 = p;
var G__100199 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__100183,G__100184,G__100185,G__100186,G__100187,G__100188,G__100189,G__100190,G__100191,G__100192,G__100193,G__100194,G__100195,G__100196,G__100197,G__100198,G__100199) : target_fn.call(null,G__100183,G__100184,G__100185,G__100186,G__100187,G__100188,G__100189,G__100190,G__100191,G__100192,G__100193,G__100194,G__100195,G__100196,G__100197,G__100198,G__100199));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100200 = a;
var G__100201 = b;
var G__100202 = c;
var G__100203 = d;
var G__100204 = e;
var G__100205 = f;
var G__100206 = g;
var G__100207 = h;
var G__100208 = i;
var G__100209 = j;
var G__100210 = k;
var G__100211 = l;
var G__100212 = m;
var G__100213 = n;
var G__100214 = o;
var G__100215 = p;
var G__100216 = q;
var G__100217 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__100200,G__100201,G__100202,G__100203,G__100204,G__100205,G__100206,G__100207,G__100208,G__100209,G__100210,G__100211,G__100212,G__100213,G__100214,G__100215,G__100216,G__100217) : self__.dispatch_fn.call(null,G__100200,G__100201,G__100202,G__100203,G__100204,G__100205,G__100206,G__100207,G__100208,G__100209,G__100210,G__100211,G__100212,G__100213,G__100214,G__100215,G__100216,G__100217));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100218 = a;
var G__100219 = b;
var G__100220 = c;
var G__100221 = d;
var G__100222 = e;
var G__100223 = f;
var G__100224 = g;
var G__100225 = h;
var G__100226 = i;
var G__100227 = j;
var G__100228 = k;
var G__100229 = l;
var G__100230 = m;
var G__100231 = n;
var G__100232 = o;
var G__100233 = p;
var G__100234 = q;
var G__100235 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__100218,G__100219,G__100220,G__100221,G__100222,G__100223,G__100224,G__100225,G__100226,G__100227,G__100228,G__100229,G__100230,G__100231,G__100232,G__100233,G__100234,G__100235) : target_fn.call(null,G__100218,G__100219,G__100220,G__100221,G__100222,G__100223,G__100224,G__100225,G__100226,G__100227,G__100228,G__100229,G__100230,G__100231,G__100232,G__100233,G__100234,G__100235));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100236 = a;
var G__100237 = b;
var G__100238 = c;
var G__100239 = d;
var G__100240 = e;
var G__100241 = f;
var G__100242 = g;
var G__100243 = h;
var G__100244 = i;
var G__100245 = j;
var G__100246 = k;
var G__100247 = l;
var G__100248 = m;
var G__100249 = n;
var G__100250 = o;
var G__100251 = p;
var G__100252 = q;
var G__100253 = r;
var G__100254 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__100236,G__100237,G__100238,G__100239,G__100240,G__100241,G__100242,G__100243,G__100244,G__100245,G__100246,G__100247,G__100248,G__100249,G__100250,G__100251,G__100252,G__100253,G__100254) : self__.dispatch_fn.call(null,G__100236,G__100237,G__100238,G__100239,G__100240,G__100241,G__100242,G__100243,G__100244,G__100245,G__100246,G__100247,G__100248,G__100249,G__100250,G__100251,G__100252,G__100253,G__100254));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100255 = a;
var G__100256 = b;
var G__100257 = c;
var G__100258 = d;
var G__100259 = e;
var G__100260 = f;
var G__100261 = g;
var G__100262 = h;
var G__100263 = i;
var G__100264 = j;
var G__100265 = k;
var G__100266 = l;
var G__100267 = m;
var G__100268 = n;
var G__100269 = o;
var G__100270 = p;
var G__100271 = q;
var G__100272 = r;
var G__100273 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__100255,G__100256,G__100257,G__100258,G__100259,G__100260,G__100261,G__100262,G__100263,G__100264,G__100265,G__100266,G__100267,G__100268,G__100269,G__100270,G__100271,G__100272,G__100273) : target_fn.call(null,G__100255,G__100256,G__100257,G__100258,G__100259,G__100260,G__100261,G__100262,G__100263,G__100264,G__100265,G__100266,G__100267,G__100268,G__100269,G__100270,G__100271,G__100272,G__100273));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__100274 = a;
var G__100275 = b;
var G__100276 = c;
var G__100277 = d;
var G__100278 = e;
var G__100279 = f;
var G__100280 = g;
var G__100281 = h;
var G__100282 = i;
var G__100283 = j;
var G__100284 = k;
var G__100285 = l;
var G__100286 = m;
var G__100287 = n;
var G__100288 = o;
var G__100289 = p;
var G__100290 = q;
var G__100291 = r;
var G__100292 = s;
var G__100293 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__100274,G__100275,G__100276,G__100277,G__100278,G__100279,G__100280,G__100281,G__100282,G__100283,G__100284,G__100285,G__100286,G__100287,G__100288,G__100289,G__100290,G__100291,G__100292,G__100293) : self__.dispatch_fn.call(null,G__100274,G__100275,G__100276,G__100277,G__100278,G__100279,G__100280,G__100281,G__100282,G__100283,G__100284,G__100285,G__100286,G__100287,G__100288,G__100289,G__100290,G__100291,G__100292,G__100293));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__100294 = a;
var G__100295 = b;
var G__100296 = c;
var G__100297 = d;
var G__100298 = e;
var G__100299 = f;
var G__100300 = g;
var G__100301 = h;
var G__100302 = i;
var G__100303 = j;
var G__100304 = k;
var G__100305 = l;
var G__100306 = m;
var G__100307 = n;
var G__100308 = o;
var G__100309 = p;
var G__100310 = q;
var G__100311 = r;
var G__100312 = s;
var G__100313 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__100294,G__100295,G__100296,G__100297,G__100298,G__100299,G__100300,G__100301,G__100302,G__100303,G__100304,G__100305,G__100306,G__100307,G__100308,G__100309,G__100310,G__100311,G__100312,G__100313) : target_fn.call(null,G__100294,G__100295,G__100296,G__100297,G__100298,G__100299,G__100300,G__100301,G__100302,G__100303,G__100304,G__100305,G__100306,G__100307,G__100308,G__100309,G__100310,G__100311,G__100312,G__100313));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__100315 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__100315);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__100320 = msg;
return Error(G__100320);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__100325 = x;
var G__100326 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__100325,G__100326) : pred.call(null,G__100325,G__100326));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__100327 = y;
var G__100328 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__100327,G__100328) : pred.call(null,G__100327,G__100328));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
