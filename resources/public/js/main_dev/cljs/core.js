// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__351763__delegate = function (args){
return console.log.apply(console,(function (){var G__351762 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__351762) : cljs.core.into_array.call(null,G__351762));
})());
};
var G__351763 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__351764__i = 0, G__351764__a = new Array(arguments.length -  0);
while (G__351764__i < G__351764__a.length) {G__351764__a[G__351764__i] = arguments[G__351764__i + 0]; ++G__351764__i;}
  args = new cljs.core.IndexedSeq(G__351764__a,0);
} 
return G__351763__delegate.call(this,args);};
G__351763.cljs$lang$maxFixedArity = 0;
G__351763.cljs$lang$applyTo = (function (arglist__351765){
var args = cljs.core.seq(arglist__351765);
return G__351763__delegate(args);
});
G__351763.cljs$core$IFn$_invoke$arity$variadic = G__351763__delegate;
return G__351763;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__351767 = x;
return goog.isString(G__351767);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__351769 = x__$1;
return goog.typeOf(G__351769);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3969__auto__ = ty;
if(cljs.core.truth_(and__3969__auto__)){
return ty.cljs$lang$type;
} else {
return and__3969__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__351771 = obj;
return goog.typeOf(G__351771);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__351773 = Symbol;
return goog.typeOf(G__351773);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4868__auto___351775 = len;
var i_351776 = (0);
while(true){
if((i_351776 < n__4868__auto___351775)){
(new_arr[i_351776] = (arr[i_351776]));

var G__351777 = (i_351776 + (1));
i_351776 = G__351777;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__351778 = (i + (1));
i = G__351778;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__351787__delegate = function (array,i,idxs){
var G__351784 = aget;
var G__351785 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__351786 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__351784,G__351785,G__351786) : cljs.core.apply.call(null,G__351784,G__351785,G__351786));
};
var G__351787 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__351788__i = 0, G__351788__a = new Array(arguments.length -  2);
while (G__351788__i < G__351788__a.length) {G__351788__a[G__351788__i] = arguments[G__351788__i + 2]; ++G__351788__i;}
  idxs = new cljs.core.IndexedSeq(G__351788__a,0);
} 
return G__351787__delegate.call(this,array,i,idxs);};
G__351787.cljs$lang$maxFixedArity = 2;
G__351787.cljs$lang$applyTo = (function (arglist__351789){
var array = cljs.core.first(arglist__351789);
arglist__351789 = cljs.core.next(arglist__351789);
var i = cljs.core.first(arglist__351789);
var idxs = cljs.core.rest(arglist__351789);
return G__351787__delegate(array,i,idxs);
});
G__351787.cljs$core$IFn$_invoke$arity$variadic = G__351787__delegate;
return G__351787;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__351790 = null;
if (arguments.length > 2) {
var G__351791__i = 0, G__351791__a = new Array(arguments.length -  2);
while (G__351791__i < G__351791__a.length) {G__351791__a[G__351791__i] = arguments[G__351791__i + 2]; ++G__351791__i;}
G__351790 = new cljs.core.IndexedSeq(G__351791__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__351790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__351800__delegate = function (array,idx,idx2,idxv){
var G__351796 = aset;
var G__351797 = (array[idx]);
var G__351798 = idx2;
var G__351799 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__351796,G__351797,G__351798,G__351799) : cljs.core.apply.call(null,G__351796,G__351797,G__351798,G__351799));
};
var G__351800 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__351801__i = 0, G__351801__a = new Array(arguments.length -  3);
while (G__351801__i < G__351801__a.length) {G__351801__a[G__351801__i] = arguments[G__351801__i + 3]; ++G__351801__i;}
  idxv = new cljs.core.IndexedSeq(G__351801__a,0);
} 
return G__351800__delegate.call(this,array,idx,idx2,idxv);};
G__351800.cljs$lang$maxFixedArity = 3;
G__351800.cljs$lang$applyTo = (function (arglist__351802){
var array = cljs.core.first(arglist__351802);
arglist__351802 = cljs.core.next(arglist__351802);
var idx = cljs.core.first(arglist__351802);
arglist__351802 = cljs.core.next(arglist__351802);
var idx2 = cljs.core.first(arglist__351802);
var idxv = cljs.core.rest(arglist__351802);
return G__351800__delegate(array,idx,idx2,idxv);
});
G__351800.cljs$core$IFn$_invoke$arity$variadic = G__351800__delegate;
return G__351800;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__351803 = null;
if (arguments.length > 3) {
var G__351804__i = 0, G__351804__a = new Array(arguments.length -  3);
while (G__351804__i < G__351804__a.length) {G__351804__a[G__351804__i] = arguments[G__351804__i + 3]; ++G__351804__i;}
G__351803 = new cljs.core.IndexedSeq(G__351804__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__351803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__351810 = (function (a,x){
a.push(x);

return a;
});
var G__351811 = [];
var G__351812 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__351810,G__351811,G__351812) : cljs.core.reduce.call(null,G__351810,G__351811,G__351812));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__351813__i = 0, G__351813__a = new Array(arguments.length -  2);
while (G__351813__i < G__351813__a.length) {G__351813__a[G__351813__i] = arguments[G__351813__i + 2]; ++G__351813__i;}
  args = new cljs.core.IndexedSeq(G__351813__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__351814){
var obj = cljs.core.first(arglist__351814);
arglist__351814 = cljs.core.next(arglist__351814);
var s = cljs.core.first(arglist__351814);
var args = cljs.core.rest(arglist__351814);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj351816 = {};
return obj351816;
})();


cljs.core.IFn = (function (){var obj351818 = {};
return obj351818;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351864 = x__4625__auto__;
return goog.typeOf(G__351864);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351866 = x__4625__auto__;
return goog.typeOf(G__351866);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351868 = x__4625__auto__;
return goog.typeOf(G__351868);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351870 = x__4625__auto__;
return goog.typeOf(G__351870);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351872 = x__4625__auto__;
return goog.typeOf(G__351872);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351874 = x__4625__auto__;
return goog.typeOf(G__351874);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351876 = x__4625__auto__;
return goog.typeOf(G__351876);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351878 = x__4625__auto__;
return goog.typeOf(G__351878);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351880 = x__4625__auto__;
return goog.typeOf(G__351880);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351882 = x__4625__auto__;
return goog.typeOf(G__351882);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351884 = x__4625__auto__;
return goog.typeOf(G__351884);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351886 = x__4625__auto__;
return goog.typeOf(G__351886);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351888 = x__4625__auto__;
return goog.typeOf(G__351888);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351890 = x__4625__auto__;
return goog.typeOf(G__351890);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351892 = x__4625__auto__;
return goog.typeOf(G__351892);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351894 = x__4625__auto__;
return goog.typeOf(G__351894);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351896 = x__4625__auto__;
return goog.typeOf(G__351896);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351898 = x__4625__auto__;
return goog.typeOf(G__351898);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351900 = x__4625__auto__;
return goog.typeOf(G__351900);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351902 = x__4625__auto__;
return goog.typeOf(G__351902);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351904 = x__4625__auto__;
return goog.typeOf(G__351904);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._invoke[(function (){var G__351906 = x__4625__auto__;
return goog.typeOf(G__351906);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._invoke["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj351908 = {};
return obj351908;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3969__auto__ = value;
if(and__3969__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3969__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4625__auto__ = (((value == null))?null:value);
return (function (){var or__3981__auto__ = (cljs.core._clone[(function (){var G__351912 = x__4625__auto__;
return goog.typeOf(G__351912);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clone["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj351914 = {};
return obj351914;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._count[(function (){var G__351918 = x__4625__auto__;
return goog.typeOf(G__351918);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._count["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj351920 = {};
return obj351920;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._empty[(function (){var G__351924 = x__4625__auto__;
return goog.typeOf(G__351924);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._empty["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj351926 = {};
return obj351926;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._conj[(function (){var G__351930 = x__4625__auto__;
return goog.typeOf(G__351930);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj351932 = {};
return obj351932;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__351938 = x__4625__auto__;
return goog.typeOf(G__351938);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._nth[(function (){var G__351940 = x__4625__auto__;
return goog.typeOf(G__351940);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._nth["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj351942 = {};
return obj351942;
})();


cljs.core.ISeq = (function (){var obj351944 = {};
return obj351944;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._first[(function (){var G__351948 = x__4625__auto__;
return goog.typeOf(G__351948);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rest[(function (){var G__351952 = x__4625__auto__;
return goog.typeOf(G__351952);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj351954 = {};
return obj351954;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._next[(function (){var G__351958 = x__4625__auto__;
return goog.typeOf(G__351958);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj351960 = {};
return obj351960;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__351966 = x__4625__auto__;
return goog.typeOf(G__351966);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._lookup[(function (){var G__351968 = x__4625__auto__;
return goog.typeOf(G__351968);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._lookup["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj351970 = {};
return obj351970;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__351974 = x__4625__auto__;
return goog.typeOf(G__351974);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc[(function (){var G__351978 = x__4625__auto__;
return goog.typeOf(G__351978);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj351980 = {};
return obj351980;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc[(function (){var G__351984 = x__4625__auto__;
return goog.typeOf(G__351984);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj351986 = {};
return obj351986;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._key[(function (){var G__351990 = x__4625__auto__;
return goog.typeOf(G__351990);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._val[(function (){var G__351994 = x__4625__auto__;
return goog.typeOf(G__351994);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._val["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj351996 = {};
return obj351996;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin[(function (){var G__352000 = x__4625__auto__;
return goog.typeOf(G__352000);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj352002 = {};
return obj352002;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._peek[(function (){var G__352006 = x__4625__auto__;
return goog.typeOf(G__352006);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._peek["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._pop[(function (){var G__352010 = x__4625__auto__;
return goog.typeOf(G__352010);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj352012 = {};
return obj352012;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n[(function (){var G__352016 = x__4625__auto__;
return goog.typeOf(G__352016);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj352018 = {};
return obj352018;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref[(function (){var G__352022 = x__4625__auto__;
return goog.typeOf(G__352022);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj352024 = {};
return obj352024;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._deref_with_timeout[(function (){var G__352028 = x__4625__auto__;
return goog.typeOf(G__352028);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj352030 = {};
return obj352030;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._meta[(function (){var G__352034 = x__4625__auto__;
return goog.typeOf(G__352034);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj352036 = {};
return obj352036;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._with_meta[(function (){var G__352040 = x__4625__auto__;
return goog.typeOf(G__352040);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj352042 = {};
return obj352042;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__352048 = x__4625__auto__;
return goog.typeOf(G__352048);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._reduce[(function (){var G__352050 = x__4625__auto__;
return goog.typeOf(G__352050);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj352052 = {};
return obj352052;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._kv_reduce[(function (){var G__352056 = x__4625__auto__;
return goog.typeOf(G__352056);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj352058 = {};
return obj352058;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._equiv[(function (){var G__352062 = x__4625__auto__;
return goog.typeOf(G__352062);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._equiv["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj352064 = {};
return obj352064;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._hash[(function (){var G__352068 = x__4625__auto__;
return goog.typeOf(G__352068);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._hash["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj352070 = {};
return obj352070;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._seq[(function (){var G__352074 = x__4625__auto__;
return goog.typeOf(G__352074);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj352076 = {};
return obj352076;
})();


cljs.core.IList = (function (){var obj352078 = {};
return obj352078;
})();


cljs.core.IRecord = (function (){var obj352080 = {};
return obj352080;
})();


cljs.core.IReversible = (function (){var obj352082 = {};
return obj352082;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._rseq[(function (){var G__352086 = x__4625__auto__;
return goog.typeOf(G__352086);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._rseq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj352088 = {};
return obj352088;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq[(function (){var G__352092 = x__4625__auto__;
return goog.typeOf(G__352092);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._sorted_seq_from[(function (){var G__352096 = x__4625__auto__;
return goog.typeOf(G__352096);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._entry_key[(function (){var G__352100 = x__4625__auto__;
return goog.typeOf(G__352100);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._comparator[(function (){var G__352104 = x__4625__auto__;
return goog.typeOf(G__352104);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._comparator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj352106 = {};
return obj352106;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._write[(function (){var G__352110 = x__4625__auto__;
return goog.typeOf(G__352110);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._write["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3969__auto__ = writer;
if(and__3969__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3969__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4625__auto__ = (((writer == null))?null:writer);
return (function (){var or__3981__auto__ = (cljs.core._flush[(function (){var G__352114 = x__4625__auto__;
return goog.typeOf(G__352114);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._flush["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj352116 = {};
return obj352116;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._pr_writer[(function (){var G__352120 = x__4625__auto__;
return goog.typeOf(G__352120);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj352122 = {};
return obj352122;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3969__auto__ = d;
if(and__3969__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4625__auto__ = (((d == null))?null:d);
return (function (){var or__3981__auto__ = (cljs.core._realized_QMARK_[(function (){var G__352126 = x__4625__auto__;
return goog.typeOf(G__352126);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj352128 = {};
return obj352128;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._notify_watches[(function (){var G__352132 = x__4625__auto__;
return goog.typeOf(G__352132);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._add_watch[(function (){var G__352136 = x__4625__auto__;
return goog.typeOf(G__352136);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3969__auto__ = this$;
if(and__3969__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3969__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4625__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3981__auto__ = (cljs.core._remove_watch[(function (){var G__352140 = x__4625__auto__;
return goog.typeOf(G__352140);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj352142 = {};
return obj352142;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._as_transient[(function (){var G__352146 = x__4625__auto__;
return goog.typeOf(G__352146);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj352148 = {};
return obj352148;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._conj_BANG_[(function (){var G__352152 = x__4625__auto__;
return goog.typeOf(G__352152);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._persistent_BANG_[(function (){var G__352156 = x__4625__auto__;
return goog.typeOf(G__352156);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj352158 = {};
return obj352158;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_BANG_[(function (){var G__352162 = x__4625__auto__;
return goog.typeOf(G__352162);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj352164 = {};
return obj352164;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__352168 = x__4625__auto__;
return goog.typeOf(G__352168);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj352170 = {};
return obj352170;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__352174 = x__4625__auto__;
return goog.typeOf(G__352174);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._pop_BANG_[(function (){var G__352178 = x__4625__auto__;
return goog.typeOf(G__352178);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj352180 = {};
return obj352180;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3969__auto__ = tcoll;
if(and__3969__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4625__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3981__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__352184 = x__4625__auto__;
return goog.typeOf(G__352184);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj352186 = {};
return obj352186;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._compare[(function (){var G__352190 = x__4625__auto__;
return goog.typeOf(G__352190);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._compare["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj352192 = {};
return obj352192;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._drop_first[(function (){var G__352196 = x__4625__auto__;
return goog.typeOf(G__352196);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj352198 = {};
return obj352198;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_first[(function (){var G__352202 = x__4625__auto__;
return goog.typeOf(G__352202);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_rest[(function (){var G__352206 = x__4625__auto__;
return goog.typeOf(G__352206);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj352208 = {};
return obj352208;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._chunked_next[(function (){var G__352212 = x__4625__auto__;
return goog.typeOf(G__352212);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj352214 = {};
return obj352214;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._name[(function (){var G__352218 = x__4625__auto__;
return goog.typeOf(G__352218);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._name["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._namespace[(function (){var G__352222 = x__4625__auto__;
return goog.typeOf(G__352222);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._namespace["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj352224 = {};
return obj352224;
})();


cljs.core.IReset = (function (){var obj352226 = {};
return obj352226;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._reset_BANG_[(function (){var G__352230 = x__4625__auto__;
return goog.typeOf(G__352230);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj352232 = {};
return obj352232;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__352242 = x__4625__auto__;
return goog.typeOf(G__352242);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__352244 = x__4625__auto__;
return goog.typeOf(G__352244);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__352246 = x__4625__auto__;
return goog.typeOf(G__352246);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._swap_BANG_[(function (){var G__352248 = x__4625__auto__;
return goog.typeOf(G__352248);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj352250 = {};
return obj352250;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3969__auto__ = o;
if(and__3969__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3969__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4625__auto__ = (((o == null))?null:o);
return (function (){var or__3981__auto__ = (cljs.core._vreset_BANG_[(function (){var G__352254 = x__4625__auto__;
return goog.typeOf(G__352254);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj352256 = {};
return obj352256;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3969__auto__ = coll;
if(and__3969__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3969__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4625__auto__ = (((coll == null))?null:coll);
return (function (){var or__3981__auto__ = (cljs.core._iterator[(function (){var G__352260 = x__4625__auto__;
return goog.typeOf(G__352260);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._iterator["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__352263 = (4294967295);
var G__352264 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__352263,G__352264) : Math.imul.call(null,G__352263,G__352264));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__352267 = a;
var G__352268 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__352267,G__352268) : Math.imul.call(null,G__352267,G__352268));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__352269 = (i + (2));
var G__352270 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__352269;
h1 = G__352270;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj352272 = {};
return obj352272;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__352273 = (i + (1));
var G__352274 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__352273;
hash = G__352274;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj352278 = {};
return obj352278;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__352281 = o;
if(G__352281){
var bit__4655__auto__ = (G__352281.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4655__auto__) || (G__352281.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__352282 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__352282) : Math.floor.call(null,G__352282));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__352289 = a.ns;
var G__352290 = b.ns;
return goog.array.defaultCompare(G__352289,G__352290);
})();
if(((0) === nsc)){
var G__352291 = a.name;
var G__352292 = b.name;
return goog.array.defaultCompare(G__352291,G__352292);
} else {
return nsc;
}
}
} else {
var G__352293 = a.name;
var G__352294 = b.name;
return goog.array.defaultCompare(G__352293,G__352294);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__352296 = null;
var G__352296__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__352296__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__352296 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__352296__2.call(this,self__,coll);
case 3:
return G__352296__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__352296.cljs$core$IFn$_invoke$arity$2 = G__352296__2;
G__352296.cljs$core$IFn$_invoke$arity$3 = G__352296__3;
return G__352296;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args352295){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args352295)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__352344 = null;
var G__352344__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__352344__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__352344__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__352344__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__352344__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__352344__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__352344__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__352344__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__352344__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__352344__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__352344__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__352344__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__352344__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__352344__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__352344__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__352344__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__352344__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__352344__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__352344__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__352344__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__352344__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__352344__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352300 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__352301 = a;
var G__352302 = b;
var G__352303 = c;
var G__352304 = d;
var G__352305 = e;
var G__352306 = f;
var G__352307 = g;
var G__352308 = h;
var G__352309 = i;
var G__352310 = j;
var G__352311 = k;
var G__352312 = l;
var G__352313 = m;
var G__352314 = n;
var G__352315 = o;
var G__352316 = p;
var G__352317 = q;
var G__352318 = r;
var G__352319 = s;
var G__352320 = t;
var G__352321 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__352300,G__352301,G__352302,G__352303,G__352304,G__352305,G__352306,G__352307,G__352308,G__352309,G__352310,G__352311,G__352312,G__352313,G__352314,G__352315,G__352316,G__352317,G__352318,G__352319,G__352320,G__352321) : cljs.core.apply.call(null,G__352300,G__352301,G__352302,G__352303,G__352304,G__352305,G__352306,G__352307,G__352308,G__352309,G__352310,G__352311,G__352312,G__352313,G__352314,G__352315,G__352316,G__352317,G__352318,G__352319,G__352320,G__352321));
});
G__352344 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__352344__1.call(this,self__);
case 2:
return G__352344__2.call(this,self__,a);
case 3:
return G__352344__3.call(this,self__,a,b);
case 4:
return G__352344__4.call(this,self__,a,b,c);
case 5:
return G__352344__5.call(this,self__,a,b,c,d);
case 6:
return G__352344__6.call(this,self__,a,b,c,d,e);
case 7:
return G__352344__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__352344__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__352344__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__352344__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__352344__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__352344__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__352344__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__352344__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__352344__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__352344__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__352344__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__352344__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__352344__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__352344__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__352344__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__352344__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__352344.cljs$core$IFn$_invoke$arity$1 = G__352344__1;
G__352344.cljs$core$IFn$_invoke$arity$2 = G__352344__2;
G__352344.cljs$core$IFn$_invoke$arity$3 = G__352344__3;
G__352344.cljs$core$IFn$_invoke$arity$4 = G__352344__4;
G__352344.cljs$core$IFn$_invoke$arity$5 = G__352344__5;
G__352344.cljs$core$IFn$_invoke$arity$6 = G__352344__6;
G__352344.cljs$core$IFn$_invoke$arity$7 = G__352344__7;
G__352344.cljs$core$IFn$_invoke$arity$8 = G__352344__8;
G__352344.cljs$core$IFn$_invoke$arity$9 = G__352344__9;
G__352344.cljs$core$IFn$_invoke$arity$10 = G__352344__10;
G__352344.cljs$core$IFn$_invoke$arity$11 = G__352344__11;
G__352344.cljs$core$IFn$_invoke$arity$12 = G__352344__12;
G__352344.cljs$core$IFn$_invoke$arity$13 = G__352344__13;
G__352344.cljs$core$IFn$_invoke$arity$14 = G__352344__14;
G__352344.cljs$core$IFn$_invoke$arity$15 = G__352344__15;
G__352344.cljs$core$IFn$_invoke$arity$16 = G__352344__16;
G__352344.cljs$core$IFn$_invoke$arity$17 = G__352344__17;
G__352344.cljs$core$IFn$_invoke$arity$18 = G__352344__18;
G__352344.cljs$core$IFn$_invoke$arity$19 = G__352344__19;
G__352344.cljs$core$IFn$_invoke$arity$20 = G__352344__20;
G__352344.cljs$core$IFn$_invoke$arity$21 = G__352344__21;
G__352344.cljs$core$IFn$_invoke$arity$22 = G__352344__22;
return G__352344;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args352299){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args352299)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__352322 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__352323 = a;
var G__352324 = b;
var G__352325 = c;
var G__352326 = d;
var G__352327 = e;
var G__352328 = f;
var G__352329 = g;
var G__352330 = h;
var G__352331 = i;
var G__352332 = j;
var G__352333 = k;
var G__352334 = l;
var G__352335 = m;
var G__352336 = n;
var G__352337 = o;
var G__352338 = p;
var G__352339 = q;
var G__352340 = r;
var G__352341 = s;
var G__352342 = t;
var G__352343 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__352322,G__352323,G__352324,G__352325,G__352326,G__352327,G__352328,G__352329,G__352330,G__352331,G__352332,G__352333,G__352334,G__352335,G__352336,G__352337,G__352338,G__352339,G__352340,G__352341,G__352342,G__352343) : cljs.core.apply.call(null,G__352322,G__352323,G__352324,G__352325,G__352326,G__352327,G__352328,G__352329,G__352330,G__352331,G__352332,G__352333,G__352334,G__352335,G__352336,G__352337,G__352338,G__352339,G__352340,G__352341,G__352342,G__352343));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__352346 = x;
if(G__352346){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__352346.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__352346.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__352346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__352346);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__352348 = value;
if(G__352348){
var bit__4662__auto__ = (G__352348.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4662__auto__) || (G__352348.cljs$core$ICloneable$)){
return true;
} else {
if((!G__352348.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__352348);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__352348);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__352350 = coll;
if(G__352350){
var bit__4655__auto__ = (G__352350.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4655__auto__) || (G__352350.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__352352 = coll;
if(G__352352){
var bit__4655__auto__ = (G__352352.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__352352.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__352354 = coll;
if(G__352354){
var bit__4655__auto__ = (G__352354.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__352354.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__352356 = coll;
if(G__352356){
var bit__4655__auto__ = (G__352356.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4655__auto__) || (G__352356.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__352361__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__352362 = y;
var G__352363 = cljs.core.first(more);
var G__352364 = cljs.core.next(more);
x = G__352362;
y = G__352363;
more = G__352364;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__352361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__352365__i = 0, G__352365__a = new Array(arguments.length -  2);
while (G__352365__i < G__352365__a.length) {G__352365__a[G__352365__i] = arguments[G__352365__i + 2]; ++G__352365__i;}
  more = new cljs.core.IndexedSeq(G__352365__a,0);
} 
return G__352361__delegate.call(this,x,y,more);};
G__352361.cljs$lang$maxFixedArity = 2;
G__352361.cljs$lang$applyTo = (function (arglist__352366){
var x = cljs.core.first(arglist__352366);
arglist__352366 = cljs.core.next(arglist__352366);
var y = cljs.core.first(arglist__352366);
var more = cljs.core.rest(arglist__352366);
return G__352361__delegate(x,y,more);
});
G__352361.cljs$core$IFn$_invoke$arity$variadic = G__352361__delegate;
return G__352361;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__352367 = null;
if (arguments.length > 2) {
var G__352368__i = 0, G__352368__a = new Array(arguments.length -  2);
while (G__352368__i < G__352368__a.length) {G__352368__a[G__352368__i] = arguments[G__352368__i + 2]; ++G__352368__i;}
G__352367 = new cljs.core.IndexedSeq(G__352368__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__352367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__352369 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__352369) : cljs.core.es6_iterator_seq.call(null,G__352369));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__352370 = (n + (1));
var G__352371 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__352372 = cljs.core.next(coll__$1);
n = G__352370;
hash_code = G__352371;
coll__$1 = G__352372;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__352373 = (n + (1));
var G__352374 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__352375 = cljs.core.next(coll__$1);
n = G__352373;
hash_code = G__352374;
coll__$1 = G__352375;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__352376 = o;
return goog.getUid(G__352376);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__352378 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__352378) : cljs.core.deref.call(null,G__352378));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__352385 = val;
var G__352386 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352385,G__352386) : f.call(null,G__352385,G__352386));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352391 = nval;
var G__352392 = (n + (1));
val = G__352391;
n = G__352392;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__352387 = val__$1;
var G__352388 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352387,G__352388) : f.call(null,G__352387,G__352388));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352393 = nval;
var G__352394 = (n + (1));
val__$1 = G__352393;
n = G__352394;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__352389 = val__$1;
var G__352390 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352389,G__352390) : f.call(null,G__352389,G__352390));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352395 = nval;
var G__352396 = (n + (1));
val__$1 = G__352395;
n = G__352396;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__352403 = val;
var G__352404 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352403,G__352404) : f.call(null,G__352403,G__352404));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352409 = nval;
var G__352410 = (n + (1));
val = G__352409;
n = G__352410;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__352405 = val__$1;
var G__352406 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352405,G__352406) : f.call(null,G__352405,G__352406));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352411 = nval;
var G__352412 = (n + (1));
val__$1 = G__352411;
n = G__352412;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__352407 = val__$1;
var G__352408 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__352407,G__352408) : f.call(null,G__352407,G__352408));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__352413 = nval;
var G__352414 = (n + (1));
val__$1 = G__352413;
n = G__352414;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__352416 = x;
if(G__352416){
var bit__4662__auto__ = (G__352416.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4662__auto__) || (G__352416.cljs$core$ICounted$)){
return true;
} else {
if((!G__352416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__352416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__352416);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__352418 = x;
if(G__352418){
var bit__4662__auto__ = (G__352418.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4662__auto__) || (G__352418.cljs$core$IIndexed$)){
return true;
} else {
if((!G__352418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__352418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__352418);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__352419 = coll__$1;
var G__352420 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__352419,G__352420) : cljs.core.equiv_sequential.call(null,G__352419,G__352420));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__352421 = o;
var G__352422 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__352421,G__352422) : cljs.core.cons.call(null,G__352421,G__352422));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__352425 = coll__$1;
var G__352426 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__352425,G__352426) : cljs.core.equiv_sequential.call(null,G__352425,G__352426));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__352427 = cljs.core.List.EMPTY;
var G__352428 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__352427,G__352428) : cljs.core.with_meta.call(null,G__352427,G__352428));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__352429 = f;
var G__352430 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__352429,G__352430) : cljs.core.seq_reduce.call(null,G__352429,G__352430));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__352431 = f;
var G__352432 = start;
var G__352433 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__352431,G__352432,G__352433) : cljs.core.seq_reduce.call(null,G__352431,G__352432,G__352433));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__352434 = o;
var G__352435 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__352434,G__352435) : cljs.core.cons.call(null,G__352434,G__352435));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__352436 = sn;
s = G__352436;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__352441__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__352442 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__352443 = cljs.core.first(xs);
var G__352444 = cljs.core.next(xs);
coll = G__352442;
x = G__352443;
xs = G__352444;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__352441 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__352445__i = 0, G__352445__a = new Array(arguments.length -  2);
while (G__352445__i < G__352445__a.length) {G__352445__a[G__352445__i] = arguments[G__352445__i + 2]; ++G__352445__i;}
  xs = new cljs.core.IndexedSeq(G__352445__a,0);
} 
return G__352441__delegate.call(this,coll,x,xs);};
G__352441.cljs$lang$maxFixedArity = 2;
G__352441.cljs$lang$applyTo = (function (arglist__352446){
var coll = cljs.core.first(arglist__352446);
arglist__352446 = cljs.core.next(arglist__352446);
var x = cljs.core.first(arglist__352446);
var xs = cljs.core.rest(arglist__352446);
return G__352441__delegate(coll,x,xs);
});
G__352441.cljs$core$IFn$_invoke$arity$variadic = G__352441__delegate;
return G__352441;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__352447 = null;
if (arguments.length > 2) {
var G__352448__i = 0, G__352448__a = new Array(arguments.length -  2);
while (G__352448__i < G__352448__a.length) {G__352448__a[G__352448__i] = arguments[G__352448__i + 2]; ++G__352448__i;}
G__352447 = new cljs.core.IndexedSeq(G__352448__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__352447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__352449 = cljs.core.next(s);
var G__352450 = (acc + (1));
s = G__352449;
acc = G__352450;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__352452 = coll;
if(G__352452){
var bit__4655__auto__ = (G__352452.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4655__auto__) || (G__352452.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__352453 = cljs.core.next(coll);
var G__352454 = (n - (1));
coll = G__352453;
n = G__352454;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__352455 = cljs.core.next(coll);
var G__352456 = (n - (1));
var G__352457 = not_found;
coll = G__352455;
n = G__352456;
not_found = G__352457;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__352462 = coll;
if(G__352462){
var bit__4655__auto__ = (G__352462.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__352462.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__352463 = coll;
if(G__352463){
var bit__4662__auto__ = (G__352463.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__352463.cljs$core$ISeq$)){
return true;
} else {
if((!G__352463.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__352463);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__352463);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__352464 = coll;
if(G__352464){
var bit__4655__auto__ = (G__352464.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4655__auto__) || (G__352464.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__352465 = coll;
if(G__352465){
var bit__4662__auto__ = (G__352465.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__352465.cljs$core$ISeq$)){
return true;
} else {
if((!G__352465.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__352465);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__352465);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__352466 = (n__$1 - (1));
var G__352467 = cljs.core.rest(xs);
n__$1 = G__352466;
xs = G__352467;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__352470 = o;
if(G__352470){
var bit__4655__auto__ = (G__352470.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__352470.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__352471 = o;
if(G__352471){
var bit__4655__auto__ = (G__352471.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4655__auto__) || (G__352471.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__352475__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__352476 = ret;
var G__352477 = cljs.core.first(kvs);
var G__352478 = cljs.core.second(kvs);
var G__352479 = cljs.core.nnext(kvs);
coll = G__352476;
k = G__352477;
v = G__352478;
kvs = G__352479;
continue;
} else {
return ret;
}
break;
}
};
var G__352475 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__352480__i = 0, G__352480__a = new Array(arguments.length -  3);
while (G__352480__i < G__352480__a.length) {G__352480__a[G__352480__i] = arguments[G__352480__i + 3]; ++G__352480__i;}
  kvs = new cljs.core.IndexedSeq(G__352480__a,0);
} 
return G__352475__delegate.call(this,coll,k,v,kvs);};
G__352475.cljs$lang$maxFixedArity = 3;
G__352475.cljs$lang$applyTo = (function (arglist__352481){
var coll = cljs.core.first(arglist__352481);
arglist__352481 = cljs.core.next(arglist__352481);
var k = cljs.core.first(arglist__352481);
arglist__352481 = cljs.core.next(arglist__352481);
var v = cljs.core.first(arglist__352481);
var kvs = cljs.core.rest(arglist__352481);
return G__352475__delegate(coll,k,v,kvs);
});
G__352475.cljs$core$IFn$_invoke$arity$variadic = G__352475__delegate;
return G__352475;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__352482 = null;
if (arguments.length > 3) {
var G__352483__i = 0, G__352483__a = new Array(arguments.length -  3);
while (G__352483__i < G__352483__a.length) {G__352483__a[G__352483__i] = arguments[G__352483__i + 3]; ++G__352483__i;}
G__352482 = new cljs.core.IndexedSeq(G__352483__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__352482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__352486__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__352487 = ret;
var G__352488 = cljs.core.first(ks);
var G__352489 = cljs.core.next(ks);
coll = G__352487;
k = G__352488;
ks = G__352489;
continue;
} else {
return ret;
}
}
break;
}
};
var G__352486 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__352490__i = 0, G__352490__a = new Array(arguments.length -  2);
while (G__352490__i < G__352490__a.length) {G__352490__a[G__352490__i] = arguments[G__352490__i + 2]; ++G__352490__i;}
  ks = new cljs.core.IndexedSeq(G__352490__a,0);
} 
return G__352486__delegate.call(this,coll,k,ks);};
G__352486.cljs$lang$maxFixedArity = 2;
G__352486.cljs$lang$applyTo = (function (arglist__352491){
var coll = cljs.core.first(arglist__352491);
arglist__352491 = cljs.core.next(arglist__352491);
var k = cljs.core.first(arglist__352491);
var ks = cljs.core.rest(arglist__352491);
return G__352486__delegate(coll,k,ks);
});
G__352486.cljs$core$IFn$_invoke$arity$variadic = G__352486__delegate;
return G__352486;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__352492 = null;
if (arguments.length > 2) {
var G__352493__i = 0, G__352493__a = new Array(arguments.length -  2);
while (G__352493__i < G__352493__a.length) {G__352493__a[G__352493__i] = arguments[G__352493__i + 2]; ++G__352493__i;}
G__352492 = new cljs.core.IndexedSeq(G__352493__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__352492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3981__auto__ = (function (){var G__352498 = f;
return goog.isFunction(G__352498);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__352499 = f;
if(G__352499){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto____$1 = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
return G__352499.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__352499.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__352499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__352499);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__352965 = null;
var G__352965__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__352965__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352501 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__352501) : self__.afn.call(null,G__352501));
});
var G__352965__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352502 = a;
var G__352503 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__352502,G__352503) : self__.afn.call(null,G__352502,G__352503));
});
var G__352965__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352504 = a;
var G__352505 = b;
var G__352506 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__352504,G__352505,G__352506) : self__.afn.call(null,G__352504,G__352505,G__352506));
});
var G__352965__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352507 = a;
var G__352508 = b;
var G__352509 = c;
var G__352510 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__352507,G__352508,G__352509,G__352510) : self__.afn.call(null,G__352507,G__352508,G__352509,G__352510));
});
var G__352965__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352511 = a;
var G__352512 = b;
var G__352513 = c;
var G__352514 = d;
var G__352515 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__352511,G__352512,G__352513,G__352514,G__352515) : self__.afn.call(null,G__352511,G__352512,G__352513,G__352514,G__352515));
});
var G__352965__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352516 = a;
var G__352517 = b;
var G__352518 = c;
var G__352519 = d;
var G__352520 = e;
var G__352521 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__352516,G__352517,G__352518,G__352519,G__352520,G__352521) : self__.afn.call(null,G__352516,G__352517,G__352518,G__352519,G__352520,G__352521));
});
var G__352965__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352522 = a;
var G__352523 = b;
var G__352524 = c;
var G__352525 = d;
var G__352526 = e;
var G__352527 = f;
var G__352528 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__352522,G__352523,G__352524,G__352525,G__352526,G__352527,G__352528) : self__.afn.call(null,G__352522,G__352523,G__352524,G__352525,G__352526,G__352527,G__352528));
});
var G__352965__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352529 = a;
var G__352530 = b;
var G__352531 = c;
var G__352532 = d;
var G__352533 = e;
var G__352534 = f;
var G__352535 = g;
var G__352536 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__352529,G__352530,G__352531,G__352532,G__352533,G__352534,G__352535,G__352536) : self__.afn.call(null,G__352529,G__352530,G__352531,G__352532,G__352533,G__352534,G__352535,G__352536));
});
var G__352965__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352537 = a;
var G__352538 = b;
var G__352539 = c;
var G__352540 = d;
var G__352541 = e;
var G__352542 = f;
var G__352543 = g;
var G__352544 = h;
var G__352545 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__352537,G__352538,G__352539,G__352540,G__352541,G__352542,G__352543,G__352544,G__352545) : self__.afn.call(null,G__352537,G__352538,G__352539,G__352540,G__352541,G__352542,G__352543,G__352544,G__352545));
});
var G__352965__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352546 = a;
var G__352547 = b;
var G__352548 = c;
var G__352549 = d;
var G__352550 = e;
var G__352551 = f;
var G__352552 = g;
var G__352553 = h;
var G__352554 = i;
var G__352555 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__352546,G__352547,G__352548,G__352549,G__352550,G__352551,G__352552,G__352553,G__352554,G__352555) : self__.afn.call(null,G__352546,G__352547,G__352548,G__352549,G__352550,G__352551,G__352552,G__352553,G__352554,G__352555));
});
var G__352965__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352556 = a;
var G__352557 = b;
var G__352558 = c;
var G__352559 = d;
var G__352560 = e;
var G__352561 = f;
var G__352562 = g;
var G__352563 = h;
var G__352564 = i;
var G__352565 = j;
var G__352566 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__352556,G__352557,G__352558,G__352559,G__352560,G__352561,G__352562,G__352563,G__352564,G__352565,G__352566) : self__.afn.call(null,G__352556,G__352557,G__352558,G__352559,G__352560,G__352561,G__352562,G__352563,G__352564,G__352565,G__352566));
});
var G__352965__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352567 = a;
var G__352568 = b;
var G__352569 = c;
var G__352570 = d;
var G__352571 = e;
var G__352572 = f;
var G__352573 = g;
var G__352574 = h;
var G__352575 = i;
var G__352576 = j;
var G__352577 = k;
var G__352578 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__352567,G__352568,G__352569,G__352570,G__352571,G__352572,G__352573,G__352574,G__352575,G__352576,G__352577,G__352578) : self__.afn.call(null,G__352567,G__352568,G__352569,G__352570,G__352571,G__352572,G__352573,G__352574,G__352575,G__352576,G__352577,G__352578));
});
var G__352965__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352579 = a;
var G__352580 = b;
var G__352581 = c;
var G__352582 = d;
var G__352583 = e;
var G__352584 = f;
var G__352585 = g;
var G__352586 = h;
var G__352587 = i;
var G__352588 = j;
var G__352589 = k;
var G__352590 = l;
var G__352591 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__352579,G__352580,G__352581,G__352582,G__352583,G__352584,G__352585,G__352586,G__352587,G__352588,G__352589,G__352590,G__352591) : self__.afn.call(null,G__352579,G__352580,G__352581,G__352582,G__352583,G__352584,G__352585,G__352586,G__352587,G__352588,G__352589,G__352590,G__352591));
});
var G__352965__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352592 = a;
var G__352593 = b;
var G__352594 = c;
var G__352595 = d;
var G__352596 = e;
var G__352597 = f;
var G__352598 = g;
var G__352599 = h;
var G__352600 = i;
var G__352601 = j;
var G__352602 = k;
var G__352603 = l;
var G__352604 = m;
var G__352605 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__352592,G__352593,G__352594,G__352595,G__352596,G__352597,G__352598,G__352599,G__352600,G__352601,G__352602,G__352603,G__352604,G__352605) : self__.afn.call(null,G__352592,G__352593,G__352594,G__352595,G__352596,G__352597,G__352598,G__352599,G__352600,G__352601,G__352602,G__352603,G__352604,G__352605));
});
var G__352965__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352606 = a;
var G__352607 = b;
var G__352608 = c;
var G__352609 = d;
var G__352610 = e;
var G__352611 = f;
var G__352612 = g;
var G__352613 = h;
var G__352614 = i;
var G__352615 = j;
var G__352616 = k;
var G__352617 = l;
var G__352618 = m;
var G__352619 = n;
var G__352620 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__352606,G__352607,G__352608,G__352609,G__352610,G__352611,G__352612,G__352613,G__352614,G__352615,G__352616,G__352617,G__352618,G__352619,G__352620) : self__.afn.call(null,G__352606,G__352607,G__352608,G__352609,G__352610,G__352611,G__352612,G__352613,G__352614,G__352615,G__352616,G__352617,G__352618,G__352619,G__352620));
});
var G__352965__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352621 = a;
var G__352622 = b;
var G__352623 = c;
var G__352624 = d;
var G__352625 = e;
var G__352626 = f;
var G__352627 = g;
var G__352628 = h;
var G__352629 = i;
var G__352630 = j;
var G__352631 = k;
var G__352632 = l;
var G__352633 = m;
var G__352634 = n;
var G__352635 = o;
var G__352636 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__352621,G__352622,G__352623,G__352624,G__352625,G__352626,G__352627,G__352628,G__352629,G__352630,G__352631,G__352632,G__352633,G__352634,G__352635,G__352636) : self__.afn.call(null,G__352621,G__352622,G__352623,G__352624,G__352625,G__352626,G__352627,G__352628,G__352629,G__352630,G__352631,G__352632,G__352633,G__352634,G__352635,G__352636));
});
var G__352965__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352637 = a;
var G__352638 = b;
var G__352639 = c;
var G__352640 = d;
var G__352641 = e;
var G__352642 = f;
var G__352643 = g;
var G__352644 = h;
var G__352645 = i;
var G__352646 = j;
var G__352647 = k;
var G__352648 = l;
var G__352649 = m;
var G__352650 = n;
var G__352651 = o;
var G__352652 = p;
var G__352653 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__352637,G__352638,G__352639,G__352640,G__352641,G__352642,G__352643,G__352644,G__352645,G__352646,G__352647,G__352648,G__352649,G__352650,G__352651,G__352652,G__352653) : self__.afn.call(null,G__352637,G__352638,G__352639,G__352640,G__352641,G__352642,G__352643,G__352644,G__352645,G__352646,G__352647,G__352648,G__352649,G__352650,G__352651,G__352652,G__352653));
});
var G__352965__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352654 = a;
var G__352655 = b;
var G__352656 = c;
var G__352657 = d;
var G__352658 = e;
var G__352659 = f;
var G__352660 = g;
var G__352661 = h;
var G__352662 = i;
var G__352663 = j;
var G__352664 = k;
var G__352665 = l;
var G__352666 = m;
var G__352667 = n;
var G__352668 = o;
var G__352669 = p;
var G__352670 = q;
var G__352671 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__352654,G__352655,G__352656,G__352657,G__352658,G__352659,G__352660,G__352661,G__352662,G__352663,G__352664,G__352665,G__352666,G__352667,G__352668,G__352669,G__352670,G__352671) : self__.afn.call(null,G__352654,G__352655,G__352656,G__352657,G__352658,G__352659,G__352660,G__352661,G__352662,G__352663,G__352664,G__352665,G__352666,G__352667,G__352668,G__352669,G__352670,G__352671));
});
var G__352965__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352672 = a;
var G__352673 = b;
var G__352674 = c;
var G__352675 = d;
var G__352676 = e;
var G__352677 = f;
var G__352678 = g;
var G__352679 = h;
var G__352680 = i;
var G__352681 = j;
var G__352682 = k;
var G__352683 = l;
var G__352684 = m;
var G__352685 = n;
var G__352686 = o;
var G__352687 = p;
var G__352688 = q;
var G__352689 = r;
var G__352690 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__352672,G__352673,G__352674,G__352675,G__352676,G__352677,G__352678,G__352679,G__352680,G__352681,G__352682,G__352683,G__352684,G__352685,G__352686,G__352687,G__352688,G__352689,G__352690) : self__.afn.call(null,G__352672,G__352673,G__352674,G__352675,G__352676,G__352677,G__352678,G__352679,G__352680,G__352681,G__352682,G__352683,G__352684,G__352685,G__352686,G__352687,G__352688,G__352689,G__352690));
});
var G__352965__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352691 = a;
var G__352692 = b;
var G__352693 = c;
var G__352694 = d;
var G__352695 = e;
var G__352696 = f;
var G__352697 = g;
var G__352698 = h;
var G__352699 = i;
var G__352700 = j;
var G__352701 = k;
var G__352702 = l;
var G__352703 = m;
var G__352704 = n;
var G__352705 = o;
var G__352706 = p;
var G__352707 = q;
var G__352708 = r;
var G__352709 = s;
var G__352710 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__352691,G__352692,G__352693,G__352694,G__352695,G__352696,G__352697,G__352698,G__352699,G__352700,G__352701,G__352702,G__352703,G__352704,G__352705,G__352706,G__352707,G__352708,G__352709,G__352710) : self__.afn.call(null,G__352691,G__352692,G__352693,G__352694,G__352695,G__352696,G__352697,G__352698,G__352699,G__352700,G__352701,G__352702,G__352703,G__352704,G__352705,G__352706,G__352707,G__352708,G__352709,G__352710));
});
var G__352965__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__352711 = self__.afn;
var G__352712 = a;
var G__352713 = b;
var G__352714 = c;
var G__352715 = d;
var G__352716 = e;
var G__352717 = f;
var G__352718 = g;
var G__352719 = h;
var G__352720 = i;
var G__352721 = j;
var G__352722 = k;
var G__352723 = l;
var G__352724 = m;
var G__352725 = n;
var G__352726 = o;
var G__352727 = p;
var G__352728 = q;
var G__352729 = r;
var G__352730 = s;
var G__352731 = t;
var G__352732 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__352711,G__352712,G__352713,G__352714,G__352715,G__352716,G__352717,G__352718,G__352719,G__352720,G__352721,G__352722,G__352723,G__352724,G__352725,G__352726,G__352727,G__352728,G__352729,G__352730,G__352731,G__352732) : cljs.core.apply.call(null,G__352711,G__352712,G__352713,G__352714,G__352715,G__352716,G__352717,G__352718,G__352719,G__352720,G__352721,G__352722,G__352723,G__352724,G__352725,G__352726,G__352727,G__352728,G__352729,G__352730,G__352731,G__352732));
});
G__352965 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__352965__1.call(this,self__);
case 2:
return G__352965__2.call(this,self__,a);
case 3:
return G__352965__3.call(this,self__,a,b);
case 4:
return G__352965__4.call(this,self__,a,b,c);
case 5:
return G__352965__5.call(this,self__,a,b,c,d);
case 6:
return G__352965__6.call(this,self__,a,b,c,d,e);
case 7:
return G__352965__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__352965__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__352965__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__352965__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__352965__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__352965__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__352965__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__352965__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__352965__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__352965__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__352965__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__352965__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__352965__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__352965__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__352965__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__352965__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__352965.cljs$core$IFn$_invoke$arity$1 = G__352965__1;
G__352965.cljs$core$IFn$_invoke$arity$2 = G__352965__2;
G__352965.cljs$core$IFn$_invoke$arity$3 = G__352965__3;
G__352965.cljs$core$IFn$_invoke$arity$4 = G__352965__4;
G__352965.cljs$core$IFn$_invoke$arity$5 = G__352965__5;
G__352965.cljs$core$IFn$_invoke$arity$6 = G__352965__6;
G__352965.cljs$core$IFn$_invoke$arity$7 = G__352965__7;
G__352965.cljs$core$IFn$_invoke$arity$8 = G__352965__8;
G__352965.cljs$core$IFn$_invoke$arity$9 = G__352965__9;
G__352965.cljs$core$IFn$_invoke$arity$10 = G__352965__10;
G__352965.cljs$core$IFn$_invoke$arity$11 = G__352965__11;
G__352965.cljs$core$IFn$_invoke$arity$12 = G__352965__12;
G__352965.cljs$core$IFn$_invoke$arity$13 = G__352965__13;
G__352965.cljs$core$IFn$_invoke$arity$14 = G__352965__14;
G__352965.cljs$core$IFn$_invoke$arity$15 = G__352965__15;
G__352965.cljs$core$IFn$_invoke$arity$16 = G__352965__16;
G__352965.cljs$core$IFn$_invoke$arity$17 = G__352965__17;
G__352965.cljs$core$IFn$_invoke$arity$18 = G__352965__18;
G__352965.cljs$core$IFn$_invoke$arity$19 = G__352965__19;
G__352965.cljs$core$IFn$_invoke$arity$20 = G__352965__20;
G__352965.cljs$core$IFn$_invoke$arity$21 = G__352965__21;
G__352965.cljs$core$IFn$_invoke$arity$22 = G__352965__22;
return G__352965;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args352500){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args352500)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__352733 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__352733) : self__.afn.call(null,G__352733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__352734 = a;
var G__352735 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__352734,G__352735) : self__.afn.call(null,G__352734,G__352735));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__352736 = a;
var G__352737 = b;
var G__352738 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__352736,G__352737,G__352738) : self__.afn.call(null,G__352736,G__352737,G__352738));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__352739 = a;
var G__352740 = b;
var G__352741 = c;
var G__352742 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__352739,G__352740,G__352741,G__352742) : self__.afn.call(null,G__352739,G__352740,G__352741,G__352742));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__352743 = a;
var G__352744 = b;
var G__352745 = c;
var G__352746 = d;
var G__352747 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__352743,G__352744,G__352745,G__352746,G__352747) : self__.afn.call(null,G__352743,G__352744,G__352745,G__352746,G__352747));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__352748 = a;
var G__352749 = b;
var G__352750 = c;
var G__352751 = d;
var G__352752 = e;
var G__352753 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__352748,G__352749,G__352750,G__352751,G__352752,G__352753) : self__.afn.call(null,G__352748,G__352749,G__352750,G__352751,G__352752,G__352753));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__352754 = a;
var G__352755 = b;
var G__352756 = c;
var G__352757 = d;
var G__352758 = e;
var G__352759 = f;
var G__352760 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__352754,G__352755,G__352756,G__352757,G__352758,G__352759,G__352760) : self__.afn.call(null,G__352754,G__352755,G__352756,G__352757,G__352758,G__352759,G__352760));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__352761 = a;
var G__352762 = b;
var G__352763 = c;
var G__352764 = d;
var G__352765 = e;
var G__352766 = f;
var G__352767 = g;
var G__352768 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__352761,G__352762,G__352763,G__352764,G__352765,G__352766,G__352767,G__352768) : self__.afn.call(null,G__352761,G__352762,G__352763,G__352764,G__352765,G__352766,G__352767,G__352768));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__352769 = a;
var G__352770 = b;
var G__352771 = c;
var G__352772 = d;
var G__352773 = e;
var G__352774 = f;
var G__352775 = g;
var G__352776 = h;
var G__352777 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__352769,G__352770,G__352771,G__352772,G__352773,G__352774,G__352775,G__352776,G__352777) : self__.afn.call(null,G__352769,G__352770,G__352771,G__352772,G__352773,G__352774,G__352775,G__352776,G__352777));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__352778 = a;
var G__352779 = b;
var G__352780 = c;
var G__352781 = d;
var G__352782 = e;
var G__352783 = f;
var G__352784 = g;
var G__352785 = h;
var G__352786 = i;
var G__352787 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__352778,G__352779,G__352780,G__352781,G__352782,G__352783,G__352784,G__352785,G__352786,G__352787) : self__.afn.call(null,G__352778,G__352779,G__352780,G__352781,G__352782,G__352783,G__352784,G__352785,G__352786,G__352787));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__352788 = a;
var G__352789 = b;
var G__352790 = c;
var G__352791 = d;
var G__352792 = e;
var G__352793 = f;
var G__352794 = g;
var G__352795 = h;
var G__352796 = i;
var G__352797 = j;
var G__352798 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__352788,G__352789,G__352790,G__352791,G__352792,G__352793,G__352794,G__352795,G__352796,G__352797,G__352798) : self__.afn.call(null,G__352788,G__352789,G__352790,G__352791,G__352792,G__352793,G__352794,G__352795,G__352796,G__352797,G__352798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__352799 = a;
var G__352800 = b;
var G__352801 = c;
var G__352802 = d;
var G__352803 = e;
var G__352804 = f;
var G__352805 = g;
var G__352806 = h;
var G__352807 = i;
var G__352808 = j;
var G__352809 = k;
var G__352810 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__352799,G__352800,G__352801,G__352802,G__352803,G__352804,G__352805,G__352806,G__352807,G__352808,G__352809,G__352810) : self__.afn.call(null,G__352799,G__352800,G__352801,G__352802,G__352803,G__352804,G__352805,G__352806,G__352807,G__352808,G__352809,G__352810));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__352811 = a;
var G__352812 = b;
var G__352813 = c;
var G__352814 = d;
var G__352815 = e;
var G__352816 = f;
var G__352817 = g;
var G__352818 = h;
var G__352819 = i;
var G__352820 = j;
var G__352821 = k;
var G__352822 = l;
var G__352823 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__352811,G__352812,G__352813,G__352814,G__352815,G__352816,G__352817,G__352818,G__352819,G__352820,G__352821,G__352822,G__352823) : self__.afn.call(null,G__352811,G__352812,G__352813,G__352814,G__352815,G__352816,G__352817,G__352818,G__352819,G__352820,G__352821,G__352822,G__352823));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__352824 = a;
var G__352825 = b;
var G__352826 = c;
var G__352827 = d;
var G__352828 = e;
var G__352829 = f;
var G__352830 = g;
var G__352831 = h;
var G__352832 = i;
var G__352833 = j;
var G__352834 = k;
var G__352835 = l;
var G__352836 = m;
var G__352837 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__352824,G__352825,G__352826,G__352827,G__352828,G__352829,G__352830,G__352831,G__352832,G__352833,G__352834,G__352835,G__352836,G__352837) : self__.afn.call(null,G__352824,G__352825,G__352826,G__352827,G__352828,G__352829,G__352830,G__352831,G__352832,G__352833,G__352834,G__352835,G__352836,G__352837));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__352838 = a;
var G__352839 = b;
var G__352840 = c;
var G__352841 = d;
var G__352842 = e;
var G__352843 = f;
var G__352844 = g;
var G__352845 = h;
var G__352846 = i;
var G__352847 = j;
var G__352848 = k;
var G__352849 = l;
var G__352850 = m;
var G__352851 = n;
var G__352852 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__352838,G__352839,G__352840,G__352841,G__352842,G__352843,G__352844,G__352845,G__352846,G__352847,G__352848,G__352849,G__352850,G__352851,G__352852) : self__.afn.call(null,G__352838,G__352839,G__352840,G__352841,G__352842,G__352843,G__352844,G__352845,G__352846,G__352847,G__352848,G__352849,G__352850,G__352851,G__352852));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__352853 = a;
var G__352854 = b;
var G__352855 = c;
var G__352856 = d;
var G__352857 = e;
var G__352858 = f;
var G__352859 = g;
var G__352860 = h;
var G__352861 = i;
var G__352862 = j;
var G__352863 = k;
var G__352864 = l;
var G__352865 = m;
var G__352866 = n;
var G__352867 = o;
var G__352868 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__352853,G__352854,G__352855,G__352856,G__352857,G__352858,G__352859,G__352860,G__352861,G__352862,G__352863,G__352864,G__352865,G__352866,G__352867,G__352868) : self__.afn.call(null,G__352853,G__352854,G__352855,G__352856,G__352857,G__352858,G__352859,G__352860,G__352861,G__352862,G__352863,G__352864,G__352865,G__352866,G__352867,G__352868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__352869 = a;
var G__352870 = b;
var G__352871 = c;
var G__352872 = d;
var G__352873 = e;
var G__352874 = f;
var G__352875 = g;
var G__352876 = h;
var G__352877 = i;
var G__352878 = j;
var G__352879 = k;
var G__352880 = l;
var G__352881 = m;
var G__352882 = n;
var G__352883 = o;
var G__352884 = p;
var G__352885 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__352869,G__352870,G__352871,G__352872,G__352873,G__352874,G__352875,G__352876,G__352877,G__352878,G__352879,G__352880,G__352881,G__352882,G__352883,G__352884,G__352885) : self__.afn.call(null,G__352869,G__352870,G__352871,G__352872,G__352873,G__352874,G__352875,G__352876,G__352877,G__352878,G__352879,G__352880,G__352881,G__352882,G__352883,G__352884,G__352885));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__352886 = a;
var G__352887 = b;
var G__352888 = c;
var G__352889 = d;
var G__352890 = e;
var G__352891 = f;
var G__352892 = g;
var G__352893 = h;
var G__352894 = i;
var G__352895 = j;
var G__352896 = k;
var G__352897 = l;
var G__352898 = m;
var G__352899 = n;
var G__352900 = o;
var G__352901 = p;
var G__352902 = q;
var G__352903 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__352886,G__352887,G__352888,G__352889,G__352890,G__352891,G__352892,G__352893,G__352894,G__352895,G__352896,G__352897,G__352898,G__352899,G__352900,G__352901,G__352902,G__352903) : self__.afn.call(null,G__352886,G__352887,G__352888,G__352889,G__352890,G__352891,G__352892,G__352893,G__352894,G__352895,G__352896,G__352897,G__352898,G__352899,G__352900,G__352901,G__352902,G__352903));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__352904 = a;
var G__352905 = b;
var G__352906 = c;
var G__352907 = d;
var G__352908 = e;
var G__352909 = f;
var G__352910 = g;
var G__352911 = h;
var G__352912 = i;
var G__352913 = j;
var G__352914 = k;
var G__352915 = l;
var G__352916 = m;
var G__352917 = n;
var G__352918 = o;
var G__352919 = p;
var G__352920 = q;
var G__352921 = r;
var G__352922 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__352904,G__352905,G__352906,G__352907,G__352908,G__352909,G__352910,G__352911,G__352912,G__352913,G__352914,G__352915,G__352916,G__352917,G__352918,G__352919,G__352920,G__352921,G__352922) : self__.afn.call(null,G__352904,G__352905,G__352906,G__352907,G__352908,G__352909,G__352910,G__352911,G__352912,G__352913,G__352914,G__352915,G__352916,G__352917,G__352918,G__352919,G__352920,G__352921,G__352922));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__352923 = a;
var G__352924 = b;
var G__352925 = c;
var G__352926 = d;
var G__352927 = e;
var G__352928 = f;
var G__352929 = g;
var G__352930 = h;
var G__352931 = i;
var G__352932 = j;
var G__352933 = k;
var G__352934 = l;
var G__352935 = m;
var G__352936 = n;
var G__352937 = o;
var G__352938 = p;
var G__352939 = q;
var G__352940 = r;
var G__352941 = s;
var G__352942 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__352923,G__352924,G__352925,G__352926,G__352927,G__352928,G__352929,G__352930,G__352931,G__352932,G__352933,G__352934,G__352935,G__352936,G__352937,G__352938,G__352939,G__352940,G__352941,G__352942) : self__.afn.call(null,G__352923,G__352924,G__352925,G__352926,G__352927,G__352928,G__352929,G__352930,G__352931,G__352932,G__352933,G__352934,G__352935,G__352936,G__352937,G__352938,G__352939,G__352940,G__352941,G__352942));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__352943 = self__.afn;
var G__352944 = a;
var G__352945 = b;
var G__352946 = c;
var G__352947 = d;
var G__352948 = e;
var G__352949 = f;
var G__352950 = g;
var G__352951 = h;
var G__352952 = i;
var G__352953 = j;
var G__352954 = k;
var G__352955 = l;
var G__352956 = m;
var G__352957 = n;
var G__352958 = o;
var G__352959 = p;
var G__352960 = q;
var G__352961 = r;
var G__352962 = s;
var G__352963 = t;
var G__352964 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__352943,G__352944,G__352945,G__352946,G__352947,G__352948,G__352949,G__352950,G__352951,G__352952,G__352953,G__352954,G__352955,G__352956,G__352957,G__352958,G__352959,G__352960,G__352961,G__352962,G__352963,G__352964) : cljs.core.apply.call(null,G__352943,G__352944,G__352945,G__352946,G__352947,G__352948,G__352949,G__352950,G__352951,G__352952,G__352953,G__352954,G__352955,G__352956,G__352957,G__352958,G__352959,G__352960,G__352961,G__352962,G__352963,G__352964));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__352969 = o;
if(G__352969){
var bit__4662__auto__ = (G__352969.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4662__auto__) || (G__352969.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__352969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__352969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__352969);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3969__auto__ = !((o == null));
if(and__3969__auto__){
var G__352973 = o;
if(G__352973){
var bit__4662__auto__ = (G__352973.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__352973.cljs$core$IMeta$)){
return true;
} else {
if((!G__352973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__352973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__352973);
}
} else {
return and__3969__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__352976__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__352977 = ret;
var G__352978 = cljs.core.first(ks);
var G__352979 = cljs.core.next(ks);
coll = G__352977;
k = G__352978;
ks = G__352979;
continue;
} else {
return ret;
}
}
break;
}
};
var G__352976 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__352980__i = 0, G__352980__a = new Array(arguments.length -  2);
while (G__352980__i < G__352980__a.length) {G__352980__a[G__352980__i] = arguments[G__352980__i + 2]; ++G__352980__i;}
  ks = new cljs.core.IndexedSeq(G__352980__a,0);
} 
return G__352976__delegate.call(this,coll,k,ks);};
G__352976.cljs$lang$maxFixedArity = 2;
G__352976.cljs$lang$applyTo = (function (arglist__352981){
var coll = cljs.core.first(arglist__352981);
arglist__352981 = cljs.core.next(arglist__352981);
var k = cljs.core.first(arglist__352981);
var ks = cljs.core.rest(arglist__352981);
return G__352976__delegate(coll,k,ks);
});
G__352976.cljs$core$IFn$_invoke$arity$variadic = G__352976__delegate;
return G__352976;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__352982 = null;
if (arguments.length > 2) {
var G__352983__i = 0, G__352983__a = new Array(arguments.length -  2);
while (G__352983__i < G__352983__a.length) {G__352983__a[G__352983__i] = arguments[G__352983__i + 2]; ++G__352983__i;}
G__352982 = new cljs.core.IndexedSeq(G__352983__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__352982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__352985 = x;
if(G__352985){
var bit__4662__auto__ = (G__352985.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4662__auto__) || (G__352985.cljs$core$ICollection$)){
return true;
} else {
if((!G__352985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__352985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__352985);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__352987 = x;
if(G__352987){
var bit__4662__auto__ = (G__352987.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4662__auto__) || (G__352987.cljs$core$ISet$)){
return true;
} else {
if((!G__352987.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__352987);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__352987);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__352989 = x;
if(G__352989){
var bit__4662__auto__ = (G__352989.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4662__auto__) || (G__352989.cljs$core$IAssociative$)){
return true;
} else {
if((!G__352989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__352989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__352989);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__352991 = x;
if(G__352991){
var bit__4662__auto__ = (G__352991.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4662__auto__) || (G__352991.cljs$core$ISequential$)){
return true;
} else {
if((!G__352991.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__352991);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__352991);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__352993 = x;
if(G__352993){
var bit__4662__auto__ = (G__352993.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4662__auto__) || (G__352993.cljs$core$ISorted$)){
return true;
} else {
if((!G__352993.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__352993);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__352993);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__352995 = x;
if(G__352995){
var bit__4662__auto__ = (G__352995.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4662__auto__) || (G__352995.cljs$core$IReduce$)){
return true;
} else {
if((!G__352995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__352995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__352995);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__352997 = x;
if(G__352997){
var bit__4662__auto__ = (G__352997.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4662__auto__) || (G__352997.cljs$core$IMap$)){
return true;
} else {
if((!G__352997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__352997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__352997);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__352999 = x;
if(G__352999){
var bit__4662__auto__ = (G__352999.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4662__auto__) || (G__352999.cljs$core$IVector$)){
return true;
} else {
if((!G__352999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__352999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__352999);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__353001 = x;
if(G__353001){
var bit__4655__auto__ = (G__353001.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4655__auto__) || (G__353001.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj353007 = {};
return obj353007;
});
var js_obj__1 = (function() { 
var G__353010__delegate = function (keyvals){
var G__353008 = goog.object.create;
var G__353009 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__353008,G__353009) : cljs.core.apply.call(null,G__353008,G__353009));
};
var G__353010 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__353011__i = 0, G__353011__a = new Array(arguments.length -  0);
while (G__353011__i < G__353011__a.length) {G__353011__a[G__353011__i] = arguments[G__353011__i + 0]; ++G__353011__i;}
  keyvals = new cljs.core.IndexedSeq(G__353011__a,0);
} 
return G__353010__delegate.call(this,keyvals);};
G__353010.cljs$lang$maxFixedArity = 0;
G__353010.cljs$lang$applyTo = (function (arglist__353012){
var keyvals = cljs.core.seq(arglist__353012);
return G__353010__delegate(keyvals);
});
G__353010.cljs$core$IFn$_invoke$arity$variadic = G__353010__delegate;
return G__353010;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__353013 = null;
if (arguments.length > 0) {
var G__353014__i = 0, G__353014__a = new Array(arguments.length -  0);
while (G__353014__i < G__353014__a.length) {G__353014__a[G__353014__i] = arguments[G__353014__i + 0]; ++G__353014__i;}
G__353013 = new cljs.core.IndexedSeq(G__353014__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__353013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__353017_353019 = obj;
var G__353018_353020 = ((function (G__353017_353019,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__353017_353019,keys))
;
goog.object.forEach(G__353017_353019,G__353018_353020);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__353021 = (i__$1 + (1));
var G__353022 = (j__$1 + (1));
var G__353023 = (len__$1 - (1));
i__$1 = G__353021;
j__$1 = G__353022;
len__$1 = G__353023;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__353024 = (i__$1 - (1));
var G__353025 = (j__$1 - (1));
var G__353026 = (len__$1 - (1));
i__$1 = G__353024;
j__$1 = G__353025;
len__$1 = G__353026;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj353028 = {};
return obj353028;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__353030 = s;
if(G__353030){
var bit__4662__auto__ = (G__353030.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4662__auto__) || (G__353030.cljs$core$ISeq$)){
return true;
} else {
if((!G__353030.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__353030);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__353030);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__353032 = s;
if(G__353032){
var bit__4662__auto__ = (G__353032.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4662__auto__) || (G__353032.cljs$core$ISeqable$)){
return true;
} else {
if((!G__353032.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__353032);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__353032);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3981__auto__ = cljs.core.fn_QMARK_(f);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__353036 = f;
if(G__353036){
var bit__4662__auto__ = (G__353036.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4662__auto__) || (G__353036.cljs$core$IFn$)){
return true;
} else {
if((!G__353036.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__353036);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__353036);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__353049 = n;
return isNaN(G__353049);
})())) && (!((n === Infinity))) && (((function (){var G__353050 = n;
return parseFloat(G__353050);
})() === (function (){var G__353051 = n;
var G__353052 = (10);
return parseInt(G__353051,G__353052);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__353053__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__353054 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__353055 = etc;
s = G__353054;
xs = G__353055;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__353053 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353056__i = 0, G__353056__a = new Array(arguments.length -  2);
while (G__353056__i < G__353056__a.length) {G__353056__a[G__353056__i] = arguments[G__353056__i + 2]; ++G__353056__i;}
  more = new cljs.core.IndexedSeq(G__353056__a,0);
} 
return G__353053__delegate.call(this,x,y,more);};
G__353053.cljs$lang$maxFixedArity = 2;
G__353053.cljs$lang$applyTo = (function (arglist__353057){
var x = cljs.core.first(arglist__353057);
arglist__353057 = cljs.core.next(arglist__353057);
var y = cljs.core.first(arglist__353057);
var more = cljs.core.rest(arglist__353057);
return G__353053__delegate(x,y,more);
});
G__353053.cljs$core$IFn$_invoke$arity$variadic = G__353053__delegate;
return G__353053;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__353058 = null;
if (arguments.length > 2) {
var G__353059__i = 0, G__353059__a = new Array(arguments.length -  2);
while (G__353059__i < G__353059__a.length) {G__353059__a[G__353059__i] = arguments[G__353059__i + 2]; ++G__353059__i;}
G__353058 = new cljs.core.IndexedSeq(G__353059__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__353063 = x;
if(G__353063){
var bit__4655__auto__ = (G__353063.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4655__auto__) || (G__353063.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__353064 = x;
var G__353065 = y;
return goog.array.defaultCompare(G__353064,G__353065);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__353070 = xs;
var G__353071 = ys;
var G__353072 = len;
var G__353073 = (n + (1));
xs = G__353070;
ys = G__353071;
len = G__353072;
n = G__353073;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__353078 = x;
var G__353079 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353078,G__353079) : f.call(null,G__353078,G__353079));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__353080 = y;
var G__353081 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353080,G__353081) : f.call(null,G__353080,G__353081));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__353087 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__353087) : cljs.core.to_array.call(null,G__353087));
})();
var G__353088_353090 = a;
var G__353089_353091 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__353088_353090,G__353089_353091);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__353097 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__353097) : keyfn.call(null,G__353097));
})(),(function (){var G__353098 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__353098) : keyfn.call(null,G__353098));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__353104 = f;
var G__353105 = cljs.core.first(s);
var G__353106 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__353104,G__353105,G__353106) : cljs.core.reduce.call(null,G__353104,G__353105,G__353106));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__353107 = val__$1;
var G__353108 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353107,G__353108) : f.call(null,G__353107,G__353108));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__353109 = nval;
var G__353110 = cljs.core.next(coll__$1);
val__$1 = G__353109;
coll__$1 = G__353110;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__353114 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__353114) : cljs.core.to_array.call(null,G__353114));
})();
var G__353115_353117 = a;
goog.array.shuffle(G__353115_353117);

var G__353116 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__353116) : cljs.core.vec.call(null,G__353116));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__353120 = coll;
if(G__353120){
var bit__4655__auto__ = (G__353120.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__353120.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__353121 = coll;
if(G__353121){
var bit__4655__auto__ = (G__353121.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4655__auto__) || (G__353121.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__353130 = null;
var G__353130__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__353130__1 = (function (x){
var G__353127 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__353127) : cf.call(null,G__353127));
});
var G__353130__2 = (function (x,y){
var G__353128 = x;
var G__353129 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353128,G__353129) : f.call(null,G__353128,G__353129));
});
G__353130 = function(x,y){
switch(arguments.length){
case 0:
return G__353130__0.call(this);
case 1:
return G__353130__1.call(this,x);
case 2:
return G__353130__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__353130.cljs$core$IFn$_invoke$arity$0 = G__353130__0;
G__353130.cljs$core$IFn$_invoke$arity$1 = G__353130__1;
G__353130.cljs$core$IFn$_invoke$arity$2 = G__353130__2;
return G__353130;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__353137 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__353137) : xform.call(null,G__353137));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__353138 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__353138) : f__$1.call(null,G__353138));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__353139__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__353139 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353140__i = 0, G__353140__a = new Array(arguments.length -  2);
while (G__353140__i < G__353140__a.length) {G__353140__a[G__353140__i] = arguments[G__353140__i + 2]; ++G__353140__i;}
  more = new cljs.core.IndexedSeq(G__353140__a,0);
} 
return G__353139__delegate.call(this,x,y,more);};
G__353139.cljs$lang$maxFixedArity = 2;
G__353139.cljs$lang$applyTo = (function (arglist__353141){
var x = cljs.core.first(arglist__353141);
arglist__353141 = cljs.core.next(arglist__353141);
var y = cljs.core.first(arglist__353141);
var more = cljs.core.rest(arglist__353141);
return G__353139__delegate(x,y,more);
});
G__353139.cljs$core$IFn$_invoke$arity$variadic = G__353139__delegate;
return G__353139;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__353142 = null;
if (arguments.length > 2) {
var G__353143__i = 0, G__353143__a = new Array(arguments.length -  2);
while (G__353143__i < G__353143__a.length) {G__353143__a[G__353143__i] = arguments[G__353143__i + 2]; ++G__353143__i;}
G__353142 = new cljs.core.IndexedSeq(G__353143__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__353144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__353144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353145__i = 0, G__353145__a = new Array(arguments.length -  2);
while (G__353145__i < G__353145__a.length) {G__353145__a[G__353145__i] = arguments[G__353145__i + 2]; ++G__353145__i;}
  more = new cljs.core.IndexedSeq(G__353145__a,0);
} 
return G__353144__delegate.call(this,x,y,more);};
G__353144.cljs$lang$maxFixedArity = 2;
G__353144.cljs$lang$applyTo = (function (arglist__353146){
var x = cljs.core.first(arglist__353146);
arglist__353146 = cljs.core.next(arglist__353146);
var y = cljs.core.first(arglist__353146);
var more = cljs.core.rest(arglist__353146);
return G__353144__delegate(x,y,more);
});
G__353144.cljs$core$IFn$_invoke$arity$variadic = G__353144__delegate;
return G__353144;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__353147 = null;
if (arguments.length > 2) {
var G__353148__i = 0, G__353148__a = new Array(arguments.length -  2);
while (G__353148__i < G__353148__a.length) {G__353148__a[G__353148__i] = arguments[G__353148__i + 2]; ++G__353148__i;}
G__353147 = new cljs.core.IndexedSeq(G__353148__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__353149__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__353149 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353150__i = 0, G__353150__a = new Array(arguments.length -  2);
while (G__353150__i < G__353150__a.length) {G__353150__a[G__353150__i] = arguments[G__353150__i + 2]; ++G__353150__i;}
  more = new cljs.core.IndexedSeq(G__353150__a,0);
} 
return G__353149__delegate.call(this,x,y,more);};
G__353149.cljs$lang$maxFixedArity = 2;
G__353149.cljs$lang$applyTo = (function (arglist__353151){
var x = cljs.core.first(arglist__353151);
arglist__353151 = cljs.core.next(arglist__353151);
var y = cljs.core.first(arglist__353151);
var more = cljs.core.rest(arglist__353151);
return G__353149__delegate(x,y,more);
});
G__353149.cljs$core$IFn$_invoke$arity$variadic = G__353149__delegate;
return G__353149;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__353152 = null;
if (arguments.length > 2) {
var G__353153__i = 0, G__353153__a = new Array(arguments.length -  2);
while (G__353153__i < G__353153__a.length) {G__353153__a[G__353153__i] = arguments[G__353153__i + 2]; ++G__353153__i;}
G__353152 = new cljs.core.IndexedSeq(G__353153__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__353158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__353158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353159__i = 0, G__353159__a = new Array(arguments.length -  2);
while (G__353159__i < G__353159__a.length) {G__353159__a[G__353159__i] = arguments[G__353159__i + 2]; ++G__353159__i;}
  more = new cljs.core.IndexedSeq(G__353159__a,0);
} 
return G__353158__delegate.call(this,x,y,more);};
G__353158.cljs$lang$maxFixedArity = 2;
G__353158.cljs$lang$applyTo = (function (arglist__353160){
var x = cljs.core.first(arglist__353160);
arglist__353160 = cljs.core.next(arglist__353160);
var y = cljs.core.first(arglist__353160);
var more = cljs.core.rest(arglist__353160);
return G__353158__delegate(x,y,more);
});
G__353158.cljs$core$IFn$_invoke$arity$variadic = G__353158__delegate;
return G__353158;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__353161 = null;
if (arguments.length > 2) {
var G__353162__i = 0, G__353162__a = new Array(arguments.length -  2);
while (G__353162__i < G__353162__a.length) {G__353162__a[G__353162__i] = arguments[G__353162__i + 2]; ++G__353162__i;}
G__353161 = new cljs.core.IndexedSeq(G__353162__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__353163__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__353164 = y;
var G__353165 = cljs.core.first(more);
var G__353166 = cljs.core.next(more);
x = G__353164;
y = G__353165;
more = G__353166;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__353163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353167__i = 0, G__353167__a = new Array(arguments.length -  2);
while (G__353167__i < G__353167__a.length) {G__353167__a[G__353167__i] = arguments[G__353167__i + 2]; ++G__353167__i;}
  more = new cljs.core.IndexedSeq(G__353167__a,0);
} 
return G__353163__delegate.call(this,x,y,more);};
G__353163.cljs$lang$maxFixedArity = 2;
G__353163.cljs$lang$applyTo = (function (arglist__353168){
var x = cljs.core.first(arglist__353168);
arglist__353168 = cljs.core.next(arglist__353168);
var y = cljs.core.first(arglist__353168);
var more = cljs.core.rest(arglist__353168);
return G__353163__delegate(x,y,more);
});
G__353163.cljs$core$IFn$_invoke$arity$variadic = G__353163__delegate;
return G__353163;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__353169 = null;
if (arguments.length > 2) {
var G__353170__i = 0, G__353170__a = new Array(arguments.length -  2);
while (G__353170__i < G__353170__a.length) {G__353170__a[G__353170__i] = arguments[G__353170__i + 2]; ++G__353170__i;}
G__353169 = new cljs.core.IndexedSeq(G__353170__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__353171__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__353172 = y;
var G__353173 = cljs.core.first(more);
var G__353174 = cljs.core.next(more);
x = G__353172;
y = G__353173;
more = G__353174;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__353171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353175__i = 0, G__353175__a = new Array(arguments.length -  2);
while (G__353175__i < G__353175__a.length) {G__353175__a[G__353175__i] = arguments[G__353175__i + 2]; ++G__353175__i;}
  more = new cljs.core.IndexedSeq(G__353175__a,0);
} 
return G__353171__delegate.call(this,x,y,more);};
G__353171.cljs$lang$maxFixedArity = 2;
G__353171.cljs$lang$applyTo = (function (arglist__353176){
var x = cljs.core.first(arglist__353176);
arglist__353176 = cljs.core.next(arglist__353176);
var y = cljs.core.first(arglist__353176);
var more = cljs.core.rest(arglist__353176);
return G__353171__delegate(x,y,more);
});
G__353171.cljs$core$IFn$_invoke$arity$variadic = G__353171__delegate;
return G__353171;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__353177 = null;
if (arguments.length > 2) {
var G__353178__i = 0, G__353178__a = new Array(arguments.length -  2);
while (G__353178__i < G__353178__a.length) {G__353178__a[G__353178__i] = arguments[G__353178__i + 2]; ++G__353178__i;}
G__353177 = new cljs.core.IndexedSeq(G__353178__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__353179__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__353180 = y;
var G__353181 = cljs.core.first(more);
var G__353182 = cljs.core.next(more);
x = G__353180;
y = G__353181;
more = G__353182;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__353179 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353183__i = 0, G__353183__a = new Array(arguments.length -  2);
while (G__353183__i < G__353183__a.length) {G__353183__a[G__353183__i] = arguments[G__353183__i + 2]; ++G__353183__i;}
  more = new cljs.core.IndexedSeq(G__353183__a,0);
} 
return G__353179__delegate.call(this,x,y,more);};
G__353179.cljs$lang$maxFixedArity = 2;
G__353179.cljs$lang$applyTo = (function (arglist__353184){
var x = cljs.core.first(arglist__353184);
arglist__353184 = cljs.core.next(arglist__353184);
var y = cljs.core.first(arglist__353184);
var more = cljs.core.rest(arglist__353184);
return G__353179__delegate(x,y,more);
});
G__353179.cljs$core$IFn$_invoke$arity$variadic = G__353179__delegate;
return G__353179;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__353185 = null;
if (arguments.length > 2) {
var G__353186__i = 0, G__353186__a = new Array(arguments.length -  2);
while (G__353186__i < G__353186__a.length) {G__353186__a[G__353186__i] = arguments[G__353186__i + 2]; ++G__353186__i;}
G__353185 = new cljs.core.IndexedSeq(G__353186__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__353187__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__353188 = y;
var G__353189 = cljs.core.first(more);
var G__353190 = cljs.core.next(more);
x = G__353188;
y = G__353189;
more = G__353190;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__353187 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353191__i = 0, G__353191__a = new Array(arguments.length -  2);
while (G__353191__i < G__353191__a.length) {G__353191__a[G__353191__i] = arguments[G__353191__i + 2]; ++G__353191__i;}
  more = new cljs.core.IndexedSeq(G__353191__a,0);
} 
return G__353187__delegate.call(this,x,y,more);};
G__353187.cljs$lang$maxFixedArity = 2;
G__353187.cljs$lang$applyTo = (function (arglist__353192){
var x = cljs.core.first(arglist__353192);
arglist__353192 = cljs.core.next(arglist__353192);
var y = cljs.core.first(arglist__353192);
var more = cljs.core.rest(arglist__353192);
return G__353187__delegate(x,y,more);
});
G__353187.cljs$core$IFn$_invoke$arity$variadic = G__353187__delegate;
return G__353187;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__353193 = null;
if (arguments.length > 2) {
var G__353194__i = 0, G__353194__a = new Array(arguments.length -  2);
while (G__353194__i < G__353194__a.length) {G__353194__a[G__353194__i] = arguments[G__353194__i + 2]; ++G__353194__i;}
G__353193 = new cljs.core.IndexedSeq(G__353194__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
});
var max__3 = (function() { 
var G__353195__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4298__auto__ = x;
var y__4299__auto__ = y;
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})(),more);
};
var G__353195 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353196__i = 0, G__353196__a = new Array(arguments.length -  2);
while (G__353196__i < G__353196__a.length) {G__353196__a[G__353196__i] = arguments[G__353196__i + 2]; ++G__353196__i;}
  more = new cljs.core.IndexedSeq(G__353196__a,0);
} 
return G__353195__delegate.call(this,x,y,more);};
G__353195.cljs$lang$maxFixedArity = 2;
G__353195.cljs$lang$applyTo = (function (arglist__353197){
var x = cljs.core.first(arglist__353197);
arglist__353197 = cljs.core.next(arglist__353197);
var y = cljs.core.first(arglist__353197);
var more = cljs.core.rest(arglist__353197);
return G__353195__delegate(x,y,more);
});
G__353195.cljs$core$IFn$_invoke$arity$variadic = G__353195__delegate;
return G__353195;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__353198 = null;
if (arguments.length > 2) {
var G__353199__i = 0, G__353199__a = new Array(arguments.length -  2);
while (G__353199__i < G__353199__a.length) {G__353199__a[G__353199__i] = arguments[G__353199__i + 2]; ++G__353199__i;}
G__353198 = new cljs.core.IndexedSeq(G__353199__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
});
var min__3 = (function() { 
var G__353200__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4305__auto__ = x;
var y__4306__auto__ = y;
return ((x__4305__auto__ < y__4306__auto__) ? x__4305__auto__ : y__4306__auto__);
})(),more);
};
var G__353200 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353201__i = 0, G__353201__a = new Array(arguments.length -  2);
while (G__353201__i < G__353201__a.length) {G__353201__a[G__353201__i] = arguments[G__353201__i + 2]; ++G__353201__i;}
  more = new cljs.core.IndexedSeq(G__353201__a,0);
} 
return G__353200__delegate.call(this,x,y,more);};
G__353200.cljs$lang$maxFixedArity = 2;
G__353200.cljs$lang$applyTo = (function (arglist__353202){
var x = cljs.core.first(arglist__353202);
arglist__353202 = cljs.core.next(arglist__353202);
var y = cljs.core.first(arglist__353202);
var more = cljs.core.rest(arglist__353202);
return G__353200__delegate(x,y,more);
});
G__353200.cljs$core$IFn$_invoke$arity$variadic = G__353200__delegate;
return G__353200;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__353203 = null;
if (arguments.length > 2) {
var G__353204__i = 0, G__353204__a = new Array(arguments.length -  2);
while (G__353204__i < G__353204__a.length) {G__353204__a[G__353204__i] = arguments[G__353204__i + 2]; ++G__353204__i;}
G__353203 = new cljs.core.IndexedSeq(G__353204__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__353205__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__353205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353206__i = 0, G__353206__a = new Array(arguments.length -  2);
while (G__353206__i < G__353206__a.length) {G__353206__a[G__353206__i] = arguments[G__353206__i + 2]; ++G__353206__i;}
  more = new cljs.core.IndexedSeq(G__353206__a,0);
} 
return G__353205__delegate.call(this,x,y,more);};
G__353205.cljs$lang$maxFixedArity = 2;
G__353205.cljs$lang$applyTo = (function (arglist__353207){
var x = cljs.core.first(arglist__353207);
arglist__353207 = cljs.core.next(arglist__353207);
var y = cljs.core.first(arglist__353207);
var more = cljs.core.rest(arglist__353207);
return G__353205__delegate(x,y,more);
});
G__353205.cljs$core$IFn$_invoke$arity$variadic = G__353205__delegate;
return G__353205;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__353208 = null;
if (arguments.length > 2) {
var G__353209__i = 0, G__353209__a = new Array(arguments.length -  2);
while (G__353209__i < G__353209__a.length) {G__353209__a[G__353209__i] = arguments[G__353209__i + 2]; ++G__353209__i;}
G__353208 = new cljs.core.IndexedSeq(G__353209__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__353210__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__353210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353211__i = 0, G__353211__a = new Array(arguments.length -  2);
while (G__353211__i < G__353211__a.length) {G__353211__a[G__353211__i] = arguments[G__353211__i + 2]; ++G__353211__i;}
  more = new cljs.core.IndexedSeq(G__353211__a,0);
} 
return G__353210__delegate.call(this,x,y,more);};
G__353210.cljs$lang$maxFixedArity = 2;
G__353210.cljs$lang$applyTo = (function (arglist__353212){
var x = cljs.core.first(arglist__353212);
arglist__353212 = cljs.core.next(arglist__353212);
var y = cljs.core.first(arglist__353212);
var more = cljs.core.rest(arglist__353212);
return G__353210__delegate(x,y,more);
});
G__353210.cljs$core$IFn$_invoke$arity$variadic = G__353210__delegate;
return G__353210;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__353213 = null;
if (arguments.length > 2) {
var G__353214__i = 0, G__353214__a = new Array(arguments.length -  2);
while (G__353214__i < G__353214__a.length) {G__353214__a[G__353214__i] = arguments[G__353214__i + 2]; ++G__353214__i;}
G__353213 = new cljs.core.IndexedSeq(G__353214__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__353219__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__353219 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353220__i = 0, G__353220__a = new Array(arguments.length -  2);
while (G__353220__i < G__353220__a.length) {G__353220__a[G__353220__i] = arguments[G__353220__i + 2]; ++G__353220__i;}
  more = new cljs.core.IndexedSeq(G__353220__a,0);
} 
return G__353219__delegate.call(this,x,y,more);};
G__353219.cljs$lang$maxFixedArity = 2;
G__353219.cljs$lang$applyTo = (function (arglist__353221){
var x = cljs.core.first(arglist__353221);
arglist__353221 = cljs.core.next(arglist__353221);
var y = cljs.core.first(arglist__353221);
var more = cljs.core.rest(arglist__353221);
return G__353219__delegate(x,y,more);
});
G__353219.cljs$core$IFn$_invoke$arity$variadic = G__353219__delegate;
return G__353219;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__353222 = null;
if (arguments.length > 2) {
var G__353223__i = 0, G__353223__a = new Array(arguments.length -  2);
while (G__353223__i < G__353223__a.length) {G__353223__a[G__353223__i] = arguments[G__353223__i + 2]; ++G__353223__i;}
G__353222 = new cljs.core.IndexedSeq(G__353223__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__353224__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__353224 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353225__i = 0, G__353225__a = new Array(arguments.length -  2);
while (G__353225__i < G__353225__a.length) {G__353225__a[G__353225__i] = arguments[G__353225__i + 2]; ++G__353225__i;}
  more = new cljs.core.IndexedSeq(G__353225__a,0);
} 
return G__353224__delegate.call(this,x,y,more);};
G__353224.cljs$lang$maxFixedArity = 2;
G__353224.cljs$lang$applyTo = (function (arglist__353226){
var x = cljs.core.first(arglist__353226);
arglist__353226 = cljs.core.next(arglist__353226);
var y = cljs.core.first(arglist__353226);
var more = cljs.core.rest(arglist__353226);
return G__353224__delegate(x,y,more);
});
G__353224.cljs$core$IFn$_invoke$arity$variadic = G__353224__delegate;
return G__353224;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__353227 = null;
if (arguments.length > 2) {
var G__353228__i = 0, G__353228__a = new Array(arguments.length -  2);
while (G__353228__i < G__353228__a.length) {G__353228__a[G__353228__i] = arguments[G__353228__i + 2]; ++G__353228__i;}
G__353227 = new cljs.core.IndexedSeq(G__353228__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__353229__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__353229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353230__i = 0, G__353230__a = new Array(arguments.length -  2);
while (G__353230__i < G__353230__a.length) {G__353230__a[G__353230__i] = arguments[G__353230__i + 2]; ++G__353230__i;}
  more = new cljs.core.IndexedSeq(G__353230__a,0);
} 
return G__353229__delegate.call(this,x,y,more);};
G__353229.cljs$lang$maxFixedArity = 2;
G__353229.cljs$lang$applyTo = (function (arglist__353231){
var x = cljs.core.first(arglist__353231);
arglist__353231 = cljs.core.next(arglist__353231);
var y = cljs.core.first(arglist__353231);
var more = cljs.core.rest(arglist__353231);
return G__353229__delegate(x,y,more);
});
G__353229.cljs$core$IFn$_invoke$arity$variadic = G__353229__delegate;
return G__353229;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__353232 = null;
if (arguments.length > 2) {
var G__353233__i = 0, G__353233__a = new Array(arguments.length -  2);
while (G__353233__i < G__353233__a.length) {G__353233__a[G__353233__i] = arguments[G__353233__i + 2]; ++G__353233__i;}
G__353232 = new cljs.core.IndexedSeq(G__353233__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__353236 = x;
var G__353237 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__353236,G__353237) : cljs.core.mod.call(null,G__353236,G__353237));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__353238__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__353238 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353239__i = 0, G__353239__a = new Array(arguments.length -  2);
while (G__353239__i < G__353239__a.length) {G__353239__a[G__353239__i] = arguments[G__353239__i + 2]; ++G__353239__i;}
  more = new cljs.core.IndexedSeq(G__353239__a,0);
} 
return G__353238__delegate.call(this,x,y,more);};
G__353238.cljs$lang$maxFixedArity = 2;
G__353238.cljs$lang$applyTo = (function (arglist__353240){
var x = cljs.core.first(arglist__353240);
arglist__353240 = cljs.core.next(arglist__353240);
var y = cljs.core.first(arglist__353240);
var more = cljs.core.rest(arglist__353240);
return G__353238__delegate(x,y,more);
});
G__353238.cljs$core$IFn$_invoke$arity$variadic = G__353238__delegate;
return G__353238;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__353241 = null;
if (arguments.length > 2) {
var G__353242__i = 0, G__353242__a = new Array(arguments.length -  2);
while (G__353242__i < G__353242__a.length) {G__353242__a[G__353242__i] = arguments[G__353242__i + 2]; ++G__353242__i;}
G__353241 = new cljs.core.IndexedSeq(G__353242__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__353243__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__353243 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353244__i = 0, G__353244__a = new Array(arguments.length -  2);
while (G__353244__i < G__353244__a.length) {G__353244__a[G__353244__i] = arguments[G__353244__i + 2]; ++G__353244__i;}
  more = new cljs.core.IndexedSeq(G__353244__a,0);
} 
return G__353243__delegate.call(this,x,y,more);};
G__353243.cljs$lang$maxFixedArity = 2;
G__353243.cljs$lang$applyTo = (function (arglist__353245){
var x = cljs.core.first(arglist__353245);
arglist__353245 = cljs.core.next(arglist__353245);
var y = cljs.core.first(arglist__353245);
var more = cljs.core.rest(arglist__353245);
return G__353243__delegate(x,y,more);
});
G__353243.cljs$core$IFn$_invoke$arity$variadic = G__353243__delegate;
return G__353243;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__353246 = null;
if (arguments.length > 2) {
var G__353247__i = 0, G__353247__a = new Array(arguments.length -  2);
while (G__353247__i < G__353247__a.length) {G__353247__a[G__353247__i] = arguments[G__353247__i + 2]; ++G__353247__i;}
G__353246 = new cljs.core.IndexedSeq(G__353247__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__353250 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__353250) : Math.floor.call(null,G__353250));
} else {
var G__353251 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__353251) : Math.ceil.call(null,G__353251));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__353252__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__353252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353253__i = 0, G__353253__a = new Array(arguments.length -  2);
while (G__353253__i < G__353253__a.length) {G__353253__a[G__353253__i] = arguments[G__353253__i + 2]; ++G__353253__i;}
  more = new cljs.core.IndexedSeq(G__353253__a,0);
} 
return G__353252__delegate.call(this,x,y,more);};
G__353252.cljs$lang$maxFixedArity = 2;
G__353252.cljs$lang$applyTo = (function (arglist__353254){
var x = cljs.core.first(arglist__353254);
arglist__353254 = cljs.core.next(arglist__353254);
var y = cljs.core.first(arglist__353254);
var more = cljs.core.rest(arglist__353254);
return G__353252__delegate(x,y,more);
});
G__353252.cljs$core$IFn$_invoke$arity$variadic = G__353252__delegate;
return G__353252;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__353255 = null;
if (arguments.length > 2) {
var G__353256__i = 0, G__353256__a = new Array(arguments.length -  2);
while (G__353256__i < G__353256__a.length) {G__353256__a[G__353256__i] = arguments[G__353256__i + 2]; ++G__353256__i;}
G__353255 = new cljs.core.IndexedSeq(G__353256__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__353257__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__353257 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353258__i = 0, G__353258__a = new Array(arguments.length -  2);
while (G__353258__i < G__353258__a.length) {G__353258__a[G__353258__i] = arguments[G__353258__i + 2]; ++G__353258__i;}
  more = new cljs.core.IndexedSeq(G__353258__a,0);
} 
return G__353257__delegate.call(this,x,y,more);};
G__353257.cljs$lang$maxFixedArity = 2;
G__353257.cljs$lang$applyTo = (function (arglist__353259){
var x = cljs.core.first(arglist__353259);
arglist__353259 = cljs.core.next(arglist__353259);
var y = cljs.core.first(arglist__353259);
var more = cljs.core.rest(arglist__353259);
return G__353257__delegate(x,y,more);
});
G__353257.cljs$core$IFn$_invoke$arity$variadic = G__353257__delegate;
return G__353257;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__353260 = null;
if (arguments.length > 2) {
var G__353261__i = 0, G__353261__a = new Array(arguments.length -  2);
while (G__353261__i < G__353261__a.length) {G__353261__a[G__353261__i] = arguments[G__353261__i + 2]; ++G__353261__i;}
G__353260 = new cljs.core.IndexedSeq(G__353261__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__353262__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__353262 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353263__i = 0, G__353263__a = new Array(arguments.length -  2);
while (G__353263__i < G__353263__a.length) {G__353263__a[G__353263__i] = arguments[G__353263__i + 2]; ++G__353263__i;}
  more = new cljs.core.IndexedSeq(G__353263__a,0);
} 
return G__353262__delegate.call(this,x,y,more);};
G__353262.cljs$lang$maxFixedArity = 2;
G__353262.cljs$lang$applyTo = (function (arglist__353264){
var x = cljs.core.first(arglist__353264);
arglist__353264 = cljs.core.next(arglist__353264);
var y = cljs.core.first(arglist__353264);
var more = cljs.core.rest(arglist__353264);
return G__353262__delegate(x,y,more);
});
G__353262.cljs$core$IFn$_invoke$arity$variadic = G__353262__delegate;
return G__353262;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__353265 = null;
if (arguments.length > 2) {
var G__353266__i = 0, G__353266__a = new Array(arguments.length -  2);
while (G__353266__i < G__353266__a.length) {G__353266__a[G__353266__i] = arguments[G__353266__i + 2]; ++G__353266__i;}
G__353265 = new cljs.core.IndexedSeq(G__353266__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__353267__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__353267 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353268__i = 0, G__353268__a = new Array(arguments.length -  2);
while (G__353268__i < G__353268__a.length) {G__353268__a[G__353268__i] = arguments[G__353268__i + 2]; ++G__353268__i;}
  more = new cljs.core.IndexedSeq(G__353268__a,0);
} 
return G__353267__delegate.call(this,x,y,more);};
G__353267.cljs$lang$maxFixedArity = 2;
G__353267.cljs$lang$applyTo = (function (arglist__353269){
var x = cljs.core.first(arglist__353269);
arglist__353269 = cljs.core.next(arglist__353269);
var y = cljs.core.first(arglist__353269);
var more = cljs.core.rest(arglist__353269);
return G__353267__delegate(x,y,more);
});
G__353267.cljs$core$IFn$_invoke$arity$variadic = G__353267__delegate;
return G__353267;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__353270 = null;
if (arguments.length > 2) {
var G__353271__i = 0, G__353271__a = new Array(arguments.length -  2);
while (G__353271__i < G__353271__a.length) {G__353271__a[G__353271__i] = arguments[G__353271__i + 2]; ++G__353271__i;}
G__353270 = new cljs.core.IndexedSeq(G__353271__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__353276__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__353277 = y;
var G__353278 = cljs.core.first(more);
var G__353279 = cljs.core.next(more);
x = G__353277;
y = G__353278;
more = G__353279;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__353276 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353280__i = 0, G__353280__a = new Array(arguments.length -  2);
while (G__353280__i < G__353280__a.length) {G__353280__a[G__353280__i] = arguments[G__353280__i + 2]; ++G__353280__i;}
  more = new cljs.core.IndexedSeq(G__353280__a,0);
} 
return G__353276__delegate.call(this,x,y,more);};
G__353276.cljs$lang$maxFixedArity = 2;
G__353276.cljs$lang$applyTo = (function (arglist__353281){
var x = cljs.core.first(arglist__353281);
arglist__353281 = cljs.core.next(arglist__353281);
var y = cljs.core.first(arglist__353281);
var more = cljs.core.rest(arglist__353281);
return G__353276__delegate(x,y,more);
});
G__353276.cljs$core$IFn$_invoke$arity$variadic = G__353276__delegate;
return G__353276;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__353282 = null;
if (arguments.length > 2) {
var G__353283__i = 0, G__353283__a = new Array(arguments.length -  2);
while (G__353283__i < G__353283__a.length) {G__353283__a[G__353283__i] = arguments[G__353283__i + 2]; ++G__353283__i;}
G__353282 = new cljs.core.IndexedSeq(G__353283__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__353284 = (n__$1 - (1));
var G__353285 = cljs.core.next(xs);
n__$1 = G__353284;
xs = G__353285;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__353289 = x;
return goog.string.buildString(G__353289);
}
});
var str__2 = (function() { 
var G__353290__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__353291 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__353292 = cljs.core.next(more);
sb = G__353291;
more = G__353292;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__353290 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__353293__i = 0, G__353293__a = new Array(arguments.length -  1);
while (G__353293__i < G__353293__a.length) {G__353293__a[G__353293__i] = arguments[G__353293__i + 1]; ++G__353293__i;}
  ys = new cljs.core.IndexedSeq(G__353293__a,0);
} 
return G__353290__delegate.call(this,x,ys);};
G__353290.cljs$lang$maxFixedArity = 1;
G__353290.cljs$lang$applyTo = (function (arglist__353294){
var x = cljs.core.first(arglist__353294);
var ys = cljs.core.rest(arglist__353294);
return G__353290__delegate(x,ys);
});
G__353290.cljs$core$IFn$_invoke$arity$variadic = G__353290__delegate;
return G__353290;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__353295 = null;
if (arguments.length > 1) {
var G__353296__i = 0, G__353296__a = new Array(arguments.length -  1);
while (G__353296__i < G__353296__a.length) {G__353296__a[G__353296__i] = arguments[G__353296__i + 1]; ++G__353296__i;}
G__353295 = new cljs.core.IndexedSeq(G__353296__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__353295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__353297 = cljs.core.next(xs);
var G__353298 = cljs.core.next(ys);
xs = G__353297;
ys = G__353298;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__353299 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__353300 = cljs.core.next(s);
res = G__353299;
s = G__353300;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__353305 = ((h + (cljs.core.hash((function (){var G__353303 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__353303) : cljs.core.key.call(null,G__353303));
})()) ^ cljs.core.hash((function (){var G__353304 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__353304) : cljs.core.val.call(null,G__353304));
})()))) % (4503599627370496));
var G__353306 = cljs.core.next(s);
h = G__353305;
s = G__353306;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__353307 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__353308 = cljs.core.next(s__$1);
h = G__353307;
s__$1 = G__353308;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__353319_353329 = cljs.core.seq(fn_map);
var chunk__353320_353330 = null;
var count__353321_353331 = (0);
var i__353322_353332 = (0);
while(true){
if((i__353322_353332 < count__353321_353331)){
var vec__353323_353333 = chunk__353320_353330.cljs$core$IIndexed$_nth$arity$2(null,i__353322_353332);
var key_name_353334 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__353323_353333,(0),null);
var f_353335 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__353323_353333,(1),null);
var str_name_353336 = (function (){var G__353324 = key_name_353334;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__353324) : cljs.core.name.call(null,G__353324));
})();
(obj[str_name_353336] = f_353335);

var G__353337 = seq__353319_353329;
var G__353338 = chunk__353320_353330;
var G__353339 = count__353321_353331;
var G__353340 = (i__353322_353332 + (1));
seq__353319_353329 = G__353337;
chunk__353320_353330 = G__353338;
count__353321_353331 = G__353339;
i__353322_353332 = G__353340;
continue;
} else {
var temp__4126__auto___353341 = cljs.core.seq(seq__353319_353329);
if(temp__4126__auto___353341){
var seq__353319_353342__$1 = temp__4126__auto___353341;
if(cljs.core.chunked_seq_QMARK_(seq__353319_353342__$1)){
var c__4768__auto___353343 = (function (){var G__353325 = seq__353319_353342__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__353325) : cljs.core.chunk_first.call(null,G__353325));
})();
var G__353344 = (function (){var G__353326 = seq__353319_353342__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__353326) : cljs.core.chunk_rest.call(null,G__353326));
})();
var G__353345 = c__4768__auto___353343;
var G__353346 = cljs.core.count(c__4768__auto___353343);
var G__353347 = (0);
seq__353319_353329 = G__353344;
chunk__353320_353330 = G__353345;
count__353321_353331 = G__353346;
i__353322_353332 = G__353347;
continue;
} else {
var vec__353327_353348 = cljs.core.first(seq__353319_353342__$1);
var key_name_353349 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__353327_353348,(0),null);
var f_353350 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__353327_353348,(1),null);
var str_name_353351 = (function (){var G__353328 = key_name_353349;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__353328) : cljs.core.name.call(null,G__353328));
})();
(obj[str_name_353351] = f_353350);

var G__353352 = cljs.core.next(seq__353319_353342__$1);
var G__353353 = null;
var G__353354 = (0);
var G__353355 = (0);
seq__353319_353329 = G__353352;
chunk__353320_353330 = G__353353;
count__353321_353331 = G__353354;
i__353322_353332 = G__353355;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__353357 = coll;
if(G__353357){
var bit__4662__auto__ = (G__353357.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4662__auto__) || (G__353357.cljs$core$IReversible$)){
return true;
} else {
if((!G__353357.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__353357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__353357);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__353358 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__353358;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__353359 = (i - (1));
var G__353360 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__353359;
r = G__353360;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__353361__i = 0, G__353361__a = new Array(arguments.length -  0);
while (G__353361__i < G__353361__a.length) {G__353361__a[G__353361__i] = arguments[G__353361__i + 0]; ++G__353361__i;}
  xs = new cljs.core.IndexedSeq(G__353361__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__353362){
var xs = cljs.core.seq(arglist__353362);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3981__auto__ = (coll == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var G__353366 = coll;
if(G__353366){
var bit__4655__auto__ = (G__353366.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4655__auto__) || (G__353366.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__353368 = x;
if(G__353368){
var bit__4662__auto__ = (G__353368.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4662__auto__) || (G__353368.cljs$core$IList$)){
return true;
} else {
if((!G__353368.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__353368);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__353368);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.not(a.ns);
if(and__3969__auto__){
return b.ns;
} else {
return and__3969__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__353375 = a.ns;
var G__353376 = b.ns;
return goog.array.defaultCompare(G__353375,G__353376);
})();
if(((0) === nsc)){
var G__353377 = a.name;
var G__353378 = b.name;
return goog.array.defaultCompare(G__353377,G__353378);
} else {
return nsc;
}
}
} else {
var G__353379 = a.name;
var G__353380 = b.name;
return goog.array.defaultCompare(G__353379,G__353380);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4402__auto__ = self__._hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__353382 = null;
var G__353382__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__353382__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__353382 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__353382__2.call(this,self__,coll);
case 3:
return G__353382__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__353382.cljs$core$IFn$_invoke$arity$2 = G__353382__2;
G__353382.cljs$core$IFn$_invoke$arity$3 = G__353382__3;
return G__353382;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args353381){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args353381)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__353384 = x;
if(G__353384){
var bit__4655__auto__ = (G__353384.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__353384.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__353386 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__353386) : cljs.core.name.call(null,G__353386));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__353387 = ls.sval();
ls = G__353387;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__353389 = s;
if(G__353389){
var bit__4655__auto__ = (G__353389.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4655__auto__) || (G__353389.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__353390 = cljs.core.next(s__$1);
s__$1 = G__353390;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_353391 = (0);
var xs_353392 = cljs.core.seq(coll);
while(true){
if(xs_353392){
(ret[i_353391] = cljs.core.to_array(cljs.core.first(xs_353392)));

var G__353393 = (i_353391 + (1));
var G__353394 = cljs.core.next(xs_353392);
i_353391 = G__353393;
xs_353392 = G__353394;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__353397 = (i + (1));
var G__353398 = cljs.core.next(s__$1);
i = G__353397;
s__$1 = G__353398;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___353399 = size;
var i_353400 = (0);
while(true){
if((i_353400 < n__4868__auto___353399)){
(a[i_353400] = init_val_or_seq);

var G__353401 = (i_353400 + (1));
i_353400 = G__353401;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__353404 = (i + (1));
var G__353405 = cljs.core.next(s__$1);
i = G__353404;
s__$1 = G__353405;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___353406 = size;
var i_353407 = (0);
while(true){
if((i_353407 < n__4868__auto___353406)){
(a[i_353407] = init_val_or_seq);

var G__353408 = (i_353407 + (1));
i_353407 = G__353408;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__353411 = (i + (1));
var G__353412 = cljs.core.next(s__$1);
i = G__353411;
s__$1 = G__353412;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___353413 = size;
var i_353414 = (0);
while(true){
if((i_353414 < n__4868__auto___353413)){
(a[i_353414] = init_val_or_seq);

var G__353415 = (i_353414 + (1));
i_353414 = G__353415;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__353418 = (i + (1));
var G__353419 = cljs.core.next(s__$1);
i = G__353418;
s__$1 = G__353419;
continue;
} else {
return a;
}
break;
}
} else {
var n__4868__auto___353420 = size;
var i_353421 = (0);
while(true){
if((i_353421 < n__4868__auto___353420)){
(a[i_353421] = init_val_or_seq);

var G__353422 = (i_353421 + (1));
i_353421 = G__353422;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__353423 = cljs.core.next(s__$1);
var G__353424 = (i - (1));
var G__353425 = (sum + (1));
s__$1 = G__353423;
i = G__353424;
sum = G__353425;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__353445__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__353445 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__353446__i = 0, G__353446__a = new Array(arguments.length -  2);
while (G__353446__i < G__353446__a.length) {G__353446__a[G__353446__i] = arguments[G__353446__i + 2]; ++G__353446__i;}
  zs = new cljs.core.IndexedSeq(G__353446__a,0);
} 
return G__353445__delegate.call(this,x,y,zs);};
G__353445.cljs$lang$maxFixedArity = 2;
G__353445.cljs$lang$applyTo = (function (arglist__353447){
var x = cljs.core.first(arglist__353447);
arglist__353447 = cljs.core.next(arglist__353447);
var y = cljs.core.first(arglist__353447);
var zs = cljs.core.rest(arglist__353447);
return G__353445__delegate(x,y,zs);
});
G__353445.cljs$core$IFn$_invoke$arity$variadic = G__353445__delegate;
return G__353445;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__353448 = null;
if (arguments.length > 2) {
var G__353449__i = 0, G__353449__a = new Array(arguments.length -  2);
while (G__353449__i < G__353449__a.length) {G__353449__a[G__353449__i] = arguments[G__353449__i + 2]; ++G__353449__i;}
G__353448 = new cljs.core.IndexedSeq(G__353449__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__353450__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__353450 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__353451__i = 0, G__353451__a = new Array(arguments.length -  4);
while (G__353451__i < G__353451__a.length) {G__353451__a[G__353451__i] = arguments[G__353451__i + 4]; ++G__353451__i;}
  more = new cljs.core.IndexedSeq(G__353451__a,0);
} 
return G__353450__delegate.call(this,a,b,c,d,more);};
G__353450.cljs$lang$maxFixedArity = 4;
G__353450.cljs$lang$applyTo = (function (arglist__353452){
var a = cljs.core.first(arglist__353452);
arglist__353452 = cljs.core.next(arglist__353452);
var b = cljs.core.first(arglist__353452);
arglist__353452 = cljs.core.next(arglist__353452);
var c = cljs.core.first(arglist__353452);
arglist__353452 = cljs.core.next(arglist__353452);
var d = cljs.core.first(arglist__353452);
var more = cljs.core.rest(arglist__353452);
return G__353450__delegate(a,b,c,d,more);
});
G__353450.cljs$core$IFn$_invoke$arity$variadic = G__353450__delegate;
return G__353450;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__353453 = null;
if (arguments.length > 4) {
var G__353454__i = 0, G__353454__a = new Array(arguments.length -  4);
while (G__353454__i < G__353454__a.length) {G__353454__a[G__353454__i] = arguments[G__353454__i + 4]; ++G__353454__i;}
G__353453 = new cljs.core.IndexedSeq(G__353454__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__353453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__353455__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__353456 = ntcoll;
var G__353457 = cljs.core.first(vals);
var G__353458 = cljs.core.next(vals);
tcoll = G__353456;
val = G__353457;
vals = G__353458;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__353455 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__353459__i = 0, G__353459__a = new Array(arguments.length -  2);
while (G__353459__i < G__353459__a.length) {G__353459__a[G__353459__i] = arguments[G__353459__i + 2]; ++G__353459__i;}
  vals = new cljs.core.IndexedSeq(G__353459__a,0);
} 
return G__353455__delegate.call(this,tcoll,val,vals);};
G__353455.cljs$lang$maxFixedArity = 2;
G__353455.cljs$lang$applyTo = (function (arglist__353460){
var tcoll = cljs.core.first(arglist__353460);
arglist__353460 = cljs.core.next(arglist__353460);
var val = cljs.core.first(arglist__353460);
var vals = cljs.core.rest(arglist__353460);
return G__353455__delegate(tcoll,val,vals);
});
G__353455.cljs$core$IFn$_invoke$arity$variadic = G__353455__delegate;
return G__353455;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__353461 = null;
if (arguments.length > 2) {
var G__353462__i = 0, G__353462__a = new Array(arguments.length -  2);
while (G__353462__i < G__353462__a.length) {G__353462__a[G__353462__i] = arguments[G__353462__i + 2]; ++G__353462__i;}
G__353461 = new cljs.core.IndexedSeq(G__353462__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__353461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__353463__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__353464 = ntcoll;
var G__353465 = cljs.core.first(kvs);
var G__353466 = cljs.core.second(kvs);
var G__353467 = cljs.core.nnext(kvs);
tcoll = G__353464;
key = G__353465;
val = G__353466;
kvs = G__353467;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__353463 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__353468__i = 0, G__353468__a = new Array(arguments.length -  3);
while (G__353468__i < G__353468__a.length) {G__353468__a[G__353468__i] = arguments[G__353468__i + 3]; ++G__353468__i;}
  kvs = new cljs.core.IndexedSeq(G__353468__a,0);
} 
return G__353463__delegate.call(this,tcoll,key,val,kvs);};
G__353463.cljs$lang$maxFixedArity = 3;
G__353463.cljs$lang$applyTo = (function (arglist__353469){
var tcoll = cljs.core.first(arglist__353469);
arglist__353469 = cljs.core.next(arglist__353469);
var key = cljs.core.first(arglist__353469);
arglist__353469 = cljs.core.next(arglist__353469);
var val = cljs.core.first(arglist__353469);
var kvs = cljs.core.rest(arglist__353469);
return G__353463__delegate(tcoll,key,val,kvs);
});
G__353463.cljs$core$IFn$_invoke$arity$variadic = G__353463__delegate;
return G__353463;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__353470 = null;
if (arguments.length > 3) {
var G__353471__i = 0, G__353471__a = new Array(arguments.length -  3);
while (G__353471__i < G__353471__a.length) {G__353471__a[G__353471__i] = arguments[G__353471__i + 3]; ++G__353471__i;}
G__353470 = new cljs.core.IndexedSeq(G__353471__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__353470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__353472__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__353473 = ntcoll;
var G__353474 = cljs.core.first(ks);
var G__353475 = cljs.core.next(ks);
tcoll = G__353473;
key = G__353474;
ks = G__353475;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__353472 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__353476__i = 0, G__353476__a = new Array(arguments.length -  2);
while (G__353476__i < G__353476__a.length) {G__353476__a[G__353476__i] = arguments[G__353476__i + 2]; ++G__353476__i;}
  ks = new cljs.core.IndexedSeq(G__353476__a,0);
} 
return G__353472__delegate.call(this,tcoll,key,ks);};
G__353472.cljs$lang$maxFixedArity = 2;
G__353472.cljs$lang$applyTo = (function (arglist__353477){
var tcoll = cljs.core.first(arglist__353477);
arglist__353477 = cljs.core.next(arglist__353477);
var key = cljs.core.first(arglist__353477);
var ks = cljs.core.rest(arglist__353477);
return G__353472__delegate(tcoll,key,ks);
});
G__353472.cljs$core$IFn$_invoke$arity$variadic = G__353472__delegate;
return G__353472;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__353478 = null;
if (arguments.length > 2) {
var G__353479__i = 0, G__353479__a = new Array(arguments.length -  2);
while (G__353479__i < G__353479__a.length) {G__353479__a[G__353479__i] = arguments[G__353479__i + 2]; ++G__353479__i;}
G__353478 = new cljs.core.IndexedSeq(G__353479__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__353478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__353480__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__353481 = ntcoll;
var G__353482 = cljs.core.first(vals);
var G__353483 = cljs.core.next(vals);
tcoll = G__353481;
val = G__353482;
vals = G__353483;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__353480 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__353484__i = 0, G__353484__a = new Array(arguments.length -  2);
while (G__353484__i < G__353484__a.length) {G__353484__a[G__353484__i] = arguments[G__353484__i + 2]; ++G__353484__i;}
  vals = new cljs.core.IndexedSeq(G__353484__a,0);
} 
return G__353480__delegate.call(this,tcoll,val,vals);};
G__353480.cljs$lang$maxFixedArity = 2;
G__353480.cljs$lang$applyTo = (function (arglist__353485){
var tcoll = cljs.core.first(arglist__353485);
arglist__353485 = cljs.core.next(arglist__353485);
var val = cljs.core.first(arglist__353485);
var vals = cljs.core.rest(arglist__353485);
return G__353480__delegate(tcoll,val,vals);
});
G__353480.cljs$core$IFn$_invoke$arity$variadic = G__353480__delegate;
return G__353480;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__353486 = null;
if (arguments.length > 2) {
var G__353487__i = 0, G__353487__a = new Array(arguments.length -  2);
while (G__353487__i < G__353487__a.length) {G__353487__a[G__353487__i] = arguments[G__353487__i + 2]; ++G__353487__i;}
G__353486 = new cljs.core.IndexedSeq(G__353487__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__353486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4912 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4912);
} else {
var G__353698 = a4912;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__353698) : f.call(null,G__353698));
}
} else {
var b4913 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4912,b4913);
} else {
var G__353699 = a4912;
var G__353700 = b4913;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353699,G__353700) : f.call(null,G__353699,G__353700));
}
} else {
var c4914 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4912,b4913,c4914);
} else {
var G__353701 = a4912;
var G__353702 = b4913;
var G__353703 = c4914;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__353701,G__353702,G__353703) : f.call(null,G__353701,G__353702,G__353703));
}
} else {
var d4915 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4912,b4913,c4914,d4915);
} else {
var G__353704 = a4912;
var G__353705 = b4913;
var G__353706 = c4914;
var G__353707 = d4915;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__353704,G__353705,G__353706,G__353707) : f.call(null,G__353704,G__353705,G__353706,G__353707));
}
} else {
var e4916 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4912,b4913,c4914,d4915,e4916);
} else {
var G__353708 = a4912;
var G__353709 = b4913;
var G__353710 = c4914;
var G__353711 = d4915;
var G__353712 = e4916;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__353708,G__353709,G__353710,G__353711,G__353712) : f.call(null,G__353708,G__353709,G__353710,G__353711,G__353712));
}
} else {
var f4917 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4912,b4913,c4914,d4915,e4916,f4917);
} else {
var G__353713 = a4912;
var G__353714 = b4913;
var G__353715 = c4914;
var G__353716 = d4915;
var G__353717 = e4916;
var G__353718 = f4917;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__353713,G__353714,G__353715,G__353716,G__353717,G__353718) : f.call(null,G__353713,G__353714,G__353715,G__353716,G__353717,G__353718));
}
} else {
var g4918 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4912,b4913,c4914,d4915,e4916,f4917,g4918);
} else {
var G__353719 = a4912;
var G__353720 = b4913;
var G__353721 = c4914;
var G__353722 = d4915;
var G__353723 = e4916;
var G__353724 = f4917;
var G__353725 = g4918;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__353719,G__353720,G__353721,G__353722,G__353723,G__353724,G__353725) : f.call(null,G__353719,G__353720,G__353721,G__353722,G__353723,G__353724,G__353725));
}
} else {
var h4919 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919);
} else {
var G__353726 = a4912;
var G__353727 = b4913;
var G__353728 = c4914;
var G__353729 = d4915;
var G__353730 = e4916;
var G__353731 = f4917;
var G__353732 = g4918;
var G__353733 = h4919;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__353726,G__353727,G__353728,G__353729,G__353730,G__353731,G__353732,G__353733) : f.call(null,G__353726,G__353727,G__353728,G__353729,G__353730,G__353731,G__353732,G__353733));
}
} else {
var i4920 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920);
} else {
var G__353734 = a4912;
var G__353735 = b4913;
var G__353736 = c4914;
var G__353737 = d4915;
var G__353738 = e4916;
var G__353739 = f4917;
var G__353740 = g4918;
var G__353741 = h4919;
var G__353742 = i4920;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__353734,G__353735,G__353736,G__353737,G__353738,G__353739,G__353740,G__353741,G__353742) : f.call(null,G__353734,G__353735,G__353736,G__353737,G__353738,G__353739,G__353740,G__353741,G__353742));
}
} else {
var j4921 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921);
} else {
var G__353743 = a4912;
var G__353744 = b4913;
var G__353745 = c4914;
var G__353746 = d4915;
var G__353747 = e4916;
var G__353748 = f4917;
var G__353749 = g4918;
var G__353750 = h4919;
var G__353751 = i4920;
var G__353752 = j4921;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__353743,G__353744,G__353745,G__353746,G__353747,G__353748,G__353749,G__353750,G__353751,G__353752) : f.call(null,G__353743,G__353744,G__353745,G__353746,G__353747,G__353748,G__353749,G__353750,G__353751,G__353752));
}
} else {
var k4922 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922);
} else {
var G__353753 = a4912;
var G__353754 = b4913;
var G__353755 = c4914;
var G__353756 = d4915;
var G__353757 = e4916;
var G__353758 = f4917;
var G__353759 = g4918;
var G__353760 = h4919;
var G__353761 = i4920;
var G__353762 = j4921;
var G__353763 = k4922;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__353753,G__353754,G__353755,G__353756,G__353757,G__353758,G__353759,G__353760,G__353761,G__353762,G__353763) : f.call(null,G__353753,G__353754,G__353755,G__353756,G__353757,G__353758,G__353759,G__353760,G__353761,G__353762,G__353763));
}
} else {
var l4923 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923);
} else {
var G__353764 = a4912;
var G__353765 = b4913;
var G__353766 = c4914;
var G__353767 = d4915;
var G__353768 = e4916;
var G__353769 = f4917;
var G__353770 = g4918;
var G__353771 = h4919;
var G__353772 = i4920;
var G__353773 = j4921;
var G__353774 = k4922;
var G__353775 = l4923;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__353764,G__353765,G__353766,G__353767,G__353768,G__353769,G__353770,G__353771,G__353772,G__353773,G__353774,G__353775) : f.call(null,G__353764,G__353765,G__353766,G__353767,G__353768,G__353769,G__353770,G__353771,G__353772,G__353773,G__353774,G__353775));
}
} else {
var m4924 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924);
} else {
var G__353776 = a4912;
var G__353777 = b4913;
var G__353778 = c4914;
var G__353779 = d4915;
var G__353780 = e4916;
var G__353781 = f4917;
var G__353782 = g4918;
var G__353783 = h4919;
var G__353784 = i4920;
var G__353785 = j4921;
var G__353786 = k4922;
var G__353787 = l4923;
var G__353788 = m4924;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__353776,G__353777,G__353778,G__353779,G__353780,G__353781,G__353782,G__353783,G__353784,G__353785,G__353786,G__353787,G__353788) : f.call(null,G__353776,G__353777,G__353778,G__353779,G__353780,G__353781,G__353782,G__353783,G__353784,G__353785,G__353786,G__353787,G__353788));
}
} else {
var n4925 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925);
} else {
var G__353789 = a4912;
var G__353790 = b4913;
var G__353791 = c4914;
var G__353792 = d4915;
var G__353793 = e4916;
var G__353794 = f4917;
var G__353795 = g4918;
var G__353796 = h4919;
var G__353797 = i4920;
var G__353798 = j4921;
var G__353799 = k4922;
var G__353800 = l4923;
var G__353801 = m4924;
var G__353802 = n4925;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__353789,G__353790,G__353791,G__353792,G__353793,G__353794,G__353795,G__353796,G__353797,G__353798,G__353799,G__353800,G__353801,G__353802) : f.call(null,G__353789,G__353790,G__353791,G__353792,G__353793,G__353794,G__353795,G__353796,G__353797,G__353798,G__353799,G__353800,G__353801,G__353802));
}
} else {
var o4926 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926);
} else {
var G__353803 = a4912;
var G__353804 = b4913;
var G__353805 = c4914;
var G__353806 = d4915;
var G__353807 = e4916;
var G__353808 = f4917;
var G__353809 = g4918;
var G__353810 = h4919;
var G__353811 = i4920;
var G__353812 = j4921;
var G__353813 = k4922;
var G__353814 = l4923;
var G__353815 = m4924;
var G__353816 = n4925;
var G__353817 = o4926;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__353803,G__353804,G__353805,G__353806,G__353807,G__353808,G__353809,G__353810,G__353811,G__353812,G__353813,G__353814,G__353815,G__353816,G__353817) : f.call(null,G__353803,G__353804,G__353805,G__353806,G__353807,G__353808,G__353809,G__353810,G__353811,G__353812,G__353813,G__353814,G__353815,G__353816,G__353817));
}
} else {
var p4927 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927);
} else {
var G__353818 = a4912;
var G__353819 = b4913;
var G__353820 = c4914;
var G__353821 = d4915;
var G__353822 = e4916;
var G__353823 = f4917;
var G__353824 = g4918;
var G__353825 = h4919;
var G__353826 = i4920;
var G__353827 = j4921;
var G__353828 = k4922;
var G__353829 = l4923;
var G__353830 = m4924;
var G__353831 = n4925;
var G__353832 = o4926;
var G__353833 = p4927;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__353818,G__353819,G__353820,G__353821,G__353822,G__353823,G__353824,G__353825,G__353826,G__353827,G__353828,G__353829,G__353830,G__353831,G__353832,G__353833) : f.call(null,G__353818,G__353819,G__353820,G__353821,G__353822,G__353823,G__353824,G__353825,G__353826,G__353827,G__353828,G__353829,G__353830,G__353831,G__353832,G__353833));
}
} else {
var q4928 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928);
} else {
var G__353834 = a4912;
var G__353835 = b4913;
var G__353836 = c4914;
var G__353837 = d4915;
var G__353838 = e4916;
var G__353839 = f4917;
var G__353840 = g4918;
var G__353841 = h4919;
var G__353842 = i4920;
var G__353843 = j4921;
var G__353844 = k4922;
var G__353845 = l4923;
var G__353846 = m4924;
var G__353847 = n4925;
var G__353848 = o4926;
var G__353849 = p4927;
var G__353850 = q4928;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__353834,G__353835,G__353836,G__353837,G__353838,G__353839,G__353840,G__353841,G__353842,G__353843,G__353844,G__353845,G__353846,G__353847,G__353848,G__353849,G__353850) : f.call(null,G__353834,G__353835,G__353836,G__353837,G__353838,G__353839,G__353840,G__353841,G__353842,G__353843,G__353844,G__353845,G__353846,G__353847,G__353848,G__353849,G__353850));
}
} else {
var r4929 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929);
} else {
var G__353851 = a4912;
var G__353852 = b4913;
var G__353853 = c4914;
var G__353854 = d4915;
var G__353855 = e4916;
var G__353856 = f4917;
var G__353857 = g4918;
var G__353858 = h4919;
var G__353859 = i4920;
var G__353860 = j4921;
var G__353861 = k4922;
var G__353862 = l4923;
var G__353863 = m4924;
var G__353864 = n4925;
var G__353865 = o4926;
var G__353866 = p4927;
var G__353867 = q4928;
var G__353868 = r4929;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__353851,G__353852,G__353853,G__353854,G__353855,G__353856,G__353857,G__353858,G__353859,G__353860,G__353861,G__353862,G__353863,G__353864,G__353865,G__353866,G__353867,G__353868) : f.call(null,G__353851,G__353852,G__353853,G__353854,G__353855,G__353856,G__353857,G__353858,G__353859,G__353860,G__353861,G__353862,G__353863,G__353864,G__353865,G__353866,G__353867,G__353868));
}
} else {
var s4930 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930);
} else {
var G__353869 = a4912;
var G__353870 = b4913;
var G__353871 = c4914;
var G__353872 = d4915;
var G__353873 = e4916;
var G__353874 = f4917;
var G__353875 = g4918;
var G__353876 = h4919;
var G__353877 = i4920;
var G__353878 = j4921;
var G__353879 = k4922;
var G__353880 = l4923;
var G__353881 = m4924;
var G__353882 = n4925;
var G__353883 = o4926;
var G__353884 = p4927;
var G__353885 = q4928;
var G__353886 = r4929;
var G__353887 = s4930;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__353869,G__353870,G__353871,G__353872,G__353873,G__353874,G__353875,G__353876,G__353877,G__353878,G__353879,G__353880,G__353881,G__353882,G__353883,G__353884,G__353885,G__353886,G__353887) : f.call(null,G__353869,G__353870,G__353871,G__353872,G__353873,G__353874,G__353875,G__353876,G__353877,G__353878,G__353879,G__353880,G__353881,G__353882,G__353883,G__353884,G__353885,G__353886,G__353887));
}
} else {
var t4931 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4912,b4913,c4914,d4915,e4916,f4917,g4918,h4919,i4920,j4921,k4922,l4923,m4924,n4925,o4926,p4927,q4928,r4929,s4930,t4931);
} else {
var G__353888 = a4912;
var G__353889 = b4913;
var G__353890 = c4914;
var G__353891 = d4915;
var G__353892 = e4916;
var G__353893 = f4917;
var G__353894 = g4918;
var G__353895 = h4919;
var G__353896 = i4920;
var G__353897 = j4921;
var G__353898 = k4922;
var G__353899 = l4923;
var G__353900 = m4924;
var G__353901 = n4925;
var G__353902 = o4926;
var G__353903 = p4927;
var G__353904 = q4928;
var G__353905 = r4929;
var G__353906 = s4930;
var G__353907 = t4931;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__353888,G__353889,G__353890,G__353891,G__353892,G__353893,G__353894,G__353895,G__353896,G__353897,G__353898,G__353899,G__353900,G__353901,G__353902,G__353903,G__353904,G__353905,G__353906,G__353907) : f.call(null,G__353888,G__353889,G__353890,G__353891,G__353892,G__353893,G__353894,G__353895,G__353896,G__353897,G__353898,G__353899,G__353900,G__353901,G__353902,G__353903,G__353904,G__353905,G__353906,G__353907));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__353908__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__353908 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__353909__i = 0, G__353909__a = new Array(arguments.length -  5);
while (G__353909__i < G__353909__a.length) {G__353909__a[G__353909__i] = arguments[G__353909__i + 5]; ++G__353909__i;}
  args = new cljs.core.IndexedSeq(G__353909__a,0);
} 
return G__353908__delegate.call(this,f,a,b,c,d,args);};
G__353908.cljs$lang$maxFixedArity = 5;
G__353908.cljs$lang$applyTo = (function (arglist__353910){
var f = cljs.core.first(arglist__353910);
arglist__353910 = cljs.core.next(arglist__353910);
var a = cljs.core.first(arglist__353910);
arglist__353910 = cljs.core.next(arglist__353910);
var b = cljs.core.first(arglist__353910);
arglist__353910 = cljs.core.next(arglist__353910);
var c = cljs.core.first(arglist__353910);
arglist__353910 = cljs.core.next(arglist__353910);
var d = cljs.core.first(arglist__353910);
var args = cljs.core.rest(arglist__353910);
return G__353908__delegate(f,a,b,c,d,args);
});
G__353908.cljs$core$IFn$_invoke$arity$variadic = G__353908__delegate;
return G__353908;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__353911 = null;
if (arguments.length > 5) {
var G__353912__i = 0, G__353912__a = new Array(arguments.length -  5);
while (G__353912__i < G__353912__a.length) {G__353912__a[G__353912__i] = arguments[G__353912__i + 5]; ++G__353912__i;}
G__353911 = new cljs.core.IndexedSeq(G__353912__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__353911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__353928 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__353928) : f.call(null,G__353928));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__353929 = cljs.core.meta(obj);
var G__353930 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__353929,G__353930) : f.call(null,G__353929,G__353930));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__353931 = cljs.core.meta(obj);
var G__353932 = a;
var G__353933 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__353931,G__353932,G__353933) : f.call(null,G__353931,G__353932,G__353933));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__353934 = cljs.core.meta(obj);
var G__353935 = a;
var G__353936 = b;
var G__353937 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__353934,G__353935,G__353936,G__353937) : f.call(null,G__353934,G__353935,G__353936,G__353937));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__353938 = cljs.core.meta(obj);
var G__353939 = a;
var G__353940 = b;
var G__353941 = c;
var G__353942 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__353938,G__353939,G__353940,G__353941,G__353942) : f.call(null,G__353938,G__353939,G__353940,G__353941,G__353942));
})());
});
var vary_meta__7 = (function() { 
var G__353943__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__353943 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__353944__i = 0, G__353944__a = new Array(arguments.length -  6);
while (G__353944__i < G__353944__a.length) {G__353944__a[G__353944__i] = arguments[G__353944__i + 6]; ++G__353944__i;}
  args = new cljs.core.IndexedSeq(G__353944__a,0);
} 
return G__353943__delegate.call(this,obj,f,a,b,c,d,args);};
G__353943.cljs$lang$maxFixedArity = 6;
G__353943.cljs$lang$applyTo = (function (arglist__353945){
var obj = cljs.core.first(arglist__353945);
arglist__353945 = cljs.core.next(arglist__353945);
var f = cljs.core.first(arglist__353945);
arglist__353945 = cljs.core.next(arglist__353945);
var a = cljs.core.first(arglist__353945);
arglist__353945 = cljs.core.next(arglist__353945);
var b = cljs.core.first(arglist__353945);
arglist__353945 = cljs.core.next(arglist__353945);
var c = cljs.core.first(arglist__353945);
arglist__353945 = cljs.core.next(arglist__353945);
var d = cljs.core.first(arglist__353945);
var args = cljs.core.rest(arglist__353945);
return G__353943__delegate(obj,f,a,b,c,d,args);
});
G__353943.cljs$core$IFn$_invoke$arity$variadic = G__353943__delegate;
return G__353943;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__353946 = null;
if (arguments.length > 6) {
var G__353947__i = 0, G__353947__a = new Array(arguments.length -  6);
while (G__353947__i < G__353947__a.length) {G__353947__a[G__353947__i] = arguments[G__353947__i + 6]; ++G__353947__i;}
G__353946 = new cljs.core.IndexedSeq(G__353947__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__353946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__353948__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__353948 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__353949__i = 0, G__353949__a = new Array(arguments.length -  2);
while (G__353949__i < G__353949__a.length) {G__353949__a[G__353949__i] = arguments[G__353949__i + 2]; ++G__353949__i;}
  more = new cljs.core.IndexedSeq(G__353949__a,0);
} 
return G__353948__delegate.call(this,x,y,more);};
G__353948.cljs$lang$maxFixedArity = 2;
G__353948.cljs$lang$applyTo = (function (arglist__353950){
var x = cljs.core.first(arglist__353950);
arglist__353950 = cljs.core.next(arglist__353950);
var y = cljs.core.first(arglist__353950);
var more = cljs.core.rest(arglist__353950);
return G__353948__delegate(x,y,more);
});
G__353948.cljs$core$IFn$_invoke$arity$variadic = G__353948__delegate;
return G__353948;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__353951 = null;
if (arguments.length > 2) {
var G__353952__i = 0, G__353952__a = new Array(arguments.length -  2);
while (G__353952__i < G__353952__a.length) {G__353952__a[G__353952__i] = arguments[G__353952__i + 2]; ++G__353952__i;}
G__353951 = new cljs.core.IndexedSeq(G__353952__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__353951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t353956 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t353956 = (function (nil_iter,meta353957){
this.nil_iter = nil_iter;
this.meta353957 = meta353957;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t353956.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t353956.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t353956.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t353956.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_353958){
var self__ = this;
var _353958__$1 = this;
return self__.meta353957;
});

cljs.core.t353956.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_353958,meta353957__$1){
var self__ = this;
var _353958__$1 = this;
return (new cljs.core.t353956(self__.nil_iter,meta353957__$1));
});

cljs.core.t353956.cljs$lang$type = true;

cljs.core.t353956.cljs$lang$ctorStr = "cljs.core/t353956";

cljs.core.t353956.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/t353956");
});

cljs.core.__GT_t353956 = (function __GT_t353956(nil_iter__$1,meta353957){
return (new cljs.core.t353956(nil_iter__$1,meta353957));
});

}

return (new cljs.core.t353956(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return self__.iter.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__353959 = lt;
var G__353960 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__353959,G__353960) : self__.xform.call(null,G__353959,G__353960));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__353961 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__353961) : self__.xform.call(null,G__353961));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__353963 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__353963) : xform.call(null,G__353963));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__353965 = cljs.core.next(iters__$1);
iters__$1 = G__353965;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4868__auto___353966 = self__.iters.length;
var i_353967 = (0);
while(true){
if((i_353967 < n__4868__auto___353966)){
(self__.nexts[i_353967] = (self__.iters[i_353967]).next());

var G__353968 = (i_353967 + (1));
i_353967 = G__353968;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3969__auto__ = !((lt.stepper == null));
if(and__3969__auto__){
return this$.hasNext();
} else {
return and__3969__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__353964 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__353964) : self__.xform.call(null,G__353964));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__353973 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__353973) : xform.call(null,G__353973));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__353974_353978 = cljs.core.seq(colls);
var chunk__353975_353979 = null;
var count__353976_353980 = (0);
var i__353977_353981 = (0);
while(true){
if((i__353977_353981 < count__353976_353980)){
var coll_353982 = chunk__353975_353979.cljs$core$IIndexed$_nth$arity$2(null,i__353977_353981);
iters.push(cljs.core.iter(coll_353982));

var G__353983 = seq__353974_353978;
var G__353984 = chunk__353975_353979;
var G__353985 = count__353976_353980;
var G__353986 = (i__353977_353981 + (1));
seq__353974_353978 = G__353983;
chunk__353975_353979 = G__353984;
count__353976_353980 = G__353985;
i__353977_353981 = G__353986;
continue;
} else {
var temp__4126__auto___353987 = cljs.core.seq(seq__353974_353978);
if(temp__4126__auto___353987){
var seq__353974_353988__$1 = temp__4126__auto___353987;
if(cljs.core.chunked_seq_QMARK_(seq__353974_353988__$1)){
var c__4768__auto___353989 = cljs.core.chunk_first(seq__353974_353988__$1);
var G__353990 = cljs.core.chunk_rest(seq__353974_353988__$1);
var G__353991 = c__4768__auto___353989;
var G__353992 = cljs.core.count(c__4768__auto___353989);
var G__353993 = (0);
seq__353974_353978 = G__353990;
chunk__353975_353979 = G__353991;
count__353976_353980 = G__353992;
i__353977_353981 = G__353993;
continue;
} else {
var coll_353994 = cljs.core.first(seq__353974_353988__$1);
iters.push(cljs.core.iter(coll_353994));

var G__353995 = cljs.core.next(seq__353974_353988__$1);
var G__353996 = null;
var G__353997 = (0);
var G__353998 = (0);
seq__353974_353978 = G__353995;
chunk__353975_353979 = G__353996;
count__353976_353980 = G__353997;
i__353977_353981 = G__353998;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3981__auto__ = cljs.core.seq(coll);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__353999__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__353999 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__354000__i = 0, G__354000__a = new Array(arguments.length -  2);
while (G__354000__i < G__354000__a.length) {G__354000__a[G__354000__i] = arguments[G__354000__i + 2]; ++G__354000__i;}
  colls = new cljs.core.IndexedSeq(G__354000__a,0);
} 
return G__353999__delegate.call(this,xform,coll,colls);};
G__353999.cljs$lang$maxFixedArity = 2;
G__353999.cljs$lang$applyTo = (function (arglist__354001){
var xform = cljs.core.first(arglist__354001);
arglist__354001 = cljs.core.next(arglist__354001);
var coll = cljs.core.first(arglist__354001);
var colls = cljs.core.rest(arglist__354001);
return G__353999__delegate(xform,coll,colls);
});
G__353999.cljs$core$IFn$_invoke$arity$variadic = G__353999__delegate;
return G__353999;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__354002 = null;
if (arguments.length > 2) {
var G__354003__i = 0, G__354003__a = new Array(arguments.length -  2);
while (G__354003__i < G__354003__a.length) {G__354003__a[G__354003__i] = arguments[G__354003__i + 2]; ++G__354003__i;}
G__354002 = new cljs.core.IndexedSeq(G__354003__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__354002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__354005 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__354005) : pred.call(null,G__354005));
})())){
var G__354006 = pred;
var G__354007 = cljs.core.next(coll);
pred = G__354006;
coll = G__354007;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3981__auto__ = (function (){var G__354011 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__354011) : pred.call(null,G__354011));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__354012 = pred;
var G__354013 = cljs.core.next(coll);
pred = G__354012;
coll = G__354013;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__354020 = null;
var G__354020__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__354020__1 = (function (x){
return cljs.core.not((function (){var G__354017 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354017) : f.call(null,G__354017));
})());
});
var G__354020__2 = (function (x,y){
return cljs.core.not((function (){var G__354018 = x;
var G__354019 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354018,G__354019) : f.call(null,G__354018,G__354019));
})());
});
var G__354020__3 = (function() { 
var G__354021__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__354021 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__354022__i = 0, G__354022__a = new Array(arguments.length -  2);
while (G__354022__i < G__354022__a.length) {G__354022__a[G__354022__i] = arguments[G__354022__i + 2]; ++G__354022__i;}
  zs = new cljs.core.IndexedSeq(G__354022__a,0);
} 
return G__354021__delegate.call(this,x,y,zs);};
G__354021.cljs$lang$maxFixedArity = 2;
G__354021.cljs$lang$applyTo = (function (arglist__354023){
var x = cljs.core.first(arglist__354023);
arglist__354023 = cljs.core.next(arglist__354023);
var y = cljs.core.first(arglist__354023);
var zs = cljs.core.rest(arglist__354023);
return G__354021__delegate(x,y,zs);
});
G__354021.cljs$core$IFn$_invoke$arity$variadic = G__354021__delegate;
return G__354021;
})()
;
G__354020 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__354020__0.call(this);
case 1:
return G__354020__1.call(this,x);
case 2:
return G__354020__2.call(this,x,y);
default:
var G__354024 = null;
if (arguments.length > 2) {
var G__354025__i = 0, G__354025__a = new Array(arguments.length -  2);
while (G__354025__i < G__354025__a.length) {G__354025__a[G__354025__i] = arguments[G__354025__i + 2]; ++G__354025__i;}
G__354024 = new cljs.core.IndexedSeq(G__354025__a,0);
}
return G__354020__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__354024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354020.cljs$lang$maxFixedArity = 2;
G__354020.cljs$lang$applyTo = G__354020__3.cljs$lang$applyTo;
G__354020.cljs$core$IFn$_invoke$arity$0 = G__354020__0;
G__354020.cljs$core$IFn$_invoke$arity$1 = G__354020__1;
G__354020.cljs$core$IFn$_invoke$arity$2 = G__354020__2;
G__354020.cljs$core$IFn$_invoke$arity$variadic = G__354020__3.cljs$core$IFn$_invoke$arity$variadic;
return G__354020;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__354026__delegate = function (args){
return x;
};
var G__354026 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__354027__i = 0, G__354027__a = new Array(arguments.length -  0);
while (G__354027__i < G__354027__a.length) {G__354027__a[G__354027__i] = arguments[G__354027__i + 0]; ++G__354027__i;}
  args = new cljs.core.IndexedSeq(G__354027__a,0);
} 
return G__354026__delegate.call(this,args);};
G__354026.cljs$lang$maxFixedArity = 0;
G__354026.cljs$lang$applyTo = (function (arglist__354028){
var args = cljs.core.seq(arglist__354028);
return G__354026__delegate(args);
});
G__354026.cljs$core$IFn$_invoke$arity$variadic = G__354026__delegate;
return G__354026;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__354083 = null;
var G__354083__0 = (function (){
var G__354056 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354056) : f.call(null,G__354056));
});
var G__354083__1 = (function (x){
var G__354057 = (function (){var G__354058 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354058) : g.call(null,G__354058));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354057) : f.call(null,G__354057));
});
var G__354083__2 = (function (x,y){
var G__354059 = (function (){var G__354060 = x;
var G__354061 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__354060,G__354061) : g.call(null,G__354060,G__354061));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354059) : f.call(null,G__354059));
});
var G__354083__3 = (function (x,y,z){
var G__354062 = (function (){var G__354063 = x;
var G__354064 = y;
var G__354065 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__354063,G__354064,G__354065) : g.call(null,G__354063,G__354064,G__354065));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354062) : f.call(null,G__354062));
});
var G__354083__4 = (function() { 
var G__354084__delegate = function (x,y,z,args){
var G__354066 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354066) : f.call(null,G__354066));
};
var G__354084 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354085__i = 0, G__354085__a = new Array(arguments.length -  3);
while (G__354085__i < G__354085__a.length) {G__354085__a[G__354085__i] = arguments[G__354085__i + 3]; ++G__354085__i;}
  args = new cljs.core.IndexedSeq(G__354085__a,0);
} 
return G__354084__delegate.call(this,x,y,z,args);};
G__354084.cljs$lang$maxFixedArity = 3;
G__354084.cljs$lang$applyTo = (function (arglist__354086){
var x = cljs.core.first(arglist__354086);
arglist__354086 = cljs.core.next(arglist__354086);
var y = cljs.core.first(arglist__354086);
arglist__354086 = cljs.core.next(arglist__354086);
var z = cljs.core.first(arglist__354086);
var args = cljs.core.rest(arglist__354086);
return G__354084__delegate(x,y,z,args);
});
G__354084.cljs$core$IFn$_invoke$arity$variadic = G__354084__delegate;
return G__354084;
})()
;
G__354083 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__354083__0.call(this);
case 1:
return G__354083__1.call(this,x);
case 2:
return G__354083__2.call(this,x,y);
case 3:
return G__354083__3.call(this,x,y,z);
default:
var G__354087 = null;
if (arguments.length > 3) {
var G__354088__i = 0, G__354088__a = new Array(arguments.length -  3);
while (G__354088__i < G__354088__a.length) {G__354088__a[G__354088__i] = arguments[G__354088__i + 3]; ++G__354088__i;}
G__354087 = new cljs.core.IndexedSeq(G__354088__a,0);
}
return G__354083__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354083.cljs$lang$maxFixedArity = 3;
G__354083.cljs$lang$applyTo = G__354083__4.cljs$lang$applyTo;
G__354083.cljs$core$IFn$_invoke$arity$0 = G__354083__0;
G__354083.cljs$core$IFn$_invoke$arity$1 = G__354083__1;
G__354083.cljs$core$IFn$_invoke$arity$2 = G__354083__2;
G__354083.cljs$core$IFn$_invoke$arity$3 = G__354083__3;
G__354083.cljs$core$IFn$_invoke$arity$variadic = G__354083__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354083;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__354089 = null;
var G__354089__0 = (function (){
var G__354067 = (function (){var G__354068 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354068) : g.call(null,G__354068));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354067) : f.call(null,G__354067));
});
var G__354089__1 = (function (x){
var G__354069 = (function (){var G__354070 = (function (){var G__354071 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__354071) : h.call(null,G__354071));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354070) : g.call(null,G__354070));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354069) : f.call(null,G__354069));
});
var G__354089__2 = (function (x,y){
var G__354072 = (function (){var G__354073 = (function (){var G__354074 = x;
var G__354075 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__354074,G__354075) : h.call(null,G__354074,G__354075));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354073) : g.call(null,G__354073));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354072) : f.call(null,G__354072));
});
var G__354089__3 = (function (x,y,z){
var G__354076 = (function (){var G__354077 = (function (){var G__354078 = x;
var G__354079 = y;
var G__354080 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__354078,G__354079,G__354080) : h.call(null,G__354078,G__354079,G__354080));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354077) : g.call(null,G__354077));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354076) : f.call(null,G__354076));
});
var G__354089__4 = (function() { 
var G__354090__delegate = function (x,y,z,args){
var G__354081 = (function (){var G__354082 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__354082) : g.call(null,G__354082));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354081) : f.call(null,G__354081));
};
var G__354090 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354091__i = 0, G__354091__a = new Array(arguments.length -  3);
while (G__354091__i < G__354091__a.length) {G__354091__a[G__354091__i] = arguments[G__354091__i + 3]; ++G__354091__i;}
  args = new cljs.core.IndexedSeq(G__354091__a,0);
} 
return G__354090__delegate.call(this,x,y,z,args);};
G__354090.cljs$lang$maxFixedArity = 3;
G__354090.cljs$lang$applyTo = (function (arglist__354092){
var x = cljs.core.first(arglist__354092);
arglist__354092 = cljs.core.next(arglist__354092);
var y = cljs.core.first(arglist__354092);
arglist__354092 = cljs.core.next(arglist__354092);
var z = cljs.core.first(arglist__354092);
var args = cljs.core.rest(arglist__354092);
return G__354090__delegate(x,y,z,args);
});
G__354090.cljs$core$IFn$_invoke$arity$variadic = G__354090__delegate;
return G__354090;
})()
;
G__354089 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__354089__0.call(this);
case 1:
return G__354089__1.call(this,x);
case 2:
return G__354089__2.call(this,x,y);
case 3:
return G__354089__3.call(this,x,y,z);
default:
var G__354093 = null;
if (arguments.length > 3) {
var G__354094__i = 0, G__354094__a = new Array(arguments.length -  3);
while (G__354094__i < G__354094__a.length) {G__354094__a[G__354094__i] = arguments[G__354094__i + 3]; ++G__354094__i;}
G__354093 = new cljs.core.IndexedSeq(G__354094__a,0);
}
return G__354089__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354089.cljs$lang$maxFixedArity = 3;
G__354089.cljs$lang$applyTo = G__354089__4.cljs$lang$applyTo;
G__354089.cljs$core$IFn$_invoke$arity$0 = G__354089__0;
G__354089.cljs$core$IFn$_invoke$arity$1 = G__354089__1;
G__354089.cljs$core$IFn$_invoke$arity$2 = G__354089__2;
G__354089.cljs$core$IFn$_invoke$arity$3 = G__354089__3;
G__354089.cljs$core$IFn$_invoke$arity$variadic = G__354089__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354089;
})()
});
var comp__4 = (function() { 
var G__354095__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__354096__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__354097 = cljs.core.first(fs__$2).call(null,ret);
var G__354098 = cljs.core.next(fs__$2);
ret = G__354097;
fs__$2 = G__354098;
continue;
} else {
return ret;
}
break;
}
};
var G__354096 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__354099__i = 0, G__354099__a = new Array(arguments.length -  0);
while (G__354099__i < G__354099__a.length) {G__354099__a[G__354099__i] = arguments[G__354099__i + 0]; ++G__354099__i;}
  args = new cljs.core.IndexedSeq(G__354099__a,0);
} 
return G__354096__delegate.call(this,args);};
G__354096.cljs$lang$maxFixedArity = 0;
G__354096.cljs$lang$applyTo = (function (arglist__354100){
var args = cljs.core.seq(arglist__354100);
return G__354096__delegate(args);
});
G__354096.cljs$core$IFn$_invoke$arity$variadic = G__354096__delegate;
return G__354096;
})()
;
;})(fs__$1))
};
var G__354095 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__354101__i = 0, G__354101__a = new Array(arguments.length -  3);
while (G__354101__i < G__354101__a.length) {G__354101__a[G__354101__i] = arguments[G__354101__i + 3]; ++G__354101__i;}
  fs = new cljs.core.IndexedSeq(G__354101__a,0);
} 
return G__354095__delegate.call(this,f1,f2,f3,fs);};
G__354095.cljs$lang$maxFixedArity = 3;
G__354095.cljs$lang$applyTo = (function (arglist__354102){
var f1 = cljs.core.first(arglist__354102);
arglist__354102 = cljs.core.next(arglist__354102);
var f2 = cljs.core.first(arglist__354102);
arglist__354102 = cljs.core.next(arglist__354102);
var f3 = cljs.core.first(arglist__354102);
var fs = cljs.core.rest(arglist__354102);
return G__354095__delegate(f1,f2,f3,fs);
});
G__354095.cljs$core$IFn$_invoke$arity$variadic = G__354095__delegate;
return G__354095;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__354103 = null;
if (arguments.length > 3) {
var G__354104__i = 0, G__354104__a = new Array(arguments.length -  3);
while (G__354104__i < G__354104__a.length) {G__354104__a[G__354104__i] = arguments[G__354104__i + 3]; ++G__354104__i;}
G__354103 = new cljs.core.IndexedSeq(G__354104__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__354103);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__354189 = null;
var G__354189__0 = (function (){
var G__354147 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354147) : f.call(null,G__354147));
});
var G__354189__1 = (function (x){
var G__354148 = arg1;
var G__354149 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354148,G__354149) : f.call(null,G__354148,G__354149));
});
var G__354189__2 = (function (x,y){
var G__354150 = arg1;
var G__354151 = x;
var G__354152 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354150,G__354151,G__354152) : f.call(null,G__354150,G__354151,G__354152));
});
var G__354189__3 = (function (x,y,z){
var G__354153 = arg1;
var G__354154 = x;
var G__354155 = y;
var G__354156 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__354153,G__354154,G__354155,G__354156) : f.call(null,G__354153,G__354154,G__354155,G__354156));
});
var G__354189__4 = (function() { 
var G__354190__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__354190 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354191__i = 0, G__354191__a = new Array(arguments.length -  3);
while (G__354191__i < G__354191__a.length) {G__354191__a[G__354191__i] = arguments[G__354191__i + 3]; ++G__354191__i;}
  args = new cljs.core.IndexedSeq(G__354191__a,0);
} 
return G__354190__delegate.call(this,x,y,z,args);};
G__354190.cljs$lang$maxFixedArity = 3;
G__354190.cljs$lang$applyTo = (function (arglist__354192){
var x = cljs.core.first(arglist__354192);
arglist__354192 = cljs.core.next(arglist__354192);
var y = cljs.core.first(arglist__354192);
arglist__354192 = cljs.core.next(arglist__354192);
var z = cljs.core.first(arglist__354192);
var args = cljs.core.rest(arglist__354192);
return G__354190__delegate(x,y,z,args);
});
G__354190.cljs$core$IFn$_invoke$arity$variadic = G__354190__delegate;
return G__354190;
})()
;
G__354189 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__354189__0.call(this);
case 1:
return G__354189__1.call(this,x);
case 2:
return G__354189__2.call(this,x,y);
case 3:
return G__354189__3.call(this,x,y,z);
default:
var G__354193 = null;
if (arguments.length > 3) {
var G__354194__i = 0, G__354194__a = new Array(arguments.length -  3);
while (G__354194__i < G__354194__a.length) {G__354194__a[G__354194__i] = arguments[G__354194__i + 3]; ++G__354194__i;}
G__354193 = new cljs.core.IndexedSeq(G__354194__a,0);
}
return G__354189__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354189.cljs$lang$maxFixedArity = 3;
G__354189.cljs$lang$applyTo = G__354189__4.cljs$lang$applyTo;
G__354189.cljs$core$IFn$_invoke$arity$0 = G__354189__0;
G__354189.cljs$core$IFn$_invoke$arity$1 = G__354189__1;
G__354189.cljs$core$IFn$_invoke$arity$2 = G__354189__2;
G__354189.cljs$core$IFn$_invoke$arity$3 = G__354189__3;
G__354189.cljs$core$IFn$_invoke$arity$variadic = G__354189__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354189;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__354195 = null;
var G__354195__0 = (function (){
var G__354157 = arg1;
var G__354158 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354157,G__354158) : f.call(null,G__354157,G__354158));
});
var G__354195__1 = (function (x){
var G__354159 = arg1;
var G__354160 = arg2;
var G__354161 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354159,G__354160,G__354161) : f.call(null,G__354159,G__354160,G__354161));
});
var G__354195__2 = (function (x,y){
var G__354162 = arg1;
var G__354163 = arg2;
var G__354164 = x;
var G__354165 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__354162,G__354163,G__354164,G__354165) : f.call(null,G__354162,G__354163,G__354164,G__354165));
});
var G__354195__3 = (function (x,y,z){
var G__354166 = arg1;
var G__354167 = arg2;
var G__354168 = x;
var G__354169 = y;
var G__354170 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__354166,G__354167,G__354168,G__354169,G__354170) : f.call(null,G__354166,G__354167,G__354168,G__354169,G__354170));
});
var G__354195__4 = (function() { 
var G__354196__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__354196 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354197__i = 0, G__354197__a = new Array(arguments.length -  3);
while (G__354197__i < G__354197__a.length) {G__354197__a[G__354197__i] = arguments[G__354197__i + 3]; ++G__354197__i;}
  args = new cljs.core.IndexedSeq(G__354197__a,0);
} 
return G__354196__delegate.call(this,x,y,z,args);};
G__354196.cljs$lang$maxFixedArity = 3;
G__354196.cljs$lang$applyTo = (function (arglist__354198){
var x = cljs.core.first(arglist__354198);
arglist__354198 = cljs.core.next(arglist__354198);
var y = cljs.core.first(arglist__354198);
arglist__354198 = cljs.core.next(arglist__354198);
var z = cljs.core.first(arglist__354198);
var args = cljs.core.rest(arglist__354198);
return G__354196__delegate(x,y,z,args);
});
G__354196.cljs$core$IFn$_invoke$arity$variadic = G__354196__delegate;
return G__354196;
})()
;
G__354195 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__354195__0.call(this);
case 1:
return G__354195__1.call(this,x);
case 2:
return G__354195__2.call(this,x,y);
case 3:
return G__354195__3.call(this,x,y,z);
default:
var G__354199 = null;
if (arguments.length > 3) {
var G__354200__i = 0, G__354200__a = new Array(arguments.length -  3);
while (G__354200__i < G__354200__a.length) {G__354200__a[G__354200__i] = arguments[G__354200__i + 3]; ++G__354200__i;}
G__354199 = new cljs.core.IndexedSeq(G__354200__a,0);
}
return G__354195__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354195.cljs$lang$maxFixedArity = 3;
G__354195.cljs$lang$applyTo = G__354195__4.cljs$lang$applyTo;
G__354195.cljs$core$IFn$_invoke$arity$0 = G__354195__0;
G__354195.cljs$core$IFn$_invoke$arity$1 = G__354195__1;
G__354195.cljs$core$IFn$_invoke$arity$2 = G__354195__2;
G__354195.cljs$core$IFn$_invoke$arity$3 = G__354195__3;
G__354195.cljs$core$IFn$_invoke$arity$variadic = G__354195__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354195;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__354201 = null;
var G__354201__0 = (function (){
var G__354171 = arg1;
var G__354172 = arg2;
var G__354173 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354171,G__354172,G__354173) : f.call(null,G__354171,G__354172,G__354173));
});
var G__354201__1 = (function (x){
var G__354174 = arg1;
var G__354175 = arg2;
var G__354176 = arg3;
var G__354177 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__354174,G__354175,G__354176,G__354177) : f.call(null,G__354174,G__354175,G__354176,G__354177));
});
var G__354201__2 = (function (x,y){
var G__354178 = arg1;
var G__354179 = arg2;
var G__354180 = arg3;
var G__354181 = x;
var G__354182 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__354178,G__354179,G__354180,G__354181,G__354182) : f.call(null,G__354178,G__354179,G__354180,G__354181,G__354182));
});
var G__354201__3 = (function (x,y,z){
var G__354183 = arg1;
var G__354184 = arg2;
var G__354185 = arg3;
var G__354186 = x;
var G__354187 = y;
var G__354188 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__354183,G__354184,G__354185,G__354186,G__354187,G__354188) : f.call(null,G__354183,G__354184,G__354185,G__354186,G__354187,G__354188));
});
var G__354201__4 = (function() { 
var G__354202__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__354202 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354203__i = 0, G__354203__a = new Array(arguments.length -  3);
while (G__354203__i < G__354203__a.length) {G__354203__a[G__354203__i] = arguments[G__354203__i + 3]; ++G__354203__i;}
  args = new cljs.core.IndexedSeq(G__354203__a,0);
} 
return G__354202__delegate.call(this,x,y,z,args);};
G__354202.cljs$lang$maxFixedArity = 3;
G__354202.cljs$lang$applyTo = (function (arglist__354204){
var x = cljs.core.first(arglist__354204);
arglist__354204 = cljs.core.next(arglist__354204);
var y = cljs.core.first(arglist__354204);
arglist__354204 = cljs.core.next(arglist__354204);
var z = cljs.core.first(arglist__354204);
var args = cljs.core.rest(arglist__354204);
return G__354202__delegate(x,y,z,args);
});
G__354202.cljs$core$IFn$_invoke$arity$variadic = G__354202__delegate;
return G__354202;
})()
;
G__354201 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__354201__0.call(this);
case 1:
return G__354201__1.call(this,x);
case 2:
return G__354201__2.call(this,x,y);
case 3:
return G__354201__3.call(this,x,y,z);
default:
var G__354205 = null;
if (arguments.length > 3) {
var G__354206__i = 0, G__354206__a = new Array(arguments.length -  3);
while (G__354206__i < G__354206__a.length) {G__354206__a[G__354206__i] = arguments[G__354206__i + 3]; ++G__354206__i;}
G__354205 = new cljs.core.IndexedSeq(G__354206__a,0);
}
return G__354201__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354201.cljs$lang$maxFixedArity = 3;
G__354201.cljs$lang$applyTo = G__354201__4.cljs$lang$applyTo;
G__354201.cljs$core$IFn$_invoke$arity$0 = G__354201__0;
G__354201.cljs$core$IFn$_invoke$arity$1 = G__354201__1;
G__354201.cljs$core$IFn$_invoke$arity$2 = G__354201__2;
G__354201.cljs$core$IFn$_invoke$arity$3 = G__354201__3;
G__354201.cljs$core$IFn$_invoke$arity$variadic = G__354201__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354201;
})()
});
var partial__5 = (function() { 
var G__354207__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__354208__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__354208 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__354209__i = 0, G__354209__a = new Array(arguments.length -  0);
while (G__354209__i < G__354209__a.length) {G__354209__a[G__354209__i] = arguments[G__354209__i + 0]; ++G__354209__i;}
  args = new cljs.core.IndexedSeq(G__354209__a,0);
} 
return G__354208__delegate.call(this,args);};
G__354208.cljs$lang$maxFixedArity = 0;
G__354208.cljs$lang$applyTo = (function (arglist__354210){
var args = cljs.core.seq(arglist__354210);
return G__354208__delegate(args);
});
G__354208.cljs$core$IFn$_invoke$arity$variadic = G__354208__delegate;
return G__354208;
})()
;
};
var G__354207 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__354211__i = 0, G__354211__a = new Array(arguments.length -  4);
while (G__354211__i < G__354211__a.length) {G__354211__a[G__354211__i] = arguments[G__354211__i + 4]; ++G__354211__i;}
  more = new cljs.core.IndexedSeq(G__354211__a,0);
} 
return G__354207__delegate.call(this,f,arg1,arg2,arg3,more);};
G__354207.cljs$lang$maxFixedArity = 4;
G__354207.cljs$lang$applyTo = (function (arglist__354212){
var f = cljs.core.first(arglist__354212);
arglist__354212 = cljs.core.next(arglist__354212);
var arg1 = cljs.core.first(arglist__354212);
arglist__354212 = cljs.core.next(arglist__354212);
var arg2 = cljs.core.first(arglist__354212);
arglist__354212 = cljs.core.next(arglist__354212);
var arg3 = cljs.core.first(arglist__354212);
var more = cljs.core.rest(arglist__354212);
return G__354207__delegate(f,arg1,arg2,arg3,more);
});
G__354207.cljs$core$IFn$_invoke$arity$variadic = G__354207__delegate;
return G__354207;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__354213 = null;
if (arguments.length > 4) {
var G__354214__i = 0, G__354214__a = new Array(arguments.length -  4);
while (G__354214__i < G__354214__a.length) {G__354214__a[G__354214__i] = arguments[G__354214__i + 4]; ++G__354214__i;}
G__354213 = new cljs.core.IndexedSeq(G__354214__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__354213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__354247 = null;
var G__354247__1 = (function (a){
var G__354231 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354231) : f.call(null,G__354231));
});
var G__354247__2 = (function (a,b){
var G__354232 = (((a == null))?x:a);
var G__354233 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354232,G__354233) : f.call(null,G__354232,G__354233));
});
var G__354247__3 = (function (a,b,c){
var G__354234 = (((a == null))?x:a);
var G__354235 = b;
var G__354236 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354234,G__354235,G__354236) : f.call(null,G__354234,G__354235,G__354236));
});
var G__354247__4 = (function() { 
var G__354248__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__354248 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__354249__i = 0, G__354249__a = new Array(arguments.length -  3);
while (G__354249__i < G__354249__a.length) {G__354249__a[G__354249__i] = arguments[G__354249__i + 3]; ++G__354249__i;}
  ds = new cljs.core.IndexedSeq(G__354249__a,0);
} 
return G__354248__delegate.call(this,a,b,c,ds);};
G__354248.cljs$lang$maxFixedArity = 3;
G__354248.cljs$lang$applyTo = (function (arglist__354250){
var a = cljs.core.first(arglist__354250);
arglist__354250 = cljs.core.next(arglist__354250);
var b = cljs.core.first(arglist__354250);
arglist__354250 = cljs.core.next(arglist__354250);
var c = cljs.core.first(arglist__354250);
var ds = cljs.core.rest(arglist__354250);
return G__354248__delegate(a,b,c,ds);
});
G__354248.cljs$core$IFn$_invoke$arity$variadic = G__354248__delegate;
return G__354248;
})()
;
G__354247 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__354247__1.call(this,a);
case 2:
return G__354247__2.call(this,a,b);
case 3:
return G__354247__3.call(this,a,b,c);
default:
var G__354251 = null;
if (arguments.length > 3) {
var G__354252__i = 0, G__354252__a = new Array(arguments.length -  3);
while (G__354252__i < G__354252__a.length) {G__354252__a[G__354252__i] = arguments[G__354252__i + 3]; ++G__354252__i;}
G__354251 = new cljs.core.IndexedSeq(G__354252__a,0);
}
return G__354247__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__354251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354247.cljs$lang$maxFixedArity = 3;
G__354247.cljs$lang$applyTo = G__354247__4.cljs$lang$applyTo;
G__354247.cljs$core$IFn$_invoke$arity$1 = G__354247__1;
G__354247.cljs$core$IFn$_invoke$arity$2 = G__354247__2;
G__354247.cljs$core$IFn$_invoke$arity$3 = G__354247__3;
G__354247.cljs$core$IFn$_invoke$arity$variadic = G__354247__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354247;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__354253 = null;
var G__354253__2 = (function (a,b){
var G__354237 = (((a == null))?x:a);
var G__354238 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354237,G__354238) : f.call(null,G__354237,G__354238));
});
var G__354253__3 = (function (a,b,c){
var G__354239 = (((a == null))?x:a);
var G__354240 = (((b == null))?y:b);
var G__354241 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354239,G__354240,G__354241) : f.call(null,G__354239,G__354240,G__354241));
});
var G__354253__4 = (function() { 
var G__354254__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__354254 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__354255__i = 0, G__354255__a = new Array(arguments.length -  3);
while (G__354255__i < G__354255__a.length) {G__354255__a[G__354255__i] = arguments[G__354255__i + 3]; ++G__354255__i;}
  ds = new cljs.core.IndexedSeq(G__354255__a,0);
} 
return G__354254__delegate.call(this,a,b,c,ds);};
G__354254.cljs$lang$maxFixedArity = 3;
G__354254.cljs$lang$applyTo = (function (arglist__354256){
var a = cljs.core.first(arglist__354256);
arglist__354256 = cljs.core.next(arglist__354256);
var b = cljs.core.first(arglist__354256);
arglist__354256 = cljs.core.next(arglist__354256);
var c = cljs.core.first(arglist__354256);
var ds = cljs.core.rest(arglist__354256);
return G__354254__delegate(a,b,c,ds);
});
G__354254.cljs$core$IFn$_invoke$arity$variadic = G__354254__delegate;
return G__354254;
})()
;
G__354253 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__354253__2.call(this,a,b);
case 3:
return G__354253__3.call(this,a,b,c);
default:
var G__354257 = null;
if (arguments.length > 3) {
var G__354258__i = 0, G__354258__a = new Array(arguments.length -  3);
while (G__354258__i < G__354258__a.length) {G__354258__a[G__354258__i] = arguments[G__354258__i + 3]; ++G__354258__i;}
G__354257 = new cljs.core.IndexedSeq(G__354258__a,0);
}
return G__354253__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__354257);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354253.cljs$lang$maxFixedArity = 3;
G__354253.cljs$lang$applyTo = G__354253__4.cljs$lang$applyTo;
G__354253.cljs$core$IFn$_invoke$arity$2 = G__354253__2;
G__354253.cljs$core$IFn$_invoke$arity$3 = G__354253__3;
G__354253.cljs$core$IFn$_invoke$arity$variadic = G__354253__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354253;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__354259 = null;
var G__354259__2 = (function (a,b){
var G__354242 = (((a == null))?x:a);
var G__354243 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354242,G__354243) : f.call(null,G__354242,G__354243));
});
var G__354259__3 = (function (a,b,c){
var G__354244 = (((a == null))?x:a);
var G__354245 = (((b == null))?y:b);
var G__354246 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354244,G__354245,G__354246) : f.call(null,G__354244,G__354245,G__354246));
});
var G__354259__4 = (function() { 
var G__354260__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__354260 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__354261__i = 0, G__354261__a = new Array(arguments.length -  3);
while (G__354261__i < G__354261__a.length) {G__354261__a[G__354261__i] = arguments[G__354261__i + 3]; ++G__354261__i;}
  ds = new cljs.core.IndexedSeq(G__354261__a,0);
} 
return G__354260__delegate.call(this,a,b,c,ds);};
G__354260.cljs$lang$maxFixedArity = 3;
G__354260.cljs$lang$applyTo = (function (arglist__354262){
var a = cljs.core.first(arglist__354262);
arglist__354262 = cljs.core.next(arglist__354262);
var b = cljs.core.first(arglist__354262);
arglist__354262 = cljs.core.next(arglist__354262);
var c = cljs.core.first(arglist__354262);
var ds = cljs.core.rest(arglist__354262);
return G__354260__delegate(a,b,c,ds);
});
G__354260.cljs$core$IFn$_invoke$arity$variadic = G__354260__delegate;
return G__354260;
})()
;
G__354259 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__354259__2.call(this,a,b);
case 3:
return G__354259__3.call(this,a,b,c);
default:
var G__354263 = null;
if (arguments.length > 3) {
var G__354264__i = 0, G__354264__a = new Array(arguments.length -  3);
while (G__354264__i < G__354264__a.length) {G__354264__a[G__354264__i] = arguments[G__354264__i + 3]; ++G__354264__i;}
G__354263 = new cljs.core.IndexedSeq(G__354264__a,0);
}
return G__354259__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__354263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354259.cljs$lang$maxFixedArity = 3;
G__354259.cljs$lang$applyTo = G__354259__4.cljs$lang$applyTo;
G__354259.cljs$core$IFn$_invoke$arity$2 = G__354259__2;
G__354259.cljs$core$IFn$_invoke$arity$3 = G__354259__3;
G__354259.cljs$core$IFn$_invoke$arity$variadic = G__354259__4.cljs$core$IFn$_invoke$arity$variadic;
return G__354259;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__354295 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__354295) : cljs.core.volatile_BANG_.call(null,G__354295));
})();
return ((function (i){
return (function() {
var G__354325 = null;
var G__354325__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__354325__1 = (function (result){
var G__354296 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__354296) : rf.call(null,G__354296));
});
var G__354325__2 = (function (result,input){
var G__354297 = result;
var G__354298 = (function (){var G__354299 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__354300 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354299,G__354300) : f.call(null,G__354299,G__354300));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__354297,G__354298) : rf.call(null,G__354297,G__354298));
});
G__354325 = function(result,input){
switch(arguments.length){
case 0:
return G__354325__0.call(this);
case 1:
return G__354325__1.call(this,result);
case 2:
return G__354325__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354325.cljs$core$IFn$_invoke$arity$0 = G__354325__0;
G__354325.cljs$core$IFn$_invoke$arity$1 = G__354325__1;
G__354325.cljs$core$IFn$_invoke$arity$2 = G__354325__2;
return G__354325;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___354326 = size;
var i_354327 = (0);
while(true){
if((i_354327 < n__4868__auto___354326)){
cljs.core.chunk_append(b,(function (){var G__354321 = (idx + i_354327);
var G__354322 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_354327);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354321,G__354322) : f.call(null,G__354321,G__354322));
})());

var G__354328 = (i_354327 + (1));
i_354327 = G__354328;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__354323 = idx;
var G__354324 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354323,G__354324) : f.call(null,G__354323,G__354324));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__354347 = null;
var G__354347__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__354347__1 = (function (result){
var G__354341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__354341) : rf.call(null,G__354341));
});
var G__354347__2 = (function (result,input){
var v = (function (){var G__354342 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354342) : f.call(null,G__354342));
})();
if((v == null)){
return result;
} else {
var G__354343 = result;
var G__354344 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__354343,G__354344) : rf.call(null,G__354343,G__354344));
}
});
G__354347 = function(result,input){
switch(arguments.length){
case 0:
return G__354347__0.call(this);
case 1:
return G__354347__1.call(this,result);
case 2:
return G__354347__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354347.cljs$core$IFn$_invoke$arity$0 = G__354347__0;
G__354347.cljs$core$IFn$_invoke$arity$1 = G__354347__1;
G__354347.cljs$core$IFn$_invoke$arity$2 = G__354347__2;
return G__354347;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___354348 = size;
var i_354349 = (0);
while(true){
if((i_354349 < n__4868__auto___354348)){
var x_354350 = (function (){var G__354345 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_354349);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354345) : f.call(null,G__354345));
})();
if((x_354350 == null)){
} else {
cljs.core.chunk_append(b,x_354350);
}

var G__354351 = (i_354349 + (1));
i_354349 = G__354351;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__354346 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354346) : f.call(null,G__354346));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__354352 = this$__$1;
return goog.getUid(G__354352);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__354353 = cljs.core.seq(self__.watches);
var chunk__354354 = null;
var count__354355 = (0);
var i__354356 = (0);
while(true){
if((i__354356 < count__354355)){
var vec__354357 = chunk__354354.cljs$core$IIndexed$_nth$arity$2(null,i__354356);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__354357,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__354357,(1),null);
var G__354358_354367 = key;
var G__354359_354368 = this$__$1;
var G__354360_354369 = oldval;
var G__354361_354370 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__354358_354367,G__354359_354368,G__354360_354369,G__354361_354370) : f.call(null,G__354358_354367,G__354359_354368,G__354360_354369,G__354361_354370));

var G__354371 = seq__354353;
var G__354372 = chunk__354354;
var G__354373 = count__354355;
var G__354374 = (i__354356 + (1));
seq__354353 = G__354371;
chunk__354354 = G__354372;
count__354355 = G__354373;
i__354356 = G__354374;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__354353);
if(temp__4126__auto__){
var seq__354353__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__354353__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__354353__$1);
var G__354375 = cljs.core.chunk_rest(seq__354353__$1);
var G__354376 = c__4768__auto__;
var G__354377 = cljs.core.count(c__4768__auto__);
var G__354378 = (0);
seq__354353 = G__354375;
chunk__354354 = G__354376;
count__354355 = G__354377;
i__354356 = G__354378;
continue;
} else {
var vec__354362 = cljs.core.first(seq__354353__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__354362,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__354362,(1),null);
var G__354363_354379 = key;
var G__354364_354380 = this$__$1;
var G__354365_354381 = oldval;
var G__354366_354382 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__354363_354379,G__354364_354380,G__354365_354381,G__354366_354382) : f.call(null,G__354363_354379,G__354364_354380,G__354365_354381,G__354366_354382));

var G__354383 = cljs.core.next(seq__354353__$1);
var G__354384 = null;
var G__354385 = (0);
var G__354386 = (0);
seq__354353 = G__354383;
chunk__354354 = G__354384;
count__354355 = G__354385;
i__354356 = G__354386;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__354390__delegate = function (x,p__354387){
var map__354389 = p__354387;
var map__354389__$1 = ((cljs.core.seq_QMARK_(map__354389))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__354389):map__354389);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__354389__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__354389__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__354390 = function (x,var_args){
var p__354387 = null;
if (arguments.length > 1) {
var G__354391__i = 0, G__354391__a = new Array(arguments.length -  1);
while (G__354391__i < G__354391__a.length) {G__354391__a[G__354391__i] = arguments[G__354391__i + 1]; ++G__354391__i;}
  p__354387 = new cljs.core.IndexedSeq(G__354391__a,0);
} 
return G__354390__delegate.call(this,x,p__354387);};
G__354390.cljs$lang$maxFixedArity = 1;
G__354390.cljs$lang$applyTo = (function (arglist__354392){
var x = cljs.core.first(arglist__354392);
var p__354387 = cljs.core.rest(arglist__354392);
return G__354390__delegate(x,p__354387);
});
G__354390.cljs$core$IFn$_invoke$arity$variadic = G__354390__delegate;
return G__354390;
})()
;
atom = function(x,var_args){
var p__354387 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__354393 = null;
if (arguments.length > 1) {
var G__354394__i = 0, G__354394__a = new Array(arguments.length -  1);
while (G__354394__i < G__354394__a.length) {G__354394__a[G__354394__i] = arguments[G__354394__i + 1]; ++G__354394__i;}
G__354393 = new cljs.core.IndexedSeq(G__354394__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__354393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__354397 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__354397) : validate.call(null,G__354397));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__354398 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__354398) : cljs.core.pr_str.call(null,G__354398));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__354405 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__354405) : f.call(null,G__354405));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__354406 = a.state;
var G__354407 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354406,G__354407) : f.call(null,G__354406,G__354407));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__354408 = a.state;
var G__354409 = x;
var G__354410 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__354408,G__354409,G__354410) : f.call(null,G__354408,G__354409,G__354410));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__354411__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__354411 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__354412__i = 0, G__354412__a = new Array(arguments.length -  4);
while (G__354412__i < G__354412__a.length) {G__354412__a[G__354412__i] = arguments[G__354412__i + 4]; ++G__354412__i;}
  more = new cljs.core.IndexedSeq(G__354412__a,0);
} 
return G__354411__delegate.call(this,a,f,x,y,more);};
G__354411.cljs$lang$maxFixedArity = 4;
G__354411.cljs$lang$applyTo = (function (arglist__354413){
var a = cljs.core.first(arglist__354413);
arglist__354413 = cljs.core.next(arglist__354413);
var f = cljs.core.first(arglist__354413);
arglist__354413 = cljs.core.next(arglist__354413);
var x = cljs.core.first(arglist__354413);
arglist__354413 = cljs.core.next(arglist__354413);
var y = cljs.core.first(arglist__354413);
var more = cljs.core.rest(arglist__354413);
return G__354411__delegate(a,f,x,y,more);
});
G__354411.cljs$core$IFn$_invoke$arity$variadic = G__354411__delegate;
return G__354411;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__354414 = null;
if (arguments.length > 4) {
var G__354415__i = 0, G__354415__a = new Array(arguments.length -  4);
while (G__354415__i < G__354415__a.length) {G__354415__a[G__354415__i] = arguments[G__354415__i + 4]; ++G__354415__i;}
G__354414 = new cljs.core.IndexedSeq(G__354415__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__354414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__354482 = null;
var G__354482__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__354482__1 = (function (result){
var G__354449 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__354449) : rf.call(null,G__354449));
});
var G__354482__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__354450 = i;
var G__354451 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354450,G__354451) : f.call(null,G__354450,G__354451));
})();
if((v == null)){
return result;
} else {
var G__354452 = result;
var G__354453 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__354452,G__354453) : rf.call(null,G__354452,G__354453));
}
});
G__354482 = function(result,input){
switch(arguments.length){
case 0:
return G__354482__0.call(this);
case 1:
return G__354482__1.call(this,result);
case 2:
return G__354482__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__354482.cljs$core$IFn$_invoke$arity$0 = G__354482__0;
G__354482.cljs$core$IFn$_invoke$arity$1 = G__354482__1;
G__354482.cljs$core$IFn$_invoke$arity$2 = G__354482__2;
return G__354482;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___354483 = size;
var i_354484 = (0);
while(true){
if((i_354484 < n__4868__auto___354483)){
var x_354485 = (function (){var G__354478 = (idx + i_354484);
var G__354479 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_354484);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354478,G__354479) : f.call(null,G__354478,G__354479));
})();
if((x_354485 == null)){
} else {
cljs.core.chunk_append(b,x_354485);
}

var G__354486 = (i_354484 + (1));
i_354484 = G__354486;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__354480 = idx;
var G__354481 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__354480,G__354481) : f.call(null,G__354480,G__354481));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__354700 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354700) : p.call(null,G__354700));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354702 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354702) : p.call(null,G__354702));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__354703 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354703) : p.call(null,G__354703));
} else {
return and__3969__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354705 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354705) : p.call(null,G__354705));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354707 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354707) : p.call(null,G__354707));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__354708 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__354708) : p.call(null,G__354708));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__354877__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__354877 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354878__i = 0, G__354878__a = new Array(arguments.length -  3);
while (G__354878__i < G__354878__a.length) {G__354878__a[G__354878__i] = arguments[G__354878__i + 3]; ++G__354878__i;}
  args = new cljs.core.IndexedSeq(G__354878__a,0);
} 
return G__354877__delegate.call(this,x,y,z,args);};
G__354877.cljs$lang$maxFixedArity = 3;
G__354877.cljs$lang$applyTo = (function (arglist__354879){
var x = cljs.core.first(arglist__354879);
arglist__354879 = cljs.core.next(arglist__354879);
var y = cljs.core.first(arglist__354879);
arglist__354879 = cljs.core.next(arglist__354879);
var z = cljs.core.first(arglist__354879);
var args = cljs.core.rest(arglist__354879);
return G__354877__delegate(x,y,z,args);
});
G__354877.cljs$core$IFn$_invoke$arity$variadic = G__354877__delegate;
return G__354877;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__354880 = null;
if (arguments.length > 3) {
var G__354881__i = 0, G__354881__a = new Array(arguments.length -  3);
while (G__354881__i < G__354881__a.length) {G__354881__a[G__354881__i] = arguments[G__354881__i + 3]; ++G__354881__i;}
G__354880 = new cljs.core.IndexedSeq(G__354881__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354740 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354740) : p1.call(null,G__354740));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__354741 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354741) : p2.call(null,G__354741));
} else {
return and__3969__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354743 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354743) : p1.call(null,G__354743));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354745 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354745) : p1.call(null,G__354745));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__354747 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354747) : p2.call(null,G__354747));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var G__354748 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354748) : p2.call(null,G__354748));
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354750 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354750) : p1.call(null,G__354750));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354752 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354752) : p1.call(null,G__354752));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__354754 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354754) : p1.call(null,G__354754));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__354756 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354756) : p2.call(null,G__354756));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__354758 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354758) : p2.call(null,G__354758));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__354759 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354759) : p2.call(null,G__354759));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__354882__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__354487_SHARP_){
var and__3969__auto__ = (function (){var G__354764 = p1__354487_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354764) : p1.call(null,G__354764));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__354765 = p1__354487_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354765) : p2.call(null,G__354765));
} else {
return and__3969__auto__;
}
}),args)));
};
var G__354882 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354883__i = 0, G__354883__a = new Array(arguments.length -  3);
while (G__354883__i < G__354883__a.length) {G__354883__a[G__354883__i] = arguments[G__354883__i + 3]; ++G__354883__i;}
  args = new cljs.core.IndexedSeq(G__354883__a,0);
} 
return G__354882__delegate.call(this,x,y,z,args);};
G__354882.cljs$lang$maxFixedArity = 3;
G__354882.cljs$lang$applyTo = (function (arglist__354884){
var x = cljs.core.first(arglist__354884);
arglist__354884 = cljs.core.next(arglist__354884);
var y = cljs.core.first(arglist__354884);
arglist__354884 = cljs.core.next(arglist__354884);
var z = cljs.core.first(arglist__354884);
var args = cljs.core.rest(arglist__354884);
return G__354882__delegate(x,y,z,args);
});
G__354882.cljs$core$IFn$_invoke$arity$variadic = G__354882__delegate;
return G__354882;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__354885 = null;
if (arguments.length > 3) {
var G__354886__i = 0, G__354886__a = new Array(arguments.length -  3);
while (G__354886__i < G__354886__a.length) {G__354886__a[G__354886__i] = arguments[G__354886__i + 3]; ++G__354886__i;}
G__354885 = new cljs.core.IndexedSeq(G__354886__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354811 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354811) : p1.call(null,G__354811));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354813 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354813) : p2.call(null,G__354813));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__354814 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354814) : p3.call(null,G__354814));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354816 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354816) : p1.call(null,G__354816));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354818 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354818) : p2.call(null,G__354818));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__354820 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354820) : p3.call(null,G__354820));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__354822 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354822) : p1.call(null,G__354822));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__354824 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354824) : p2.call(null,G__354824));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var G__354825 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354825) : p3.call(null,G__354825));
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3969__auto__ = (function (){var G__354827 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354827) : p1.call(null,G__354827));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354829 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354829) : p2.call(null,G__354829));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var and__3969__auto____$2 = (function (){var G__354831 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354831) : p3.call(null,G__354831));
})();
if(cljs.core.truth_(and__3969__auto____$2)){
var and__3969__auto____$3 = (function (){var G__354833 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354833) : p1.call(null,G__354833));
})();
if(cljs.core.truth_(and__3969__auto____$3)){
var and__3969__auto____$4 = (function (){var G__354835 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354835) : p2.call(null,G__354835));
})();
if(cljs.core.truth_(and__3969__auto____$4)){
var and__3969__auto____$5 = (function (){var G__354837 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354837) : p3.call(null,G__354837));
})();
if(cljs.core.truth_(and__3969__auto____$5)){
var and__3969__auto____$6 = (function (){var G__354839 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354839) : p1.call(null,G__354839));
})();
if(cljs.core.truth_(and__3969__auto____$6)){
var and__3969__auto____$7 = (function (){var G__354841 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354841) : p2.call(null,G__354841));
})();
if(cljs.core.truth_(and__3969__auto____$7)){
var G__354842 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354842) : p3.call(null,G__354842));
} else {
return and__3969__auto____$7;
}
} else {
return and__3969__auto____$6;
}
} else {
return and__3969__auto____$5;
}
} else {
return and__3969__auto____$4;
}
} else {
return and__3969__auto____$3;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__354887__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__354488_SHARP_){
var and__3969__auto__ = (function (){var G__354849 = p1__354488_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__354849) : p1.call(null,G__354849));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354851 = p1__354488_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__354851) : p2.call(null,G__354851));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__354852 = p1__354488_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__354852) : p3.call(null,G__354852));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}),args)));
};
var G__354887 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354888__i = 0, G__354888__a = new Array(arguments.length -  3);
while (G__354888__i < G__354888__a.length) {G__354888__a[G__354888__i] = arguments[G__354888__i + 3]; ++G__354888__i;}
  args = new cljs.core.IndexedSeq(G__354888__a,0);
} 
return G__354887__delegate.call(this,x,y,z,args);};
G__354887.cljs$lang$maxFixedArity = 3;
G__354887.cljs$lang$applyTo = (function (arglist__354889){
var x = cljs.core.first(arglist__354889);
arglist__354889 = cljs.core.next(arglist__354889);
var y = cljs.core.first(arglist__354889);
arglist__354889 = cljs.core.next(arglist__354889);
var z = cljs.core.first(arglist__354889);
var args = cljs.core.rest(arglist__354889);
return G__354887__delegate(x,y,z,args);
});
G__354887.cljs$core$IFn$_invoke$arity$variadic = G__354887__delegate;
return G__354887;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__354890 = null;
if (arguments.length > 3) {
var G__354891__i = 0, G__354891__a = new Array(arguments.length -  3);
while (G__354891__i < G__354891__a.length) {G__354891__a[G__354891__i] = arguments[G__354891__i + 3]; ++G__354891__i;}
G__354890 = new cljs.core.IndexedSeq(G__354891__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__354892__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__354489_SHARP_){
var G__354868 = x;
return (p1__354489_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354489_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354868) : p1__354489_SHARP_.call(null,G__354868));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__354490_SHARP_){
var and__3969__auto__ = (function (){var G__354870 = x;
return (p1__354490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354490_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354870) : p1__354490_SHARP_.call(null,G__354870));
})();
if(cljs.core.truth_(and__3969__auto__)){
var G__354871 = y;
return (p1__354490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354490_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354871) : p1__354490_SHARP_.call(null,G__354871));
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__354491_SHARP_){
var and__3969__auto__ = (function (){var G__354873 = x;
return (p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354873) : p1__354491_SHARP_.call(null,G__354873));
})();
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__354875 = y;
return (p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354875) : p1__354491_SHARP_.call(null,G__354875));
})();
if(cljs.core.truth_(and__3969__auto____$1)){
var G__354876 = z;
return (p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__354876) : p1__354491_SHARP_.call(null,G__354876));
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__354893__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__354492_SHARP_){
return cljs.core.every_QMARK_(p1__354492_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__354893 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__354894__i = 0, G__354894__a = new Array(arguments.length -  3);
while (G__354894__i < G__354894__a.length) {G__354894__a[G__354894__i] = arguments[G__354894__i + 3]; ++G__354894__i;}
  args = new cljs.core.IndexedSeq(G__354894__a,0);
} 
return G__354893__delegate.call(this,x,y,z,args);};
G__354893.cljs$lang$maxFixedArity = 3;
G__354893.cljs$lang$applyTo = (function (arglist__354895){
var x = cljs.core.first(arglist__354895);
arglist__354895 = cljs.core.next(arglist__354895);
var y = cljs.core.first(arglist__354895);
arglist__354895 = cljs.core.next(arglist__354895);
var z = cljs.core.first(arglist__354895);
var args = cljs.core.rest(arglist__354895);
return G__354893__delegate(x,y,z,args);
});
G__354893.cljs$core$IFn$_invoke$arity$variadic = G__354893__delegate;
return G__354893;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__354896 = null;
if (arguments.length > 3) {
var G__354897__i = 0, G__354897__a = new Array(arguments.length -  3);
while (G__354897__i < G__354897__a.length) {G__354897__a[G__354897__i] = arguments[G__354897__i + 3]; ++G__354897__i;}
G__354896 = new cljs.core.IndexedSeq(G__354897__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__354896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__354892 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__354898__i = 0, G__354898__a = new Array(arguments.length -  3);
while (G__354898__i < G__354898__a.length) {G__354898__a[G__354898__i] = arguments[G__354898__i + 3]; ++G__354898__i;}
  ps = new cljs.core.IndexedSeq(G__354898__a,0);
} 
return G__354892__delegate.call(this,p1,p2,p3,ps);};
G__354892.cljs$lang$maxFixedArity = 3;
G__354892.cljs$lang$applyTo = (function (arglist__354899){
var p1 = cljs.core.first(arglist__354899);
arglist__354899 = cljs.core.next(arglist__354899);
var p2 = cljs.core.first(arglist__354899);
arglist__354899 = cljs.core.next(arglist__354899);
var p3 = cljs.core.first(arglist__354899);
var ps = cljs.core.rest(arglist__354899);
return G__354892__delegate(p1,p2,p3,ps);
});
G__354892.cljs$core$IFn$_invoke$arity$variadic = G__354892__delegate;
return G__354892;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__354900 = null;
if (arguments.length > 3) {
var G__354901__i = 0, G__354901__a = new Array(arguments.length -  3);
while (G__354901__i < G__354901__a.length) {G__354901__a[G__354901__i] = arguments[G__354901__i + 3]; ++G__354901__i;}
G__354900 = new cljs.core.IndexedSeq(G__354901__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__354900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__355107 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355107) : p.call(null,G__355107));
});
var sp1__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__355109 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355109) : p.call(null,G__355109));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__355110 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355110) : p.call(null,G__355110));
}
});
var sp1__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__355112 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355112) : p.call(null,G__355112));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355114 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355114) : p.call(null,G__355114));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__355115 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__355115) : p.call(null,G__355115));
}
}
});
var sp1__4 = (function() { 
var G__355276__delegate = function (x,y,z,args){
var or__3981__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__355276 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__355277__i = 0, G__355277__a = new Array(arguments.length -  3);
while (G__355277__i < G__355277__a.length) {G__355277__a[G__355277__i] = arguments[G__355277__i + 3]; ++G__355277__i;}
  args = new cljs.core.IndexedSeq(G__355277__a,0);
} 
return G__355276__delegate.call(this,x,y,z,args);};
G__355276.cljs$lang$maxFixedArity = 3;
G__355276.cljs$lang$applyTo = (function (arglist__355278){
var x = cljs.core.first(arglist__355278);
arglist__355278 = cljs.core.next(arglist__355278);
var y = cljs.core.first(arglist__355278);
arglist__355278 = cljs.core.next(arglist__355278);
var z = cljs.core.first(arglist__355278);
var args = cljs.core.rest(arglist__355278);
return G__355276__delegate(x,y,z,args);
});
G__355276.cljs$core$IFn$_invoke$arity$variadic = G__355276__delegate;
return G__355276;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__355279 = null;
if (arguments.length > 3) {
var G__355280__i = 0, G__355280__a = new Array(arguments.length -  3);
while (G__355280__i < G__355280__a.length) {G__355280__a[G__355280__i] = arguments[G__355280__i + 3]; ++G__355280__i;}
G__355279 = new cljs.core.IndexedSeq(G__355280__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__355279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3981__auto__ = (function (){var G__355147 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355147) : p1.call(null,G__355147));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__355148 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355148) : p2.call(null,G__355148));
}
});
var sp2__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__355150 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355150) : p1.call(null,G__355150));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355152 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355152) : p1.call(null,G__355152));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__355154 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355154) : p2.call(null,G__355154));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__355155 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355155) : p2.call(null,G__355155));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__355157 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355157) : p1.call(null,G__355157));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355159 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355159) : p1.call(null,G__355159));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__355161 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355161) : p1.call(null,G__355161));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__355163 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355163) : p2.call(null,G__355163));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__355165 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355165) : p2.call(null,G__355165));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__355166 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355166) : p2.call(null,G__355166));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__355281__delegate = function (x,y,z,args){
var or__3981__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__354902_SHARP_){
var or__3981__auto____$1 = (function (){var G__355168 = p1__354902_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355168) : p1.call(null,G__355168));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__355169 = p1__354902_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355169) : p2.call(null,G__355169));
}
});})(or__3981__auto__))
,args);
}
};
var G__355281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__355282__i = 0, G__355282__a = new Array(arguments.length -  3);
while (G__355282__i < G__355282__a.length) {G__355282__a[G__355282__i] = arguments[G__355282__i + 3]; ++G__355282__i;}
  args = new cljs.core.IndexedSeq(G__355282__a,0);
} 
return G__355281__delegate.call(this,x,y,z,args);};
G__355281.cljs$lang$maxFixedArity = 3;
G__355281.cljs$lang$applyTo = (function (arglist__355283){
var x = cljs.core.first(arglist__355283);
arglist__355283 = cljs.core.next(arglist__355283);
var y = cljs.core.first(arglist__355283);
arglist__355283 = cljs.core.next(arglist__355283);
var z = cljs.core.first(arglist__355283);
var args = cljs.core.rest(arglist__355283);
return G__355281__delegate(x,y,z,args);
});
G__355281.cljs$core$IFn$_invoke$arity$variadic = G__355281__delegate;
return G__355281;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__355284 = null;
if (arguments.length > 3) {
var G__355285__i = 0, G__355285__a = new Array(arguments.length -  3);
while (G__355285__i < G__355285__a.length) {G__355285__a[G__355285__i] = arguments[G__355285__i + 3]; ++G__355285__i;}
G__355284 = new cljs.core.IndexedSeq(G__355285__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__355284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3981__auto__ = (function (){var G__355215 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355215) : p1.call(null,G__355215));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355217 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355217) : p2.call(null,G__355217));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__355218 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355218) : p3.call(null,G__355218));
}
}
});
var sp3__2 = (function (x,y){
var or__3981__auto__ = (function (){var G__355220 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355220) : p1.call(null,G__355220));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355222 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355222) : p2.call(null,G__355222));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__355224 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355224) : p3.call(null,G__355224));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__355226 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355226) : p1.call(null,G__355226));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__355228 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355228) : p2.call(null,G__355228));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var G__355229 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355229) : p3.call(null,G__355229));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3981__auto__ = (function (){var G__355231 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355231) : p1.call(null,G__355231));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355233 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355233) : p2.call(null,G__355233));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__355235 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355235) : p3.call(null,G__355235));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var or__3981__auto____$3 = (function (){var G__355237 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355237) : p1.call(null,G__355237));
})();
if(cljs.core.truth_(or__3981__auto____$3)){
return or__3981__auto____$3;
} else {
var or__3981__auto____$4 = (function (){var G__355239 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355239) : p2.call(null,G__355239));
})();
if(cljs.core.truth_(or__3981__auto____$4)){
return or__3981__auto____$4;
} else {
var or__3981__auto____$5 = (function (){var G__355241 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355241) : p3.call(null,G__355241));
})();
if(cljs.core.truth_(or__3981__auto____$5)){
return or__3981__auto____$5;
} else {
var or__3981__auto____$6 = (function (){var G__355243 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355243) : p1.call(null,G__355243));
})();
if(cljs.core.truth_(or__3981__auto____$6)){
return or__3981__auto____$6;
} else {
var or__3981__auto____$7 = (function (){var G__355245 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355245) : p2.call(null,G__355245));
})();
if(cljs.core.truth_(or__3981__auto____$7)){
return or__3981__auto____$7;
} else {
var G__355246 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355246) : p3.call(null,G__355246));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__355286__delegate = function (x,y,z,args){
var or__3981__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__){
return (function (p1__354903_SHARP_){
var or__3981__auto____$1 = (function (){var G__355248 = p1__354903_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__355248) : p1.call(null,G__355248));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var G__355250 = p1__354903_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__355250) : p2.call(null,G__355250));
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
var G__355251 = p1__354903_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__355251) : p3.call(null,G__355251));
}
}
});})(or__3981__auto__))
,args);
}
};
var G__355286 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__355287__i = 0, G__355287__a = new Array(arguments.length -  3);
while (G__355287__i < G__355287__a.length) {G__355287__a[G__355287__i] = arguments[G__355287__i + 3]; ++G__355287__i;}
  args = new cljs.core.IndexedSeq(G__355287__a,0);
} 
return G__355286__delegate.call(this,x,y,z,args);};
G__355286.cljs$lang$maxFixedArity = 3;
G__355286.cljs$lang$applyTo = (function (arglist__355288){
var x = cljs.core.first(arglist__355288);
arglist__355288 = cljs.core.next(arglist__355288);
var y = cljs.core.first(arglist__355288);
arglist__355288 = cljs.core.next(arglist__355288);
var z = cljs.core.first(arglist__355288);
var args = cljs.core.rest(arglist__355288);
return G__355286__delegate(x,y,z,args);
});
G__355286.cljs$core$IFn$_invoke$arity$variadic = G__355286__delegate;
return G__355286;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__355289 = null;
if (arguments.length > 3) {
var G__355290__i = 0, G__355290__a = new Array(arguments.length -  3);
while (G__355290__i < G__355290__a.length) {G__355290__a[G__355290__i] = arguments[G__355290__i + 3]; ++G__355290__i;}
G__355289 = new cljs.core.IndexedSeq(G__355290__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__355289);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__355291__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__354904_SHARP_){
var G__355267 = x;
return (p1__354904_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354904_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355267) : p1__354904_SHARP_.call(null,G__355267));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__354905_SHARP_){
var or__3981__auto__ = (function (){var G__355269 = x;
return (p1__354905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355269) : p1__354905_SHARP_.call(null,G__355269));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var G__355270 = y;
return (p1__354905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355270) : p1__354905_SHARP_.call(null,G__355270));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__354906_SHARP_){
var or__3981__auto__ = (function (){var G__355272 = x;
return (p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355272) : p1__354906_SHARP_.call(null,G__355272));
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var G__355274 = y;
return (p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355274) : p1__354906_SHARP_.call(null,G__355274));
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var G__355275 = z;
return (p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__354906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__355275) : p1__354906_SHARP_.call(null,G__355275));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__355292__delegate = function (x,y,z,args){
var or__3981__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.some(((function (or__3981__auto__,ps__$1){
return (function (p1__354907_SHARP_){
return cljs.core.some(p1__354907_SHARP_,args);
});})(or__3981__auto__,ps__$1))
,ps__$1);
}
};
var G__355292 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__355293__i = 0, G__355293__a = new Array(arguments.length -  3);
while (G__355293__i < G__355293__a.length) {G__355293__a[G__355293__i] = arguments[G__355293__i + 3]; ++G__355293__i;}
  args = new cljs.core.IndexedSeq(G__355293__a,0);
} 
return G__355292__delegate.call(this,x,y,z,args);};
G__355292.cljs$lang$maxFixedArity = 3;
G__355292.cljs$lang$applyTo = (function (arglist__355294){
var x = cljs.core.first(arglist__355294);
arglist__355294 = cljs.core.next(arglist__355294);
var y = cljs.core.first(arglist__355294);
arglist__355294 = cljs.core.next(arglist__355294);
var z = cljs.core.first(arglist__355294);
var args = cljs.core.rest(arglist__355294);
return G__355292__delegate(x,y,z,args);
});
G__355292.cljs$core$IFn$_invoke$arity$variadic = G__355292__delegate;
return G__355292;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__355295 = null;
if (arguments.length > 3) {
var G__355296__i = 0, G__355296__a = new Array(arguments.length -  3);
while (G__355296__i < G__355296__a.length) {G__355296__a[G__355296__i] = arguments[G__355296__i + 3]; ++G__355296__i;}
G__355295 = new cljs.core.IndexedSeq(G__355296__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__355295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__355291 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__355297__i = 0, G__355297__a = new Array(arguments.length -  3);
while (G__355297__i < G__355297__a.length) {G__355297__a[G__355297__i] = arguments[G__355297__i + 3]; ++G__355297__i;}
  ps = new cljs.core.IndexedSeq(G__355297__a,0);
} 
return G__355291__delegate.call(this,p1,p2,p3,ps);};
G__355291.cljs$lang$maxFixedArity = 3;
G__355291.cljs$lang$applyTo = (function (arglist__355298){
var p1 = cljs.core.first(arglist__355298);
arglist__355298 = cljs.core.next(arglist__355298);
var p2 = cljs.core.first(arglist__355298);
arglist__355298 = cljs.core.next(arglist__355298);
var p3 = cljs.core.first(arglist__355298);
var ps = cljs.core.rest(arglist__355298);
return G__355291__delegate(p1,p2,p3,ps);
});
G__355291.cljs$core$IFn$_invoke$arity$variadic = G__355291__delegate;
return G__355291;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__355299 = null;
if (arguments.length > 3) {
var G__355300__i = 0, G__355300__a = new Array(arguments.length -  3);
while (G__355300__i < G__355300__a.length) {G__355300__a[G__355300__i] = arguments[G__355300__i + 3]; ++G__355300__i;}
G__355299 = new cljs.core.IndexedSeq(G__355300__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__355299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__355355 = null;
var G__355355__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355355__1 = (function (result){
var G__355341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355341) : rf.call(null,G__355341));
});
var G__355355__2 = (function (result,input){
var G__355342 = result;
var G__355343 = (function (){var G__355344 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355344) : f.call(null,G__355344));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355342,G__355343) : rf.call(null,G__355342,G__355343));
});
var G__355355__3 = (function() { 
var G__355356__delegate = function (result,input,inputs){
var G__355345 = result;
var G__355346 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355345,G__355346) : rf.call(null,G__355345,G__355346));
};
var G__355356 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__355357__i = 0, G__355357__a = new Array(arguments.length -  2);
while (G__355357__i < G__355357__a.length) {G__355357__a[G__355357__i] = arguments[G__355357__i + 2]; ++G__355357__i;}
  inputs = new cljs.core.IndexedSeq(G__355357__a,0);
} 
return G__355356__delegate.call(this,result,input,inputs);};
G__355356.cljs$lang$maxFixedArity = 2;
G__355356.cljs$lang$applyTo = (function (arglist__355358){
var result = cljs.core.first(arglist__355358);
arglist__355358 = cljs.core.next(arglist__355358);
var input = cljs.core.first(arglist__355358);
var inputs = cljs.core.rest(arglist__355358);
return G__355356__delegate(result,input,inputs);
});
G__355356.cljs$core$IFn$_invoke$arity$variadic = G__355356__delegate;
return G__355356;
})()
;
G__355355 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__355355__0.call(this);
case 1:
return G__355355__1.call(this,result);
case 2:
return G__355355__2.call(this,result,input);
default:
var G__355359 = null;
if (arguments.length > 2) {
var G__355360__i = 0, G__355360__a = new Array(arguments.length -  2);
while (G__355360__i < G__355360__a.length) {G__355360__a[G__355360__i] = arguments[G__355360__i + 2]; ++G__355360__i;}
G__355359 = new cljs.core.IndexedSeq(G__355360__a,0);
}
return G__355355__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__355359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355355.cljs$lang$maxFixedArity = 2;
G__355355.cljs$lang$applyTo = G__355355__3.cljs$lang$applyTo;
G__355355.cljs$core$IFn$_invoke$arity$0 = G__355355__0;
G__355355.cljs$core$IFn$_invoke$arity$1 = G__355355__1;
G__355355.cljs$core$IFn$_invoke$arity$2 = G__355355__2;
G__355355.cljs$core$IFn$_invoke$arity$variadic = G__355355__3.cljs$core$IFn$_invoke$arity$variadic;
return G__355355;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___355361 = size;
var i_355362 = (0);
while(true){
if((i_355362 < n__4868__auto___355361)){
cljs.core.chunk_append(b,(function (){var G__355347 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_355362);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355347) : f.call(null,G__355347));
})());

var G__355363 = (i_355362 + (1));
i_355362 = G__355363;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__355348 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355348) : f.call(null,G__355348));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__355349 = cljs.core.first(s1);
var G__355350 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355349,G__355350) : f.call(null,G__355349,G__355350));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__355351 = cljs.core.first(s1);
var G__355352 = cljs.core.first(s2);
var G__355353 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355351,G__355352,G__355353) : f.call(null,G__355351,G__355352,G__355353));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__355364__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__355301_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__355301_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__355364 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__355365__i = 0, G__355365__a = new Array(arguments.length -  4);
while (G__355365__i < G__355365__a.length) {G__355365__a[G__355365__i] = arguments[G__355365__i + 4]; ++G__355365__i;}
  colls = new cljs.core.IndexedSeq(G__355365__a,0);
} 
return G__355364__delegate.call(this,f,c1,c2,c3,colls);};
G__355364.cljs$lang$maxFixedArity = 4;
G__355364.cljs$lang$applyTo = (function (arglist__355366){
var f = cljs.core.first(arglist__355366);
arglist__355366 = cljs.core.next(arglist__355366);
var c1 = cljs.core.first(arglist__355366);
arglist__355366 = cljs.core.next(arglist__355366);
var c2 = cljs.core.first(arglist__355366);
arglist__355366 = cljs.core.next(arglist__355366);
var c3 = cljs.core.first(arglist__355366);
var colls = cljs.core.rest(arglist__355366);
return G__355364__delegate(f,c1,c2,c3,colls);
});
G__355364.cljs$core$IFn$_invoke$arity$variadic = G__355364__delegate;
return G__355364;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__355367 = null;
if (arguments.length > 4) {
var G__355368__i = 0, G__355368__a = new Array(arguments.length -  4);
while (G__355368__i < G__355368__a.length) {G__355368__a[G__355368__i] = arguments[G__355368__i + 4]; ++G__355368__i;}
G__355367 = new cljs.core.IndexedSeq(G__355368__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__355367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__355377 = null;
var G__355377__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355377__1 = (function (result){
var G__355374 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355374) : rf.call(null,G__355374));
});
var G__355377__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__355375 = result;
var G__355376 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355375,G__355376) : rf.call(null,G__355375,G__355376));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__355377 = function(result,input){
switch(arguments.length){
case 0:
return G__355377__0.call(this);
case 1:
return G__355377__1.call(this,result);
case 2:
return G__355377__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355377.cljs$core$IFn$_invoke$arity$0 = G__355377__0;
G__355377.cljs$core$IFn$_invoke$arity$1 = G__355377__1;
G__355377.cljs$core$IFn$_invoke$arity$2 = G__355377__2;
return G__355377;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__355384 = null;
var G__355384__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355384__1 = (function (result){
var G__355381 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355381) : rf.call(null,G__355381));
});
var G__355384__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__355382 = result;
var G__355383 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355382,G__355383) : rf.call(null,G__355382,G__355383));
}
});
G__355384 = function(result,input){
switch(arguments.length){
case 0:
return G__355384__0.call(this);
case 1:
return G__355384__1.call(this,result);
case 2:
return G__355384__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355384.cljs$core$IFn$_invoke$arity$0 = G__355384__0;
G__355384.cljs$core$IFn$_invoke$arity$1 = G__355384__1;
G__355384.cljs$core$IFn$_invoke$arity$2 = G__355384__2;
return G__355384;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__355385 = (n__$1 - (1));
var G__355386 = cljs.core.rest(s);
n__$1 = G__355385;
coll__$1 = G__355386;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__355389 = cljs.core.next(s);
var G__355390 = cljs.core.next(lead);
s = G__355389;
lead = G__355390;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__355403 = null;
var G__355403__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355403__1 = (function (result){
var G__355397 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355397) : rf.call(null,G__355397));
});
var G__355403__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3969__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3969__auto__)){
var G__355398 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__355398) : pred.call(null,G__355398));
} else {
return and__3969__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__355399 = result;
var G__355400 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355399,G__355400) : rf.call(null,G__355399,G__355400));
}
});
G__355403 = function(result,input){
switch(arguments.length){
case 0:
return G__355403__0.call(this);
case 1:
return G__355403__1.call(this,result);
case 2:
return G__355403__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355403.cljs$core$IFn$_invoke$arity$0 = G__355403__0;
G__355403.cljs$core$IFn$_invoke$arity$1 = G__355403__1;
G__355403.cljs$core$IFn$_invoke$arity$2 = G__355403__2;
return G__355403;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3969__auto__ = s;
if(and__3969__auto__){
var G__355402 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__355402) : pred__$1.call(null,G__355402));
} else {
return and__3969__auto__;
}
})())){
var G__355404 = pred__$1;
var G__355405 = cljs.core.rest(s);
pred__$1 = G__355404;
coll__$1 = G__355405;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__355414 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355414) : f.call(null,G__355414));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__355417__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__355417 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__355418__i = 0, G__355418__a = new Array(arguments.length -  2);
while (G__355418__i < G__355418__a.length) {G__355418__a[G__355418__i] = arguments[G__355418__i + 2]; ++G__355418__i;}
  colls = new cljs.core.IndexedSeq(G__355418__a,0);
} 
return G__355417__delegate.call(this,c1,c2,colls);};
G__355417.cljs$lang$maxFixedArity = 2;
G__355417.cljs$lang$applyTo = (function (arglist__355419){
var c1 = cljs.core.first(arglist__355419);
arglist__355419 = cljs.core.next(arglist__355419);
var c2 = cljs.core.first(arglist__355419);
var colls = cljs.core.rest(arglist__355419);
return G__355417__delegate(c1,c2,colls);
});
G__355417.cljs$core$IFn$_invoke$arity$variadic = G__355417__delegate;
return G__355417;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__355420 = null;
if (arguments.length > 2) {
var G__355421__i = 0, G__355421__a = new Array(arguments.length -  2);
while (G__355421__i < G__355421__a.length) {G__355421__a[G__355421__i] = arguments[G__355421__i + 2]; ++G__355421__i;}
G__355420 = new cljs.core.IndexedSeq(G__355421__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__355420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__355436 = null;
var G__355436__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355436__1 = (function (result){
var G__355429 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355429) : rf.call(null,G__355429));
});
var G__355436__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__355430 = result;
var G__355431 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355430,G__355431) : rf.call(null,G__355430,G__355431));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__355432 = sepr;
var G__355433 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355432,G__355433) : rf.call(null,G__355432,G__355433));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__355434 = result;
var G__355435 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355434,G__355435) : rf.call(null,G__355434,G__355435));
}
});
G__355436 = function(result,input){
switch(arguments.length){
case 0:
return G__355436__0.call(this);
case 1:
return G__355436__1.call(this,result);
case 2:
return G__355436__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355436.cljs$core$IFn$_invoke$arity$0 = G__355436__0;
G__355436.cljs$core$IFn$_invoke$arity$1 = G__355436__1;
G__355436.cljs$core$IFn$_invoke$arity$2 = G__355436__2;
return G__355436;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__355445__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__355445 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__355446__i = 0, G__355446__a = new Array(arguments.length -  1);
while (G__355446__i < G__355446__a.length) {G__355446__a[G__355446__i] = arguments[G__355446__i + 1]; ++G__355446__i;}
  colls = new cljs.core.IndexedSeq(G__355446__a,0);
} 
return G__355445__delegate.call(this,f,colls);};
G__355445.cljs$lang$maxFixedArity = 1;
G__355445.cljs$lang$applyTo = (function (arglist__355447){
var f = cljs.core.first(arglist__355447);
var colls = cljs.core.rest(arglist__355447);
return G__355445__delegate(f,colls);
});
G__355445.cljs$core$IFn$_invoke$arity$variadic = G__355445__delegate;
return G__355445;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__355448 = null;
if (arguments.length > 1) {
var G__355449__i = 0, G__355449__a = new Array(arguments.length -  1);
while (G__355449__i < G__355449__a.length) {G__355449__a[G__355449__i] = arguments[G__355449__i + 1]; ++G__355449__i;}
G__355448 = new cljs.core.IndexedSeq(G__355449__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__355448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__355468 = null;
var G__355468__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__355468__1 = (function (result){
var G__355462 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__355462) : rf.call(null,G__355462));
});
var G__355468__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__355463 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__355463) : pred.call(null,G__355463));
})())){
var G__355464 = result;
var G__355465 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__355464,G__355465) : rf.call(null,G__355464,G__355465));
} else {
return result;
}
});
G__355468 = function(result,input){
switch(arguments.length){
case 0:
return G__355468__0.call(this);
case 1:
return G__355468__1.call(this,result);
case 2:
return G__355468__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355468.cljs$core$IFn$_invoke$arity$0 = G__355468__0;
G__355468.cljs$core$IFn$_invoke$arity$1 = G__355468__1;
G__355468.cljs$core$IFn$_invoke$arity$2 = G__355468__2;
return G__355468;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4868__auto___355469 = size;
var i_355470 = (0);
while(true){
if((i_355470 < n__4868__auto___355469)){
if(cljs.core.truth_((function (){var G__355466 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_355470);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__355466) : pred.call(null,G__355466));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_355470));
} else {
}

var G__355471 = (i_355470 + (1));
i_355470 = G__355471;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__355467 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__355467) : pred.call(null,G__355467));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__355478 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__355478) : branch_QMARK_.call(null,G__355478));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__355479 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__355479) : children.call(null,G__355479));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__355480_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__355480_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__355483 = to;
if(G__355483){
var bit__4655__auto__ = (G__355483.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__355483.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__355484 = to;
if(G__355484){
var bit__4655__auto__ = (G__355484.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4655__auto__) || (G__355484.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__355486 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355486) : f.call(null,G__355486));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__355487__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__355487 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__355488__i = 0, G__355488__a = new Array(arguments.length -  4);
while (G__355488__i < G__355488__a.length) {G__355488__a[G__355488__i] = arguments[G__355488__i + 4]; ++G__355488__i;}
  colls = new cljs.core.IndexedSeq(G__355488__a,0);
} 
return G__355487__delegate.call(this,f,c1,c2,c3,colls);};
G__355487.cljs$lang$maxFixedArity = 4;
G__355487.cljs$lang$applyTo = (function (arglist__355489){
var f = cljs.core.first(arglist__355489);
arglist__355489 = cljs.core.next(arglist__355489);
var c1 = cljs.core.first(arglist__355489);
arglist__355489 = cljs.core.next(arglist__355489);
var c2 = cljs.core.first(arglist__355489);
arglist__355489 = cljs.core.next(arglist__355489);
var c3 = cljs.core.first(arglist__355489);
var colls = cljs.core.rest(arglist__355489);
return G__355487__delegate(f,c1,c2,c3,colls);
});
G__355487.cljs$core$IFn$_invoke$arity$variadic = G__355487__delegate;
return G__355487;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__355490 = null;
if (arguments.length > 4) {
var G__355491__i = 0, G__355491__a = new Array(arguments.length -  4);
while (G__355491__i < G__355491__a.length) {G__355491__a[G__355491__i] = arguments[G__355491__i + 4]; ++G__355491__i;}
G__355490 = new cljs.core.IndexedSeq(G__355491__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__355490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__355493 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__355493) : pred.call(null,G__355493));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__355508 = m__$1;
if(G__355508){
var bit__4662__auto__ = (G__355508.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4662__auto__) || (G__355508.cljs$core$ILookup$)){
return true;
} else {
if((!G__355508.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__355508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__355508);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__355509 = sentinel;
var G__355510 = m__$2;
var G__355511 = cljs.core.next(ks__$1);
sentinel = G__355509;
m__$1 = G__355510;
ks__$1 = G__355511;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__355512,v){
var vec__355517 = p__355512;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355517,(0),null);
var ks = cljs.core.nthnext(vec__355517,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__355518,f){
var vec__355556 = p__355518;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355556,(0),null);
var ks = cljs.core.nthnext(vec__355556,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355557 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355557) : f.call(null,G__355557));
})());
}
});
var update_in__4 = (function (m,p__355519,f,a){
var vec__355558 = p__355519;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355558,(0),null);
var ks = cljs.core.nthnext(vec__355558,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355559 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355560 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355559,G__355560) : f.call(null,G__355559,G__355560));
})());
}
});
var update_in__5 = (function (m,p__355520,f,a,b){
var vec__355561 = p__355520;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355561,(0),null);
var ks = cljs.core.nthnext(vec__355561,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355562 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355563 = a;
var G__355564 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355562,G__355563,G__355564) : f.call(null,G__355562,G__355563,G__355564));
})());
}
});
var update_in__6 = (function (m,p__355521,f,a,b,c){
var vec__355565 = p__355521;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355565,(0),null);
var ks = cljs.core.nthnext(vec__355565,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355567 = a;
var G__355568 = b;
var G__355569 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__355566,G__355567,G__355568,G__355569) : f.call(null,G__355566,G__355567,G__355568,G__355569));
})());
}
});
var update_in__7 = (function() { 
var G__355571__delegate = function (m,p__355522,f,a,b,c,args){
var vec__355570 = p__355522;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355570,(0),null);
var ks = cljs.core.nthnext(vec__355570,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__355571 = function (m,p__355522,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__355572__i = 0, G__355572__a = new Array(arguments.length -  6);
while (G__355572__i < G__355572__a.length) {G__355572__a[G__355572__i] = arguments[G__355572__i + 6]; ++G__355572__i;}
  args = new cljs.core.IndexedSeq(G__355572__a,0);
} 
return G__355571__delegate.call(this,m,p__355522,f,a,b,c,args);};
G__355571.cljs$lang$maxFixedArity = 6;
G__355571.cljs$lang$applyTo = (function (arglist__355573){
var m = cljs.core.first(arglist__355573);
arglist__355573 = cljs.core.next(arglist__355573);
var p__355522 = cljs.core.first(arglist__355573);
arglist__355573 = cljs.core.next(arglist__355573);
var f = cljs.core.first(arglist__355573);
arglist__355573 = cljs.core.next(arglist__355573);
var a = cljs.core.first(arglist__355573);
arglist__355573 = cljs.core.next(arglist__355573);
var b = cljs.core.first(arglist__355573);
arglist__355573 = cljs.core.next(arglist__355573);
var c = cljs.core.first(arglist__355573);
var args = cljs.core.rest(arglist__355573);
return G__355571__delegate(m,p__355522,f,a,b,c,args);
});
G__355571.cljs$core$IFn$_invoke$arity$variadic = G__355571__delegate;
return G__355571;
})()
;
update_in = function(m,p__355522,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__355522,f);
case 4:
return update_in__4.call(this,m,p__355522,f,a);
case 5:
return update_in__5.call(this,m,p__355522,f,a,b);
case 6:
return update_in__6.call(this,m,p__355522,f,a,b,c);
default:
var G__355574 = null;
if (arguments.length > 6) {
var G__355575__i = 0, G__355575__a = new Array(arguments.length -  6);
while (G__355575__i < G__355575__a.length) {G__355575__a[G__355575__i] = arguments[G__355575__i + 6]; ++G__355575__i;}
G__355574 = new cljs.core.IndexedSeq(G__355575__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__355522,f,a,b,c, G__355574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355586 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__355586) : f.call(null,G__355586));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355587 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355588 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355587,G__355588) : f.call(null,G__355587,G__355588));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355589 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355590 = x;
var G__355591 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355589,G__355590,G__355591) : f.call(null,G__355589,G__355590,G__355591));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__355592 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__355593 = x;
var G__355594 = y;
var G__355595 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__355592,G__355593,G__355594,G__355595) : f.call(null,G__355592,G__355593,G__355594,G__355595));
})());
});
var update__7 = (function() { 
var G__355596__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__355596 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__355597__i = 0, G__355597__a = new Array(arguments.length -  6);
while (G__355597__i < G__355597__a.length) {G__355597__a[G__355597__i] = arguments[G__355597__i + 6]; ++G__355597__i;}
  more = new cljs.core.IndexedSeq(G__355597__a,0);
} 
return G__355596__delegate.call(this,m,k,f,x,y,z,more);};
G__355596.cljs$lang$maxFixedArity = 6;
G__355596.cljs$lang$applyTo = (function (arglist__355598){
var m = cljs.core.first(arglist__355598);
arglist__355598 = cljs.core.next(arglist__355598);
var k = cljs.core.first(arglist__355598);
arglist__355598 = cljs.core.next(arglist__355598);
var f = cljs.core.first(arglist__355598);
arglist__355598 = cljs.core.next(arglist__355598);
var x = cljs.core.first(arglist__355598);
arglist__355598 = cljs.core.next(arglist__355598);
var y = cljs.core.first(arglist__355598);
arglist__355598 = cljs.core.next(arglist__355598);
var z = cljs.core.first(arglist__355598);
var more = cljs.core.rest(arglist__355598);
return G__355596__delegate(m,k,f,x,y,z,more);
});
G__355596.cljs$core$IFn$_invoke$arity$variadic = G__355596__delegate;
return G__355596;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__355599 = null;
if (arguments.length > 6) {
var G__355600__i = 0, G__355600__a = new Array(arguments.length -  6);
while (G__355600__i < G__355600__a.length) {G__355600__a[G__355600__i] = arguments[G__355600__i + 6]; ++G__355600__i;}
G__355599 = new cljs.core.IndexedSeq(G__355600__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__355599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__355601 = (ll - (5));
var G__355602 = r;
ll = G__355601;
ret = G__355602;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__355607 = cljs.core.pv_aget(node,(0));
var G__355608 = (level - (5));
node = G__355607;
level = G__355608;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__355609 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__355610 = (level - (5));
node = G__355609;
level = G__355610;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__355620 = init__$2;
var G__355621 = (j + i);
var G__355622 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355620,G__355621,G__355622) : f.call(null,G__355620,G__355621,G__355622));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__355633 = (j + (1));
var G__355634 = init__$3;
j = G__355633;
init__$2 = G__355634;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355623 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355623) : cljs.core.deref.call(null,G__355623));
} else {
var G__355635 = (i + len);
var G__355636 = init__$2;
i = G__355635;
init__$1 = G__355636;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__355624 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__355624) : cljs.core.tv_editable_root.call(null,G__355624));
})(),(function (){var G__355625 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__355625) : cljs.core.tv_editable_tail.call(null,G__355625));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__355626 = init__$2;
var G__355627 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355626,G__355627) : f.call(null,G__355626,G__355627));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__355637 = (j + (1));
var G__355638 = init__$3;
j = G__355637;
init__$2 = G__355638;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355628 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355628) : cljs.core.deref.call(null,G__355628));
} else {
var G__355639 = (i + len);
var G__355640 = init__$2;
i = G__355639;
init__$1 = G__355640;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__355629 = coll__$1;
var G__355630 = cljs.core.first_array_for_longvec(coll__$1);
var G__355631 = (0);
var G__355632 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__355629,G__355630,G__355631,G__355632) : cljs.core.chunked_seq.call(null,G__355629,G__355630,G__355631,G__355632));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4868__auto___355641 = len;
var i_355642 = (0);
while(true){
if((i_355642 < n__4868__auto___355641)){
(new_tail[i_355642] = (self__.tail[i_355642]));

var G__355643 = (i_355642 + (1));
i_355642 = G__355643;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__355644 = null;
var G__355644__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__355644__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__355644 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355644__2.call(this,self__,k);
case 3:
return G__355644__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355644.cljs$core$IFn$_invoke$arity$2 = G__355644__2;
G__355644.cljs$core$IFn$_invoke$arity$3 = G__355644__3;
return G__355644;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args355619){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355619)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__355645 = (i + (1));
var G__355646 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__355645;
out = G__355646;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__355647__i = 0, G__355647__a = new Array(arguments.length -  0);
while (G__355647__i < G__355647__a.length) {G__355647__a[G__355647__i] = arguments[G__355647__i + 0]; ++G__355647__i;}
  args = new cljs.core.IndexedSeq(G__355647__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__355648){
var args = cljs.core.seq(arglist__355648);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__355649 = self__.vec;
var G__355650 = self__.node;
var G__355651 = self__.i;
var G__355652 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__355649,G__355650,G__355651,G__355652) : cljs.core.chunked_seq.call(null,G__355649,G__355650,G__355651,G__355652));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__355653 = self__.vec;
var G__355654 = (self__.i + self__.off);
var G__355655 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__355653,G__355654,G__355655) : cljs.core.subvec.call(null,G__355653,G__355654,G__355655));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__355656 = self__.vec;
var G__355657 = (self__.i + self__.off);
var G__355658 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__355656,G__355657,G__355658) : cljs.core.subvec.call(null,G__355656,G__355657,G__355658));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__355659 = self__.vec;
var G__355660 = self__.node;
var G__355661 = self__.i;
var G__355662 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__355659,G__355660,G__355661,G__355662) : cljs.core.chunked_seq.call(null,G__355659,G__355660,G__355661,G__355662));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__355663 = self__.vec;
var G__355664 = cljs.core.unchecked_array_for(self__.vec,end);
var G__355665 = end;
var G__355666 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__355663,G__355664,G__355665,G__355666) : cljs.core.chunked_seq.call(null,G__355663,G__355664,G__355665,G__355666));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__355667 = self__.vec;
var G__355668 = self__.node;
var G__355669 = self__.i;
var G__355670 = self__.off;
var G__355671 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__355667,G__355668,G__355669,G__355670,G__355671) : cljs.core.chunked_seq.call(null,G__355667,G__355668,G__355669,G__355670,G__355671));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__355672 = self__.vec;
var G__355673 = cljs.core.unchecked_array_for(self__.vec,end);
var G__355674 = end;
var G__355675 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__355672,G__355673,G__355674,G__355675) : cljs.core.chunked_seq.call(null,G__355672,G__355673,G__355674,G__355675));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__355677 = self__.meta;
var G__355678 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__355679 = self__.start;
var G__355680 = (function (){var x__4298__auto__ = self__.end;
var y__4299__auto__ = (v_pos + (1));
return ((x__4298__auto__ > y__4299__auto__) ? x__4298__auto__ : y__4299__auto__);
})();
var G__355681 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__355677,G__355678,G__355679,G__355680,G__355681) : cljs.core.build_subvec.call(null,G__355677,G__355678,G__355679,G__355680,G__355681));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__355682 = self__.meta;
var G__355683 = self__.v;
var G__355684 = self__.start;
var G__355685 = (self__.end - (1));
var G__355686 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__355682,G__355683,G__355684,G__355685,G__355686) : cljs.core.build_subvec.call(null,G__355682,G__355683,G__355684,G__355685,G__355686));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__355688 = meta__$1;
var G__355689 = self__.v;
var G__355690 = self__.start;
var G__355691 = self__.end;
var G__355692 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__355688,G__355689,G__355690,G__355691,G__355692) : cljs.core.build_subvec.call(null,G__355688,G__355689,G__355690,G__355691,G__355692));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__355693 = self__.meta;
var G__355694 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__355695 = self__.start;
var G__355696 = (self__.end + (1));
var G__355697 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__355693,G__355694,G__355695,G__355696,G__355697) : cljs.core.build_subvec.call(null,G__355693,G__355694,G__355695,G__355696,G__355697));
});

cljs.core.Subvec.prototype.call = (function() {
var G__355698 = null;
var G__355698__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__355698__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__355698 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355698__2.call(this,self__,k);
case 3:
return G__355698__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355698.cljs$core$IFn$_invoke$arity$2 = G__355698__2;
G__355698.cljs$core$IFn$_invoke$arity$3 = G__355698__3;
return G__355698;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args355676){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355676)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__355699 = meta;
var G__355700 = v.v;
var G__355701 = (v.start + start);
var G__355702 = (v.start + end);
var G__355703 = __hash;
meta = G__355699;
v = G__355700;
start = G__355701;
end = G__355702;
__hash = G__355703;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj355710 = {};
return obj355710;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__355718 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__355719 = (level - (5));
node = G__355718;
level = G__355719;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__355723 = null;
var G__355723__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355723__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355723 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355723__2.call(this,self__,k);
case 3:
return G__355723__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355723.cljs$core$IFn$_invoke$arity$2 = G__355723__2;
G__355723.cljs$core$IFn$_invoke$arity$3 = G__355723__3;
return G__355723;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args355720){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355720)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3981__auto__ = self__.front;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = self__.rear;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__355724 = (i + incr);
i = G__355724;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__355725 = (i + (1));
var G__355726 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__355725;
out = G__355726;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj355730 = {};
return obj355730;
})();
var l = ks.length;
var i_355731 = (0);
while(true){
if((i_355731 < l)){
var k_355732 = (ks[i_355731]);
(new_obj[k_355732] = (obj[k_355732]));

var G__355733 = (i_355731 + (1));
i_355731 = G__355733;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__355737 = k;
return goog.isString(G__355737);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__355738 = init__$1;
var G__355739 = k;
var G__355740 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355738,G__355739,G__355740) : f.call(null,G__355738,G__355739,G__355740));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355741 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355741) : cljs.core.deref.call(null,G__355741));
} else {
var G__355747 = cljs.core.rest(keys__$1);
var G__355748 = init__$2;
keys__$1 = G__355747;
init__$1 = G__355748;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__355743 = k;
return goog.isString(G__355743);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__355744 = k;
return goog.isString(G__355744);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3969__auto__ = (function (){var G__355746 = k;
return goog.isString(G__355746);
})();
if(cljs.core.truth_(and__3969__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3969__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__355734_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__355734_SHARP_,(self__.strobj[p1__355734_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__355749 = null;
var G__355749__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355749__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355749 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355749__2.call(this,self__,k);
case 3:
return G__355749__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355749.cljs$core$IFn$_invoke$arity$2 = G__355749__2;
G__355749.cljs$core$IFn$_invoke$arity$3 = G__355749__3;
return G__355749;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args355735){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355735)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj355751 = {};
return obj355751;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__355752 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355752,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355752,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__355753 = (i + (2));
i = G__355753;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__355754 = (i + (2));
i = G__355754;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__355755 = (i + (2));
i = G__355755;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__355756 = (i + (2));
i = G__355756;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__355757 = (i + (2));
i = G__355757;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3981__auto__ = (function (){var G__355761 = k;
return goog.isString(G__355761);
})();
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_355762 = (0);
while(true){
if((i_355762 < l)){
(narr[i_355762] = (arr[i_355762]));

var G__355763 = (i_355762 + (1));
i_355762 = G__355763;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__355765 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__355765) : cljs.core.keys.call(null,G__355765));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__355766 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__355766) : cljs.core.vals.call(null,G__355766));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__355767 = cljs.core.seq(coll);
var chunk__355768 = null;
var count__355769 = (0);
var i__355770 = (0);
while(true){
if((i__355770 < count__355769)){
var vec__355771 = chunk__355768.cljs$core$IIndexed$_nth$arity$2(null,i__355770);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355771,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355771,(1),null);
var G__355772_355785 = v;
var G__355773_355786 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355772_355785,G__355773_355786) : f.call(null,G__355772_355785,G__355773_355786));

var G__355787 = seq__355767;
var G__355788 = chunk__355768;
var G__355789 = count__355769;
var G__355790 = (i__355770 + (1));
seq__355767 = G__355787;
chunk__355768 = G__355788;
count__355769 = G__355789;
i__355770 = G__355790;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__355767);
if(temp__4126__auto__){
var seq__355767__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__355767__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__355767__$1);
var G__355791 = cljs.core.chunk_rest(seq__355767__$1);
var G__355792 = c__4768__auto__;
var G__355793 = cljs.core.count(c__4768__auto__);
var G__355794 = (0);
seq__355767 = G__355791;
chunk__355768 = G__355792;
count__355769 = G__355793;
i__355770 = G__355794;
continue;
} else {
var vec__355774 = cljs.core.first(seq__355767__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355774,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355774,(1),null);
var G__355775_355795 = v;
var G__355776_355796 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355775_355795,G__355776_355796) : f.call(null,G__355775_355795,G__355776_355796));

var G__355797 = cljs.core.next(seq__355767__$1);
var G__355798 = null;
var G__355799 = (0);
var G__355800 = (0);
seq__355767 = G__355797;
chunk__355768 = G__355798;
count__355769 = G__355799;
i__355770 = G__355800;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__355777 = init__$1;
var G__355778 = (self__.arr[i]);
var G__355779 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355777,G__355778,G__355779) : f.call(null,G__355777,G__355778,G__355779));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355780 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355780) : cljs.core.deref.call(null,G__355780));
} else {
var G__355801 = (i + (2));
var G__355802 = init__$2;
i = G__355801;
init__$1 = G__355802;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__355781 = other;
if(G__355781){
var bit__4655__auto__ = (G__355781.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4655__auto__) || (G__355781.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__355803 = (i + (2));
i = G__355803;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj355783 = {};
return obj355783;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__355804 = (s + (2));
var G__355805 = d;
s = G__355804;
d = G__355805;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__355806 = (s + (2));
var G__355807 = (d + (2));
s = G__355806;
d = G__355807;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__355784 = cljs.core.aclone(self__.arr);
(G__355784[(idx + (1))] = v);

return G__355784;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__355808 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__355809 = cljs.core.next(es);
ret = G__355808;
es = G__355809;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__355810 = null;
var G__355810__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355810__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355810 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355810__2.call(this,self__,k);
case 3:
return G__355810__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355810.cljs$core$IFn$_invoke$arity$2 = G__355810__2;
G__355810.cljs$core$IFn$_invoke$arity$3 = G__355810__3;
return G__355810;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args355764){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355764)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__355811 = (i + (2));
var G__355812 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__355811;
ret = G__355812;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__355813_355821 = self__.arr;
G__355813_355821.pop();

G__355813_355821.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__355814 = self__.len;
var G__355815 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__355814,G__355815) : cljs.core.array__GT_transient_hash_map.call(null,G__355814,G__355815));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__355816 = o;
if(G__355816){
var bit__4662__auto__ = (G__355816.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__355816.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__355816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__355816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__355816);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__355817 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__355817) : cljs.core.key.call(null,G__355817));
})(),(function (){var G__355818 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__355818) : cljs.core.val.call(null,G__355818));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__355822 = cljs.core.next(es);
var G__355823 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__355819 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__355819) : cljs.core.key.call(null,G__355819));
})(),(function (){var G__355820 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__355820) : cljs.core.val.call(null,G__355820));
})());
es = G__355822;
tcoll__$2 = G__355823;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__355824 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__355825 = (i + (2));
out = G__355824;
i = G__355825;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__355828 = cljs.core.aclone(arr);
(G__355828[i] = a);

return G__355828;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__355829 = cljs.core.aclone(arr);
(G__355829[i] = a);

(G__355829[j] = b);

return G__355829;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__355834 = init__$1;
var G__355835 = k;
var G__355836 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355834,G__355835,G__355836) : f.call(null,G__355834,G__355835,G__355836));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355837 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355837) : cljs.core.deref.call(null,G__355837));
} else {
var G__355838 = (i + (2));
var G__355839 = init__$2;
i = G__355838;
init__$1 = G__355839;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__355840 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__355840) : cljs.core.create_inode_seq.call(null,G__355840));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_355854 = (0);
var j_355855 = (0);
while(true){
if((i_355854 < (32))){
if((((self__.bitmap >>> i_355854) & (1)) === (0))){
var G__355856 = (i_355854 + (1));
var G__355857 = j_355855;
i_355854 = G__355856;
j_355855 = G__355857;
continue;
} else {
(nodes[i_355854] = ((!(((self__.arr[j_355855]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_355855])),(self__.arr[j_355855]),(self__.arr[(j_355855 + (1))]),added_leaf_QMARK_):(self__.arr[(j_355855 + (1))])));

var G__355858 = (i_355854 + (1));
var G__355859 = (j_355855 + (2));
i_355854 = G__355858;
j_355855 = G__355859;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__355841 = edit__$1;
var G__355842 = (shift + (5));
var G__355843 = key_or_nil;
var G__355844 = val_or_node;
var G__355845 = hash;
var G__355846 = key;
var G__355847 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__355841,G__355842,G__355843,G__355844,G__355845,G__355846,G__355847) : cljs.core.create_node.call(null,G__355841,G__355842,G__355843,G__355844,G__355845,G__355846,G__355847));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_355860 = (0);
var j_355861 = (0);
while(true){
if((i_355860 < (32))){
if((((self__.bitmap >>> i_355860) & (1)) === (0))){
var G__355862 = (i_355860 + (1));
var G__355863 = j_355861;
i_355860 = G__355862;
j_355861 = G__355863;
continue;
} else {
(nodes[i_355860] = ((!(((self__.arr[j_355861]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_355861])),(self__.arr[j_355861]),(self__.arr[(j_355861 + (1))]),added_leaf_QMARK_):(self__.arr[(j_355861 + (1))])));

var G__355864 = (i_355860 + (1));
var G__355865 = (j_355861 + (2));
i_355860 = G__355864;
j_355861 = G__355865;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__355848 = (shift + (5));
var G__355849 = key_or_nil;
var G__355850 = val_or_node;
var G__355851 = hash;
var G__355852 = key;
var G__355853 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__355848,G__355849,G__355850,G__355851,G__355852,G__355853) : cljs.core.create_node.call(null,G__355848,G__355849,G__355850,G__355851,G__355852,G__355853));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__355866 = (i + (1));
var G__355867 = (j + (2));
var G__355868 = (bitmap | ((1) << i));
i = G__355866;
j = G__355867;
bitmap = G__355868;
continue;
} else {
var G__355869 = (i + (1));
var G__355870 = j;
var G__355871 = bitmap;
i = G__355869;
j = G__355870;
bitmap = G__355871;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__355872 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__355872) : cljs.core.create_array_node_seq.call(null,G__355872));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355873 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355873) : cljs.core.deref.call(null,G__355873));
} else {
var G__355874 = (i + (1));
var G__355875 = init__$2;
i = G__355874;
init__$1 = G__355875;
continue;
}
} else {
var G__355876 = (i + (1));
var G__355877 = init__$1;
i = G__355876;
init__$1 = G__355877;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__355878 = (i + (2));
i = G__355878;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__355879 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__355879) : cljs.core.create_inode_seq.call(null,G__355879));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__355880 = self__.nodes;
var G__355881 = (self__.i + (2));
var G__355882 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__355880,G__355881,G__355882) : cljs.core.create_inode_seq.call(null,G__355880,G__355881,G__355882));
} else {
var G__355883 = self__.nodes;
var G__355884 = self__.i;
var G__355885 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__355883,G__355884,G__355885) : cljs.core.create_inode_seq.call(null,G__355883,G__355884,G__355885));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__355889 = (j + (2));
j = G__355889;
continue;
}
} else {
var G__355890 = (j + (2));
j = G__355890;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__355891 = null;
var G__355892 = self__.nodes;
var G__355893 = self__.i;
var G__355894 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__355891,G__355892,G__355893,G__355894) : cljs.core.create_array_node_seq.call(null,G__355891,G__355892,G__355893,G__355894));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__355899 = (j + (1));
j = G__355899;
continue;
}
} else {
var G__355900 = (j + (1));
j = G__355900;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__355902 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__355902) : cljs.core.keys.call(null,G__355902));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__355903 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__355903) : cljs.core.vals.call(null,G__355903));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__355904 = cljs.core.seq(coll);
var chunk__355905 = null;
var count__355906 = (0);
var i__355907 = (0);
while(true){
if((i__355907 < count__355906)){
var vec__355908 = chunk__355905.cljs$core$IIndexed$_nth$arity$2(null,i__355907);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355908,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355908,(1),null);
var G__355909_355920 = v;
var G__355910_355921 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355909_355920,G__355910_355921) : f.call(null,G__355909_355920,G__355910_355921));

var G__355922 = seq__355904;
var G__355923 = chunk__355905;
var G__355924 = count__355906;
var G__355925 = (i__355907 + (1));
seq__355904 = G__355922;
chunk__355905 = G__355923;
count__355906 = G__355924;
i__355907 = G__355925;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__355904);
if(temp__4126__auto__){
var seq__355904__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__355904__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__355904__$1);
var G__355926 = cljs.core.chunk_rest(seq__355904__$1);
var G__355927 = c__4768__auto__;
var G__355928 = cljs.core.count(c__4768__auto__);
var G__355929 = (0);
seq__355904 = G__355926;
chunk__355905 = G__355927;
count__355906 = G__355928;
i__355907 = G__355929;
continue;
} else {
var vec__355911 = cljs.core.first(seq__355904__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355911,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__355911,(1),null);
var G__355912_355930 = v;
var G__355913_355931 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__355912_355930,G__355913_355931) : f.call(null,G__355912_355930,G__355913_355931));

var G__355932 = cljs.core.next(seq__355904__$1);
var G__355933 = null;
var G__355934 = (0);
var G__355935 = (0);
seq__355904 = G__355932;
chunk__355905 = G__355933;
count__355906 = G__355934;
i__355907 = G__355935;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__355914 = init;
var G__355915 = null;
var G__355916 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355914,G__355915,G__355916) : f.call(null,G__355914,G__355915,G__355916));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__355917 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355917) : cljs.core.deref.call(null,G__355917));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj355919 = {};
return obj355919;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__355936 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__355937 = cljs.core.next(es);
ret = G__355936;
es = G__355937;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__355938 = null;
var G__355938__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355938__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355938 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355938__2.call(this,self__,k);
case 3:
return G__355938__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355938.cljs$core$IFn$_invoke$arity$2 = G__355938__2;
G__355938.cljs$core$IFn$_invoke$arity$3 = G__355938__3;
return G__355938;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args355901){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355901)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__355939 = (i + (2));
var G__355940 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__355939;
ret = G__355940;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__355941 = (i + (1));
var G__355942 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__355941;
out = G__355942;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__355943 = o;
if(G__355943){
var bit__4662__auto__ = (G__355943.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4662__auto__) || (G__355943.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__355943.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__355943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__355943);
}
})()){
return tcoll.assoc_BANG_((function (){var G__355944 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__355944) : cljs.core.key.call(null,G__355944));
})(),(function (){var G__355945 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__355945) : cljs.core.val.call(null,G__355945));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__355948 = cljs.core.next(es);
var G__355949 = tcoll__$1.assoc_BANG_((function (){var G__355946 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__355946) : cljs.core.key.call(null,G__355946));
})(),(function (){var G__355947 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__355947) : cljs.core.val.call(null,G__355947));
})());
es = G__355948;
tcoll__$1 = G__355949;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__355950 = ((ascending_QMARK_)?t.left:t.right);
var G__355951 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__355950;
stack__$1 = G__355951;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__355964 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355964) : cljs.core.deref.call(null,G__355964));
} else {
var init__$2 = (function (){var G__355965 = init__$1;
var G__355966 = node.key;
var G__355967 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__355965,G__355966,G__355967) : f.call(null,G__355965,G__355966,G__355967));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__355968 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355968) : cljs.core.deref.call(null,G__355968));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__355969 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__355969) : cljs.core.deref.call(null,G__355969));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__355971 = null;
var G__355971__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355971__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355971 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355971__2.call(this,self__,k);
case 3:
return G__355971__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355971.cljs$core$IFn$_invoke$arity$2 = G__355971__2;
G__355971.cljs$core$IFn$_invoke$arity$3 = G__355971__3;
return G__355971;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args355970){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355970)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__355973 = null;
var G__355973__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__355973__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__355973 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__355973__2.call(this,self__,k);
case 3:
return G__355973__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__355973.cljs$core$IFn$_invoke$arity$2 = G__355973__2;
G__355973.cljs$core$IFn$_invoke$arity$3 = G__355973__3;
return G__355973;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args355972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args355972)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__355986 = k;
var G__355987 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__355986,G__355987) : comp.call(null,G__355986,G__355987));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__356006 = k;
var G__356007 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__356006,G__356007) : comp.call(null,G__356006,G__356007));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__356018 = k;
var G__356019 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__356018,G__356019) : comp.call(null,G__356018,G__356019));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__356021 = cljs.core.seq(coll);
var chunk__356022 = null;
var count__356023 = (0);
var i__356024 = (0);
while(true){
if((i__356024 < count__356023)){
var vec__356025 = chunk__356022.cljs$core$IIndexed$_nth$arity$2(null,i__356024);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356025,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356025,(1),null);
var G__356026_356038 = v;
var G__356027_356039 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356026_356038,G__356027_356039) : f.call(null,G__356026_356038,G__356027_356039));

var G__356040 = seq__356021;
var G__356041 = chunk__356022;
var G__356042 = count__356023;
var G__356043 = (i__356024 + (1));
seq__356021 = G__356040;
chunk__356022 = G__356041;
count__356023 = G__356042;
i__356024 = G__356043;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__356021);
if(temp__4126__auto__){
var seq__356021__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__356021__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__356021__$1);
var G__356044 = cljs.core.chunk_rest(seq__356021__$1);
var G__356045 = c__4768__auto__;
var G__356046 = cljs.core.count(c__4768__auto__);
var G__356047 = (0);
seq__356021 = G__356044;
chunk__356022 = G__356045;
count__356023 = G__356046;
i__356024 = G__356047;
continue;
} else {
var vec__356028 = cljs.core.first(seq__356021__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356028,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356028,(1),null);
var G__356029_356048 = v;
var G__356030_356049 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356029_356048,G__356030_356049) : f.call(null,G__356029_356048,G__356030_356049));

var G__356050 = cljs.core.next(seq__356021__$1);
var G__356051 = null;
var G__356052 = (0);
var G__356053 = (0);
seq__356021 = G__356050;
chunk__356022 = G__356051;
count__356023 = G__356052;
i__356024 = G__356053;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__356031 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__356031) : cljs.core.keys.call(null,G__356031));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__356032 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__356032) : cljs.core.vals.call(null,G__356032));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__356033 = k;
var G__356034 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__356033,G__356034) : self__.comp.call(null,G__356033,G__356034));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__356054 = t.left;
t = G__356054;
continue;
} else {
var G__356055 = t.right;
t = G__356055;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__356056 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__356057 = cljs.core.next(es);
ret = G__356056;
es = G__356057;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__356058 = null;
var G__356058__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__356058__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__356058 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__356058__2.call(this,self__,k);
case 3:
return G__356058__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356058.cljs$core$IFn$_invoke$arity$2 = G__356058__2;
G__356058.cljs$core$IFn$_invoke$arity$3 = G__356058__3;
return G__356058;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args356020){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args356020)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__356035 = k;
var G__356036 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__356035,G__356036) : self__.comp.call(null,G__356035,G__356036));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__356059 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__356060 = t.left;
stack = G__356059;
t = G__356060;
continue;
} else {
var G__356061 = stack;
var G__356062 = t.right;
stack = G__356061;
t = G__356062;
continue;
}
} else {
if((c > (0))){
var G__356063 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__356064 = t.right;
stack = G__356063;
t = G__356064;
continue;
} else {
var G__356065 = stack;
var G__356066 = t.left;
stack = G__356065;
t = G__356066;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__356037 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__356037) : cljs.core.key.call(null,G__356037));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__356067 = cljs.core.nnext(in$);
var G__356068 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__356067;
out = G__356068;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__356069__i = 0, G__356069__a = new Array(arguments.length -  0);
while (G__356069__i < G__356069__a.length) {G__356069__a[G__356069__i] = arguments[G__356069__i + 0]; ++G__356069__i;}
  keyvals = new cljs.core.IndexedSeq(G__356069__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__356070){
var keyvals = cljs.core.seq(arglist__356070);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__356071__i = 0, G__356071__a = new Array(arguments.length -  0);
while (G__356071__i < G__356071__a.length) {G__356071__a[G__356071__i] = arguments[G__356071__i + 0]; ++G__356071__i;}
  keyvals = new cljs.core.IndexedSeq(G__356071__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__356072){
var keyvals = cljs.core.seq(arglist__356072);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj356076 = {};
return obj356076;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__356077 = cljs.core.nnext(kvs);
kvs = G__356077;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__356078__i = 0, G__356078__a = new Array(arguments.length -  0);
while (G__356078__i < G__356078__a.length) {G__356078__a[G__356078__i] = arguments[G__356078__i + 0]; ++G__356078__i;}
  keyvals = new cljs.core.IndexedSeq(G__356078__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__356079){
var keyvals = cljs.core.seq(arglist__356079);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__356080 = cljs.core.nnext(in$);
var G__356081 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__356080;
out = G__356081;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__356082__i = 0, G__356082__a = new Array(arguments.length -  0);
while (G__356082__i < G__356082__a.length) {G__356082__a[G__356082__i] = arguments[G__356082__i + 0]; ++G__356082__i;}
  keyvals = new cljs.core.IndexedSeq(G__356082__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__356083){
var keyvals = cljs.core.seq(arglist__356083);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__356084 = cljs.core.nnext(in$);
var G__356085 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__356084;
out = G__356085;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__356086__i = 0, G__356086__a = new Array(arguments.length -  1);
while (G__356086__i < G__356086__a.length) {G__356086__a[G__356086__i] = arguments[G__356086__i + 1]; ++G__356086__i;}
  keyvals = new cljs.core.IndexedSeq(G__356086__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__356087){
var comparator = cljs.core.first(arglist__356087);
var keyvals = cljs.core.rest(arglist__356087);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__356088 = self__.mseq;
if(G__356088){
var bit__4662__auto__ = (G__356088.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__356088.cljs$core$INext$)){
return true;
} else {
if((!G__356088.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356088);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356088);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__356089 = self__.mseq;
if(G__356089){
var bit__4662__auto__ = (G__356089.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__356089.cljs$core$INext$)){
return true;
} else {
if((!G__356089.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356089);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356089);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__356090 = self__.mseq;
if(G__356090){
var bit__4662__auto__ = (G__356090.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__356090.cljs$core$INext$)){
return true;
} else {
if((!G__356090.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356090);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356090);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__356091 = self__.mseq;
if(G__356091){
var bit__4662__auto__ = (G__356091.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4662__auto__) || (G__356091.cljs$core$INext$)){
return true;
} else {
if((!G__356091.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__356091);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__356092_SHARP_,p2__356093_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3981__auto__ = p1__356092_SHARP_;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__356093_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__356094__i = 0, G__356094__a = new Array(arguments.length -  0);
while (G__356094__i < G__356094__a.length) {G__356094__a[G__356094__i] = arguments[G__356094__i + 0]; ++G__356094__i;}
  maps = new cljs.core.IndexedSeq(G__356094__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__356095){
var maps = cljs.core.seq(arglist__356095);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__356098 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__356099 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356098,G__356099) : f.call(null,G__356098,G__356099));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3981__auto__ = m1;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__356100__i = 0, G__356100__a = new Array(arguments.length -  1);
while (G__356100__i < G__356100__a.length) {G__356100__a[G__356100__i] = arguments[G__356100__i + 1]; ++G__356100__i;}
  maps = new cljs.core.IndexedSeq(G__356100__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__356101){
var f = cljs.core.first(arglist__356101);
var maps = cljs.core.rest(arglist__356101);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__356102 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__356103 = cljs.core.next(keys);
ret = G__356102;
keys = G__356103;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__356106 = cljs.core.seq(coll);
var chunk__356107 = null;
var count__356108 = (0);
var i__356109 = (0);
while(true){
if((i__356109 < count__356108)){
var vec__356110 = chunk__356107.cljs$core$IIndexed$_nth$arity$2(null,i__356109);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356110,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356110,(1),null);
var G__356111_356116 = v;
var G__356112_356117 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356111_356116,G__356112_356117) : f.call(null,G__356111_356116,G__356112_356117));

var G__356118 = seq__356106;
var G__356119 = chunk__356107;
var G__356120 = count__356108;
var G__356121 = (i__356109 + (1));
seq__356106 = G__356118;
chunk__356107 = G__356119;
count__356108 = G__356120;
i__356109 = G__356121;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__356106);
if(temp__4126__auto__){
var seq__356106__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__356106__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__356106__$1);
var G__356122 = cljs.core.chunk_rest(seq__356106__$1);
var G__356123 = c__4768__auto__;
var G__356124 = cljs.core.count(c__4768__auto__);
var G__356125 = (0);
seq__356106 = G__356122;
chunk__356107 = G__356123;
count__356108 = G__356124;
i__356109 = G__356125;
continue;
} else {
var vec__356113 = cljs.core.first(seq__356106__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356113,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356113,(1),null);
var G__356114_356126 = v;
var G__356115_356127 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356114_356126,G__356115_356127) : f.call(null,G__356114_356126,G__356115_356127));

var G__356128 = cljs.core.next(seq__356106__$1);
var G__356129 = null;
var G__356130 = (0);
var G__356131 = (0);
seq__356106 = G__356128;
chunk__356107 = G__356129;
count__356108 = G__356130;
i__356109 = G__356131;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__356104_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__356104_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__356132 = null;
var G__356132__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__356132__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__356132 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__356132__2.call(this,self__,k);
case 3:
return G__356132__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356132.cljs$core$IFn$_invoke$arity$2 = G__356132__2;
G__356132.cljs$core$IFn$_invoke$arity$3 = G__356132__3;
return G__356132;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args356105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args356105)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__356133 = (i + (1));
var G__356134 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__356133;
out = G__356134;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__356135 = (i + (1));
var G__356136 = cljs.core._conj_BANG_(out,(items[i]));
i = G__356135;
out = G__356136;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__356138 = null;
var G__356138__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__356138__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__356138 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__356138__2.call(this,self__,k);
case 3:
return G__356138__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356138.cljs$core$IFn$_invoke$arity$2 = G__356138__2;
G__356138.cljs$core$IFn$_invoke$arity$3 = G__356138__3;
return G__356138;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args356137){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args356137)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__356141 = cljs.core.seq(coll);
var chunk__356142 = null;
var count__356143 = (0);
var i__356144 = (0);
while(true){
if((i__356144 < count__356143)){
var vec__356145 = chunk__356142.cljs$core$IIndexed$_nth$arity$2(null,i__356144);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356145,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356145,(1),null);
var G__356146_356151 = v;
var G__356147_356152 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356146_356151,G__356147_356152) : f.call(null,G__356146_356151,G__356147_356152));

var G__356153 = seq__356141;
var G__356154 = chunk__356142;
var G__356155 = count__356143;
var G__356156 = (i__356144 + (1));
seq__356141 = G__356153;
chunk__356142 = G__356154;
count__356143 = G__356155;
i__356144 = G__356156;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__356141);
if(temp__4126__auto__){
var seq__356141__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__356141__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__356141__$1);
var G__356157 = cljs.core.chunk_rest(seq__356141__$1);
var G__356158 = c__4768__auto__;
var G__356159 = cljs.core.count(c__4768__auto__);
var G__356160 = (0);
seq__356141 = G__356157;
chunk__356142 = G__356158;
count__356143 = G__356159;
i__356144 = G__356160;
continue;
} else {
var vec__356148 = cljs.core.first(seq__356141__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356148,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356148,(1),null);
var G__356149_356161 = v;
var G__356150_356162 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356149_356161,G__356150_356162) : f.call(null,G__356149_356161,G__356150_356162));

var G__356163 = cljs.core.next(seq__356141__$1);
var G__356164 = null;
var G__356165 = (0);
var G__356166 = (0);
seq__356141 = G__356163;
chunk__356142 = G__356164;
count__356143 = G__356165;
i__356144 = G__356166;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__356139_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__356139_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__356167 = null;
var G__356167__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__356167__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__356167 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__356167__2.call(this,self__,k);
case 3:
return G__356167__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356167.cljs$core$IFn$_invoke$arity$2 = G__356167__2;
G__356167.cljs$core$IFn$_invoke$arity$3 = G__356167__3;
return G__356167;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args356140){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args356140)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4862__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4862__auto__.length)){
var G__356168 = (i + (1));
var G__356169 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__356168;
res = G__356169;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__356170 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__356171 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__356170;
out = G__356171;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__356172__delegate = function (keys){
return cljs.core.set(keys);
};
var G__356172 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__356173__i = 0, G__356173__a = new Array(arguments.length -  0);
while (G__356173__i < G__356173__a.length) {G__356173__a[G__356173__i] = arguments[G__356173__i + 0]; ++G__356173__i;}
  keys = new cljs.core.IndexedSeq(G__356173__a,0);
} 
return G__356172__delegate.call(this,keys);};
G__356172.cljs$lang$maxFixedArity = 0;
G__356172.cljs$lang$applyTo = (function (arglist__356174){
var keys = cljs.core.seq(arglist__356174);
return G__356172__delegate(keys);
});
G__356172.cljs$core$IFn$_invoke$arity$variadic = G__356172__delegate;
return G__356172;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__356175 = null;
if (arguments.length > 0) {
var G__356176__i = 0, G__356176__a = new Array(arguments.length -  0);
while (G__356176__i < G__356176__a.length) {G__356176__a[G__356176__i] = arguments[G__356176__i + 0]; ++G__356176__i;}
G__356175 = new cljs.core.IndexedSeq(G__356176__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__356175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__356177__i = 0, G__356177__a = new Array(arguments.length -  0);
while (G__356177__i < G__356177__a.length) {G__356177__a[G__356177__i] = arguments[G__356177__i + 0]; ++G__356177__i;}
  keys = new cljs.core.IndexedSeq(G__356177__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__356178){
var keys = cljs.core.seq(arglist__356178);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__356179__i = 0, G__356179__a = new Array(arguments.length -  1);
while (G__356179__i < G__356179__a.length) {G__356179__a[G__356179__i] = arguments[G__356179__i + 1]; ++G__356179__i;}
  keys = new cljs.core.IndexedSeq(G__356179__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__356180){
var comparator = cljs.core.first(arglist__356180);
var keys = cljs.core.rest(arglist__356180);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__356181_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__356181_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__356181_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__356182_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__356182_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__356182_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__356203 = null;
var G__356203__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356203__1 = (function (result){
var G__356193 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356193) : rf.call(null,G__356193));
});
var G__356203__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__356194 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356194) : cljs.core.deref.call(null,G__356194));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__356195 = result;
var G__356196 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356195,G__356196) : rf.call(null,G__356195,G__356196));
}
});
G__356203 = function(result,input){
switch(arguments.length){
case 0:
return G__356203__0.call(this);
case 1:
return G__356203__1.call(this,result);
case 2:
return G__356203__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356203.cljs$core$IFn$_invoke$arity$0 = G__356203__0;
G__356203.cljs$core$IFn$_invoke$arity$1 = G__356203__1;
G__356203.cljs$core$IFn$_invoke$arity$2 = G__356203__2;
return G__356203;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__356201,seen__$1){
while(true){
var vec__356202 = p__356201;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356202,(0),null);
var xs__$1 = vec__356202;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__356204 = cljs.core.rest(s);
var G__356205 = seen__$1;
p__356201 = G__356204;
seen__$1 = G__356205;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__356206 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__356207 = cljs.core.next(s__$1);
ret = G__356206;
s__$1 = G__356207;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__356209 = x;
if(G__356209){
var bit__4655__auto__ = (G__356209.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4655__auto__) || (G__356209.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__356210 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__356211 = cljs.core.next(ks);
var G__356212 = cljs.core.next(vs);
map = G__356210;
ks = G__356211;
vs = G__356212;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__356223 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__356223) : k.call(null,G__356223));
})() > (function (){var G__356224 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__356224) : k.call(null,G__356224));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__356225__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__356213_SHARP_,p2__356214_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__356213_SHARP_,p2__356214_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__356225 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__356226__i = 0, G__356226__a = new Array(arguments.length -  3);
while (G__356226__i < G__356226__a.length) {G__356226__a[G__356226__i] = arguments[G__356226__i + 3]; ++G__356226__i;}
  more = new cljs.core.IndexedSeq(G__356226__a,0);
} 
return G__356225__delegate.call(this,k,x,y,more);};
G__356225.cljs$lang$maxFixedArity = 3;
G__356225.cljs$lang$applyTo = (function (arglist__356227){
var k = cljs.core.first(arglist__356227);
arglist__356227 = cljs.core.next(arglist__356227);
var x = cljs.core.first(arglist__356227);
arglist__356227 = cljs.core.next(arglist__356227);
var y = cljs.core.first(arglist__356227);
var more = cljs.core.rest(arglist__356227);
return G__356225__delegate(k,x,y,more);
});
G__356225.cljs$core$IFn$_invoke$arity$variadic = G__356225__delegate;
return G__356225;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__356228 = null;
if (arguments.length > 3) {
var G__356229__i = 0, G__356229__a = new Array(arguments.length -  3);
while (G__356229__i < G__356229__a.length) {G__356229__a[G__356229__i] = arguments[G__356229__i + 3]; ++G__356229__i;}
G__356228 = new cljs.core.IndexedSeq(G__356229__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__356228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__356240 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__356240) : k.call(null,G__356240));
})() < (function (){var G__356241 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__356241) : k.call(null,G__356241));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__356242__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__356230_SHARP_,p2__356231_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__356230_SHARP_,p2__356231_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__356242 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__356243__i = 0, G__356243__a = new Array(arguments.length -  3);
while (G__356243__i < G__356243__a.length) {G__356243__a[G__356243__i] = arguments[G__356243__i + 3]; ++G__356243__i;}
  more = new cljs.core.IndexedSeq(G__356243__a,0);
} 
return G__356242__delegate.call(this,k,x,y,more);};
G__356242.cljs$lang$maxFixedArity = 3;
G__356242.cljs$lang$applyTo = (function (arglist__356244){
var k = cljs.core.first(arglist__356244);
arglist__356244 = cljs.core.next(arglist__356244);
var x = cljs.core.first(arglist__356244);
arglist__356244 = cljs.core.next(arglist__356244);
var y = cljs.core.first(arglist__356244);
var more = cljs.core.rest(arglist__356244);
return G__356242__delegate(k,x,y,more);
});
G__356242.cljs$core$IFn$_invoke$arity$variadic = G__356242__delegate;
return G__356242;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__356245 = null;
if (arguments.length > 3) {
var G__356246__i = 0, G__356246__a = new Array(arguments.length -  3);
while (G__356246__i < G__356246__a.length) {G__356246__a[G__356246__i] = arguments[G__356246__i + 3]; ++G__356246__i;}
G__356245 = new cljs.core.IndexedSeq(G__356246__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__356245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__356263 = null;
var G__356263__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356263__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__356258 = result;
var G__356259 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356258,G__356259) : rf.call(null,G__356258,G__356259));
})());
})());
var G__356260 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356260) : rf.call(null,G__356260));
});
var G__356263__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__356261 = result;
var G__356262 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356261,G__356262) : rf.call(null,G__356261,G__356262));
} else {
return result;
}
});
G__356263 = function(result,input){
switch(arguments.length){
case 0:
return G__356263__0.call(this);
case 1:
return G__356263__1.call(this,result);
case 2:
return G__356263__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356263.cljs$core$IFn$_invoke$arity$0 = G__356263__0;
G__356263.cljs$core$IFn$_invoke$arity$1 = G__356263__1;
G__356263.cljs$core$IFn$_invoke$arity$2 = G__356263__2;
return G__356263;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__356276 = null;
var G__356276__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356276__1 = (function (result){
var G__356271 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356271) : rf.call(null,G__356271));
});
var G__356276__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__356272 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__356272) : pred.call(null,G__356272));
})())){
var G__356273 = result;
var G__356274 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356273,G__356274) : rf.call(null,G__356273,G__356274));
} else {
return cljs.core.reduced(result);
}
});
G__356276 = function(result,input){
switch(arguments.length){
case 0:
return G__356276__0.call(this);
case 1:
return G__356276__1.call(this,result);
case 2:
return G__356276__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356276.cljs$core$IFn$_invoke$arity$0 = G__356276__0;
G__356276.cljs$core$IFn$_invoke$arity$1 = G__356276__1;
G__356276.cljs$core$IFn$_invoke$arity$2 = G__356276__2;
return G__356276;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__356275 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__356275) : pred.call(null,G__356275));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__356281 = (function (){var G__356283 = cljs.core._entry_key(sc,e);
var G__356284 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__356283,G__356284) : comp.call(null,G__356283,G__356284));
})();
var G__356282 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__356281,G__356282) : test.call(null,G__356281,G__356282));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__356288 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356288,(0),null);
var s = vec__356288;
if(cljs.core.truth_((function (){var G__356289 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__356289) : include.call(null,G__356289));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__356290 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356290,(0),null);
var s = vec__356290;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__356294 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356294,(0),null);
var s = vec__356294;
if(cljs.core.truth_((function (){var G__356295 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__356295) : include.call(null,G__356295));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__356296 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356296,(0),null);
var s = vec__356296;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__356297 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__356297) : Math.ceil.call(null,G__356297));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4402__auto__ = self__.__hash;
if(!((h__4402__auto__ == null))){
return h__4402__auto__;
} else {
var h__4402__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4402__auto____$1;

return h__4402__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__356298 = ret;
var G__356299 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356298,G__356299) : f.call(null,G__356298,G__356299));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__356300 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356300) : cljs.core.deref.call(null,G__356300));
} else {
var G__356301 = (i + self__.step);
var G__356302 = ret__$1;
i = G__356301;
ret = G__356302;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__356320 = null;
var G__356320__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356320__1 = (function (result){
var G__356317 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356317) : rf.call(null,G__356317));
});
var G__356320__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__356318 = result;
var G__356319 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356318,G__356319) : rf.call(null,G__356318,G__356319));
} else {
return result;
}
});
G__356320 = function(result,input){
switch(arguments.length){
case 0:
return G__356320__0.call(this);
case 1:
return G__356320__1.call(this,result);
case 2:
return G__356320__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356320.cljs$core$IFn$_invoke$arity$0 = G__356320__0;
G__356320.cljs$core$IFn$_invoke$arity$1 = G__356320__1;
G__356320.cljs$core$IFn$_invoke$arity$2 = G__356320__2;
return G__356320;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__356342 = null;
var G__356342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356342__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__356333 = result;
var G__356334 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356333,G__356334) : rf.call(null,G__356333,G__356334));
})());
})());
var G__356335 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356335) : rf.call(null,G__356335));
});
var G__356342__2 = (function (result,input){
var pval = (function (){var G__356336 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356336) : cljs.core.deref.call(null,G__356336));
})();
var val = (function (){var G__356337 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356337) : f.call(null,G__356337));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__356338 = result;
var G__356339 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356338,G__356339) : rf.call(null,G__356338,G__356339));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__356342 = function(result,input){
switch(arguments.length){
case 0:
return G__356342__0.call(this);
case 1:
return G__356342__1.call(this,result);
case 2:
return G__356342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356342.cljs$core$IFn$_invoke$arity$0 = G__356342__0;
G__356342.cljs$core$IFn$_invoke$arity$1 = G__356342__1;
G__356342.cljs$core$IFn$_invoke$arity$2 = G__356342__2;
return G__356342;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__356340 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356340) : f.call(null,G__356340));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__356321_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__356341 = p1__356321_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356341) : f.call(null,G__356341));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__356351 = init;
var G__356352 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356351,G__356352) : f.call(null,G__356351,G__356352));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__356447 = null;
var G__356447__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__356447__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356405 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356405) : f.call(null,G__356405));
})()],null));
});
var G__356447__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356406 = x;
var G__356407 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356406,G__356407) : f.call(null,G__356406,G__356407));
})()],null));
});
var G__356447__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356408 = x;
var G__356409 = y;
var G__356410 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__356408,G__356409,G__356410) : f.call(null,G__356408,G__356409,G__356410));
})()],null));
});
var G__356447__4 = (function() { 
var G__356448__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__356448 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__356449__i = 0, G__356449__a = new Array(arguments.length -  3);
while (G__356449__i < G__356449__a.length) {G__356449__a[G__356449__i] = arguments[G__356449__i + 3]; ++G__356449__i;}
  args = new cljs.core.IndexedSeq(G__356449__a,0);
} 
return G__356448__delegate.call(this,x,y,z,args);};
G__356448.cljs$lang$maxFixedArity = 3;
G__356448.cljs$lang$applyTo = (function (arglist__356450){
var x = cljs.core.first(arglist__356450);
arglist__356450 = cljs.core.next(arglist__356450);
var y = cljs.core.first(arglist__356450);
arglist__356450 = cljs.core.next(arglist__356450);
var z = cljs.core.first(arglist__356450);
var args = cljs.core.rest(arglist__356450);
return G__356448__delegate(x,y,z,args);
});
G__356448.cljs$core$IFn$_invoke$arity$variadic = G__356448__delegate;
return G__356448;
})()
;
G__356447 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__356447__0.call(this);
case 1:
return G__356447__1.call(this,x);
case 2:
return G__356447__2.call(this,x,y);
case 3:
return G__356447__3.call(this,x,y,z);
default:
var G__356451 = null;
if (arguments.length > 3) {
var G__356452__i = 0, G__356452__a = new Array(arguments.length -  3);
while (G__356452__i < G__356452__a.length) {G__356452__a[G__356452__i] = arguments[G__356452__i + 3]; ++G__356452__i;}
G__356451 = new cljs.core.IndexedSeq(G__356452__a,0);
}
return G__356447__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__356451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356447.cljs$lang$maxFixedArity = 3;
G__356447.cljs$lang$applyTo = G__356447__4.cljs$lang$applyTo;
G__356447.cljs$core$IFn$_invoke$arity$0 = G__356447__0;
G__356447.cljs$core$IFn$_invoke$arity$1 = G__356447__1;
G__356447.cljs$core$IFn$_invoke$arity$2 = G__356447__2;
G__356447.cljs$core$IFn$_invoke$arity$3 = G__356447__3;
G__356447.cljs$core$IFn$_invoke$arity$variadic = G__356447__4.cljs$core$IFn$_invoke$arity$variadic;
return G__356447;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__356453 = null;
var G__356453__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__356453__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356411 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356411) : f.call(null,G__356411));
})(),(function (){var G__356412 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__356412) : g.call(null,G__356412));
})()],null));
});
var G__356453__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356413 = x;
var G__356414 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356413,G__356414) : f.call(null,G__356413,G__356414));
})(),(function (){var G__356415 = x;
var G__356416 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__356415,G__356416) : g.call(null,G__356415,G__356416));
})()],null));
});
var G__356453__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356417 = x;
var G__356418 = y;
var G__356419 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__356417,G__356418,G__356419) : f.call(null,G__356417,G__356418,G__356419));
})(),(function (){var G__356420 = x;
var G__356421 = y;
var G__356422 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__356420,G__356421,G__356422) : g.call(null,G__356420,G__356421,G__356422));
})()],null));
});
var G__356453__4 = (function() { 
var G__356454__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__356454 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__356455__i = 0, G__356455__a = new Array(arguments.length -  3);
while (G__356455__i < G__356455__a.length) {G__356455__a[G__356455__i] = arguments[G__356455__i + 3]; ++G__356455__i;}
  args = new cljs.core.IndexedSeq(G__356455__a,0);
} 
return G__356454__delegate.call(this,x,y,z,args);};
G__356454.cljs$lang$maxFixedArity = 3;
G__356454.cljs$lang$applyTo = (function (arglist__356456){
var x = cljs.core.first(arglist__356456);
arglist__356456 = cljs.core.next(arglist__356456);
var y = cljs.core.first(arglist__356456);
arglist__356456 = cljs.core.next(arglist__356456);
var z = cljs.core.first(arglist__356456);
var args = cljs.core.rest(arglist__356456);
return G__356454__delegate(x,y,z,args);
});
G__356454.cljs$core$IFn$_invoke$arity$variadic = G__356454__delegate;
return G__356454;
})()
;
G__356453 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__356453__0.call(this);
case 1:
return G__356453__1.call(this,x);
case 2:
return G__356453__2.call(this,x,y);
case 3:
return G__356453__3.call(this,x,y,z);
default:
var G__356457 = null;
if (arguments.length > 3) {
var G__356458__i = 0, G__356458__a = new Array(arguments.length -  3);
while (G__356458__i < G__356458__a.length) {G__356458__a[G__356458__i] = arguments[G__356458__i + 3]; ++G__356458__i;}
G__356457 = new cljs.core.IndexedSeq(G__356458__a,0);
}
return G__356453__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__356457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356453.cljs$lang$maxFixedArity = 3;
G__356453.cljs$lang$applyTo = G__356453__4.cljs$lang$applyTo;
G__356453.cljs$core$IFn$_invoke$arity$0 = G__356453__0;
G__356453.cljs$core$IFn$_invoke$arity$1 = G__356453__1;
G__356453.cljs$core$IFn$_invoke$arity$2 = G__356453__2;
G__356453.cljs$core$IFn$_invoke$arity$3 = G__356453__3;
G__356453.cljs$core$IFn$_invoke$arity$variadic = G__356453__4.cljs$core$IFn$_invoke$arity$variadic;
return G__356453;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__356459 = null;
var G__356459__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__356459__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356423 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356423) : f.call(null,G__356423));
})(),(function (){var G__356424 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__356424) : g.call(null,G__356424));
})(),(function (){var G__356425 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__356425) : h.call(null,G__356425));
})()],null));
});
var G__356459__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356426 = x;
var G__356427 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__356426,G__356427) : f.call(null,G__356426,G__356427));
})(),(function (){var G__356428 = x;
var G__356429 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__356428,G__356429) : g.call(null,G__356428,G__356429));
})(),(function (){var G__356430 = x;
var G__356431 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__356430,G__356431) : h.call(null,G__356430,G__356431));
})()],null));
});
var G__356459__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__356432 = x;
var G__356433 = y;
var G__356434 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__356432,G__356433,G__356434) : f.call(null,G__356432,G__356433,G__356434));
})(),(function (){var G__356435 = x;
var G__356436 = y;
var G__356437 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__356435,G__356436,G__356437) : g.call(null,G__356435,G__356436,G__356437));
})(),(function (){var G__356438 = x;
var G__356439 = y;
var G__356440 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__356438,G__356439,G__356440) : h.call(null,G__356438,G__356439,G__356440));
})()],null));
});
var G__356459__4 = (function() { 
var G__356460__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__356460 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__356461__i = 0, G__356461__a = new Array(arguments.length -  3);
while (G__356461__i < G__356461__a.length) {G__356461__a[G__356461__i] = arguments[G__356461__i + 3]; ++G__356461__i;}
  args = new cljs.core.IndexedSeq(G__356461__a,0);
} 
return G__356460__delegate.call(this,x,y,z,args);};
G__356460.cljs$lang$maxFixedArity = 3;
G__356460.cljs$lang$applyTo = (function (arglist__356462){
var x = cljs.core.first(arglist__356462);
arglist__356462 = cljs.core.next(arglist__356462);
var y = cljs.core.first(arglist__356462);
arglist__356462 = cljs.core.next(arglist__356462);
var z = cljs.core.first(arglist__356462);
var args = cljs.core.rest(arglist__356462);
return G__356460__delegate(x,y,z,args);
});
G__356460.cljs$core$IFn$_invoke$arity$variadic = G__356460__delegate;
return G__356460;
})()
;
G__356459 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__356459__0.call(this);
case 1:
return G__356459__1.call(this,x);
case 2:
return G__356459__2.call(this,x,y);
case 3:
return G__356459__3.call(this,x,y,z);
default:
var G__356463 = null;
if (arguments.length > 3) {
var G__356464__i = 0, G__356464__a = new Array(arguments.length -  3);
while (G__356464__i < G__356464__a.length) {G__356464__a[G__356464__i] = arguments[G__356464__i + 3]; ++G__356464__i;}
G__356463 = new cljs.core.IndexedSeq(G__356464__a,0);
}
return G__356459__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__356463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356459.cljs$lang$maxFixedArity = 3;
G__356459.cljs$lang$applyTo = G__356459__4.cljs$lang$applyTo;
G__356459.cljs$core$IFn$_invoke$arity$0 = G__356459__0;
G__356459.cljs$core$IFn$_invoke$arity$1 = G__356459__1;
G__356459.cljs$core$IFn$_invoke$arity$2 = G__356459__2;
G__356459.cljs$core$IFn$_invoke$arity$3 = G__356459__3;
G__356459.cljs$core$IFn$_invoke$arity$variadic = G__356459__4.cljs$core$IFn$_invoke$arity$variadic;
return G__356459;
})()
});
var juxt__4 = (function() { 
var G__356465__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__356466 = null;
var G__356466__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__356353_SHARP_,p2__356354_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__356353_SHARP_,(function (){return (p2__356354_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__356354_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__356354_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__356466__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__356355_SHARP_,p2__356356_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__356355_SHARP_,(function (){var G__356441 = x;
return (p2__356356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__356356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__356441) : p2__356356_SHARP_.call(null,G__356441));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__356466__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__356357_SHARP_,p2__356358_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__356357_SHARP_,(function (){var G__356442 = x;
var G__356443 = y;
return (p2__356358_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__356358_SHARP_.cljs$core$IFn$_invoke$arity$2(G__356442,G__356443) : p2__356358_SHARP_.call(null,G__356442,G__356443));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__356466__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__356359_SHARP_,p2__356360_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__356359_SHARP_,(function (){var G__356444 = x;
var G__356445 = y;
var G__356446 = z;
return (p2__356360_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__356360_SHARP_.cljs$core$IFn$_invoke$arity$3(G__356444,G__356445,G__356446) : p2__356360_SHARP_.call(null,G__356444,G__356445,G__356446));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__356466__4 = (function() { 
var G__356467__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__356361_SHARP_,p2__356362_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__356361_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__356362_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__356467 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__356468__i = 0, G__356468__a = new Array(arguments.length -  3);
while (G__356468__i < G__356468__a.length) {G__356468__a[G__356468__i] = arguments[G__356468__i + 3]; ++G__356468__i;}
  args = new cljs.core.IndexedSeq(G__356468__a,0);
} 
return G__356467__delegate.call(this,x,y,z,args);};
G__356467.cljs$lang$maxFixedArity = 3;
G__356467.cljs$lang$applyTo = (function (arglist__356469){
var x = cljs.core.first(arglist__356469);
arglist__356469 = cljs.core.next(arglist__356469);
var y = cljs.core.first(arglist__356469);
arglist__356469 = cljs.core.next(arglist__356469);
var z = cljs.core.first(arglist__356469);
var args = cljs.core.rest(arglist__356469);
return G__356467__delegate(x,y,z,args);
});
G__356467.cljs$core$IFn$_invoke$arity$variadic = G__356467__delegate;
return G__356467;
})()
;
G__356466 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__356466__0.call(this);
case 1:
return G__356466__1.call(this,x);
case 2:
return G__356466__2.call(this,x,y);
case 3:
return G__356466__3.call(this,x,y,z);
default:
var G__356470 = null;
if (arguments.length > 3) {
var G__356471__i = 0, G__356471__a = new Array(arguments.length -  3);
while (G__356471__i < G__356471__a.length) {G__356471__a[G__356471__i] = arguments[G__356471__i + 3]; ++G__356471__i;}
G__356470 = new cljs.core.IndexedSeq(G__356471__a,0);
}
return G__356466__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__356470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356466.cljs$lang$maxFixedArity = 3;
G__356466.cljs$lang$applyTo = G__356466__4.cljs$lang$applyTo;
G__356466.cljs$core$IFn$_invoke$arity$0 = G__356466__0;
G__356466.cljs$core$IFn$_invoke$arity$1 = G__356466__1;
G__356466.cljs$core$IFn$_invoke$arity$2 = G__356466__2;
G__356466.cljs$core$IFn$_invoke$arity$3 = G__356466__3;
G__356466.cljs$core$IFn$_invoke$arity$variadic = G__356466__4.cljs$core$IFn$_invoke$arity$variadic;
return G__356466;
})()
;})(fs__$1))
};
var G__356465 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__356472__i = 0, G__356472__a = new Array(arguments.length -  3);
while (G__356472__i < G__356472__a.length) {G__356472__a[G__356472__i] = arguments[G__356472__i + 3]; ++G__356472__i;}
  fs = new cljs.core.IndexedSeq(G__356472__a,0);
} 
return G__356465__delegate.call(this,f,g,h,fs);};
G__356465.cljs$lang$maxFixedArity = 3;
G__356465.cljs$lang$applyTo = (function (arglist__356473){
var f = cljs.core.first(arglist__356473);
arglist__356473 = cljs.core.next(arglist__356473);
var g = cljs.core.first(arglist__356473);
arglist__356473 = cljs.core.next(arglist__356473);
var h = cljs.core.first(arglist__356473);
var fs = cljs.core.rest(arglist__356473);
return G__356465__delegate(f,g,h,fs);
});
G__356465.cljs$core$IFn$_invoke$arity$variadic = G__356465__delegate;
return G__356465;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__356474 = null;
if (arguments.length > 3) {
var G__356475__i = 0, G__356475__a = new Array(arguments.length -  3);
while (G__356475__i < G__356475__a.length) {G__356475__a[G__356475__i] = arguments[G__356475__i + 3]; ++G__356475__i;}
G__356474 = new cljs.core.IndexedSeq(G__356475__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__356474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__356476 = cljs.core.next(coll);
coll = G__356476;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__356477 = (n - (1));
var G__356478 = cljs.core.next(coll);
n = G__356477;
coll = G__356478;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__356482 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356482,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356482,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356482,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_356490 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__356491_356497 = cljs.core.first(coll);
var G__356492_356498 = writer;
var G__356493_356499 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__356491_356497,G__356492_356498,G__356493_356499) : print_one.call(null,G__356491_356497,G__356492_356498,G__356493_356499));
} else {
}

var coll_356500__$1 = cljs.core.next(coll);
var n_356501 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_356500__$1) && (((n_356501 == null)) || (!((n_356501 === (0)))))){
cljs.core._write(writer,sep);

var G__356494_356502 = cljs.core.first(coll_356500__$1);
var G__356495_356503 = writer;
var G__356496_356504 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__356494_356502,G__356495_356503,G__356496_356504) : print_one.call(null,G__356494_356502,G__356495_356503,G__356496_356504));

var G__356505 = cljs.core.next(coll_356500__$1);
var G__356506 = (n_356501 - (1));
coll_356500__$1 = G__356505;
n_356501 = G__356506;
continue;
} else {
if((cljs.core.seq(coll_356500__$1)) && ((n_356501 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3981__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_356490;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__356511 = cljs.core.seq(ss);
var chunk__356512 = null;
var count__356513 = (0);
var i__356514 = (0);
while(true){
if((i__356514 < count__356513)){
var s = chunk__356512.cljs$core$IIndexed$_nth$arity$2(null,i__356514);
cljs.core._write(writer,s);

var G__356515 = seq__356511;
var G__356516 = chunk__356512;
var G__356517 = count__356513;
var G__356518 = (i__356514 + (1));
seq__356511 = G__356515;
chunk__356512 = G__356516;
count__356513 = G__356517;
i__356514 = G__356518;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__356511);
if(temp__4126__auto__){
var seq__356511__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__356511__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__356511__$1);
var G__356519 = cljs.core.chunk_rest(seq__356511__$1);
var G__356520 = c__4768__auto__;
var G__356521 = cljs.core.count(c__4768__auto__);
var G__356522 = (0);
seq__356511 = G__356519;
chunk__356512 = G__356520;
count__356513 = G__356521;
i__356514 = G__356522;
continue;
} else {
var s = cljs.core.first(seq__356511__$1);
cljs.core._write(writer,s);

var G__356523 = cljs.core.next(seq__356511__$1);
var G__356524 = null;
var G__356525 = (0);
var G__356526 = (0);
seq__356511 = G__356523;
chunk__356512 = G__356524;
count__356513 = G__356525;
i__356514 = G__356526;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__356527__i = 0, G__356527__a = new Array(arguments.length -  1);
while (G__356527__i < G__356527__a.length) {G__356527__a[G__356527__i] = arguments[G__356527__i + 1]; ++G__356527__i;}
  ss = new cljs.core.IndexedSeq(G__356527__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__356528){
var writer = cljs.core.first(arglist__356528);
var ss = cljs.core.rest(arglist__356528);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj356530 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj356530;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__356533 = "[\\\\\"\b\f\n\r\t]";
var G__356534 = "g";
return RegExp(G__356533,G__356534);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3969__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3969__auto__)){
var and__3969__auto____$1 = (function (){var G__356548 = obj;
if(G__356548){
var bit__4662__auto__ = (G__356548.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4662__auto__) || (G__356548.cljs$core$IMeta$)){
return true;
} else {
if((!G__356548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__356548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__356548);
}
})();
if(and__3969__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__356549_356559 = cljs.core.meta(obj);
var G__356550_356560 = writer;
var G__356551_356561 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__356549_356559,G__356550_356560,G__356551_356561) : cljs.core.pr_writer.call(null,G__356549_356559,G__356550_356560,G__356551_356561));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__356552 = obj;
if(G__356552){
var bit__4655__auto__ = (G__356552.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4655__auto__) || (G__356552.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__356553 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__356554 = cljs.core.pr_writer;
var G__356555 = writer;
var G__356556 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__356553,G__356554,G__356555,G__356556) : cljs.core.print_map.call(null,G__356553,G__356554,G__356555,G__356556));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__356557 = obj;
return goog.isString(G__356557);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__356562 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__356562;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__356558 = obj;
if(G__356558){
var bit__4662__auto__ = (G__356558.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4662__auto__) || (G__356558.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__356558.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__356558);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__356558);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__356566 = obj;
var G__356567 = writer;
var G__356568 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__356566,G__356567,G__356568) : alt_impl.call(null,G__356566,G__356567,G__356568));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__356573 = cljs.core.seq(cljs.core.next(objs));
var chunk__356574 = null;
var count__356575 = (0);
var i__356576 = (0);
while(true){
if((i__356576 < count__356575)){
var obj = chunk__356574.cljs$core$IIndexed$_nth$arity$2(null,i__356576);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__356577 = seq__356573;
var G__356578 = chunk__356574;
var G__356579 = count__356575;
var G__356580 = (i__356576 + (1));
seq__356573 = G__356577;
chunk__356574 = G__356578;
count__356575 = G__356579;
i__356576 = G__356580;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__356573);
if(temp__4126__auto__){
var seq__356573__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__356573__$1)){
var c__4768__auto__ = cljs.core.chunk_first(seq__356573__$1);
var G__356581 = cljs.core.chunk_rest(seq__356573__$1);
var G__356582 = c__4768__auto__;
var G__356583 = cljs.core.count(c__4768__auto__);
var G__356584 = (0);
seq__356573 = G__356581;
chunk__356574 = G__356582;
count__356575 = G__356583;
i__356576 = G__356584;
continue;
} else {
var obj = cljs.core.first(seq__356573__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__356585 = cljs.core.next(seq__356573__$1);
var G__356586 = null;
var G__356587 = (0);
var G__356588 = (0);
seq__356573 = G__356585;
chunk__356574 = G__356586;
count__356575 = G__356587;
i__356576 = G__356588;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356589__i = 0, G__356589__a = new Array(arguments.length -  0);
while (G__356589__i < G__356589__a.length) {G__356589__a[G__356589__i] = arguments[G__356589__i + 0]; ++G__356589__i;}
  objs = new cljs.core.IndexedSeq(G__356589__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__356590){
var objs = cljs.core.seq(arglist__356590);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356591__i = 0, G__356591__a = new Array(arguments.length -  0);
while (G__356591__i < G__356591__a.length) {G__356591__a[G__356591__i] = arguments[G__356591__i + 0]; ++G__356591__i;}
  objs = new cljs.core.IndexedSeq(G__356591__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__356592){
var objs = cljs.core.seq(arglist__356592);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356593__i = 0, G__356593__a = new Array(arguments.length -  0);
while (G__356593__i < G__356593__a.length) {G__356593__a[G__356593__i] = arguments[G__356593__i + 0]; ++G__356593__i;}
  objs = new cljs.core.IndexedSeq(G__356593__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__356594){
var objs = cljs.core.seq(arglist__356594);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356595__i = 0, G__356595__a = new Array(arguments.length -  0);
while (G__356595__i < G__356595__a.length) {G__356595__a[G__356595__i] = arguments[G__356595__i + 0]; ++G__356595__i;}
  objs = new cljs.core.IndexedSeq(G__356595__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__356596){
var objs = cljs.core.seq(arglist__356596);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356597__i = 0, G__356597__a = new Array(arguments.length -  0);
while (G__356597__i < G__356597__a.length) {G__356597__a[G__356597__i] = arguments[G__356597__i + 0]; ++G__356597__i;}
  objs = new cljs.core.IndexedSeq(G__356597__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__356598){
var objs = cljs.core.seq(arglist__356598);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356599__i = 0, G__356599__a = new Array(arguments.length -  0);
while (G__356599__i < G__356599__a.length) {G__356599__a[G__356599__i] = arguments[G__356599__i + 0]; ++G__356599__i;}
  objs = new cljs.core.IndexedSeq(G__356599__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__356600){
var objs = cljs.core.seq(arglist__356600);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356601__i = 0, G__356601__a = new Array(arguments.length -  0);
while (G__356601__i < G__356601__a.length) {G__356601__a[G__356601__i] = arguments[G__356601__i + 0]; ++G__356601__i;}
  objs = new cljs.core.IndexedSeq(G__356601__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__356602){
var objs = cljs.core.seq(arglist__356602);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__356603__i = 0, G__356603__a = new Array(arguments.length -  0);
while (G__356603__i < G__356603__a.length) {G__356603__a[G__356603__i] = arguments[G__356603__i + 0]; ++G__356603__i;}
  objs = new cljs.core.IndexedSeq(G__356603__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__356604){
var objs = cljs.core.seq(arglist__356604);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__356611_356617 = cljs.core.key(e);
var G__356612_356618 = w;
var G__356613_356619 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__356611_356617,G__356612_356618,G__356613_356619) : print_one.call(null,G__356611_356617,G__356612_356618,G__356613_356619));

cljs.core._write(w," ");

var G__356614 = cljs.core.val(e);
var G__356615 = w;
var G__356616 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__356614,G__356615,G__356616) : print_one.call(null,G__356614,G__356615,G__356616));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__356620__i = 0, G__356620__a = new Array(arguments.length -  2);
while (G__356620__i < G__356620__a.length) {G__356620__a[G__356620__i] = arguments[G__356620__i + 2]; ++G__356620__i;}
  args = new cljs.core.IndexedSeq(G__356620__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__356621){
var iref = cljs.core.first(arglist__356621);
arglist__356621 = cljs.core.next(arglist__356621);
var f = cljs.core.first(arglist__356621);
var args = cljs.core.rest(arglist__356621);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__356624 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__356624) : cljs.core.atom.call(null,G__356624));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__356626 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356626) : cljs.core.deref.call(null,G__356626));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__356627_SHARP_,p2__356628_SHARP_){
var ret = (function (){var G__356631 = p1__356627_SHARP_;
var G__356632 = p2__356628_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356631,G__356632) : rf.call(null,G__356631,G__356632));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__356635 = null;
var G__356635__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356635__1 = (function (result){
var G__356634 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356634) : rf.call(null,G__356634));
});
var G__356635__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__356635 = function(result,input){
switch(arguments.length){
case 0:
return G__356635__0.call(this);
case 1:
return G__356635__1.call(this,result);
case 2:
return G__356635__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356635.cljs$core$IFn$_invoke$arity$0 = G__356635__0;
G__356635.cljs$core$IFn$_invoke$arity$1 = G__356635__1;
G__356635.cljs$core$IFn$_invoke$arity$2 = G__356635__2;
return G__356635;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__356644 = null;
var G__356644__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__356644__1 = (function (result){
var G__356640 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__356640) : rf.call(null,G__356640));
});
var G__356644__2 = (function (result,input){
var prior = (function (){var G__356641 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356641) : cljs.core.deref.call(null,G__356641));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__356642 = result;
var G__356643 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__356642,G__356643) : rf.call(null,G__356642,G__356643));
}
});
G__356644 = function(result,input){
switch(arguments.length){
case 0:
return G__356644__0.call(this);
case 1:
return G__356644__1.call(this,result);
case 2:
return G__356644__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__356644.cljs$core$IFn$_invoke$arity$0 = G__356644__0;
G__356644.cljs$core$IFn$_invoke$arity$1 = G__356644__1;
G__356644.cljs$core$IFn$_invoke$arity$2 = G__356644__2;
return G__356644;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4959__auto__ = this;
return cljs.core.es6_iterator(this__4959__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__356646_SHARP_,p2__356645_SHARP_){
var G__356648 = p2__356645_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__356648) : proc.call(null,G__356648));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj356650 = {};
return obj356650;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._clj__GT_js[(function (){var G__356654 = x__4625__auto__;
return goog.typeOf(G__356654);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._key__GT_js[(function (){var G__356658 = x__4625__auto__;
return goog.typeOf(G__356658);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__356661 = k;
if(G__356661){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__356661.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__356661.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__356661);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__356661);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__356662 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__356662) : cljs.core.clj__GT_js.call(null,G__356662));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__356678 = x;
if(G__356678){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__356678.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__356678.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__356678);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__356678);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj356680 = {};
return obj356680;
})();
var seq__356681_356691 = cljs.core.seq(x);
var chunk__356682_356692 = null;
var count__356683_356693 = (0);
var i__356684_356694 = (0);
while(true){
if((i__356684_356694 < count__356683_356693)){
var vec__356685_356695 = chunk__356682_356692.cljs$core$IIndexed$_nth$arity$2(null,i__356684_356694);
var k_356696 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356685_356695,(0),null);
var v_356697 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356685_356695,(1),null);
(m[cljs.core.key__GT_js(k_356696)] = clj__GT_js(v_356697));

var G__356698 = seq__356681_356691;
var G__356699 = chunk__356682_356692;
var G__356700 = count__356683_356693;
var G__356701 = (i__356684_356694 + (1));
seq__356681_356691 = G__356698;
chunk__356682_356692 = G__356699;
count__356683_356693 = G__356700;
i__356684_356694 = G__356701;
continue;
} else {
var temp__4126__auto___356702 = cljs.core.seq(seq__356681_356691);
if(temp__4126__auto___356702){
var seq__356681_356703__$1 = temp__4126__auto___356702;
if(cljs.core.chunked_seq_QMARK_(seq__356681_356703__$1)){
var c__4768__auto___356704 = cljs.core.chunk_first(seq__356681_356703__$1);
var G__356705 = cljs.core.chunk_rest(seq__356681_356703__$1);
var G__356706 = c__4768__auto___356704;
var G__356707 = cljs.core.count(c__4768__auto___356704);
var G__356708 = (0);
seq__356681_356691 = G__356705;
chunk__356682_356692 = G__356706;
count__356683_356693 = G__356707;
i__356684_356694 = G__356708;
continue;
} else {
var vec__356686_356709 = cljs.core.first(seq__356681_356703__$1);
var k_356710 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356686_356709,(0),null);
var v_356711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356686_356709,(1),null);
(m[cljs.core.key__GT_js(k_356710)] = clj__GT_js(v_356711));

var G__356712 = cljs.core.next(seq__356681_356703__$1);
var G__356713 = null;
var G__356714 = (0);
var G__356715 = (0);
seq__356681_356691 = G__356712;
chunk__356682_356692 = G__356713;
count__356683_356693 = G__356714;
i__356684_356694 = G__356715;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__356687_356716 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__356688_356717 = null;
var count__356689_356718 = (0);
var i__356690_356719 = (0);
while(true){
if((i__356690_356719 < count__356689_356718)){
var x_356720__$1 = chunk__356688_356717.cljs$core$IIndexed$_nth$arity$2(null,i__356690_356719);
arr.push(x_356720__$1);

var G__356721 = seq__356687_356716;
var G__356722 = chunk__356688_356717;
var G__356723 = count__356689_356718;
var G__356724 = (i__356690_356719 + (1));
seq__356687_356716 = G__356721;
chunk__356688_356717 = G__356722;
count__356689_356718 = G__356723;
i__356690_356719 = G__356724;
continue;
} else {
var temp__4126__auto___356725 = cljs.core.seq(seq__356687_356716);
if(temp__4126__auto___356725){
var seq__356687_356726__$1 = temp__4126__auto___356725;
if(cljs.core.chunked_seq_QMARK_(seq__356687_356726__$1)){
var c__4768__auto___356727 = cljs.core.chunk_first(seq__356687_356726__$1);
var G__356728 = cljs.core.chunk_rest(seq__356687_356726__$1);
var G__356729 = c__4768__auto___356727;
var G__356730 = cljs.core.count(c__4768__auto___356727);
var G__356731 = (0);
seq__356687_356716 = G__356728;
chunk__356688_356717 = G__356729;
count__356689_356718 = G__356730;
i__356690_356719 = G__356731;
continue;
} else {
var x_356732__$1 = cljs.core.first(seq__356687_356726__$1);
arr.push(x_356732__$1);

var G__356733 = cljs.core.next(seq__356687_356726__$1);
var G__356734 = null;
var G__356735 = (0);
var G__356736 = (0);
seq__356687_356716 = G__356733;
chunk__356688_356717 = G__356734;
count__356689_356718 = G__356735;
i__356690_356719 = G__356736;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj356738 = {};
return obj356738;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3969__auto__ = x;
if(and__3969__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3969__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4625__auto__ = (((x == null))?null:x);
return (function (){var or__3981__auto__ = (cljs.core._js__GT_clj[(function (){var G__356742 = x__4625__auto__;
return goog.typeOf(G__356742);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__356799__delegate = function (x,opts){
var map__356772 = opts;
var map__356772__$1 = ((cljs.core.seq_QMARK_(map__356772))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__356772):map__356772);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__356772__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__356772,map__356772__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__356788 = x__$1;
if(G__356788){
var bit__4662__auto__ = null;
if(cljs.core.truth_((function (){var or__3981__auto__ = bit__4662__auto__;
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return G__356788.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__356788.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__356788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__356788);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4737__auto__ = ((function (map__356772,map__356772__$1,keywordize_keys,keyfn){
return (function iter__356789(s__356790){
return (new cljs.core.LazySeq(null,((function (map__356772,map__356772__$1,keywordize_keys,keyfn){
return (function (){
var s__356790__$1 = s__356790;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__356790__$1);
if(temp__4126__auto__){
var s__356790__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__356790__$2)){
var c__4735__auto__ = cljs.core.chunk_first(s__356790__$2);
var size__4736__auto__ = cljs.core.count(c__4735__auto__);
var b__356792 = cljs.core.chunk_buffer(size__4736__auto__);
if((function (){var i__356791 = (0);
while(true){
if((i__356791 < size__4736__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4735__auto__,i__356791);
cljs.core.chunk_append(b__356792,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__356797 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__356797) : keyfn.call(null,G__356797));
})(),thisfn((x__$1[k]))], null));

var G__356800 = (i__356791 + (1));
i__356791 = G__356800;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__356792),iter__356789(cljs.core.chunk_rest(s__356790__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__356792),null);
}
} else {
var k = cljs.core.first(s__356790__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__356798 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__356798) : keyfn.call(null,G__356798));
})(),thisfn((x__$1[k]))], null),iter__356789(cljs.core.rest(s__356790__$2)));
}
} else {
return null;
}
break;
}
});})(map__356772,map__356772__$1,keywordize_keys,keyfn))
,null,null));
});})(map__356772,map__356772__$1,keywordize_keys,keyfn))
;
return iter__4737__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__356772,map__356772__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__356799 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__356801__i = 0, G__356801__a = new Array(arguments.length -  1);
while (G__356801__i < G__356801__a.length) {G__356801__a[G__356801__i] = arguments[G__356801__i + 1]; ++G__356801__i;}
  opts = new cljs.core.IndexedSeq(G__356801__a,0);
} 
return G__356799__delegate.call(this,x,opts);};
G__356799.cljs$lang$maxFixedArity = 1;
G__356799.cljs$lang$applyTo = (function (arglist__356802){
var x = cljs.core.first(arglist__356802);
var opts = cljs.core.rest(arglist__356802);
return G__356799__delegate(x,opts);
});
G__356799.cljs$core$IFn$_invoke$arity$variadic = G__356799__delegate;
return G__356799;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__356803 = null;
if (arguments.length > 1) {
var G__356804__i = 0, G__356804__a = new Array(arguments.length -  1);
while (G__356804__i < G__356804__a.length) {G__356804__a[G__356804__i] = arguments[G__356804__i + 1]; ++G__356804__i;}
G__356803 = new cljs.core.IndexedSeq(G__356804__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__356803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__356807 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__356807) : cljs.core.atom.call(null,G__356807));
})();
return ((function (mem){
return (function() { 
var G__356809__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__356808 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356808) : cljs.core.deref.call(null,G__356808));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__356809 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__356810__i = 0, G__356810__a = new Array(arguments.length -  0);
while (G__356810__i < G__356810__a.length) {G__356810__a[G__356810__i] = arguments[G__356810__i + 0]; ++G__356810__i;}
  args = new cljs.core.IndexedSeq(G__356810__a,0);
} 
return G__356809__delegate.call(this,args);};
G__356809.cljs$lang$maxFixedArity = 0;
G__356809.cljs$lang$applyTo = (function (arglist__356811){
var args = cljs.core.seq(arglist__356811);
return G__356809__delegate(args);
});
G__356809.cljs$core$IFn$_invoke$arity$variadic = G__356809__delegate;
return G__356809;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__356813 = ret;
f = G__356813;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__356814__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__356814 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__356815__i = 0, G__356815__a = new Array(arguments.length -  1);
while (G__356815__i < G__356815__a.length) {G__356815__a[G__356815__i] = arguments[G__356815__i + 1]; ++G__356815__i;}
  args = new cljs.core.IndexedSeq(G__356815__a,0);
} 
return G__356814__delegate.call(this,f,args);};
G__356814.cljs$lang$maxFixedArity = 1;
G__356814.cljs$lang$applyTo = (function (arglist__356816){
var f = cljs.core.first(arglist__356816);
var args = cljs.core.rest(arglist__356816);
return G__356814__delegate(f,args);
});
G__356814.cljs$core$IFn$_invoke$arity$variadic = G__356814__delegate;
return G__356814;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__356817 = null;
if (arguments.length > 1) {
var G__356818__i = 0, G__356818__a = new Array(arguments.length -  1);
while (G__356818__i < G__356818__a.length) {G__356818__a[G__356818__i] = arguments[G__356818__i + 1]; ++G__356818__i;}
G__356817 = new cljs.core.IndexedSeq(G__356818__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__356817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__356821 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__356821) : Math.floor.call(null,G__356821));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__356823 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__356823) : f.call(null,G__356823));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__356825 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__356825) : cljs.core.atom.call(null,G__356825));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__356826__i = 0, G__356826__a = new Array(arguments.length -  1);
while (G__356826__i < G__356826__a.length) {G__356826__a[G__356826__i] = arguments[G__356826__i + 1]; ++G__356826__i;}
  args = new cljs.core.IndexedSeq(G__356826__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__356827){
var f = cljs.core.first(arglist__356827);
var args = cljs.core.rest(arglist__356827);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__356892 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356892) : cljs.core.deref.call(null,G__356892));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3981__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
var and__3969__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3969__auto__){
var and__3969__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3969__auto____$1){
var and__3969__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3969__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__356917 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__356915 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__356915) : child.call(null,G__356915));
})(),(function (){var G__356916 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__356916) : parent.call(null,G__356916));
})());
var G__356918 = (i + (1));
ret = G__356917;
i = G__356918;
continue;
}
break;
}
} else {
return and__3969__auto____$2;
}
} else {
return and__3969__auto____$1;
}
} else {
return and__3969__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__356922 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356922) : cljs.core.deref.call(null,G__356922));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__356926 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356926) : cljs.core.deref.call(null,G__356926));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__356930 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356930) : cljs.core.deref.call(null,G__356930));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__356939 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__356939) : targets.call(null,G__356939));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__356940 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__356940) : sources.call(null,G__356940));
})()));
});})(tp,td,ta))
;
var or__3981__auto__ = ((cljs.core.contains_QMARK_((function (){var G__356944 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__356944) : tp.call(null,G__356944));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__356945 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__356945) : ta.call(null,G__356945));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__356946 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__356946) : ta.call(null,G__356946));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__356953 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__356953) : parentMap.call(null,G__356953));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__356954 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__356954) : parentMap.call(null,G__356954));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__356947_SHARP_){
return cljs.core.cons(cljs.core.first(p1__356947_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__356947_SHARP_),cljs.core.second(p1__356947_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__356955 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__356955) : parentMap.call(null,G__356955));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__356948_SHARP_,p2__356949_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__356948_SHARP_,p2__356949_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__356958 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356958) : cljs.core.deref.call(null,G__356958));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__356959 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356959) : cljs.core.deref.call(null,G__356959));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__356975 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356975) : cljs.core.deref.call(null,G__356975));
})().call(null,x);
var or__3981__auto__ = (cljs.core.truth_((function (){var and__3969__auto__ = xprefs;
if(cljs.core.truth_(and__3969__auto__)){
var G__356977 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__356977) : xprefs.call(null,G__356977));
} else {
return and__3969__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__356978 = cljs.core.rest(ps);
ps = G__356978;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$1)){
return or__3981__auto____$1;
} else {
var or__3981__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__356979 = cljs.core.rest(ps);
ps = G__356979;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3981__auto____$2)){
return or__3981__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3981__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3981__auto__)){
return or__3981__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__356993){
var vec__356994 = p__356993;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356994,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__356994,(1),null);
var e = vec__356994;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__356995 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356995) : cljs.core.deref.call(null,G__356995));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3981__auto__ = (be == null);
if(or__3981__auto__){
return or__3981__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__356996 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356996) : cljs.core.deref.call(null,G__356996));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__356997 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356997) : cljs.core.deref.call(null,G__356997));
})(),(function (){var G__356998 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__356998) : cljs.core.deref.call(null,G__356998));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj357000 = {};
return obj357000;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._reset[(function (){var G__357004 = x__4625__auto__;
return goog.typeOf(G__357004);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._reset["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._add_method[(function (){var G__357008 = x__4625__auto__;
return goog.typeOf(G__357008);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._add_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._remove_method[(function (){var G__357012 = x__4625__auto__;
return goog.typeOf(G__357012);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefer_method[(function (){var G__357016 = x__4625__auto__;
return goog.typeOf(G__357016);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._get_method[(function (){var G__357020 = x__4625__auto__;
return goog.typeOf(G__357020);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._get_method["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._methods[(function (){var G__357024 = x__4625__auto__;
return goog.typeOf(G__357024);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._methods["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3969__auto__ = mf;
if(and__3969__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3969__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4625__auto__ = (((mf == null))?null:mf);
return (function (){var or__3981__auto__ = (cljs.core._prefers[(function (){var G__357028 = x__4625__auto__;
return goog.typeOf(G__357028);
})()]);
if(or__3981__auto__){
return or__3981__auto__;
} else {
var or__3981__auto____$1 = (cljs.core._prefers["_"]);
if(or__3981__auto____$1){
return or__3981__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__357030 = this$__$1;
return goog.getUid(G__357030);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__357031 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357031) : cljs.core.deref.call(null,G__357031));
})(),(function (){var G__357032 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357032) : cljs.core.deref.call(null,G__357032));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__357033 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357033) : cljs.core.deref.call(null,G__357033));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__357034 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357034) : cljs.core.deref.call(null,G__357034));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__357035 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357035) : cljs.core.deref.call(null,G__357035));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__357036 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__357036) : cljs.core.deref.call(null,G__357036));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__357877 = null;
var G__357877__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__357877__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357037 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__357037) : self__.dispatch_fn.call(null,G__357037));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357038 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__357038) : target_fn.call(null,G__357038));
});
var G__357877__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357039 = a;
var G__357040 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__357039,G__357040) : self__.dispatch_fn.call(null,G__357039,G__357040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357041 = a;
var G__357042 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__357041,G__357042) : target_fn.call(null,G__357041,G__357042));
});
var G__357877__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357043 = a;
var G__357044 = b;
var G__357045 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__357043,G__357044,G__357045) : self__.dispatch_fn.call(null,G__357043,G__357044,G__357045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357046 = a;
var G__357047 = b;
var G__357048 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__357046,G__357047,G__357048) : target_fn.call(null,G__357046,G__357047,G__357048));
});
var G__357877__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357049 = a;
var G__357050 = b;
var G__357051 = c;
var G__357052 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__357049,G__357050,G__357051,G__357052) : self__.dispatch_fn.call(null,G__357049,G__357050,G__357051,G__357052));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357053 = a;
var G__357054 = b;
var G__357055 = c;
var G__357056 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__357053,G__357054,G__357055,G__357056) : target_fn.call(null,G__357053,G__357054,G__357055,G__357056));
});
var G__357877__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357057 = a;
var G__357058 = b;
var G__357059 = c;
var G__357060 = d;
var G__357061 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__357057,G__357058,G__357059,G__357060,G__357061) : self__.dispatch_fn.call(null,G__357057,G__357058,G__357059,G__357060,G__357061));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357062 = a;
var G__357063 = b;
var G__357064 = c;
var G__357065 = d;
var G__357066 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__357062,G__357063,G__357064,G__357065,G__357066) : target_fn.call(null,G__357062,G__357063,G__357064,G__357065,G__357066));
});
var G__357877__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357067 = a;
var G__357068 = b;
var G__357069 = c;
var G__357070 = d;
var G__357071 = e;
var G__357072 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__357067,G__357068,G__357069,G__357070,G__357071,G__357072) : self__.dispatch_fn.call(null,G__357067,G__357068,G__357069,G__357070,G__357071,G__357072));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357073 = a;
var G__357074 = b;
var G__357075 = c;
var G__357076 = d;
var G__357077 = e;
var G__357078 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__357073,G__357074,G__357075,G__357076,G__357077,G__357078) : target_fn.call(null,G__357073,G__357074,G__357075,G__357076,G__357077,G__357078));
});
var G__357877__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357079 = a;
var G__357080 = b;
var G__357081 = c;
var G__357082 = d;
var G__357083 = e;
var G__357084 = f;
var G__357085 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__357079,G__357080,G__357081,G__357082,G__357083,G__357084,G__357085) : self__.dispatch_fn.call(null,G__357079,G__357080,G__357081,G__357082,G__357083,G__357084,G__357085));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357086 = a;
var G__357087 = b;
var G__357088 = c;
var G__357089 = d;
var G__357090 = e;
var G__357091 = f;
var G__357092 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__357086,G__357087,G__357088,G__357089,G__357090,G__357091,G__357092) : target_fn.call(null,G__357086,G__357087,G__357088,G__357089,G__357090,G__357091,G__357092));
});
var G__357877__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357093 = a;
var G__357094 = b;
var G__357095 = c;
var G__357096 = d;
var G__357097 = e;
var G__357098 = f;
var G__357099 = g;
var G__357100 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__357093,G__357094,G__357095,G__357096,G__357097,G__357098,G__357099,G__357100) : self__.dispatch_fn.call(null,G__357093,G__357094,G__357095,G__357096,G__357097,G__357098,G__357099,G__357100));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357101 = a;
var G__357102 = b;
var G__357103 = c;
var G__357104 = d;
var G__357105 = e;
var G__357106 = f;
var G__357107 = g;
var G__357108 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__357101,G__357102,G__357103,G__357104,G__357105,G__357106,G__357107,G__357108) : target_fn.call(null,G__357101,G__357102,G__357103,G__357104,G__357105,G__357106,G__357107,G__357108));
});
var G__357877__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357109 = a;
var G__357110 = b;
var G__357111 = c;
var G__357112 = d;
var G__357113 = e;
var G__357114 = f;
var G__357115 = g;
var G__357116 = h;
var G__357117 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__357109,G__357110,G__357111,G__357112,G__357113,G__357114,G__357115,G__357116,G__357117) : self__.dispatch_fn.call(null,G__357109,G__357110,G__357111,G__357112,G__357113,G__357114,G__357115,G__357116,G__357117));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357118 = a;
var G__357119 = b;
var G__357120 = c;
var G__357121 = d;
var G__357122 = e;
var G__357123 = f;
var G__357124 = g;
var G__357125 = h;
var G__357126 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__357118,G__357119,G__357120,G__357121,G__357122,G__357123,G__357124,G__357125,G__357126) : target_fn.call(null,G__357118,G__357119,G__357120,G__357121,G__357122,G__357123,G__357124,G__357125,G__357126));
});
var G__357877__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357127 = a;
var G__357128 = b;
var G__357129 = c;
var G__357130 = d;
var G__357131 = e;
var G__357132 = f;
var G__357133 = g;
var G__357134 = h;
var G__357135 = i;
var G__357136 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__357127,G__357128,G__357129,G__357130,G__357131,G__357132,G__357133,G__357134,G__357135,G__357136) : self__.dispatch_fn.call(null,G__357127,G__357128,G__357129,G__357130,G__357131,G__357132,G__357133,G__357134,G__357135,G__357136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357137 = a;
var G__357138 = b;
var G__357139 = c;
var G__357140 = d;
var G__357141 = e;
var G__357142 = f;
var G__357143 = g;
var G__357144 = h;
var G__357145 = i;
var G__357146 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__357137,G__357138,G__357139,G__357140,G__357141,G__357142,G__357143,G__357144,G__357145,G__357146) : target_fn.call(null,G__357137,G__357138,G__357139,G__357140,G__357141,G__357142,G__357143,G__357144,G__357145,G__357146));
});
var G__357877__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357147 = a;
var G__357148 = b;
var G__357149 = c;
var G__357150 = d;
var G__357151 = e;
var G__357152 = f;
var G__357153 = g;
var G__357154 = h;
var G__357155 = i;
var G__357156 = j;
var G__357157 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__357147,G__357148,G__357149,G__357150,G__357151,G__357152,G__357153,G__357154,G__357155,G__357156,G__357157) : self__.dispatch_fn.call(null,G__357147,G__357148,G__357149,G__357150,G__357151,G__357152,G__357153,G__357154,G__357155,G__357156,G__357157));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357158 = a;
var G__357159 = b;
var G__357160 = c;
var G__357161 = d;
var G__357162 = e;
var G__357163 = f;
var G__357164 = g;
var G__357165 = h;
var G__357166 = i;
var G__357167 = j;
var G__357168 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__357158,G__357159,G__357160,G__357161,G__357162,G__357163,G__357164,G__357165,G__357166,G__357167,G__357168) : target_fn.call(null,G__357158,G__357159,G__357160,G__357161,G__357162,G__357163,G__357164,G__357165,G__357166,G__357167,G__357168));
});
var G__357877__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357169 = a;
var G__357170 = b;
var G__357171 = c;
var G__357172 = d;
var G__357173 = e;
var G__357174 = f;
var G__357175 = g;
var G__357176 = h;
var G__357177 = i;
var G__357178 = j;
var G__357179 = k;
var G__357180 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__357169,G__357170,G__357171,G__357172,G__357173,G__357174,G__357175,G__357176,G__357177,G__357178,G__357179,G__357180) : self__.dispatch_fn.call(null,G__357169,G__357170,G__357171,G__357172,G__357173,G__357174,G__357175,G__357176,G__357177,G__357178,G__357179,G__357180));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357181 = a;
var G__357182 = b;
var G__357183 = c;
var G__357184 = d;
var G__357185 = e;
var G__357186 = f;
var G__357187 = g;
var G__357188 = h;
var G__357189 = i;
var G__357190 = j;
var G__357191 = k;
var G__357192 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__357181,G__357182,G__357183,G__357184,G__357185,G__357186,G__357187,G__357188,G__357189,G__357190,G__357191,G__357192) : target_fn.call(null,G__357181,G__357182,G__357183,G__357184,G__357185,G__357186,G__357187,G__357188,G__357189,G__357190,G__357191,G__357192));
});
var G__357877__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357193 = a;
var G__357194 = b;
var G__357195 = c;
var G__357196 = d;
var G__357197 = e;
var G__357198 = f;
var G__357199 = g;
var G__357200 = h;
var G__357201 = i;
var G__357202 = j;
var G__357203 = k;
var G__357204 = l;
var G__357205 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__357193,G__357194,G__357195,G__357196,G__357197,G__357198,G__357199,G__357200,G__357201,G__357202,G__357203,G__357204,G__357205) : self__.dispatch_fn.call(null,G__357193,G__357194,G__357195,G__357196,G__357197,G__357198,G__357199,G__357200,G__357201,G__357202,G__357203,G__357204,G__357205));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357206 = a;
var G__357207 = b;
var G__357208 = c;
var G__357209 = d;
var G__357210 = e;
var G__357211 = f;
var G__357212 = g;
var G__357213 = h;
var G__357214 = i;
var G__357215 = j;
var G__357216 = k;
var G__357217 = l;
var G__357218 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__357206,G__357207,G__357208,G__357209,G__357210,G__357211,G__357212,G__357213,G__357214,G__357215,G__357216,G__357217,G__357218) : target_fn.call(null,G__357206,G__357207,G__357208,G__357209,G__357210,G__357211,G__357212,G__357213,G__357214,G__357215,G__357216,G__357217,G__357218));
});
var G__357877__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357219 = a;
var G__357220 = b;
var G__357221 = c;
var G__357222 = d;
var G__357223 = e;
var G__357224 = f;
var G__357225 = g;
var G__357226 = h;
var G__357227 = i;
var G__357228 = j;
var G__357229 = k;
var G__357230 = l;
var G__357231 = m;
var G__357232 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__357219,G__357220,G__357221,G__357222,G__357223,G__357224,G__357225,G__357226,G__357227,G__357228,G__357229,G__357230,G__357231,G__357232) : self__.dispatch_fn.call(null,G__357219,G__357220,G__357221,G__357222,G__357223,G__357224,G__357225,G__357226,G__357227,G__357228,G__357229,G__357230,G__357231,G__357232));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357233 = a;
var G__357234 = b;
var G__357235 = c;
var G__357236 = d;
var G__357237 = e;
var G__357238 = f;
var G__357239 = g;
var G__357240 = h;
var G__357241 = i;
var G__357242 = j;
var G__357243 = k;
var G__357244 = l;
var G__357245 = m;
var G__357246 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__357233,G__357234,G__357235,G__357236,G__357237,G__357238,G__357239,G__357240,G__357241,G__357242,G__357243,G__357244,G__357245,G__357246) : target_fn.call(null,G__357233,G__357234,G__357235,G__357236,G__357237,G__357238,G__357239,G__357240,G__357241,G__357242,G__357243,G__357244,G__357245,G__357246));
});
var G__357877__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357247 = a;
var G__357248 = b;
var G__357249 = c;
var G__357250 = d;
var G__357251 = e;
var G__357252 = f;
var G__357253 = g;
var G__357254 = h;
var G__357255 = i;
var G__357256 = j;
var G__357257 = k;
var G__357258 = l;
var G__357259 = m;
var G__357260 = n;
var G__357261 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__357247,G__357248,G__357249,G__357250,G__357251,G__357252,G__357253,G__357254,G__357255,G__357256,G__357257,G__357258,G__357259,G__357260,G__357261) : self__.dispatch_fn.call(null,G__357247,G__357248,G__357249,G__357250,G__357251,G__357252,G__357253,G__357254,G__357255,G__357256,G__357257,G__357258,G__357259,G__357260,G__357261));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357262 = a;
var G__357263 = b;
var G__357264 = c;
var G__357265 = d;
var G__357266 = e;
var G__357267 = f;
var G__357268 = g;
var G__357269 = h;
var G__357270 = i;
var G__357271 = j;
var G__357272 = k;
var G__357273 = l;
var G__357274 = m;
var G__357275 = n;
var G__357276 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__357262,G__357263,G__357264,G__357265,G__357266,G__357267,G__357268,G__357269,G__357270,G__357271,G__357272,G__357273,G__357274,G__357275,G__357276) : target_fn.call(null,G__357262,G__357263,G__357264,G__357265,G__357266,G__357267,G__357268,G__357269,G__357270,G__357271,G__357272,G__357273,G__357274,G__357275,G__357276));
});
var G__357877__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357277 = a;
var G__357278 = b;
var G__357279 = c;
var G__357280 = d;
var G__357281 = e;
var G__357282 = f;
var G__357283 = g;
var G__357284 = h;
var G__357285 = i;
var G__357286 = j;
var G__357287 = k;
var G__357288 = l;
var G__357289 = m;
var G__357290 = n;
var G__357291 = o;
var G__357292 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__357277,G__357278,G__357279,G__357280,G__357281,G__357282,G__357283,G__357284,G__357285,G__357286,G__357287,G__357288,G__357289,G__357290,G__357291,G__357292) : self__.dispatch_fn.call(null,G__357277,G__357278,G__357279,G__357280,G__357281,G__357282,G__357283,G__357284,G__357285,G__357286,G__357287,G__357288,G__357289,G__357290,G__357291,G__357292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357293 = a;
var G__357294 = b;
var G__357295 = c;
var G__357296 = d;
var G__357297 = e;
var G__357298 = f;
var G__357299 = g;
var G__357300 = h;
var G__357301 = i;
var G__357302 = j;
var G__357303 = k;
var G__357304 = l;
var G__357305 = m;
var G__357306 = n;
var G__357307 = o;
var G__357308 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__357293,G__357294,G__357295,G__357296,G__357297,G__357298,G__357299,G__357300,G__357301,G__357302,G__357303,G__357304,G__357305,G__357306,G__357307,G__357308) : target_fn.call(null,G__357293,G__357294,G__357295,G__357296,G__357297,G__357298,G__357299,G__357300,G__357301,G__357302,G__357303,G__357304,G__357305,G__357306,G__357307,G__357308));
});
var G__357877__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357309 = a;
var G__357310 = b;
var G__357311 = c;
var G__357312 = d;
var G__357313 = e;
var G__357314 = f;
var G__357315 = g;
var G__357316 = h;
var G__357317 = i;
var G__357318 = j;
var G__357319 = k;
var G__357320 = l;
var G__357321 = m;
var G__357322 = n;
var G__357323 = o;
var G__357324 = p;
var G__357325 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__357309,G__357310,G__357311,G__357312,G__357313,G__357314,G__357315,G__357316,G__357317,G__357318,G__357319,G__357320,G__357321,G__357322,G__357323,G__357324,G__357325) : self__.dispatch_fn.call(null,G__357309,G__357310,G__357311,G__357312,G__357313,G__357314,G__357315,G__357316,G__357317,G__357318,G__357319,G__357320,G__357321,G__357322,G__357323,G__357324,G__357325));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357326 = a;
var G__357327 = b;
var G__357328 = c;
var G__357329 = d;
var G__357330 = e;
var G__357331 = f;
var G__357332 = g;
var G__357333 = h;
var G__357334 = i;
var G__357335 = j;
var G__357336 = k;
var G__357337 = l;
var G__357338 = m;
var G__357339 = n;
var G__357340 = o;
var G__357341 = p;
var G__357342 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__357326,G__357327,G__357328,G__357329,G__357330,G__357331,G__357332,G__357333,G__357334,G__357335,G__357336,G__357337,G__357338,G__357339,G__357340,G__357341,G__357342) : target_fn.call(null,G__357326,G__357327,G__357328,G__357329,G__357330,G__357331,G__357332,G__357333,G__357334,G__357335,G__357336,G__357337,G__357338,G__357339,G__357340,G__357341,G__357342));
});
var G__357877__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357343 = a;
var G__357344 = b;
var G__357345 = c;
var G__357346 = d;
var G__357347 = e;
var G__357348 = f;
var G__357349 = g;
var G__357350 = h;
var G__357351 = i;
var G__357352 = j;
var G__357353 = k;
var G__357354 = l;
var G__357355 = m;
var G__357356 = n;
var G__357357 = o;
var G__357358 = p;
var G__357359 = q;
var G__357360 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__357343,G__357344,G__357345,G__357346,G__357347,G__357348,G__357349,G__357350,G__357351,G__357352,G__357353,G__357354,G__357355,G__357356,G__357357,G__357358,G__357359,G__357360) : self__.dispatch_fn.call(null,G__357343,G__357344,G__357345,G__357346,G__357347,G__357348,G__357349,G__357350,G__357351,G__357352,G__357353,G__357354,G__357355,G__357356,G__357357,G__357358,G__357359,G__357360));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357361 = a;
var G__357362 = b;
var G__357363 = c;
var G__357364 = d;
var G__357365 = e;
var G__357366 = f;
var G__357367 = g;
var G__357368 = h;
var G__357369 = i;
var G__357370 = j;
var G__357371 = k;
var G__357372 = l;
var G__357373 = m;
var G__357374 = n;
var G__357375 = o;
var G__357376 = p;
var G__357377 = q;
var G__357378 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__357361,G__357362,G__357363,G__357364,G__357365,G__357366,G__357367,G__357368,G__357369,G__357370,G__357371,G__357372,G__357373,G__357374,G__357375,G__357376,G__357377,G__357378) : target_fn.call(null,G__357361,G__357362,G__357363,G__357364,G__357365,G__357366,G__357367,G__357368,G__357369,G__357370,G__357371,G__357372,G__357373,G__357374,G__357375,G__357376,G__357377,G__357378));
});
var G__357877__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357379 = a;
var G__357380 = b;
var G__357381 = c;
var G__357382 = d;
var G__357383 = e;
var G__357384 = f;
var G__357385 = g;
var G__357386 = h;
var G__357387 = i;
var G__357388 = j;
var G__357389 = k;
var G__357390 = l;
var G__357391 = m;
var G__357392 = n;
var G__357393 = o;
var G__357394 = p;
var G__357395 = q;
var G__357396 = r;
var G__357397 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__357379,G__357380,G__357381,G__357382,G__357383,G__357384,G__357385,G__357386,G__357387,G__357388,G__357389,G__357390,G__357391,G__357392,G__357393,G__357394,G__357395,G__357396,G__357397) : self__.dispatch_fn.call(null,G__357379,G__357380,G__357381,G__357382,G__357383,G__357384,G__357385,G__357386,G__357387,G__357388,G__357389,G__357390,G__357391,G__357392,G__357393,G__357394,G__357395,G__357396,G__357397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357398 = a;
var G__357399 = b;
var G__357400 = c;
var G__357401 = d;
var G__357402 = e;
var G__357403 = f;
var G__357404 = g;
var G__357405 = h;
var G__357406 = i;
var G__357407 = j;
var G__357408 = k;
var G__357409 = l;
var G__357410 = m;
var G__357411 = n;
var G__357412 = o;
var G__357413 = p;
var G__357414 = q;
var G__357415 = r;
var G__357416 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__357398,G__357399,G__357400,G__357401,G__357402,G__357403,G__357404,G__357405,G__357406,G__357407,G__357408,G__357409,G__357410,G__357411,G__357412,G__357413,G__357414,G__357415,G__357416) : target_fn.call(null,G__357398,G__357399,G__357400,G__357401,G__357402,G__357403,G__357404,G__357405,G__357406,G__357407,G__357408,G__357409,G__357410,G__357411,G__357412,G__357413,G__357414,G__357415,G__357416));
});
var G__357877__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__357417 = a;
var G__357418 = b;
var G__357419 = c;
var G__357420 = d;
var G__357421 = e;
var G__357422 = f;
var G__357423 = g;
var G__357424 = h;
var G__357425 = i;
var G__357426 = j;
var G__357427 = k;
var G__357428 = l;
var G__357429 = m;
var G__357430 = n;
var G__357431 = o;
var G__357432 = p;
var G__357433 = q;
var G__357434 = r;
var G__357435 = s;
var G__357436 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__357417,G__357418,G__357419,G__357420,G__357421,G__357422,G__357423,G__357424,G__357425,G__357426,G__357427,G__357428,G__357429,G__357430,G__357431,G__357432,G__357433,G__357434,G__357435,G__357436) : self__.dispatch_fn.call(null,G__357417,G__357418,G__357419,G__357420,G__357421,G__357422,G__357423,G__357424,G__357425,G__357426,G__357427,G__357428,G__357429,G__357430,G__357431,G__357432,G__357433,G__357434,G__357435,G__357436));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357437 = a;
var G__357438 = b;
var G__357439 = c;
var G__357440 = d;
var G__357441 = e;
var G__357442 = f;
var G__357443 = g;
var G__357444 = h;
var G__357445 = i;
var G__357446 = j;
var G__357447 = k;
var G__357448 = l;
var G__357449 = m;
var G__357450 = n;
var G__357451 = o;
var G__357452 = p;
var G__357453 = q;
var G__357454 = r;
var G__357455 = s;
var G__357456 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__357437,G__357438,G__357439,G__357440,G__357441,G__357442,G__357443,G__357444,G__357445,G__357446,G__357447,G__357448,G__357449,G__357450,G__357451,G__357452,G__357453,G__357454,G__357455,G__357456) : target_fn.call(null,G__357437,G__357438,G__357439,G__357440,G__357441,G__357442,G__357443,G__357444,G__357445,G__357446,G__357447,G__357448,G__357449,G__357450,G__357451,G__357452,G__357453,G__357454,G__357455,G__357456));
});
var G__357877__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__357877 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__357877__1.call(this,self__);
case 2:
return G__357877__2.call(this,self__,a);
case 3:
return G__357877__3.call(this,self__,a,b);
case 4:
return G__357877__4.call(this,self__,a,b,c);
case 5:
return G__357877__5.call(this,self__,a,b,c,d);
case 6:
return G__357877__6.call(this,self__,a,b,c,d,e);
case 7:
return G__357877__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__357877__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__357877__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__357877__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__357877__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__357877__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__357877__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__357877__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__357877__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__357877__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__357877__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__357877__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__357877__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__357877__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__357877__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__357877__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__357877.cljs$core$IFn$_invoke$arity$1 = G__357877__1;
G__357877.cljs$core$IFn$_invoke$arity$2 = G__357877__2;
G__357877.cljs$core$IFn$_invoke$arity$3 = G__357877__3;
G__357877.cljs$core$IFn$_invoke$arity$4 = G__357877__4;
G__357877.cljs$core$IFn$_invoke$arity$5 = G__357877__5;
G__357877.cljs$core$IFn$_invoke$arity$6 = G__357877__6;
G__357877.cljs$core$IFn$_invoke$arity$7 = G__357877__7;
G__357877.cljs$core$IFn$_invoke$arity$8 = G__357877__8;
G__357877.cljs$core$IFn$_invoke$arity$9 = G__357877__9;
G__357877.cljs$core$IFn$_invoke$arity$10 = G__357877__10;
G__357877.cljs$core$IFn$_invoke$arity$11 = G__357877__11;
G__357877.cljs$core$IFn$_invoke$arity$12 = G__357877__12;
G__357877.cljs$core$IFn$_invoke$arity$13 = G__357877__13;
G__357877.cljs$core$IFn$_invoke$arity$14 = G__357877__14;
G__357877.cljs$core$IFn$_invoke$arity$15 = G__357877__15;
G__357877.cljs$core$IFn$_invoke$arity$16 = G__357877__16;
G__357877.cljs$core$IFn$_invoke$arity$17 = G__357877__17;
G__357877.cljs$core$IFn$_invoke$arity$18 = G__357877__18;
G__357877.cljs$core$IFn$_invoke$arity$19 = G__357877__19;
G__357877.cljs$core$IFn$_invoke$arity$20 = G__357877__20;
G__357877.cljs$core$IFn$_invoke$arity$21 = G__357877__21;
G__357877.cljs$core$IFn$_invoke$arity$22 = G__357877__22;
return G__357877;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args357029){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args357029)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357457 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__357457) : self__.dispatch_fn.call(null,G__357457));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357458 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__357458) : target_fn.call(null,G__357458));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357459 = a;
var G__357460 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__357459,G__357460) : self__.dispatch_fn.call(null,G__357459,G__357460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357461 = a;
var G__357462 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__357461,G__357462) : target_fn.call(null,G__357461,G__357462));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357463 = a;
var G__357464 = b;
var G__357465 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__357463,G__357464,G__357465) : self__.dispatch_fn.call(null,G__357463,G__357464,G__357465));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357466 = a;
var G__357467 = b;
var G__357468 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__357466,G__357467,G__357468) : target_fn.call(null,G__357466,G__357467,G__357468));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357469 = a;
var G__357470 = b;
var G__357471 = c;
var G__357472 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__357469,G__357470,G__357471,G__357472) : self__.dispatch_fn.call(null,G__357469,G__357470,G__357471,G__357472));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357473 = a;
var G__357474 = b;
var G__357475 = c;
var G__357476 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__357473,G__357474,G__357475,G__357476) : target_fn.call(null,G__357473,G__357474,G__357475,G__357476));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357477 = a;
var G__357478 = b;
var G__357479 = c;
var G__357480 = d;
var G__357481 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__357477,G__357478,G__357479,G__357480,G__357481) : self__.dispatch_fn.call(null,G__357477,G__357478,G__357479,G__357480,G__357481));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357482 = a;
var G__357483 = b;
var G__357484 = c;
var G__357485 = d;
var G__357486 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__357482,G__357483,G__357484,G__357485,G__357486) : target_fn.call(null,G__357482,G__357483,G__357484,G__357485,G__357486));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357487 = a;
var G__357488 = b;
var G__357489 = c;
var G__357490 = d;
var G__357491 = e;
var G__357492 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__357487,G__357488,G__357489,G__357490,G__357491,G__357492) : self__.dispatch_fn.call(null,G__357487,G__357488,G__357489,G__357490,G__357491,G__357492));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357493 = a;
var G__357494 = b;
var G__357495 = c;
var G__357496 = d;
var G__357497 = e;
var G__357498 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__357493,G__357494,G__357495,G__357496,G__357497,G__357498) : target_fn.call(null,G__357493,G__357494,G__357495,G__357496,G__357497,G__357498));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357499 = a;
var G__357500 = b;
var G__357501 = c;
var G__357502 = d;
var G__357503 = e;
var G__357504 = f;
var G__357505 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__357499,G__357500,G__357501,G__357502,G__357503,G__357504,G__357505) : self__.dispatch_fn.call(null,G__357499,G__357500,G__357501,G__357502,G__357503,G__357504,G__357505));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357506 = a;
var G__357507 = b;
var G__357508 = c;
var G__357509 = d;
var G__357510 = e;
var G__357511 = f;
var G__357512 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__357506,G__357507,G__357508,G__357509,G__357510,G__357511,G__357512) : target_fn.call(null,G__357506,G__357507,G__357508,G__357509,G__357510,G__357511,G__357512));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357513 = a;
var G__357514 = b;
var G__357515 = c;
var G__357516 = d;
var G__357517 = e;
var G__357518 = f;
var G__357519 = g;
var G__357520 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__357513,G__357514,G__357515,G__357516,G__357517,G__357518,G__357519,G__357520) : self__.dispatch_fn.call(null,G__357513,G__357514,G__357515,G__357516,G__357517,G__357518,G__357519,G__357520));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357521 = a;
var G__357522 = b;
var G__357523 = c;
var G__357524 = d;
var G__357525 = e;
var G__357526 = f;
var G__357527 = g;
var G__357528 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__357521,G__357522,G__357523,G__357524,G__357525,G__357526,G__357527,G__357528) : target_fn.call(null,G__357521,G__357522,G__357523,G__357524,G__357525,G__357526,G__357527,G__357528));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357529 = a;
var G__357530 = b;
var G__357531 = c;
var G__357532 = d;
var G__357533 = e;
var G__357534 = f;
var G__357535 = g;
var G__357536 = h;
var G__357537 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__357529,G__357530,G__357531,G__357532,G__357533,G__357534,G__357535,G__357536,G__357537) : self__.dispatch_fn.call(null,G__357529,G__357530,G__357531,G__357532,G__357533,G__357534,G__357535,G__357536,G__357537));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357538 = a;
var G__357539 = b;
var G__357540 = c;
var G__357541 = d;
var G__357542 = e;
var G__357543 = f;
var G__357544 = g;
var G__357545 = h;
var G__357546 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__357538,G__357539,G__357540,G__357541,G__357542,G__357543,G__357544,G__357545,G__357546) : target_fn.call(null,G__357538,G__357539,G__357540,G__357541,G__357542,G__357543,G__357544,G__357545,G__357546));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357547 = a;
var G__357548 = b;
var G__357549 = c;
var G__357550 = d;
var G__357551 = e;
var G__357552 = f;
var G__357553 = g;
var G__357554 = h;
var G__357555 = i;
var G__357556 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__357547,G__357548,G__357549,G__357550,G__357551,G__357552,G__357553,G__357554,G__357555,G__357556) : self__.dispatch_fn.call(null,G__357547,G__357548,G__357549,G__357550,G__357551,G__357552,G__357553,G__357554,G__357555,G__357556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357557 = a;
var G__357558 = b;
var G__357559 = c;
var G__357560 = d;
var G__357561 = e;
var G__357562 = f;
var G__357563 = g;
var G__357564 = h;
var G__357565 = i;
var G__357566 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__357557,G__357558,G__357559,G__357560,G__357561,G__357562,G__357563,G__357564,G__357565,G__357566) : target_fn.call(null,G__357557,G__357558,G__357559,G__357560,G__357561,G__357562,G__357563,G__357564,G__357565,G__357566));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357567 = a;
var G__357568 = b;
var G__357569 = c;
var G__357570 = d;
var G__357571 = e;
var G__357572 = f;
var G__357573 = g;
var G__357574 = h;
var G__357575 = i;
var G__357576 = j;
var G__357577 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__357567,G__357568,G__357569,G__357570,G__357571,G__357572,G__357573,G__357574,G__357575,G__357576,G__357577) : self__.dispatch_fn.call(null,G__357567,G__357568,G__357569,G__357570,G__357571,G__357572,G__357573,G__357574,G__357575,G__357576,G__357577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357578 = a;
var G__357579 = b;
var G__357580 = c;
var G__357581 = d;
var G__357582 = e;
var G__357583 = f;
var G__357584 = g;
var G__357585 = h;
var G__357586 = i;
var G__357587 = j;
var G__357588 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__357578,G__357579,G__357580,G__357581,G__357582,G__357583,G__357584,G__357585,G__357586,G__357587,G__357588) : target_fn.call(null,G__357578,G__357579,G__357580,G__357581,G__357582,G__357583,G__357584,G__357585,G__357586,G__357587,G__357588));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357589 = a;
var G__357590 = b;
var G__357591 = c;
var G__357592 = d;
var G__357593 = e;
var G__357594 = f;
var G__357595 = g;
var G__357596 = h;
var G__357597 = i;
var G__357598 = j;
var G__357599 = k;
var G__357600 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__357589,G__357590,G__357591,G__357592,G__357593,G__357594,G__357595,G__357596,G__357597,G__357598,G__357599,G__357600) : self__.dispatch_fn.call(null,G__357589,G__357590,G__357591,G__357592,G__357593,G__357594,G__357595,G__357596,G__357597,G__357598,G__357599,G__357600));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357601 = a;
var G__357602 = b;
var G__357603 = c;
var G__357604 = d;
var G__357605 = e;
var G__357606 = f;
var G__357607 = g;
var G__357608 = h;
var G__357609 = i;
var G__357610 = j;
var G__357611 = k;
var G__357612 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__357601,G__357602,G__357603,G__357604,G__357605,G__357606,G__357607,G__357608,G__357609,G__357610,G__357611,G__357612) : target_fn.call(null,G__357601,G__357602,G__357603,G__357604,G__357605,G__357606,G__357607,G__357608,G__357609,G__357610,G__357611,G__357612));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357613 = a;
var G__357614 = b;
var G__357615 = c;
var G__357616 = d;
var G__357617 = e;
var G__357618 = f;
var G__357619 = g;
var G__357620 = h;
var G__357621 = i;
var G__357622 = j;
var G__357623 = k;
var G__357624 = l;
var G__357625 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__357613,G__357614,G__357615,G__357616,G__357617,G__357618,G__357619,G__357620,G__357621,G__357622,G__357623,G__357624,G__357625) : self__.dispatch_fn.call(null,G__357613,G__357614,G__357615,G__357616,G__357617,G__357618,G__357619,G__357620,G__357621,G__357622,G__357623,G__357624,G__357625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357626 = a;
var G__357627 = b;
var G__357628 = c;
var G__357629 = d;
var G__357630 = e;
var G__357631 = f;
var G__357632 = g;
var G__357633 = h;
var G__357634 = i;
var G__357635 = j;
var G__357636 = k;
var G__357637 = l;
var G__357638 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__357626,G__357627,G__357628,G__357629,G__357630,G__357631,G__357632,G__357633,G__357634,G__357635,G__357636,G__357637,G__357638) : target_fn.call(null,G__357626,G__357627,G__357628,G__357629,G__357630,G__357631,G__357632,G__357633,G__357634,G__357635,G__357636,G__357637,G__357638));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357639 = a;
var G__357640 = b;
var G__357641 = c;
var G__357642 = d;
var G__357643 = e;
var G__357644 = f;
var G__357645 = g;
var G__357646 = h;
var G__357647 = i;
var G__357648 = j;
var G__357649 = k;
var G__357650 = l;
var G__357651 = m;
var G__357652 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__357639,G__357640,G__357641,G__357642,G__357643,G__357644,G__357645,G__357646,G__357647,G__357648,G__357649,G__357650,G__357651,G__357652) : self__.dispatch_fn.call(null,G__357639,G__357640,G__357641,G__357642,G__357643,G__357644,G__357645,G__357646,G__357647,G__357648,G__357649,G__357650,G__357651,G__357652));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357653 = a;
var G__357654 = b;
var G__357655 = c;
var G__357656 = d;
var G__357657 = e;
var G__357658 = f;
var G__357659 = g;
var G__357660 = h;
var G__357661 = i;
var G__357662 = j;
var G__357663 = k;
var G__357664 = l;
var G__357665 = m;
var G__357666 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__357653,G__357654,G__357655,G__357656,G__357657,G__357658,G__357659,G__357660,G__357661,G__357662,G__357663,G__357664,G__357665,G__357666) : target_fn.call(null,G__357653,G__357654,G__357655,G__357656,G__357657,G__357658,G__357659,G__357660,G__357661,G__357662,G__357663,G__357664,G__357665,G__357666));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357667 = a;
var G__357668 = b;
var G__357669 = c;
var G__357670 = d;
var G__357671 = e;
var G__357672 = f;
var G__357673 = g;
var G__357674 = h;
var G__357675 = i;
var G__357676 = j;
var G__357677 = k;
var G__357678 = l;
var G__357679 = m;
var G__357680 = n;
var G__357681 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__357667,G__357668,G__357669,G__357670,G__357671,G__357672,G__357673,G__357674,G__357675,G__357676,G__357677,G__357678,G__357679,G__357680,G__357681) : self__.dispatch_fn.call(null,G__357667,G__357668,G__357669,G__357670,G__357671,G__357672,G__357673,G__357674,G__357675,G__357676,G__357677,G__357678,G__357679,G__357680,G__357681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357682 = a;
var G__357683 = b;
var G__357684 = c;
var G__357685 = d;
var G__357686 = e;
var G__357687 = f;
var G__357688 = g;
var G__357689 = h;
var G__357690 = i;
var G__357691 = j;
var G__357692 = k;
var G__357693 = l;
var G__357694 = m;
var G__357695 = n;
var G__357696 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__357682,G__357683,G__357684,G__357685,G__357686,G__357687,G__357688,G__357689,G__357690,G__357691,G__357692,G__357693,G__357694,G__357695,G__357696) : target_fn.call(null,G__357682,G__357683,G__357684,G__357685,G__357686,G__357687,G__357688,G__357689,G__357690,G__357691,G__357692,G__357693,G__357694,G__357695,G__357696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357697 = a;
var G__357698 = b;
var G__357699 = c;
var G__357700 = d;
var G__357701 = e;
var G__357702 = f;
var G__357703 = g;
var G__357704 = h;
var G__357705 = i;
var G__357706 = j;
var G__357707 = k;
var G__357708 = l;
var G__357709 = m;
var G__357710 = n;
var G__357711 = o;
var G__357712 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__357697,G__357698,G__357699,G__357700,G__357701,G__357702,G__357703,G__357704,G__357705,G__357706,G__357707,G__357708,G__357709,G__357710,G__357711,G__357712) : self__.dispatch_fn.call(null,G__357697,G__357698,G__357699,G__357700,G__357701,G__357702,G__357703,G__357704,G__357705,G__357706,G__357707,G__357708,G__357709,G__357710,G__357711,G__357712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357713 = a;
var G__357714 = b;
var G__357715 = c;
var G__357716 = d;
var G__357717 = e;
var G__357718 = f;
var G__357719 = g;
var G__357720 = h;
var G__357721 = i;
var G__357722 = j;
var G__357723 = k;
var G__357724 = l;
var G__357725 = m;
var G__357726 = n;
var G__357727 = o;
var G__357728 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__357713,G__357714,G__357715,G__357716,G__357717,G__357718,G__357719,G__357720,G__357721,G__357722,G__357723,G__357724,G__357725,G__357726,G__357727,G__357728) : target_fn.call(null,G__357713,G__357714,G__357715,G__357716,G__357717,G__357718,G__357719,G__357720,G__357721,G__357722,G__357723,G__357724,G__357725,G__357726,G__357727,G__357728));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357729 = a;
var G__357730 = b;
var G__357731 = c;
var G__357732 = d;
var G__357733 = e;
var G__357734 = f;
var G__357735 = g;
var G__357736 = h;
var G__357737 = i;
var G__357738 = j;
var G__357739 = k;
var G__357740 = l;
var G__357741 = m;
var G__357742 = n;
var G__357743 = o;
var G__357744 = p;
var G__357745 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__357729,G__357730,G__357731,G__357732,G__357733,G__357734,G__357735,G__357736,G__357737,G__357738,G__357739,G__357740,G__357741,G__357742,G__357743,G__357744,G__357745) : self__.dispatch_fn.call(null,G__357729,G__357730,G__357731,G__357732,G__357733,G__357734,G__357735,G__357736,G__357737,G__357738,G__357739,G__357740,G__357741,G__357742,G__357743,G__357744,G__357745));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357746 = a;
var G__357747 = b;
var G__357748 = c;
var G__357749 = d;
var G__357750 = e;
var G__357751 = f;
var G__357752 = g;
var G__357753 = h;
var G__357754 = i;
var G__357755 = j;
var G__357756 = k;
var G__357757 = l;
var G__357758 = m;
var G__357759 = n;
var G__357760 = o;
var G__357761 = p;
var G__357762 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__357746,G__357747,G__357748,G__357749,G__357750,G__357751,G__357752,G__357753,G__357754,G__357755,G__357756,G__357757,G__357758,G__357759,G__357760,G__357761,G__357762) : target_fn.call(null,G__357746,G__357747,G__357748,G__357749,G__357750,G__357751,G__357752,G__357753,G__357754,G__357755,G__357756,G__357757,G__357758,G__357759,G__357760,G__357761,G__357762));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357763 = a;
var G__357764 = b;
var G__357765 = c;
var G__357766 = d;
var G__357767 = e;
var G__357768 = f;
var G__357769 = g;
var G__357770 = h;
var G__357771 = i;
var G__357772 = j;
var G__357773 = k;
var G__357774 = l;
var G__357775 = m;
var G__357776 = n;
var G__357777 = o;
var G__357778 = p;
var G__357779 = q;
var G__357780 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__357763,G__357764,G__357765,G__357766,G__357767,G__357768,G__357769,G__357770,G__357771,G__357772,G__357773,G__357774,G__357775,G__357776,G__357777,G__357778,G__357779,G__357780) : self__.dispatch_fn.call(null,G__357763,G__357764,G__357765,G__357766,G__357767,G__357768,G__357769,G__357770,G__357771,G__357772,G__357773,G__357774,G__357775,G__357776,G__357777,G__357778,G__357779,G__357780));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357781 = a;
var G__357782 = b;
var G__357783 = c;
var G__357784 = d;
var G__357785 = e;
var G__357786 = f;
var G__357787 = g;
var G__357788 = h;
var G__357789 = i;
var G__357790 = j;
var G__357791 = k;
var G__357792 = l;
var G__357793 = m;
var G__357794 = n;
var G__357795 = o;
var G__357796 = p;
var G__357797 = q;
var G__357798 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__357781,G__357782,G__357783,G__357784,G__357785,G__357786,G__357787,G__357788,G__357789,G__357790,G__357791,G__357792,G__357793,G__357794,G__357795,G__357796,G__357797,G__357798) : target_fn.call(null,G__357781,G__357782,G__357783,G__357784,G__357785,G__357786,G__357787,G__357788,G__357789,G__357790,G__357791,G__357792,G__357793,G__357794,G__357795,G__357796,G__357797,G__357798));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357799 = a;
var G__357800 = b;
var G__357801 = c;
var G__357802 = d;
var G__357803 = e;
var G__357804 = f;
var G__357805 = g;
var G__357806 = h;
var G__357807 = i;
var G__357808 = j;
var G__357809 = k;
var G__357810 = l;
var G__357811 = m;
var G__357812 = n;
var G__357813 = o;
var G__357814 = p;
var G__357815 = q;
var G__357816 = r;
var G__357817 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__357799,G__357800,G__357801,G__357802,G__357803,G__357804,G__357805,G__357806,G__357807,G__357808,G__357809,G__357810,G__357811,G__357812,G__357813,G__357814,G__357815,G__357816,G__357817) : self__.dispatch_fn.call(null,G__357799,G__357800,G__357801,G__357802,G__357803,G__357804,G__357805,G__357806,G__357807,G__357808,G__357809,G__357810,G__357811,G__357812,G__357813,G__357814,G__357815,G__357816,G__357817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357818 = a;
var G__357819 = b;
var G__357820 = c;
var G__357821 = d;
var G__357822 = e;
var G__357823 = f;
var G__357824 = g;
var G__357825 = h;
var G__357826 = i;
var G__357827 = j;
var G__357828 = k;
var G__357829 = l;
var G__357830 = m;
var G__357831 = n;
var G__357832 = o;
var G__357833 = p;
var G__357834 = q;
var G__357835 = r;
var G__357836 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__357818,G__357819,G__357820,G__357821,G__357822,G__357823,G__357824,G__357825,G__357826,G__357827,G__357828,G__357829,G__357830,G__357831,G__357832,G__357833,G__357834,G__357835,G__357836) : target_fn.call(null,G__357818,G__357819,G__357820,G__357821,G__357822,G__357823,G__357824,G__357825,G__357826,G__357827,G__357828,G__357829,G__357830,G__357831,G__357832,G__357833,G__357834,G__357835,G__357836));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__357837 = a;
var G__357838 = b;
var G__357839 = c;
var G__357840 = d;
var G__357841 = e;
var G__357842 = f;
var G__357843 = g;
var G__357844 = h;
var G__357845 = i;
var G__357846 = j;
var G__357847 = k;
var G__357848 = l;
var G__357849 = m;
var G__357850 = n;
var G__357851 = o;
var G__357852 = p;
var G__357853 = q;
var G__357854 = r;
var G__357855 = s;
var G__357856 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__357837,G__357838,G__357839,G__357840,G__357841,G__357842,G__357843,G__357844,G__357845,G__357846,G__357847,G__357848,G__357849,G__357850,G__357851,G__357852,G__357853,G__357854,G__357855,G__357856) : self__.dispatch_fn.call(null,G__357837,G__357838,G__357839,G__357840,G__357841,G__357842,G__357843,G__357844,G__357845,G__357846,G__357847,G__357848,G__357849,G__357850,G__357851,G__357852,G__357853,G__357854,G__357855,G__357856));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__357857 = a;
var G__357858 = b;
var G__357859 = c;
var G__357860 = d;
var G__357861 = e;
var G__357862 = f;
var G__357863 = g;
var G__357864 = h;
var G__357865 = i;
var G__357866 = j;
var G__357867 = k;
var G__357868 = l;
var G__357869 = m;
var G__357870 = n;
var G__357871 = o;
var G__357872 = p;
var G__357873 = q;
var G__357874 = r;
var G__357875 = s;
var G__357876 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__357857,G__357858,G__357859,G__357860,G__357861,G__357862,G__357863,G__357864,G__357865,G__357866,G__357867,G__357868,G__357869,G__357870,G__357871,G__357872,G__357873,G__357874,G__357875,G__357876) : target_fn.call(null,G__357857,G__357858,G__357859,G__357860,G__357861,G__357862,G__357863,G__357864,G__357865,G__357866,G__357867,G__357868,G__357869,G__357870,G__357871,G__357872,G__357873,G__357874,G__357875,G__357876));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__357878 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__357878);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4568__auto__,writer__4569__auto__,opt__4570__auto__){
return cljs.core._write(writer__4569__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__357883 = msg;
return Error(G__357883);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__357888 = x;
var G__357889 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__357888,G__357889) : pred.call(null,G__357888,G__357889));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__357890 = y;
var G__357891 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__357890,G__357891) : pred.call(null,G__357890,G__357891));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
